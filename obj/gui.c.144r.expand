
;; Function Display_Init (Display_Init)

Display_Init (struct SDisplay * display, struct SGame * game)
{
  char * temp_name;
  char * temp_path;
  int i;
  void * D.6644;
  void * D.6643;
  struct TTF_Font * D.6642;
  char * D.6641;
  unsigned int D.6640;
  const char * restrict D.6639;
  const char * restrict D.6638;
  char * D.6637;
  struct FILE * restrict stderr.56;
  struct _IO_FILE * stderr.55;
  const char * restrict D.6634;
  char * D.6633;
  int D.6630;
  struct FILE * restrict stderr.54;
  struct _IO_FILE * stderr.53;
  const char * restrict D.6627;
  char * D.6626;
  struct SDL_Surface * D.6623;
  struct SDL_Surface * D.6622;
  int D.6621;
  int D.6620;
  Sint16 D.6619;
  short unsigned int D.6618;
  short unsigned int D.6617;
  Sint16 D.6616;
  int D.6615;
  Sint16 D.6613;
  short unsigned int D.6612;
  short unsigned int D.6611;
  Sint16 D.6610;
  int D.6609;
  Sint16 D.6605;
  short unsigned int D.6604;
  short unsigned int D.6603;
  Sint16 D.6602;
  int D.6601;
  Sint16 D.6597;
  int D.6596;
  Sint16 D.6592;
  short unsigned int D.6591;
  short unsigned int D.6590;
  Sint16 D.6589;
  int D.6588;
  Sint16 D.6584;
  short unsigned int D.6583;
  short unsigned int D.6582;
  Sint16 D.6581;
  int D.6580;
  Sint16 D.6576;
  short unsigned int D.6575;
  short unsigned int D.6574;
  Sint16 D.6573;
  int D.6572;
  Sint16 D.6569;
  int D.6568;
  struct SDL_Surface * D.6567;
  int D.6566;
  const char * restrict temp_name.52;
  const char * restrict D.6564;
  const char * restrict D.6563;
  char * D.6562;
  struct SDL_Surface * D.6561;
  char * D.6560;
  unsigned int D.6559;
  const char * restrict D.6558;
  const char * restrict D.6557;
  char * D.6556;
  struct SDL_Surface * D.6555;
  char * D.6554;
  unsigned int D.6553;
  const char * restrict D.6552;
  const char * restrict D.6551;
  char * D.6550;
  struct SDL_Surface * D.6549;
  char * D.6548;
  unsigned int D.6547;
  const char * restrict D.6546;
  const char * restrict D.6545;
  char * D.6544;
  struct SDL_Surface * D.6543;
  char * D.6542;
  unsigned int D.6541;
  const char * restrict D.6540;
  const char * restrict D.6539;
  char * D.6538;
  struct SDL_Surface * D.6537;
  char * D.6536;
  unsigned int D.6535;
  const char * restrict D.6534;
  const char * restrict D.6533;
  char * D.6532;
  struct SDL_Surface * D.6531;
  char * D.6530;
  unsigned int D.6529;
  const char * restrict D.6528;
  const char * restrict D.6527;
  char * D.6526;
  struct SDL_Surface * D.6525;
  char * D.6524;
  unsigned int D.6523;
  const char * restrict D.6522;
  const char * restrict D.6521;
  char * D.6520;
  struct SDL_Surface * D.6519;
  char * D.6518;
  unsigned int D.6517;
  const char * restrict D.6516;
  const char * restrict D.6515;
  char * D.6514;
  struct SDL_Surface * D.6513;
  char * D.6512;
  unsigned int D.6511;
  const char * restrict D.6510;
  const char * restrict D.6509;
  char * D.6508;
  struct SDL_Surface * D.6507;
  char * D.6506;
  unsigned int D.6505;
  const char * restrict D.6504;
  const char * restrict D.6503;
  char * D.6502;
  struct SDL_Surface * D.6501;
  char * D.6500;
  unsigned int D.6499;
  const char * restrict D.6498;
  const char * restrict D.6497;
  char * D.6496;
  struct SDL_Surface * D.6495;
  char * D.6494;
  unsigned int D.6493;
  const char * restrict D.6492;
  const char * restrict D.6491;
  char * D.6490;
  const char * restrict D.6489;
  struct FILE * restrict stderr.51;
  struct _IO_FILE * stderr.50;
  int D.6484;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.6484_3 = SDL_Init (32);
  if (D.6484_3 == -1)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  stderr.50_4 = stderr;
  stderr.51_5 = (struct FILE * restrict) stderr.50_4;
  D.6489_6 = (const char * restrict) &"Erreur d\'initialisation de la SDL"[0];
  __builtin_fwrite (D.6489_6, 1, 33, stderr.51_5);
  free (temp_path_7(D));
  free (temp_name_8(D));
  exit (1);
  # SUCC:

  # BLOCK 4
  # PRED: 2 (false)
  display_9(D)->img_path = "../ressources/pictures/";
  display_9(D)->font_path = "../ressources/fonts/";
  temp_path_10 = malloc (100);
  D.6490_11 = display_9(D)->img_path;
  D.6491_12 = (const char * restrict) D.6490_11;
  strcpy (temp_path_10, D.6491_12);
  D.6492_13 = (const char * restrict) &"icon.bmp"[0];
  D.6493_14 = __builtin_strlen (temp_path_10);
  D.6494_15 = temp_path_10 + D.6493_14;
  __builtin_memcpy (D.6494_15, D.6492_13, 9);
  D.6495_16 = IMG_Load (temp_path_10);
  SDL_WM_SetIcon (D.6495_16, 0B);
  D.6496_17 = display_9(D)->img_path;
  D.6497_18 = (const char * restrict) D.6496_17;
  strcpy (temp_path_10, D.6497_18);
  D.6498_19 = (const char * restrict) &"background.png"[0];
  D.6499_20 = __builtin_strlen (temp_path_10);
  D.6500_21 = temp_path_10 + D.6499_20;
  __builtin_memcpy (D.6500_21, D.6498_19, 15);
  D.6501_22 = IMG_Load (temp_path_10);
  display_9(D)->background = D.6501_22;
  display_9(D)->background_position.x = 0;
  display_9(D)->background_position.y = 0;
  D.6502_23 = display_9(D)->img_path;
  D.6503_24 = (const char * restrict) D.6502_23;
  strcpy (temp_path_10, D.6503_24);
  D.6504_25 = (const char * restrict) &"gameBoard.png"[0];
  D.6505_26 = __builtin_strlen (temp_path_10);
  D.6506_27 = temp_path_10 + D.6505_26;
  __builtin_memcpy (D.6506_27, D.6504_25, 14);
  D.6507_28 = IMG_Load (temp_path_10);
  display_9(D)->gameBoard = D.6507_28;
  display_9(D)->gameBoard_position.x = 0;
  display_9(D)->gameBoard_position.y = 140;
  D.6508_29 = display_9(D)->img_path;
  D.6509_30 = (const char * restrict) D.6508_29;
  strcpy (temp_path_10, D.6509_30);
  D.6510_31 = (const char * restrict) &"white_checker.png"[0];
  D.6511_32 = __builtin_strlen (temp_path_10);
  D.6512_33 = temp_path_10 + D.6511_32;
  __builtin_memcpy (D.6512_33, D.6510_31, 18);
  D.6513_34 = IMG_Load (temp_path_10);
  display_9(D)->white_checker = D.6513_34;
  D.6514_35 = display_9(D)->img_path;
  D.6515_36 = (const char * restrict) D.6514_35;
  strcpy (temp_path_10, D.6515_36);
  D.6516_37 = (const char * restrict) &"green_checker.png"[0];
  D.6517_38 = __builtin_strlen (temp_path_10);
  D.6518_39 = temp_path_10 + D.6517_38;
  __builtin_memcpy (D.6518_39, D.6516_37, 18);
  D.6519_40 = IMG_Load (temp_path_10);
  display_9(D)->green_checker = D.6519_40;
  D.6520_41 = display_9(D)->img_path;
  D.6521_42 = (const char * restrict) D.6520_41;
  strcpy (temp_path_10, D.6521_42);
  D.6522_43 = (const char * restrict) &"bar_white_checker.png"[0];
  D.6523_44 = __builtin_strlen (temp_path_10);
  D.6524_45 = temp_path_10 + D.6523_44;
  __builtin_memcpy (D.6524_45, D.6522_43, 22);
  D.6525_46 = IMG_Load (temp_path_10);
  display_9(D)->bar_white_checker = D.6525_46;
  D.6526_47 = display_9(D)->img_path;
  D.6527_48 = (const char * restrict) D.6526_47;
  strcpy (temp_path_10, D.6527_48);
  D.6528_49 = (const char * restrict) &"bar_green_checker.png"[0];
  D.6529_50 = __builtin_strlen (temp_path_10);
  D.6530_51 = temp_path_10 + D.6529_50;
  __builtin_memcpy (D.6530_51, D.6528_49, 22);
  D.6531_52 = IMG_Load (temp_path_10);
  display_9(D)->bar_green_checker = D.6531_52;
  D.6532_53 = display_9(D)->img_path;
  D.6533_54 = (const char * restrict) D.6532_53;
  strcpy (temp_path_10, D.6533_54);
  D.6534_55 = (const char * restrict) &"selected_checker.png"[0];
  D.6535_56 = __builtin_strlen (temp_path_10);
  D.6536_57 = temp_path_10 + D.6535_56;
  __builtin_memcpy (D.6536_57, D.6534_55, 21);
  D.6537_58 = IMG_Load (temp_path_10);
  display_9(D)->selected_checker = D.6537_58;
  D.6538_59 = display_9(D)->img_path;
  D.6539_60 = (const char * restrict) D.6538_59;
  strcpy (temp_path_10, D.6539_60);
  D.6540_61 = (const char * restrict) &"flecheSelected1_12.png"[0];
  D.6541_62 = __builtin_strlen (temp_path_10);
  D.6542_63 = temp_path_10 + D.6541_62;
  __builtin_memcpy (D.6542_63, D.6540_61, 23);
  D.6543_64 = IMG_Load (temp_path_10);
  display_9(D)->possibility1_12 = D.6543_64;
  D.6544_65 = display_9(D)->img_path;
  D.6545_66 = (const char * restrict) D.6544_65;
  strcpy (temp_path_10, D.6545_66);
  D.6546_67 = (const char * restrict) &"flecheSelected13_24.png"[0];
  D.6547_68 = __builtin_strlen (temp_path_10);
  D.6548_69 = temp_path_10 + D.6547_68;
  __builtin_memcpy (D.6548_69, D.6546_67, 24);
  D.6549_70 = IMG_Load (temp_path_10);
  display_9(D)->possibility13_24 = D.6549_70;
  D.6550_71 = display_9(D)->img_path;
  D.6551_72 = (const char * restrict) D.6550_71;
  strcpy (temp_path_10, D.6551_72);
  D.6552_73 = (const char * restrict) &"out_selected.png"[0];
  D.6553_74 = __builtin_strlen (temp_path_10);
  D.6554_75 = temp_path_10 + D.6553_74;
  __builtin_memcpy (D.6554_75, D.6552_73, 17);
  D.6555_76 = IMG_Load (temp_path_10);
  display_9(D)->possibility_out = D.6555_76;
  D.6556_77 = display_9(D)->img_path;
  D.6557_78 = (const char * restrict) D.6556_77;
  strcpy (temp_path_10, D.6557_78);
  D.6558_79 = (const char * restrict) &"msgBox.png"[0];
  D.6559_80 = __builtin_strlen (temp_path_10);
  D.6560_81 = temp_path_10 + D.6559_80;
  __builtin_memcpy (D.6560_81, D.6558_79, 11);
  D.6561_82 = IMG_Load (temp_path_10);
  display_9(D)->msg_box = D.6561_82;
  temp_name_83 = malloc (100);
  i_84 = 1;
  goto <bb 6>;
  # SUCC: 6 (fallthru)

  # BLOCK 5
  # PRED: 6 (true)
  D.6562_85 = display_9(D)->img_path;
  D.6563_86 = (const char * restrict) D.6562_85;
  strcpy (temp_path_10, D.6563_86);
  D.6564_87 = (const char * restrict) &"die/die[%d].png"[0];
  sprintf (temp_name_83, D.6564_87, i_1);
  temp_name.52_88 = (const char * restrict) temp_name_83;
  strcat (temp_path_10, temp_name.52_88);
  D.6566_89 = i_1 + -1;
  D.6567_90 = IMG_Load (temp_path_10);
  display_9(D)->die[D.6566_89] = D.6567_90;
  i_91 = i_1 + 1;
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (fallthru) 5 (fallthru)
  # i_1 = PHI <i_84(4), i_91(5)>
  if (i_1 <= 6)
    goto <bb 5>;
  else
    goto <bb 7>;
  # SUCC: 5 (true) 7 (false)

  # BLOCK 7
  # PRED: 6 (false)
  display_9(D)->die1_position.x = 410;
  display_9(D)->die1_position.y = 340;
  display_9(D)->die2_position.x = 450;
  display_9(D)->die2_position.y = 340;
  display_9(D)->window_width = 800;
  display_9(D)->window_height = 600;
  display_9(D)->positions[0].x = 520;
  display_9(D)->positions[0].y = 562;
  i_92 = 1;
  goto <bb 22>;
  # SUCC: 22 (fallthru)

  # BLOCK 8
  # PRED: 22 (true)
  D.6568_93 = i_2 + -1;
  D.6569_94 = display_9(D)->positions[D.6568_93].y;
  display_9(D)->positions[i_2].y = D.6569_94;
  if (i_2 <= 5)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 (true) 10 (false)

  # BLOCK 9
  # PRED: 8 (true)
  D.6572_95 = i_2 + -1;
  D.6573_96 = display_9(D)->positions[D.6572_95].x;
  D.6574_97 = (short unsigned int) D.6573_96;
  D.6575_98 = D.6574_97 + 65498;
  D.6576_99 = (Sint16) D.6575_98;
  display_9(D)->positions[i_2].x = D.6576_99;
  goto <bb 21>;
  # SUCC: 21 (fallthru)

  # BLOCK 10
  # PRED: 8 (false)
  if (i_2 == 6)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 (true) 12 (false)

  # BLOCK 11
  # PRED: 10 (true)
  D.6580_100 = i_2 + -1;
  D.6581_101 = display_9(D)->positions[D.6580_100].x;
  D.6582_102 = (short unsigned int) D.6581_101;
  D.6583_103 = D.6582_102 + 65462;
  D.6584_104 = (Sint16) D.6583_103;
  display_9(D)->positions[i_2].x = D.6584_104;
  goto <bb 21>;
  # SUCC: 21 (fallthru)

  # BLOCK 12
  # PRED: 10 (false)
  if (i_2 <= 11)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 (true) 14 (false)

  # BLOCK 13
  # PRED: 12 (true)
  D.6588_105 = i_2 + -1;
  D.6589_106 = display_9(D)->positions[D.6588_105].x;
  D.6590_107 = (short unsigned int) D.6589_106;
  D.6591_108 = D.6590_107 + 65498;
  D.6592_109 = (Sint16) D.6591_108;
  display_9(D)->positions[i_2].x = D.6592_109;
  goto <bb 21>;
  # SUCC: 21 (fallthru)

  # BLOCK 14
  # PRED: 12 (false)
  if (i_2 == 12)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 (true) 16 (false)

  # BLOCK 15
  # PRED: 14 (true)
  D.6596_110 = i_2 + -1;
  D.6597_111 = display_9(D)->positions[D.6596_110].x;
  display_9(D)->positions[i_2].x = D.6597_111;
  display_9(D)->positions[i_2].y = 145;
  goto <bb 21>;
  # SUCC: 21 (fallthru)

  # BLOCK 16
  # PRED: 14 (false)
  if (i_2 <= 17)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 (true) 18 (false)

  # BLOCK 17
  # PRED: 16 (true)
  D.6601_112 = i_2 + -1;
  D.6602_113 = display_9(D)->positions[D.6601_112].x;
  D.6603_114 = (short unsigned int) D.6602_113;
  D.6604_115 = D.6603_114 + 38;
  D.6605_116 = (Sint16) D.6604_115;
  display_9(D)->positions[i_2].x = D.6605_116;
  goto <bb 21>;
  # SUCC: 21 (fallthru)

  # BLOCK 18
  # PRED: 16 (false)
  if (i_2 == 18)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 (true) 20 (false)

  # BLOCK 19
  # PRED: 18 (true)
  D.6609_117 = i_2 + -1;
  D.6610_118 = display_9(D)->positions[D.6609_117].x;
  D.6611_119 = (short unsigned int) D.6610_118;
  D.6612_120 = D.6611_119 + 74;
  D.6613_121 = (Sint16) D.6612_120;
  display_9(D)->positions[i_2].x = D.6613_121;
  goto <bb 21>;
  # SUCC: 21 (fallthru)

  # BLOCK 20
  # PRED: 18 (false)
  D.6615_122 = i_2 + -1;
  D.6616_123 = display_9(D)->positions[D.6615_122].x;
  D.6617_124 = (short unsigned int) D.6616_123;
  D.6618_125 = D.6617_124 + 38;
  D.6619_126 = (Sint16) D.6618_125;
  display_9(D)->positions[i_2].x = D.6619_126;
  # SUCC: 21 (fallthru)

  # BLOCK 21
  # PRED: 9 (fallthru) 11 (fallthru) 13 (fallthru) 15 (fallthru) 17 (fallthru) 19 (fallthru) 20 (fallthru)
  i_127 = i_2 + 1;
  # SUCC: 22 (fallthru)

  # BLOCK 22
  # PRED: 7 (fallthru) 21 (fallthru)
  # i_2 = PHI <i_92(7), i_127(21)>
  if (i_2 <= 23)
    goto <bb 8>;
  else
    goto <bb 23>;
  # SUCC: 8 (true) 23 (false)

  # BLOCK 23
  # PRED: 22 (false)
  display_9(D)->positions[24].x = 300;
  display_9(D)->positions[24].y = 480;
  display_9(D)->positions[25].x = 568;
  display_9(D)->positions[25].y = 140;
  display_9(D)->positions[26].x = 300;
  display_9(D)->positions[26].y = 220;
  display_9(D)->positions[27].x = 568;
  display_9(D)->positions[27].y = 590;
  D.6620_128 = display_9(D)->window_height;
  D.6621_129 = display_9(D)->window_width;
  D.6622_130 = SDL_SetVideoMode (D.6621_129, D.6620_128, 32, 1073741825);
  display_9(D)->screen = D.6622_130;
  D.6623_131 = display_9(D)->screen;
  if (D.6623_131 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 (true) 25 (false)

  # BLOCK 24
  # PRED: 23 (true)
  D.6626_132 = SDL_GetError ();
  D.6627_133 = (const char * restrict) &"Impossible de charger le mode vidéo : %s\n"[0];
  stderr.53_134 = stderr;
  stderr.54_135 = (struct FILE * restrict) stderr.53_134;
  fprintf (stderr.54_135, D.6627_133, D.6626_132);
  free (temp_path_10);
  free (temp_name_83);
  exit (1);
  # SUCC:

  # BLOCK 25
  # PRED: 23 (false)
  SDL_WM_SetCaption ("Backgammon", 0B);
  D.6630_136 = TTF_Init ();
  if (D.6630_136 == -1)
    goto <bb 26>;
  else
    goto <bb 27>;
  # SUCC: 26 (true) 27 (false)

  # BLOCK 26
  # PRED: 25 (true)
  D.6633_137 = SDL_GetError ();
  D.6634_138 = (const char * restrict) &"Erreur d\'initialisation de TTF_Init : %s\n"[0];
  stderr.55_139 = stderr;
  stderr.56_140 = (struct FILE * restrict) stderr.55_139;
  fprintf (stderr.56_140, D.6634_138, D.6633_137);
  free (temp_path_10);
  free (temp_name_83);
  exit (1);
  # SUCC:

  # BLOCK 27
  # PRED: 25 (false)
  D.6637_141 = display_9(D)->font_path;
  D.6638_142 = (const char * restrict) D.6637_141;
  strcpy (temp_path_10, D.6638_142);
  D.6639_143 = (const char * restrict) &"comic.ttf"[0];
  D.6640_144 = __builtin_strlen (temp_path_10);
  D.6641_145 = temp_path_10 + D.6640_144;
  __builtin_memcpy (D.6641_145, D.6639_143, 10);
  D.6642_146 = TTF_OpenFont (temp_path_10, 22);
  display_9(D)->font = D.6642_146;
  D.6643_147 = malloc (12);
  game_148(D)->player1_name = D.6643_147;
  D.6644_149 = malloc (12);
  game_148(D)->player2_name = D.6644_149;
  game_148(D)->player1_checker = 0;
  game_148(D)->player2_checker = 1;
  game_148(D)->withDouble = 1;
  game_148(D)->scoreLimit = 5;
  free (temp_path_10);
  free (temp_name_83);
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (D.6484_3 - 3 )
Partition 4 (stderr.50_4 - 4 )
Partition 5 (stderr.51_5 - 5 )
Partition 6 (D.6489_6 - 6 )
Partition 7 (temp_path_7(D) - 7 )
Partition 8 (temp_name_8(D) - 8 )
Partition 9 (display_9(D) - 9 )
Partition 10 (temp_path_10 - 10 )
Partition 11 (D.6490_11 - 11 )
Partition 12 (D.6491_12 - 12 )
Partition 13 (D.6492_13 - 13 )
Partition 14 (D.6493_14 - 14 )
Partition 15 (D.6494_15 - 15 )
Partition 16 (D.6495_16 - 16 )
Partition 17 (D.6496_17 - 17 )
Partition 18 (D.6497_18 - 18 )
Partition 19 (D.6498_19 - 19 )
Partition 20 (D.6499_20 - 20 )
Partition 21 (D.6500_21 - 21 )
Partition 22 (D.6501_22 - 22 )
Partition 23 (D.6502_23 - 23 )
Partition 24 (D.6503_24 - 24 )
Partition 25 (D.6504_25 - 25 )
Partition 26 (D.6505_26 - 26 )
Partition 27 (D.6506_27 - 27 )
Partition 28 (D.6507_28 - 28 )
Partition 29 (D.6508_29 - 29 )
Partition 30 (D.6509_30 - 30 )
Partition 31 (D.6510_31 - 31 )
Partition 32 (D.6511_32 - 32 )
Partition 33 (D.6512_33 - 33 )
Partition 34 (D.6513_34 - 34 )
Partition 35 (D.6514_35 - 35 )
Partition 36 (D.6515_36 - 36 )
Partition 37 (D.6516_37 - 37 )
Partition 38 (D.6517_38 - 38 )
Partition 39 (D.6518_39 - 39 )
Partition 40 (D.6519_40 - 40 )
Partition 41 (D.6520_41 - 41 )
Partition 42 (D.6521_42 - 42 )
Partition 43 (D.6522_43 - 43 )
Partition 44 (D.6523_44 - 44 )
Partition 45 (D.6524_45 - 45 )
Partition 46 (D.6525_46 - 46 )
Partition 47 (D.6526_47 - 47 )
Partition 48 (D.6527_48 - 48 )
Partition 49 (D.6528_49 - 49 )
Partition 50 (D.6529_50 - 50 )
Partition 51 (D.6530_51 - 51 )
Partition 52 (D.6531_52 - 52 )
Partition 53 (D.6532_53 - 53 )
Partition 54 (D.6533_54 - 54 )
Partition 55 (D.6534_55 - 55 )
Partition 56 (D.6535_56 - 56 )
Partition 57 (D.6536_57 - 57 )
Partition 58 (D.6537_58 - 58 )
Partition 59 (D.6538_59 - 59 )
Partition 60 (D.6539_60 - 60 )
Partition 61 (D.6540_61 - 61 )
Partition 62 (D.6541_62 - 62 )
Partition 63 (D.6542_63 - 63 )
Partition 64 (D.6543_64 - 64 )
Partition 65 (D.6544_65 - 65 )
Partition 66 (D.6545_66 - 66 )
Partition 67 (D.6546_67 - 67 )
Partition 68 (D.6547_68 - 68 )
Partition 69 (D.6548_69 - 69 )
Partition 70 (D.6549_70 - 70 )
Partition 71 (D.6550_71 - 71 )
Partition 72 (D.6551_72 - 72 )
Partition 73 (D.6552_73 - 73 )
Partition 74 (D.6553_74 - 74 )
Partition 75 (D.6554_75 - 75 )
Partition 76 (D.6555_76 - 76 )
Partition 77 (D.6556_77 - 77 )
Partition 78 (D.6557_78 - 78 )
Partition 79 (D.6558_79 - 79 )
Partition 80 (D.6559_80 - 80 )
Partition 81 (D.6560_81 - 81 )
Partition 82 (D.6561_82 - 82 )
Partition 83 (temp_name_83 - 83 )
Partition 84 (i_84 - 84 )
Partition 85 (D.6562_85 - 85 )
Partition 86 (D.6563_86 - 86 )
Partition 87 (D.6564_87 - 87 )
Partition 88 (temp_name.52_88 - 88 )
Partition 89 (D.6566_89 - 89 )
Partition 90 (D.6567_90 - 90 )
Partition 91 (i_91 - 91 )
Partition 92 (i_92 - 92 )
Partition 93 (D.6568_93 - 93 )
Partition 94 (D.6569_94 - 94 )
Partition 95 (D.6572_95 - 95 )
Partition 96 (D.6573_96 - 96 )
Partition 97 (D.6574_97 - 97 )
Partition 98 (D.6575_98 - 98 )
Partition 99 (D.6576_99 - 99 )
Partition 100 (D.6580_100 - 100 )
Partition 101 (D.6581_101 - 101 )
Partition 102 (D.6582_102 - 102 )
Partition 103 (D.6583_103 - 103 )
Partition 104 (D.6584_104 - 104 )
Partition 105 (D.6588_105 - 105 )
Partition 106 (D.6589_106 - 106 )
Partition 107 (D.6590_107 - 107 )
Partition 108 (D.6591_108 - 108 )
Partition 109 (D.6592_109 - 109 )
Partition 110 (D.6596_110 - 110 )
Partition 111 (D.6597_111 - 111 )
Partition 112 (D.6601_112 - 112 )
Partition 113 (D.6602_113 - 113 )
Partition 114 (D.6603_114 - 114 )
Partition 115 (D.6604_115 - 115 )
Partition 116 (D.6605_116 - 116 )
Partition 117 (D.6609_117 - 117 )
Partition 118 (D.6610_118 - 118 )
Partition 119 (D.6611_119 - 119 )
Partition 120 (D.6612_120 - 120 )
Partition 121 (D.6613_121 - 121 )
Partition 122 (D.6615_122 - 122 )
Partition 123 (D.6616_123 - 123 )
Partition 124 (D.6617_124 - 124 )
Partition 125 (D.6618_125 - 125 )
Partition 126 (D.6619_126 - 126 )
Partition 127 (i_127 - 127 )
Partition 128 (D.6620_128 - 128 )
Partition 129 (D.6621_129 - 129 )
Partition 130 (D.6622_130 - 130 )
Partition 131 (D.6623_131 - 131 )
Partition 132 (D.6626_132 - 132 )
Partition 133 (D.6627_133 - 133 )
Partition 134 (stderr.53_134 - 134 )
Partition 135 (stderr.54_135 - 135 )
Partition 136 (D.6630_136 - 136 )
Partition 137 (D.6633_137 - 137 )
Partition 138 (D.6634_138 - 138 )
Partition 139 (stderr.55_139 - 139 )
Partition 140 (stderr.56_140 - 140 )
Partition 141 (D.6637_141 - 141 )
Partition 142 (D.6638_142 - 142 )
Partition 143 (D.6639_143 - 143 )
Partition 144 (D.6640_144 - 144 )
Partition 145 (D.6641_145 - 145 )
Partition 146 (D.6642_146 - 146 )
Partition 147 (D.6643_147 - 147 )
Partition 148 (game_148(D) - 148 )
Partition 149 (D.6644_149 - 149 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (temp_path_7(D) - 7 )
Partition 3 (temp_name_8(D) - 8 )
Partition 4 (display_9(D) - 9 )
Partition 5 (temp_path_10 - 10 )
Partition 6 (temp_name_83 - 83 )
Partition 7 (i_84 - 84 )
Partition 8 (i_91 - 91 )
Partition 9 (i_92 - 92 )
Partition 10 (i_127 - 127 )
Partition 11 (game_148(D) - 148 )


Live on entry to BB2 : temp_path_7(D)  temp_name_8(D)  display_9(D)  game_148(D)  

Live on entry to BB3 : temp_path_7(D)  temp_name_8(D)  

Live on entry to BB4 : display_9(D)  game_148(D)  

Live on entry to BB5 : i_1  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB6 : display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB7 : display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB8 : i_2  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB9 : i_2  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB10 : i_2  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB11 : i_2  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB12 : i_2  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB13 : i_2  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB14 : i_2  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB15 : i_2  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB16 : i_2  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB17 : i_2  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB18 : i_2  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB19 : i_2  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB20 : i_2  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB21 : i_2  display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB22 : display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB23 : display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB24 : temp_path_10  temp_name_83  

Live on entry to BB25 : display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Live on entry to BB26 : temp_path_10  temp_name_83  

Live on entry to BB27 : display_9(D)  temp_path_10  temp_name_83  game_148(D)  

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_2
(2147483646) i_1 <-> i_84
(2147483646) i_1 <-> i_91
(2147483646) i_1 <-> i_92
(2147483646) i_1 <-> i_127
(2147483646) temp_path_7(D) <-> temp_path_10
(2147483646) temp_name_8(D) <-> temp_name_83

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (temp_path_7(D) - 7 )
Partition 3 (temp_name_8(D) - 8 )
Partition 4 (display_9(D) - 9 )
Partition 5 (temp_path_10 - 10 )
Partition 6 (temp_name_83 - 83 )
Partition 7 (i_84 - 84 )
Partition 8 (i_91 - 91 )
Partition 9 (i_92 - 92 )
Partition 10 (i_127 - 127 )
Partition 11 (game_148(D) - 148 )

Coalesce list: (1)i_1 & (2)i_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (84)i_84 [map: 0, 7] : Success -> 0
Coalesce list: (1)i_1 & (91)i_91 [map: 0, 8] : Success -> 0
Coalesce list: (1)i_1 & (92)i_92 [map: 0, 9] : Success -> 0
Coalesce list: (1)i_1 & (127)i_127 [map: 0, 10] : Success -> 0
Coalesce list: (7)temp_path_7(D) & (10)temp_path_10 [map: 2, 5] : Success -> 2
Coalesce list: (8)temp_name_8(D) & (83)temp_name_83 [map: 3, 6] : Success -> 3
Coalesce list: (2)i_1 & (127)i_1: Already Coalesced.
Coalesce list: (2)i_1 & (92)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (91)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (84)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 2 84 91 92 127 )
Partition 1 (D.6484_3 - 3 )
Partition 2 (stderr.50_4 - 4 )
Partition 3 (stderr.51_5 - 5 )
Partition 4 (D.6489_6 - 6 )
Partition 5 (temp_path_7(D) - 7 10 )
Partition 6 (temp_name_8(D) - 8 83 )
Partition 7 (display_9(D) - 9 )
Partition 8 (D.6490_11 - 11 )
Partition 9 (D.6491_12 - 12 )
Partition 10 (D.6492_13 - 13 )
Partition 11 (D.6493_14 - 14 )
Partition 12 (D.6494_15 - 15 )
Partition 13 (D.6495_16 - 16 )
Partition 14 (D.6496_17 - 17 )
Partition 15 (D.6497_18 - 18 )
Partition 16 (D.6498_19 - 19 )
Partition 17 (D.6499_20 - 20 )
Partition 18 (D.6500_21 - 21 )
Partition 19 (D.6501_22 - 22 )
Partition 20 (D.6502_23 - 23 )
Partition 21 (D.6503_24 - 24 )
Partition 22 (D.6504_25 - 25 )
Partition 23 (D.6505_26 - 26 )
Partition 24 (D.6506_27 - 27 )
Partition 25 (D.6507_28 - 28 )
Partition 26 (D.6508_29 - 29 )
Partition 27 (D.6509_30 - 30 )
Partition 28 (D.6510_31 - 31 )
Partition 29 (D.6511_32 - 32 )
Partition 30 (D.6512_33 - 33 )
Partition 31 (D.6513_34 - 34 )
Partition 32 (D.6514_35 - 35 )
Partition 33 (D.6515_36 - 36 )
Partition 34 (D.6516_37 - 37 )
Partition 35 (D.6517_38 - 38 )
Partition 36 (D.6518_39 - 39 )
Partition 37 (D.6519_40 - 40 )
Partition 38 (D.6520_41 - 41 )
Partition 39 (D.6521_42 - 42 )
Partition 40 (D.6522_43 - 43 )
Partition 41 (D.6523_44 - 44 )
Partition 42 (D.6524_45 - 45 )
Partition 43 (D.6525_46 - 46 )
Partition 44 (D.6526_47 - 47 )
Partition 45 (D.6527_48 - 48 )
Partition 46 (D.6528_49 - 49 )
Partition 47 (D.6529_50 - 50 )
Partition 48 (D.6530_51 - 51 )
Partition 49 (D.6531_52 - 52 )
Partition 50 (D.6532_53 - 53 )
Partition 51 (D.6533_54 - 54 )
Partition 52 (D.6534_55 - 55 )
Partition 53 (D.6535_56 - 56 )
Partition 54 (D.6536_57 - 57 )
Partition 55 (D.6537_58 - 58 )
Partition 56 (D.6538_59 - 59 )
Partition 57 (D.6539_60 - 60 )
Partition 58 (D.6540_61 - 61 )
Partition 59 (D.6541_62 - 62 )
Partition 60 (D.6542_63 - 63 )
Partition 61 (D.6543_64 - 64 )
Partition 62 (D.6544_65 - 65 )
Partition 63 (D.6545_66 - 66 )
Partition 64 (D.6546_67 - 67 )
Partition 65 (D.6547_68 - 68 )
Partition 66 (D.6548_69 - 69 )
Partition 67 (D.6549_70 - 70 )
Partition 68 (D.6550_71 - 71 )
Partition 69 (D.6551_72 - 72 )
Partition 70 (D.6552_73 - 73 )
Partition 71 (D.6553_74 - 74 )
Partition 72 (D.6554_75 - 75 )
Partition 73 (D.6555_76 - 76 )
Partition 74 (D.6556_77 - 77 )
Partition 75 (D.6557_78 - 78 )
Partition 76 (D.6558_79 - 79 )
Partition 77 (D.6559_80 - 80 )
Partition 78 (D.6560_81 - 81 )
Partition 79 (D.6561_82 - 82 )
Partition 80 (D.6562_85 - 85 )
Partition 81 (D.6563_86 - 86 )
Partition 82 (D.6564_87 - 87 )
Partition 83 (temp_name.52_88 - 88 )
Partition 84 (D.6566_89 - 89 )
Partition 85 (D.6567_90 - 90 )
Partition 86 (D.6568_93 - 93 )
Partition 87 (D.6569_94 - 94 )
Partition 88 (D.6572_95 - 95 )
Partition 89 (D.6573_96 - 96 )
Partition 90 (D.6574_97 - 97 )
Partition 91 (D.6575_98 - 98 )
Partition 92 (D.6576_99 - 99 )
Partition 93 (D.6580_100 - 100 )
Partition 94 (D.6581_101 - 101 )
Partition 95 (D.6582_102 - 102 )
Partition 96 (D.6583_103 - 103 )
Partition 97 (D.6584_104 - 104 )
Partition 98 (D.6588_105 - 105 )
Partition 99 (D.6589_106 - 106 )
Partition 100 (D.6590_107 - 107 )
Partition 101 (D.6591_108 - 108 )
Partition 102 (D.6592_109 - 109 )
Partition 103 (D.6596_110 - 110 )
Partition 104 (D.6597_111 - 111 )
Partition 105 (D.6601_112 - 112 )
Partition 106 (D.6602_113 - 113 )
Partition 107 (D.6603_114 - 114 )
Partition 108 (D.6604_115 - 115 )
Partition 109 (D.6605_116 - 116 )
Partition 110 (D.6609_117 - 117 )
Partition 111 (D.6610_118 - 118 )
Partition 112 (D.6611_119 - 119 )
Partition 113 (D.6612_120 - 120 )
Partition 114 (D.6613_121 - 121 )
Partition 115 (D.6615_122 - 122 )
Partition 116 (D.6616_123 - 123 )
Partition 117 (D.6617_124 - 124 )
Partition 118 (D.6618_125 - 125 )
Partition 119 (D.6619_126 - 126 )
Partition 120 (D.6620_128 - 128 )
Partition 121 (D.6621_129 - 129 )
Partition 122 (D.6622_130 - 130 )
Partition 123 (D.6623_131 - 131 )
Partition 124 (D.6626_132 - 132 )
Partition 125 (D.6627_133 - 133 )
Partition 126 (stderr.53_134 - 134 )
Partition 127 (stderr.54_135 - 135 )
Partition 128 (D.6630_136 - 136 )
Partition 129 (D.6633_137 - 137 )
Partition 130 (D.6634_138 - 138 )
Partition 131 (stderr.55_139 - 139 )
Partition 132 (stderr.56_140 - 140 )
Partition 133 (D.6637_141 - 141 )
Partition 134 (D.6638_142 - 142 )
Partition 135 (D.6639_143 - 143 )
Partition 136 (D.6640_144 - 144 )
Partition 137 (D.6641_145 - 145 )
Partition 138 (D.6642_146 - 146 )
Partition 139 (D.6643_147 - 147 )
Partition 140 (game_148(D) - 148 )
Partition 141 (D.6644_149 - 149 )

Display_Init (struct SDisplay * display, struct SGame * game)
{
  char * temp_name;
  char * temp_path;
  int i;
  void * D.6644;
  void * D.6643;
  struct TTF_Font * D.6642;
  char * D.6641;
  unsigned int D.6640;
  const char * restrict D.6639;
  const char * restrict D.6638;
  char * D.6637;
  struct FILE * restrict stderr.56;
  struct _IO_FILE * stderr.55;
  const char * restrict D.6634;
  char * D.6633;
  int D.6630;
  struct FILE * restrict stderr.54;
  struct _IO_FILE * stderr.53;
  const char * restrict D.6627;
  char * D.6626;
  struct SDL_Surface * D.6623;
  struct SDL_Surface * D.6622;
  int D.6621;
  int D.6620;
  Sint16 D.6619;
  short unsigned int D.6618;
  short unsigned int D.6617;
  Sint16 D.6616;
  int D.6615;
  Sint16 D.6613;
  short unsigned int D.6612;
  short unsigned int D.6611;
  Sint16 D.6610;
  int D.6609;
  Sint16 D.6605;
  short unsigned int D.6604;
  short unsigned int D.6603;
  Sint16 D.6602;
  int D.6601;
  Sint16 D.6597;
  int D.6596;
  Sint16 D.6592;
  short unsigned int D.6591;
  short unsigned int D.6590;
  Sint16 D.6589;
  int D.6588;
  Sint16 D.6584;
  short unsigned int D.6583;
  short unsigned int D.6582;
  Sint16 D.6581;
  int D.6580;
  Sint16 D.6576;
  short unsigned int D.6575;
  short unsigned int D.6574;
  Sint16 D.6573;
  int D.6572;
  Sint16 D.6569;
  int D.6568;
  struct SDL_Surface * D.6567;
  int D.6566;
  const char * restrict temp_name.52;
  const char * restrict D.6564;
  const char * restrict D.6563;
  char * D.6562;
  struct SDL_Surface * D.6561;
  char * D.6560;
  unsigned int D.6559;
  const char * restrict D.6558;
  const char * restrict D.6557;
  char * D.6556;
  struct SDL_Surface * D.6555;
  char * D.6554;
  unsigned int D.6553;
  const char * restrict D.6552;
  const char * restrict D.6551;
  char * D.6550;
  struct SDL_Surface * D.6549;
  char * D.6548;
  unsigned int D.6547;
  const char * restrict D.6546;
  const char * restrict D.6545;
  char * D.6544;
  struct SDL_Surface * D.6543;
  char * D.6542;
  unsigned int D.6541;
  const char * restrict D.6540;
  const char * restrict D.6539;
  char * D.6538;
  struct SDL_Surface * D.6537;
  char * D.6536;
  unsigned int D.6535;
  const char * restrict D.6534;
  const char * restrict D.6533;
  char * D.6532;
  struct SDL_Surface * D.6531;
  char * D.6530;
  unsigned int D.6529;
  const char * restrict D.6528;
  const char * restrict D.6527;
  char * D.6526;
  struct SDL_Surface * D.6525;
  char * D.6524;
  unsigned int D.6523;
  const char * restrict D.6522;
  const char * restrict D.6521;
  char * D.6520;
  struct SDL_Surface * D.6519;
  char * D.6518;
  unsigned int D.6517;
  const char * restrict D.6516;
  const char * restrict D.6515;
  char * D.6514;
  struct SDL_Surface * D.6513;
  char * D.6512;
  unsigned int D.6511;
  const char * restrict D.6510;
  const char * restrict D.6509;
  char * D.6508;
  struct SDL_Surface * D.6507;
  char * D.6506;
  unsigned int D.6505;
  const char * restrict D.6504;
  const char * restrict D.6503;
  char * D.6502;
  struct SDL_Surface * D.6501;
  char * D.6500;
  unsigned int D.6499;
  const char * restrict D.6498;
  const char * restrict D.6497;
  char * D.6496;
  struct SDL_Surface * D.6495;
  char * D.6494;
  unsigned int D.6493;
  const char * restrict D.6492;
  const char * restrict D.6491;
  char * D.6490;
  const char * restrict D.6489;
  struct FILE * restrict stderr.51;
  struct _IO_FILE * stderr.50;
  int D.6484;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.6484_3 = SDL_Init (32);
  if (D.6484_3 == -1)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  stderr.50_4 = stderr;
  stderr.51_5 = (struct FILE * restrict) stderr.50_4;
  D.6489_6 = (const char * restrict) &"Erreur d\'initialisation de la SDL"[0];
  __builtin_fwrite (D.6489_6, 1, 33, stderr.51_5);
  free (temp_path_7(D));
  free (temp_name_8(D));
  exit (1);
  # SUCC:

  # BLOCK 4
  # PRED: 2 (false)
  display_9(D)->img_path = "../ressources/pictures/";
  display_9(D)->font_path = "../ressources/fonts/";
  temp_path_10 = malloc (100);
  D.6490_11 = display_9(D)->img_path;
  D.6491_12 = (const char * restrict) D.6490_11;
  strcpy (temp_path_10, D.6491_12);
  D.6492_13 = (const char * restrict) &"icon.bmp"[0];
  D.6493_14 = __builtin_strlen (temp_path_10);
  D.6494_15 = temp_path_10 + D.6493_14;
  __builtin_memcpy (D.6494_15, D.6492_13, 9);
  D.6495_16 = IMG_Load (temp_path_10);
  SDL_WM_SetIcon (D.6495_16, 0B);
  D.6496_17 = display_9(D)->img_path;
  D.6497_18 = (const char * restrict) D.6496_17;
  strcpy (temp_path_10, D.6497_18);
  D.6498_19 = (const char * restrict) &"background.png"[0];
  D.6499_20 = __builtin_strlen (temp_path_10);
  D.6500_21 = temp_path_10 + D.6499_20;
  __builtin_memcpy (D.6500_21, D.6498_19, 15);
  D.6501_22 = IMG_Load (temp_path_10);
  display_9(D)->background = D.6501_22;
  display_9(D)->background_position.x = 0;
  display_9(D)->background_position.y = 0;
  D.6502_23 = display_9(D)->img_path;
  D.6503_24 = (const char * restrict) D.6502_23;
  strcpy (temp_path_10, D.6503_24);
  D.6504_25 = (const char * restrict) &"gameBoard.png"[0];
  D.6505_26 = __builtin_strlen (temp_path_10);
  D.6506_27 = temp_path_10 + D.6505_26;
  __builtin_memcpy (D.6506_27, D.6504_25, 14);
  D.6507_28 = IMG_Load (temp_path_10);
  display_9(D)->gameBoard = D.6507_28;
  display_9(D)->gameBoard_position.x = 0;
  display_9(D)->gameBoard_position.y = 140;
  D.6508_29 = display_9(D)->img_path;
  D.6509_30 = (const char * restrict) D.6508_29;
  strcpy (temp_path_10, D.6509_30);
  D.6510_31 = (const char * restrict) &"white_checker.png"[0];
  D.6511_32 = __builtin_strlen (temp_path_10);
  D.6512_33 = temp_path_10 + D.6511_32;
  __builtin_memcpy (D.6512_33, D.6510_31, 18);
  D.6513_34 = IMG_Load (temp_path_10);
  display_9(D)->white_checker = D.6513_34;
  D.6514_35 = display_9(D)->img_path;
  D.6515_36 = (const char * restrict) D.6514_35;
  strcpy (temp_path_10, D.6515_36);
  D.6516_37 = (const char * restrict) &"green_checker.png"[0];
  D.6517_38 = __builtin_strlen (temp_path_10);
  D.6518_39 = temp_path_10 + D.6517_38;
  __builtin_memcpy (D.6518_39, D.6516_37, 18);
  D.6519_40 = IMG_Load (temp_path_10);
  display_9(D)->green_checker = D.6519_40;
  D.6520_41 = display_9(D)->img_path;
  D.6521_42 = (const char * restrict) D.6520_41;
  strcpy (temp_path_10, D.6521_42);
  D.6522_43 = (const char * restrict) &"bar_white_checker.png"[0];
  D.6523_44 = __builtin_strlen (temp_path_10);
  D.6524_45 = temp_path_10 + D.6523_44;
  __builtin_memcpy (D.6524_45, D.6522_43, 22);
  D.6525_46 = IMG_Load (temp_path_10);
  display_9(D)->bar_white_checker = D.6525_46;
  D.6526_47 = display_9(D)->img_path;
  D.6527_48 = (const char * restrict) D.6526_47;
  strcpy (temp_path_10, D.6527_48);
  D.6528_49 = (const char * restrict) &"bar_green_checker.png"[0];
  D.6529_50 = __builtin_strlen (temp_path_10);
  D.6530_51 = temp_path_10 + D.6529_50;
  __builtin_memcpy (D.6530_51, D.6528_49, 22);
  D.6531_52 = IMG_Load (temp_path_10);
  display_9(D)->bar_green_checker = D.6531_52;
  D.6532_53 = display_9(D)->img_path;
  D.6533_54 = (const char * restrict) D.6532_53;
  strcpy (temp_path_10, D.6533_54);
  D.6534_55 = (const char * restrict) &"selected_checker.png"[0];
  D.6535_56 = __builtin_strlen (temp_path_10);
  D.6536_57 = temp_path_10 + D.6535_56;
  __builtin_memcpy (D.6536_57, D.6534_55, 21);
  D.6537_58 = IMG_Load (temp_path_10);
  display_9(D)->selected_checker = D.6537_58;
  D.6538_59 = display_9(D)->img_path;
  D.6539_60 = (const char * restrict) D.6538_59;
  strcpy (temp_path_10, D.6539_60);
  D.6540_61 = (const char * restrict) &"flecheSelected1_12.png"[0];
  D.6541_62 = __builtin_strlen (temp_path_10);
  D.6542_63 = temp_path_10 + D.6541_62;
  __builtin_memcpy (D.6542_63, D.6540_61, 23);
  D.6543_64 = IMG_Load (temp_path_10);
  display_9(D)->possibility1_12 = D.6543_64;
  D.6544_65 = display_9(D)->img_path;
  D.6545_66 = (const char * restrict) D.6544_65;
  strcpy (temp_path_10, D.6545_66);
  D.6546_67 = (const char * restrict) &"flecheSelected13_24.png"[0];
  D.6547_68 = __builtin_strlen (temp_path_10);
  D.6548_69 = temp_path_10 + D.6547_68;
  __builtin_memcpy (D.6548_69, D.6546_67, 24);
  D.6549_70 = IMG_Load (temp_path_10);
  display_9(D)->possibility13_24 = D.6549_70;
  D.6550_71 = display_9(D)->img_path;
  D.6551_72 = (const char * restrict) D.6550_71;
  strcpy (temp_path_10, D.6551_72);
  D.6552_73 = (const char * restrict) &"out_selected.png"[0];
  D.6553_74 = __builtin_strlen (temp_path_10);
  D.6554_75 = temp_path_10 + D.6553_74;
  __builtin_memcpy (D.6554_75, D.6552_73, 17);
  D.6555_76 = IMG_Load (temp_path_10);
  display_9(D)->possibility_out = D.6555_76;
  D.6556_77 = display_9(D)->img_path;
  D.6557_78 = (const char * restrict) D.6556_77;
  strcpy (temp_path_10, D.6557_78);
  D.6558_79 = (const char * restrict) &"msgBox.png"[0];
  D.6559_80 = __builtin_strlen (temp_path_10);
  D.6560_81 = temp_path_10 + D.6559_80;
  __builtin_memcpy (D.6560_81, D.6558_79, 11);
  D.6561_82 = IMG_Load (temp_path_10);
  display_9(D)->msg_box = D.6561_82;
  temp_name_83 = malloc (100);
  i_84 = 1;
  goto <bb 6>;
  # SUCC: 6 (fallthru)

  # BLOCK 5
  # PRED: 6 (true)
  D.6562_85 = display_9(D)->img_path;
  D.6563_86 = (const char * restrict) D.6562_85;
  strcpy (temp_path_10, D.6563_86);
  D.6564_87 = (const char * restrict) &"die/die[%d].png"[0];
  sprintf (temp_name_83, D.6564_87, i_1);
  temp_name.52_88 = (const char * restrict) temp_name_83;
  strcat (temp_path_10, temp_name.52_88);
  D.6566_89 = i_1 + -1;
  D.6567_90 = IMG_Load (temp_path_10);
  display_9(D)->die[D.6566_89] = D.6567_90;
  i_91 = i_1 + 1;
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (fallthru) 5 (fallthru)
  # i_1 = PHI <i_84(4), i_91(5)>
  if (i_1 <= 6)
    goto <bb 5>;
  else
    goto <bb 7>;
  # SUCC: 5 (true) 7 (false)

  # BLOCK 7
  # PRED: 6 (false)
  display_9(D)->die1_position.x = 410;
  display_9(D)->die1_position.y = 340;
  display_9(D)->die2_position.x = 450;
  display_9(D)->die2_position.y = 340;
  display_9(D)->window_width = 800;
  display_9(D)->window_height = 600;
  display_9(D)->positions[0].x = 520;
  display_9(D)->positions[0].y = 562;
  i_92 = 1;
  goto <bb 22>;
  # SUCC: 22 (fallthru)

  # BLOCK 8
  # PRED: 22 (true)
  D.6568_93 = i_2 + -1;
  D.6569_94 = display_9(D)->positions[D.6568_93].y;
  display_9(D)->positions[i_2].y = D.6569_94;
  if (i_2 <= 5)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 (true) 10 (false)

  # BLOCK 9
  # PRED: 8 (true)
  D.6572_95 = i_2 + -1;
  D.6573_96 = display_9(D)->positions[D.6572_95].x;
  D.6574_97 = (short unsigned int) D.6573_96;
  D.6575_98 = D.6574_97 + 65498;
  D.6576_99 = (Sint16) D.6575_98;
  display_9(D)->positions[i_2].x = D.6576_99;
  goto <bb 21>;
  # SUCC: 21 (fallthru)

  # BLOCK 10
  # PRED: 8 (false)
  if (i_2 == 6)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 (true) 12 (false)

  # BLOCK 11
  # PRED: 10 (true)
  D.6580_100 = i_2 + -1;
  D.6581_101 = display_9(D)->positions[D.6580_100].x;
  D.6582_102 = (short unsigned int) D.6581_101;
  D.6583_103 = D.6582_102 + 65462;
  D.6584_104 = (Sint16) D.6583_103;
  display_9(D)->positions[i_2].x = D.6584_104;
  goto <bb 21>;
  # SUCC: 21 (fallthru)

  # BLOCK 12
  # PRED: 10 (false)
  if (i_2 <= 11)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 (true) 14 (false)

  # BLOCK 13
  # PRED: 12 (true)
  D.6588_105 = i_2 + -1;
  D.6589_106 = display_9(D)->positions[D.6588_105].x;
  D.6590_107 = (short unsigned int) D.6589_106;
  D.6591_108 = D.6590_107 + 65498;
  D.6592_109 = (Sint16) D.6591_108;
  display_9(D)->positions[i_2].x = D.6592_109;
  goto <bb 21>;
  # SUCC: 21 (fallthru)

  # BLOCK 14
  # PRED: 12 (false)
  if (i_2 == 12)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 (true) 16 (false)

  # BLOCK 15
  # PRED: 14 (true)
  D.6596_110 = i_2 + -1;
  D.6597_111 = display_9(D)->positions[D.6596_110].x;
  display_9(D)->positions[i_2].x = D.6597_111;
  display_9(D)->positions[i_2].y = 145;
  goto <bb 21>;
  # SUCC: 21 (fallthru)

  # BLOCK 16
  # PRED: 14 (false)
  if (i_2 <= 17)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 (true) 18 (false)

  # BLOCK 17
  # PRED: 16 (true)
  D.6601_112 = i_2 + -1;
  D.6602_113 = display_9(D)->positions[D.6601_112].x;
  D.6603_114 = (short unsigned int) D.6602_113;
  D.6604_115 = D.6603_114 + 38;
  D.6605_116 = (Sint16) D.6604_115;
  display_9(D)->positions[i_2].x = D.6605_116;
  goto <bb 21>;
  # SUCC: 21 (fallthru)

  # BLOCK 18
  # PRED: 16 (false)
  if (i_2 == 18)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 (true) 20 (false)

  # BLOCK 19
  # PRED: 18 (true)
  D.6609_117 = i_2 + -1;
  D.6610_118 = display_9(D)->positions[D.6609_117].x;
  D.6611_119 = (short unsigned int) D.6610_118;
  D.6612_120 = D.6611_119 + 74;
  D.6613_121 = (Sint16) D.6612_120;
  display_9(D)->positions[i_2].x = D.6613_121;
  goto <bb 21>;
  # SUCC: 21 (fallthru)

  # BLOCK 20
  # PRED: 18 (false)
  D.6615_122 = i_2 + -1;
  D.6616_123 = display_9(D)->positions[D.6615_122].x;
  D.6617_124 = (short unsigned int) D.6616_123;
  D.6618_125 = D.6617_124 + 38;
  D.6619_126 = (Sint16) D.6618_125;
  display_9(D)->positions[i_2].x = D.6619_126;
  # SUCC: 21 (fallthru)

  # BLOCK 21
  # PRED: 9 (fallthru) 11 (fallthru) 13 (fallthru) 15 (fallthru) 17 (fallthru) 19 (fallthru) 20 (fallthru)
  i_127 = i_2 + 1;
  # SUCC: 22 (fallthru)

  # BLOCK 22
  # PRED: 7 (fallthru) 21 (fallthru)
  # i_2 = PHI <i_92(7), i_127(21)>
  if (i_2 <= 23)
    goto <bb 8>;
  else
    goto <bb 23>;
  # SUCC: 8 (true) 23 (false)

  # BLOCK 23
  # PRED: 22 (false)
  display_9(D)->positions[24].x = 300;
  display_9(D)->positions[24].y = 480;
  display_9(D)->positions[25].x = 568;
  display_9(D)->positions[25].y = 140;
  display_9(D)->positions[26].x = 300;
  display_9(D)->positions[26].y = 220;
  display_9(D)->positions[27].x = 568;
  display_9(D)->positions[27].y = 590;
  D.6620_128 = display_9(D)->window_height;
  D.6621_129 = display_9(D)->window_width;
  D.6622_130 = SDL_SetVideoMode (D.6621_129, D.6620_128, 32, 1073741825);
  display_9(D)->screen = D.6622_130;
  D.6623_131 = display_9(D)->screen;
  if (D.6623_131 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 (true) 25 (false)

  # BLOCK 24
  # PRED: 23 (true)
  D.6626_132 = SDL_GetError ();
  D.6627_133 = (const char * restrict) &"Impossible de charger le mode vidéo : %s\n"[0];
  stderr.53_134 = stderr;
  stderr.54_135 = (struct FILE * restrict) stderr.53_134;
  fprintf (stderr.54_135, D.6627_133, D.6626_132);
  free (temp_path_10);
  free (temp_name_83);
  exit (1);
  # SUCC:

  # BLOCK 25
  # PRED: 23 (false)
  SDL_WM_SetCaption ("Backgammon", 0B);
  D.6630_136 = TTF_Init ();
  if (D.6630_136 == -1)
    goto <bb 26>;
  else
    goto <bb 27>;
  # SUCC: 26 (true) 27 (false)

  # BLOCK 26
  # PRED: 25 (true)
  D.6633_137 = SDL_GetError ();
  D.6634_138 = (const char * restrict) &"Erreur d\'initialisation de TTF_Init : %s\n"[0];
  stderr.55_139 = stderr;
  stderr.56_140 = (struct FILE * restrict) stderr.55_139;
  fprintf (stderr.56_140, D.6634_138, D.6633_137);
  free (temp_path_10);
  free (temp_name_83);
  exit (1);
  # SUCC:

  # BLOCK 27
  # PRED: 25 (false)
  D.6637_141 = display_9(D)->font_path;
  D.6638_142 = (const char * restrict) D.6637_141;
  strcpy (temp_path_10, D.6638_142);
  D.6639_143 = (const char * restrict) &"comic.ttf"[0];
  D.6640_144 = __builtin_strlen (temp_path_10);
  D.6641_145 = temp_path_10 + D.6640_144;
  __builtin_memcpy (D.6641_145, D.6639_143, 10);
  D.6642_146 = TTF_OpenFont (temp_path_10, 22);
  display_9(D)->font = D.6642_146;
  D.6643_147 = malloc (12);
  game_148(D)->player1_name = D.6643_147;
  D.6644_149 = malloc (12);
  game_148(D)->player2_name = D.6644_149;
  game_148(D)->player1_checker = 0;
  game_148(D)->player2_checker = 1;
  game_148(D)->withDouble = 1;
  game_148(D)->scoreLimit = 5;
  free (temp_path_10);
  free (temp_name_83);
  return;
  # SUCC: EXIT

}


Partition 2: size 4 align 4
	temp_name_8(D), offset 0
Partition 1: size 4 align 4
	temp_path_7(D), offset 0
Partition 0: size 4 align 4
	i_1, offset 0

;; Generating RTL for gimple basic block 2

;; D.6484_3 = SDL_Init (32);

(insn 5 4 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 32 [0x20])) src/gui.c:22 -1
     (nil))

(call_insn 6 5 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_Init") [flags 0x41]  <function_decl 0x407f0700 SDL_Init>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:22 -1
     (nil)
    (nil))

(insn 7 6 0 (set (reg:SI 59 [ D.6484 ])
        (reg:SI 0 ax)) src/gui.c:22 -1
     (nil))

;; if (D.6484_3 == -1)

(insn 8 7 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.6484 ])
            (const_int -1 [0xffffffffffffffff]))) src/gui.c:22 -1
     (nil))

(jump_insn 9 8 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:22 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; stderr.50_4 = stderr;

(insn 11 10 0 (set (reg/f:SI 60 [ stderr.50 ])
        (mem/f/c/i:SI (symbol_ref:SI ("stderr") [flags 0x40]  <var_decl 0x40711120 stderr>) [0 stderr+0 S4 A32])) src/gui.c:24 -1
     (nil))

;; stderr.51_5 = (struct FILE * restrict) stderr.50_4;

(insn 12 11 0 (set (reg/f:SI 61 [ stderr.51 ])
        (reg/f:SI 60 [ stderr.50 ])) src/gui.c:24 -1
     (nil))

;; D.6489_6 = (const char * restrict) &"Erreur d\'initialisation de la SDL"[0];

(insn 13 12 0 (set (reg/f:SI 62 [ D.6489 ])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x408fd6c0 *.LC0>)) src/gui.c:24 -1
     (nil))

;; __builtin_fwrite (D.6489_6, 1, 33, stderr.51_5);

(insn 14 13 15 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 61 [ stderr.51 ])) src/gui.c:24 -1
     (nil))

(insn 15 14 16 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (const_int 33 [0x21])) src/gui.c:24 -1
     (nil))

(insn 16 15 17 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:24 -1
     (nil))

(insn 17 16 18 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 62 [ D.6489 ])) src/gui.c:24 -1
     (nil))

(call_insn 18 17 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fwrite") [flags 0x41]  <function_decl 0x406b1980 __builtin_fwrite>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:24 -1
     (nil)
    (nil))

;; free (temp_path_7(D));

(insn 19 18 20 (set (reg/f:SI 196)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:25 -1
     (nil))

(insn 20 19 21 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 196)) src/gui.c:25 -1
     (nil))

(call_insn 21 20 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:25 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; free (temp_name_8(D));

(insn 22 21 23 (set (reg/f:SI 197)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_name+0 S4 A32])) src/gui.c:26 -1
     (nil))

(insn 23 22 24 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 197)) src/gui.c:26 -1
     (nil))

(call_insn 24 23 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:26 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; exit (1);

(insn 25 24 26 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:27 -1
     (nil))

(call_insn 26 25 27 (call (mem:QI (symbol_ref:SI ("exit") [flags 0x41]  <function_decl 0x406bd980 exit>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:27 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))

(barrier 27 26 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 28 27 29 2 "" [0 uses])

(note 29 28 0 NOTE_INSN_BASIC_BLOCK)

;; display_9(D)->img_path = "../ressources/pictures/";

(insn 30 29 31 (set (reg/f:SI 198)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:31 -1
     (nil))

(insn 31 30 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 198)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x408fd720 *.LC1>)) src/gui.c:31 -1
     (nil))

;; display_9(D)->font_path = "../ressources/fonts/";

(insn 32 31 33 (set (reg/f:SI 199)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:34 -1
     (nil))

(insn 33 32 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 199)
                (const_int 116 [0x74])) [0 display_9(D)->font_path+0 S4 A32])
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x408fd780 *.LC2>)) src/gui.c:34 -1
     (nil))

;; temp_path_10 = malloc (100);

(insn 34 33 35 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 100 [0x64])) src/gui.c:35 -1
     (nil))

(call_insn 35 34 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:35 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 36 35 37 (set (reg/f:SI 200)
        (reg:SI 0 ax)) src/gui.c:35 -1
     (expr_list:REG_NOALIAS (reg/f:SI 200)
        (nil)))

(insn 37 36 0 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])
        (reg/f:SI 200)) src/gui.c:35 -1
     (nil))

;; D.6490_11 = display_9(D)->img_path;

(insn 38 37 39 (set (reg/f:SI 201)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:38 -1
     (nil))

(insn 39 38 0 (set (reg/f:SI 63 [ D.6490 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 201)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:38 -1
     (nil))

;; D.6491_12 = (const char * restrict) D.6490_11;

(insn 40 39 0 (set (reg/f:SI 64 [ D.6491 ])
        (reg/f:SI 63 [ D.6490 ])) src/gui.c:38 -1
     (nil))

;; strcpy (temp_path_10, D.6491_12);

(insn 41 40 42 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 64 [ D.6491 ])) src/gui.c:38 -1
     (nil))

(insn 42 41 43 (set (reg/f:SI 202)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:38 -1
     (nil))

(insn 43 42 44 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 202)) src/gui.c:38 -1
     (nil))

(call_insn 44 43 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:38 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6492_13 = (const char * restrict) &"icon.bmp"[0];

(insn 45 44 0 (set (reg/f:SI 65 [ D.6492 ])
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x408fd7e0 *.LC3>)) src/gui.c:39 -1
     (nil))

;; D.6493_14 = __builtin_strlen (temp_path_10);

(insn 52 45 46 (set (reg:SI 203)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:39 -1
     (nil))

(insn 46 52 47 (set (reg:SI 207)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:39 -1
     (nil))

(insn 47 46 48 (set (reg:SI 206)
        (reg:SI 203)) src/gui.c:39 -1
     (nil))

(insn 48 47 49 (set (reg:QI 208)
        (const_int 0 [0])) src/gui.c:39 -1
     (nil))

(insn 49 48 50 (parallel [
            (set (reg:SI 204)
                (unspec:SI [
                        (mem:BLK (reg:SI 206) [0 A8])
                        (reg:QI 208)
                        (const_int 1 [0x1])
                        (reg:SI 207)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 206))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:39 -1
     (nil))

(insn 50 49 51 (set (reg:SI 205)
        (not:SI (reg:SI 204))) src/gui.c:39 -1
     (nil))

(insn 51 50 0 (parallel [
            (set (reg:SI 66 [ D.6493 ])
                (plus:SI (reg:SI 205)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:39 -1
     (nil))

;; D.6494_15 = temp_path_10 + D.6493_14;

(insn 53 51 0 (parallel [
            (set (reg/f:SI 67 [ D.6494 ])
                (plus:SI (reg:SI 66 [ D.6493 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:39 -1
     (nil))

;; __builtin_memcpy (D.6494_15, D.6492_13, 9);

(insn 54 53 55 (set (reg:SI 209)
        (mem:SI (reg/f:SI 65 [ D.6492 ]) [0 S4 A8])) src/gui.c:39 -1
     (nil))

(insn 55 54 56 (set (mem:SI (reg/f:SI 67 [ D.6494 ]) [0 S4 A8])
        (reg:SI 209)) src/gui.c:39 -1
     (nil))

(insn 56 55 57 (set (reg:SI 210)
        (mem:SI (plus:SI (reg/f:SI 65 [ D.6492 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:39 -1
     (nil))

(insn 57 56 58 (set (mem:SI (plus:SI (reg/f:SI 67 [ D.6494 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 210)) src/gui.c:39 -1
     (nil))

(insn 58 57 59 (set (reg:QI 211)
        (mem:QI (plus:SI (reg/f:SI 65 [ D.6492 ])
                (const_int 8 [0x8])) [0 S1 A8])) src/gui.c:39 -1
     (nil))

(insn 59 58 0 (set (mem:QI (plus:SI (reg/f:SI 67 [ D.6494 ])
                (const_int 8 [0x8])) [0 S1 A8])
        (reg:QI 211)) src/gui.c:39 -1
     (nil))

;; D.6495_16 = IMG_Load (temp_path_10);

(insn 60 59 61 (set (reg/f:SI 212)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:40 -1
     (nil))

(insn 61 60 62 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 212)) src/gui.c:40 -1
     (nil))

(call_insn 62 61 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:40 -1
     (nil)
    (nil))

(insn 63 62 0 (set (reg/f:SI 68 [ D.6495 ])
        (reg:SI 0 ax)) src/gui.c:40 -1
     (nil))

;; SDL_WM_SetIcon (D.6495_16, 0B);

(insn 64 63 65 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:40 -1
     (nil))

(insn 65 64 66 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 68 [ D.6495 ])) src/gui.c:40 -1
     (nil))

(call_insn 66 65 0 (call (mem:QI (symbol_ref:SI ("SDL_WM_SetIcon") [flags 0x41]  <function_decl 0x407d1f00 SDL_WM_SetIcon>) [0 S1 A8])
        (const_int 8 [0x8])) src/gui.c:40 -1
     (nil)
    (nil))

;; D.6496_17 = display_9(D)->img_path;

(insn 67 66 68 (set (reg/f:SI 213)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:43 -1
     (nil))

(insn 68 67 0 (set (reg/f:SI 69 [ D.6496 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 213)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:43 -1
     (nil))

;; D.6497_18 = (const char * restrict) D.6496_17;

(insn 69 68 0 (set (reg/f:SI 70 [ D.6497 ])
        (reg/f:SI 69 [ D.6496 ])) src/gui.c:43 -1
     (nil))

;; strcpy (temp_path_10, D.6497_18);

(insn 70 69 71 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 70 [ D.6497 ])) src/gui.c:43 -1
     (nil))

(insn 71 70 72 (set (reg/f:SI 214)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:43 -1
     (nil))

(insn 72 71 73 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 214)) src/gui.c:43 -1
     (nil))

(call_insn 73 72 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:43 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6498_19 = (const char * restrict) &"background.png"[0];

(insn 74 73 0 (set (reg/f:SI 71 [ D.6498 ])
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x408fd840 *.LC4>)) src/gui.c:44 -1
     (nil))

;; D.6499_20 = __builtin_strlen (temp_path_10);

(insn 81 74 75 (set (reg:SI 215)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:44 -1
     (nil))

(insn 75 81 76 (set (reg:SI 219)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:44 -1
     (nil))

(insn 76 75 77 (set (reg:SI 218)
        (reg:SI 215)) src/gui.c:44 -1
     (nil))

(insn 77 76 78 (set (reg:QI 220)
        (const_int 0 [0])) src/gui.c:44 -1
     (nil))

(insn 78 77 79 (parallel [
            (set (reg:SI 216)
                (unspec:SI [
                        (mem:BLK (reg:SI 218) [0 A8])
                        (reg:QI 220)
                        (const_int 1 [0x1])
                        (reg:SI 219)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 218))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:44 -1
     (nil))

(insn 79 78 80 (set (reg:SI 217)
        (not:SI (reg:SI 216))) src/gui.c:44 -1
     (nil))

(insn 80 79 0 (parallel [
            (set (reg:SI 72 [ D.6499 ])
                (plus:SI (reg:SI 217)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:44 -1
     (nil))

;; D.6500_21 = temp_path_10 + D.6499_20;

(insn 82 80 0 (parallel [
            (set (reg/f:SI 73 [ D.6500 ])
                (plus:SI (reg:SI 72 [ D.6499 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:44 -1
     (nil))

;; __builtin_memcpy (D.6500_21, D.6498_19, 15);

(insn 83 82 84 (set (reg:SI 221)
        (mem:SI (reg/f:SI 71 [ D.6498 ]) [0 S4 A8])) src/gui.c:44 -1
     (nil))

(insn 84 83 85 (set (mem:SI (reg/f:SI 73 [ D.6500 ]) [0 S4 A8])
        (reg:SI 221)) src/gui.c:44 -1
     (nil))

(insn 85 84 86 (set (reg:SI 222)
        (mem:SI (plus:SI (reg/f:SI 71 [ D.6498 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:44 -1
     (nil))

(insn 86 85 87 (set (mem:SI (plus:SI (reg/f:SI 73 [ D.6500 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 222)) src/gui.c:44 -1
     (nil))

(insn 87 86 88 (set (reg:SI 223)
        (mem:SI (plus:SI (reg/f:SI 71 [ D.6498 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:44 -1
     (nil))

(insn 88 87 89 (set (mem:SI (plus:SI (reg/f:SI 73 [ D.6500 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 223)) src/gui.c:44 -1
     (nil))

(insn 89 88 90 (set (reg:HI 224)
        (mem:HI (plus:SI (reg/f:SI 71 [ D.6498 ])
                (const_int 12 [0xc])) [0 S2 A8])) src/gui.c:44 -1
     (nil))

(insn 90 89 91 (set (mem:HI (plus:SI (reg/f:SI 73 [ D.6500 ])
                (const_int 12 [0xc])) [0 S2 A8])
        (reg:HI 224)) src/gui.c:44 -1
     (nil))

(insn 91 90 92 (set (reg:QI 225)
        (mem:QI (plus:SI (reg/f:SI 71 [ D.6498 ])
                (const_int 14 [0xe])) [0 S1 A8])) src/gui.c:44 -1
     (nil))

(insn 92 91 0 (set (mem:QI (plus:SI (reg/f:SI 73 [ D.6500 ])
                (const_int 14 [0xe])) [0 S1 A8])
        (reg:QI 225)) src/gui.c:44 -1
     (nil))

;; D.6501_22 = IMG_Load (temp_path_10);

(insn 93 92 94 (set (reg/f:SI 226)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:45 -1
     (nil))

(insn 94 93 95 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 226)) src/gui.c:45 -1
     (nil))

(call_insn 95 94 96 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:45 -1
     (nil)
    (nil))

(insn 96 95 0 (set (reg/f:SI 74 [ D.6501 ])
        (reg:SI 0 ax)) src/gui.c:45 -1
     (nil))

;; display_9(D)->background = D.6501_22;

(insn 97 96 98 (set (reg/f:SI 227)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:45 -1
     (nil))

(insn 98 97 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 227)
                (const_int 12 [0xc])) [0 display_9(D)->background+0 S4 A32])
        (reg/f:SI 74 [ D.6501 ])) src/gui.c:45 -1
     (nil))

;; display_9(D)->background_position.x = 0;

(insn 99 98 100 (set (reg/f:SI 228)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:46 -1
     (nil))

(insn 100 99 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 228)
                (const_int 16 [0x10])) [0 display_9(D)->background_position.x+0 S2 A32])
        (const_int 0 [0])) src/gui.c:46 -1
     (nil))

;; display_9(D)->background_position.y = 0;

(insn 101 100 102 (set (reg/f:SI 229)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:47 -1
     (nil))

(insn 102 101 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 229)
                (const_int 18 [0x12])) [0 display_9(D)->background_position.y+0 S2 A16])
        (const_int 0 [0])) src/gui.c:47 -1
     (nil))

;; D.6502_23 = display_9(D)->img_path;

(insn 103 102 104 (set (reg/f:SI 230)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:50 -1
     (nil))

(insn 104 103 0 (set (reg/f:SI 75 [ D.6502 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 230)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:50 -1
     (nil))

;; D.6503_24 = (const char * restrict) D.6502_23;

(insn 105 104 0 (set (reg/f:SI 76 [ D.6503 ])
        (reg/f:SI 75 [ D.6502 ])) src/gui.c:50 -1
     (nil))

;; strcpy (temp_path_10, D.6503_24);

(insn 106 105 107 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 76 [ D.6503 ])) src/gui.c:50 -1
     (nil))

(insn 107 106 108 (set (reg/f:SI 231)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:50 -1
     (nil))

(insn 108 107 109 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 231)) src/gui.c:50 -1
     (nil))

(call_insn 109 108 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:50 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6504_25 = (const char * restrict) &"gameBoard.png"[0];

(insn 110 109 0 (set (reg/f:SI 77 [ D.6504 ])
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x408fd8a0 *.LC5>)) src/gui.c:51 -1
     (nil))

;; D.6505_26 = __builtin_strlen (temp_path_10);

(insn 117 110 111 (set (reg:SI 232)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:51 -1
     (nil))

(insn 111 117 112 (set (reg:SI 236)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:51 -1
     (nil))

(insn 112 111 113 (set (reg:SI 235)
        (reg:SI 232)) src/gui.c:51 -1
     (nil))

(insn 113 112 114 (set (reg:QI 237)
        (const_int 0 [0])) src/gui.c:51 -1
     (nil))

(insn 114 113 115 (parallel [
            (set (reg:SI 233)
                (unspec:SI [
                        (mem:BLK (reg:SI 235) [0 A8])
                        (reg:QI 237)
                        (const_int 1 [0x1])
                        (reg:SI 236)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 235))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:51 -1
     (nil))

(insn 115 114 116 (set (reg:SI 234)
        (not:SI (reg:SI 233))) src/gui.c:51 -1
     (nil))

(insn 116 115 0 (parallel [
            (set (reg:SI 78 [ D.6505 ])
                (plus:SI (reg:SI 234)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:51 -1
     (nil))

;; D.6506_27 = temp_path_10 + D.6505_26;

(insn 118 116 0 (parallel [
            (set (reg/f:SI 79 [ D.6506 ])
                (plus:SI (reg:SI 78 [ D.6505 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:51 -1
     (nil))

;; __builtin_memcpy (D.6506_27, D.6504_25, 14);

(insn 119 118 120 (set (reg:SI 238)
        (mem:SI (reg/f:SI 77 [ D.6504 ]) [0 S4 A8])) src/gui.c:51 -1
     (nil))

(insn 120 119 121 (set (mem:SI (reg/f:SI 79 [ D.6506 ]) [0 S4 A8])
        (reg:SI 238)) src/gui.c:51 -1
     (nil))

(insn 121 120 122 (set (reg:SI 239)
        (mem:SI (plus:SI (reg/f:SI 77 [ D.6504 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:51 -1
     (nil))

(insn 122 121 123 (set (mem:SI (plus:SI (reg/f:SI 79 [ D.6506 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 239)) src/gui.c:51 -1
     (nil))

(insn 123 122 124 (set (reg:SI 240)
        (mem:SI (plus:SI (reg/f:SI 77 [ D.6504 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:51 -1
     (nil))

(insn 124 123 125 (set (mem:SI (plus:SI (reg/f:SI 79 [ D.6506 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 240)) src/gui.c:51 -1
     (nil))

(insn 125 124 126 (set (reg:HI 241)
        (mem:HI (plus:SI (reg/f:SI 77 [ D.6504 ])
                (const_int 12 [0xc])) [0 S2 A8])) src/gui.c:51 -1
     (nil))

(insn 126 125 0 (set (mem:HI (plus:SI (reg/f:SI 79 [ D.6506 ])
                (const_int 12 [0xc])) [0 S2 A8])
        (reg:HI 241)) src/gui.c:51 -1
     (nil))

;; D.6507_28 = IMG_Load (temp_path_10);

(insn 127 126 128 (set (reg/f:SI 242)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:52 -1
     (nil))

(insn 128 127 129 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 242)) src/gui.c:52 -1
     (nil))

(call_insn 129 128 130 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:52 -1
     (nil)
    (nil))

(insn 130 129 0 (set (reg/f:SI 80 [ D.6507 ])
        (reg:SI 0 ax)) src/gui.c:52 -1
     (nil))

;; display_9(D)->gameBoard = D.6507_28;

(insn 131 130 132 (set (reg/f:SI 243)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:52 -1
     (nil))

(insn 132 131 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 243)
                (const_int 24 [0x18])) [0 display_9(D)->gameBoard+0 S4 A32])
        (reg/f:SI 80 [ D.6507 ])) src/gui.c:52 -1
     (nil))

;; display_9(D)->gameBoard_position.x = 0;

(insn 133 132 134 (set (reg/f:SI 244)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:53 -1
     (nil))

(insn 134 133 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 244)
                (const_int 28 [0x1c])) [0 display_9(D)->gameBoard_position.x+0 S2 A32])
        (const_int 0 [0])) src/gui.c:53 -1
     (nil))

;; display_9(D)->gameBoard_position.y = 140;

(insn 135 134 136 (set (reg/f:SI 245)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:54 -1
     (nil))

(insn 136 135 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 245)
                (const_int 30 [0x1e])) [0 display_9(D)->gameBoard_position.y+0 S2 A16])
        (const_int 140 [0x8c])) src/gui.c:54 -1
     (nil))

;; D.6508_29 = display_9(D)->img_path;

(insn 137 136 138 (set (reg/f:SI 246)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:57 -1
     (nil))

(insn 138 137 0 (set (reg/f:SI 81 [ D.6508 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 246)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:57 -1
     (nil))

;; D.6509_30 = (const char * restrict) D.6508_29;

(insn 139 138 0 (set (reg/f:SI 82 [ D.6509 ])
        (reg/f:SI 81 [ D.6508 ])) src/gui.c:57 -1
     (nil))

;; strcpy (temp_path_10, D.6509_30);

(insn 140 139 141 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 82 [ D.6509 ])) src/gui.c:57 -1
     (nil))

(insn 141 140 142 (set (reg/f:SI 247)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:57 -1
     (nil))

(insn 142 141 143 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 247)) src/gui.c:57 -1
     (nil))

(call_insn 143 142 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:57 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6510_31 = (const char * restrict) &"white_checker.png"[0];

(insn 144 143 0 (set (reg/f:SI 83 [ D.6510 ])
        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x408fd900 *.LC6>)) src/gui.c:58 -1
     (nil))

;; D.6511_32 = __builtin_strlen (temp_path_10);

(insn 151 144 145 (set (reg:SI 248)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:58 -1
     (nil))

(insn 145 151 146 (set (reg:SI 252)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:58 -1
     (nil))

(insn 146 145 147 (set (reg:SI 251)
        (reg:SI 248)) src/gui.c:58 -1
     (nil))

(insn 147 146 148 (set (reg:QI 253)
        (const_int 0 [0])) src/gui.c:58 -1
     (nil))

(insn 148 147 149 (parallel [
            (set (reg:SI 249)
                (unspec:SI [
                        (mem:BLK (reg:SI 251) [0 A8])
                        (reg:QI 253)
                        (const_int 1 [0x1])
                        (reg:SI 252)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 251))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:58 -1
     (nil))

(insn 149 148 150 (set (reg:SI 250)
        (not:SI (reg:SI 249))) src/gui.c:58 -1
     (nil))

(insn 150 149 0 (parallel [
            (set (reg:SI 84 [ D.6511 ])
                (plus:SI (reg:SI 250)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:58 -1
     (nil))

;; D.6512_33 = temp_path_10 + D.6511_32;

(insn 152 150 0 (parallel [
            (set (reg/f:SI 85 [ D.6512 ])
                (plus:SI (reg:SI 84 [ D.6511 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:58 -1
     (nil))

;; __builtin_memcpy (D.6512_33, D.6510_31, 18);

(insn 153 152 154 (set (reg:SI 254)
        (mem:SI (reg/f:SI 83 [ D.6510 ]) [0 S4 A8])) src/gui.c:58 -1
     (nil))

(insn 154 153 155 (set (mem:SI (reg/f:SI 85 [ D.6512 ]) [0 S4 A8])
        (reg:SI 254)) src/gui.c:58 -1
     (nil))

(insn 155 154 156 (set (reg:SI 255)
        (mem:SI (plus:SI (reg/f:SI 83 [ D.6510 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:58 -1
     (nil))

(insn 156 155 157 (set (mem:SI (plus:SI (reg/f:SI 85 [ D.6512 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 255)) src/gui.c:58 -1
     (nil))

(insn 157 156 158 (set (reg:SI 256)
        (mem:SI (plus:SI (reg/f:SI 83 [ D.6510 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:58 -1
     (nil))

(insn 158 157 159 (set (mem:SI (plus:SI (reg/f:SI 85 [ D.6512 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 256)) src/gui.c:58 -1
     (nil))

(insn 159 158 160 (set (reg:SI 257)
        (mem:SI (plus:SI (reg/f:SI 83 [ D.6510 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:58 -1
     (nil))

(insn 160 159 161 (set (mem:SI (plus:SI (reg/f:SI 85 [ D.6512 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 257)) src/gui.c:58 -1
     (nil))

(insn 161 160 162 (set (reg:HI 258)
        (mem:HI (plus:SI (reg/f:SI 83 [ D.6510 ])
                (const_int 16 [0x10])) [0 S2 A8])) src/gui.c:58 -1
     (nil))

(insn 162 161 0 (set (mem:HI (plus:SI (reg/f:SI 85 [ D.6512 ])
                (const_int 16 [0x10])) [0 S2 A8])
        (reg:HI 258)) src/gui.c:58 -1
     (nil))

;; D.6513_34 = IMG_Load (temp_path_10);

(insn 163 162 164 (set (reg/f:SI 259)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:59 -1
     (nil))

(insn 164 163 165 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 259)) src/gui.c:59 -1
     (nil))

(call_insn 165 164 166 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:59 -1
     (nil)
    (nil))

(insn 166 165 0 (set (reg/f:SI 86 [ D.6513 ])
        (reg:SI 0 ax)) src/gui.c:59 -1
     (nil))

;; display_9(D)->white_checker = D.6513_34;

(insn 167 166 168 (set (reg/f:SI 260)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:59 -1
     (nil))

(insn 168 167 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 260)
                (const_int 48 [0x30])) [0 display_9(D)->white_checker+0 S4 A32])
        (reg/f:SI 86 [ D.6513 ])) src/gui.c:59 -1
     (nil))

;; D.6514_35 = display_9(D)->img_path;

(insn 169 168 170 (set (reg/f:SI 261)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:62 -1
     (nil))

(insn 170 169 0 (set (reg/f:SI 87 [ D.6514 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 261)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:62 -1
     (nil))

;; D.6515_36 = (const char * restrict) D.6514_35;

(insn 171 170 0 (set (reg/f:SI 88 [ D.6515 ])
        (reg/f:SI 87 [ D.6514 ])) src/gui.c:62 -1
     (nil))

;; strcpy (temp_path_10, D.6515_36);

(insn 172 171 173 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 88 [ D.6515 ])) src/gui.c:62 -1
     (nil))

(insn 173 172 174 (set (reg/f:SI 262)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:62 -1
     (nil))

(insn 174 173 175 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 262)) src/gui.c:62 -1
     (nil))

(call_insn 175 174 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:62 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6516_37 = (const char * restrict) &"green_checker.png"[0];

(insn 176 175 0 (set (reg/f:SI 89 [ D.6516 ])
        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x408fd960 *.LC7>)) src/gui.c:63 -1
     (nil))

;; D.6517_38 = __builtin_strlen (temp_path_10);

(insn 183 176 177 (set (reg:SI 263)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:63 -1
     (nil))

(insn 177 183 178 (set (reg:SI 267)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:63 -1
     (nil))

(insn 178 177 179 (set (reg:SI 266)
        (reg:SI 263)) src/gui.c:63 -1
     (nil))

(insn 179 178 180 (set (reg:QI 268)
        (const_int 0 [0])) src/gui.c:63 -1
     (nil))

(insn 180 179 181 (parallel [
            (set (reg:SI 264)
                (unspec:SI [
                        (mem:BLK (reg:SI 266) [0 A8])
                        (reg:QI 268)
                        (const_int 1 [0x1])
                        (reg:SI 267)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 266))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:63 -1
     (nil))

(insn 181 180 182 (set (reg:SI 265)
        (not:SI (reg:SI 264))) src/gui.c:63 -1
     (nil))

(insn 182 181 0 (parallel [
            (set (reg:SI 90 [ D.6517 ])
                (plus:SI (reg:SI 265)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:63 -1
     (nil))

;; D.6518_39 = temp_path_10 + D.6517_38;

(insn 184 182 0 (parallel [
            (set (reg/f:SI 91 [ D.6518 ])
                (plus:SI (reg:SI 90 [ D.6517 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:63 -1
     (nil))

;; __builtin_memcpy (D.6518_39, D.6516_37, 18);

(insn 185 184 186 (set (reg:SI 269)
        (mem:SI (reg/f:SI 89 [ D.6516 ]) [0 S4 A8])) src/gui.c:63 -1
     (nil))

(insn 186 185 187 (set (mem:SI (reg/f:SI 91 [ D.6518 ]) [0 S4 A8])
        (reg:SI 269)) src/gui.c:63 -1
     (nil))

(insn 187 186 188 (set (reg:SI 270)
        (mem:SI (plus:SI (reg/f:SI 89 [ D.6516 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:63 -1
     (nil))

(insn 188 187 189 (set (mem:SI (plus:SI (reg/f:SI 91 [ D.6518 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 270)) src/gui.c:63 -1
     (nil))

(insn 189 188 190 (set (reg:SI 271)
        (mem:SI (plus:SI (reg/f:SI 89 [ D.6516 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:63 -1
     (nil))

(insn 190 189 191 (set (mem:SI (plus:SI (reg/f:SI 91 [ D.6518 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 271)) src/gui.c:63 -1
     (nil))

(insn 191 190 192 (set (reg:SI 272)
        (mem:SI (plus:SI (reg/f:SI 89 [ D.6516 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:63 -1
     (nil))

(insn 192 191 193 (set (mem:SI (plus:SI (reg/f:SI 91 [ D.6518 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 272)) src/gui.c:63 -1
     (nil))

(insn 193 192 194 (set (reg:HI 273)
        (mem:HI (plus:SI (reg/f:SI 89 [ D.6516 ])
                (const_int 16 [0x10])) [0 S2 A8])) src/gui.c:63 -1
     (nil))

(insn 194 193 0 (set (mem:HI (plus:SI (reg/f:SI 91 [ D.6518 ])
                (const_int 16 [0x10])) [0 S2 A8])
        (reg:HI 273)) src/gui.c:63 -1
     (nil))

;; D.6519_40 = IMG_Load (temp_path_10);

(insn 195 194 196 (set (reg/f:SI 274)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:64 -1
     (nil))

(insn 196 195 197 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 274)) src/gui.c:64 -1
     (nil))

(call_insn 197 196 198 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:64 -1
     (nil)
    (nil))

(insn 198 197 0 (set (reg/f:SI 92 [ D.6519 ])
        (reg:SI 0 ax)) src/gui.c:64 -1
     (nil))

;; display_9(D)->green_checker = D.6519_40;

(insn 199 198 200 (set (reg/f:SI 275)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:64 -1
     (nil))

(insn 200 199 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 275)
                (const_int 44 [0x2c])) [0 display_9(D)->green_checker+0 S4 A32])
        (reg/f:SI 92 [ D.6519 ])) src/gui.c:64 -1
     (nil))

;; D.6520_41 = display_9(D)->img_path;

(insn 201 200 202 (set (reg/f:SI 276)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:67 -1
     (nil))

(insn 202 201 0 (set (reg/f:SI 93 [ D.6520 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 276)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:67 -1
     (nil))

;; D.6521_42 = (const char * restrict) D.6520_41;

(insn 203 202 0 (set (reg/f:SI 94 [ D.6521 ])
        (reg/f:SI 93 [ D.6520 ])) src/gui.c:67 -1
     (nil))

;; strcpy (temp_path_10, D.6521_42);

(insn 204 203 205 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 94 [ D.6521 ])) src/gui.c:67 -1
     (nil))

(insn 205 204 206 (set (reg/f:SI 277)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:67 -1
     (nil))

(insn 206 205 207 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 277)) src/gui.c:67 -1
     (nil))

(call_insn 207 206 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:67 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6522_43 = (const char * restrict) &"bar_white_checker.png"[0];

(insn 208 207 0 (set (reg/f:SI 95 [ D.6522 ])
        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x408fd9c0 *.LC8>)) src/gui.c:68 -1
     (nil))

;; D.6523_44 = __builtin_strlen (temp_path_10);

(insn 215 208 209 (set (reg:SI 278)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:68 -1
     (nil))

(insn 209 215 210 (set (reg:SI 282)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:68 -1
     (nil))

(insn 210 209 211 (set (reg:SI 281)
        (reg:SI 278)) src/gui.c:68 -1
     (nil))

(insn 211 210 212 (set (reg:QI 283)
        (const_int 0 [0])) src/gui.c:68 -1
     (nil))

(insn 212 211 213 (parallel [
            (set (reg:SI 279)
                (unspec:SI [
                        (mem:BLK (reg:SI 281) [0 A8])
                        (reg:QI 283)
                        (const_int 1 [0x1])
                        (reg:SI 282)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 281))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:68 -1
     (nil))

(insn 213 212 214 (set (reg:SI 280)
        (not:SI (reg:SI 279))) src/gui.c:68 -1
     (nil))

(insn 214 213 0 (parallel [
            (set (reg:SI 96 [ D.6523 ])
                (plus:SI (reg:SI 280)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:68 -1
     (nil))

;; D.6524_45 = temp_path_10 + D.6523_44;

(insn 216 214 0 (parallel [
            (set (reg/f:SI 97 [ D.6524 ])
                (plus:SI (reg:SI 96 [ D.6523 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:68 -1
     (nil))

;; __builtin_memcpy (D.6524_45, D.6522_43, 22);

(insn 217 216 218 (set (reg:SI 284)
        (mem:SI (reg/f:SI 95 [ D.6522 ]) [0 S4 A8])) src/gui.c:68 -1
     (nil))

(insn 218 217 219 (set (mem:SI (reg/f:SI 97 [ D.6524 ]) [0 S4 A8])
        (reg:SI 284)) src/gui.c:68 -1
     (nil))

(insn 219 218 220 (set (reg:SI 285)
        (mem:SI (plus:SI (reg/f:SI 95 [ D.6522 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:68 -1
     (nil))

(insn 220 219 221 (set (mem:SI (plus:SI (reg/f:SI 97 [ D.6524 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 285)) src/gui.c:68 -1
     (nil))

(insn 221 220 222 (set (reg:SI 286)
        (mem:SI (plus:SI (reg/f:SI 95 [ D.6522 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:68 -1
     (nil))

(insn 222 221 223 (set (mem:SI (plus:SI (reg/f:SI 97 [ D.6524 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 286)) src/gui.c:68 -1
     (nil))

(insn 223 222 224 (set (reg:SI 287)
        (mem:SI (plus:SI (reg/f:SI 95 [ D.6522 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:68 -1
     (nil))

(insn 224 223 225 (set (mem:SI (plus:SI (reg/f:SI 97 [ D.6524 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 287)) src/gui.c:68 -1
     (nil))

(insn 225 224 226 (set (reg:SI 288)
        (mem:SI (plus:SI (reg/f:SI 95 [ D.6522 ])
                (const_int 16 [0x10])) [0 S4 A8])) src/gui.c:68 -1
     (nil))

(insn 226 225 227 (set (mem:SI (plus:SI (reg/f:SI 97 [ D.6524 ])
                (const_int 16 [0x10])) [0 S4 A8])
        (reg:SI 288)) src/gui.c:68 -1
     (nil))

(insn 227 226 228 (set (reg:HI 289)
        (mem:HI (plus:SI (reg/f:SI 95 [ D.6522 ])
                (const_int 20 [0x14])) [0 S2 A8])) src/gui.c:68 -1
     (nil))

(insn 228 227 0 (set (mem:HI (plus:SI (reg/f:SI 97 [ D.6524 ])
                (const_int 20 [0x14])) [0 S2 A8])
        (reg:HI 289)) src/gui.c:68 -1
     (nil))

;; D.6525_46 = IMG_Load (temp_path_10);

(insn 229 228 230 (set (reg/f:SI 290)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:69 -1
     (nil))

(insn 230 229 231 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 290)) src/gui.c:69 -1
     (nil))

(call_insn 231 230 232 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:69 -1
     (nil)
    (nil))

(insn 232 231 0 (set (reg/f:SI 98 [ D.6525 ])
        (reg:SI 0 ax)) src/gui.c:69 -1
     (nil))

;; display_9(D)->bar_white_checker = D.6525_46;

(insn 233 232 234 (set (reg/f:SI 291)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:69 -1
     (nil))

(insn 234 233 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 291)
                (const_int 56 [0x38])) [0 display_9(D)->bar_white_checker+0 S4 A32])
        (reg/f:SI 98 [ D.6525 ])) src/gui.c:69 -1
     (nil))

;; D.6526_47 = display_9(D)->img_path;

(insn 235 234 236 (set (reg/f:SI 292)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:72 -1
     (nil))

(insn 236 235 0 (set (reg/f:SI 99 [ D.6526 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 292)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:72 -1
     (nil))

;; D.6527_48 = (const char * restrict) D.6526_47;

(insn 237 236 0 (set (reg/f:SI 100 [ D.6527 ])
        (reg/f:SI 99 [ D.6526 ])) src/gui.c:72 -1
     (nil))

;; strcpy (temp_path_10, D.6527_48);

(insn 238 237 239 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 100 [ D.6527 ])) src/gui.c:72 -1
     (nil))

(insn 239 238 240 (set (reg/f:SI 293)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:72 -1
     (nil))

(insn 240 239 241 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 293)) src/gui.c:72 -1
     (nil))

(call_insn 241 240 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:72 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6528_49 = (const char * restrict) &"bar_green_checker.png"[0];

(insn 242 241 0 (set (reg/f:SI 101 [ D.6528 ])
        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x408fda20 *.LC9>)) src/gui.c:73 -1
     (nil))

;; D.6529_50 = __builtin_strlen (temp_path_10);

(insn 249 242 243 (set (reg:SI 294)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:73 -1
     (nil))

(insn 243 249 244 (set (reg:SI 298)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:73 -1
     (nil))

(insn 244 243 245 (set (reg:SI 297)
        (reg:SI 294)) src/gui.c:73 -1
     (nil))

(insn 245 244 246 (set (reg:QI 299)
        (const_int 0 [0])) src/gui.c:73 -1
     (nil))

(insn 246 245 247 (parallel [
            (set (reg:SI 295)
                (unspec:SI [
                        (mem:BLK (reg:SI 297) [0 A8])
                        (reg:QI 299)
                        (const_int 1 [0x1])
                        (reg:SI 298)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 297))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:73 -1
     (nil))

(insn 247 246 248 (set (reg:SI 296)
        (not:SI (reg:SI 295))) src/gui.c:73 -1
     (nil))

(insn 248 247 0 (parallel [
            (set (reg:SI 102 [ D.6529 ])
                (plus:SI (reg:SI 296)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:73 -1
     (nil))

;; D.6530_51 = temp_path_10 + D.6529_50;

(insn 250 248 0 (parallel [
            (set (reg/f:SI 103 [ D.6530 ])
                (plus:SI (reg:SI 102 [ D.6529 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:73 -1
     (nil))

;; __builtin_memcpy (D.6530_51, D.6528_49, 22);

(insn 251 250 252 (set (reg:SI 300)
        (mem:SI (reg/f:SI 101 [ D.6528 ]) [0 S4 A8])) src/gui.c:73 -1
     (nil))

(insn 252 251 253 (set (mem:SI (reg/f:SI 103 [ D.6530 ]) [0 S4 A8])
        (reg:SI 300)) src/gui.c:73 -1
     (nil))

(insn 253 252 254 (set (reg:SI 301)
        (mem:SI (plus:SI (reg/f:SI 101 [ D.6528 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:73 -1
     (nil))

(insn 254 253 255 (set (mem:SI (plus:SI (reg/f:SI 103 [ D.6530 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 301)) src/gui.c:73 -1
     (nil))

(insn 255 254 256 (set (reg:SI 302)
        (mem:SI (plus:SI (reg/f:SI 101 [ D.6528 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:73 -1
     (nil))

(insn 256 255 257 (set (mem:SI (plus:SI (reg/f:SI 103 [ D.6530 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 302)) src/gui.c:73 -1
     (nil))

(insn 257 256 258 (set (reg:SI 303)
        (mem:SI (plus:SI (reg/f:SI 101 [ D.6528 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:73 -1
     (nil))

(insn 258 257 259 (set (mem:SI (plus:SI (reg/f:SI 103 [ D.6530 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 303)) src/gui.c:73 -1
     (nil))

(insn 259 258 260 (set (reg:SI 304)
        (mem:SI (plus:SI (reg/f:SI 101 [ D.6528 ])
                (const_int 16 [0x10])) [0 S4 A8])) src/gui.c:73 -1
     (nil))

(insn 260 259 261 (set (mem:SI (plus:SI (reg/f:SI 103 [ D.6530 ])
                (const_int 16 [0x10])) [0 S4 A8])
        (reg:SI 304)) src/gui.c:73 -1
     (nil))

(insn 261 260 262 (set (reg:HI 305)
        (mem:HI (plus:SI (reg/f:SI 101 [ D.6528 ])
                (const_int 20 [0x14])) [0 S2 A8])) src/gui.c:73 -1
     (nil))

(insn 262 261 0 (set (mem:HI (plus:SI (reg/f:SI 103 [ D.6530 ])
                (const_int 20 [0x14])) [0 S2 A8])
        (reg:HI 305)) src/gui.c:73 -1
     (nil))

;; D.6531_52 = IMG_Load (temp_path_10);

(insn 263 262 264 (set (reg/f:SI 306)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:74 -1
     (nil))

(insn 264 263 265 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 306)) src/gui.c:74 -1
     (nil))

(call_insn 265 264 266 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:74 -1
     (nil)
    (nil))

(insn 266 265 0 (set (reg/f:SI 104 [ D.6531 ])
        (reg:SI 0 ax)) src/gui.c:74 -1
     (nil))

;; display_9(D)->bar_green_checker = D.6531_52;

(insn 267 266 268 (set (reg/f:SI 307)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:74 -1
     (nil))

(insn 268 267 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 307)
                (const_int 52 [0x34])) [0 display_9(D)->bar_green_checker+0 S4 A32])
        (reg/f:SI 104 [ D.6531 ])) src/gui.c:74 -1
     (nil))

;; D.6532_53 = display_9(D)->img_path;

(insn 269 268 270 (set (reg/f:SI 308)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:77 -1
     (nil))

(insn 270 269 0 (set (reg/f:SI 105 [ D.6532 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 308)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:77 -1
     (nil))

;; D.6533_54 = (const char * restrict) D.6532_53;

(insn 271 270 0 (set (reg/f:SI 106 [ D.6533 ])
        (reg/f:SI 105 [ D.6532 ])) src/gui.c:77 -1
     (nil))

;; strcpy (temp_path_10, D.6533_54);

(insn 272 271 273 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 106 [ D.6533 ])) src/gui.c:77 -1
     (nil))

(insn 273 272 274 (set (reg/f:SI 309)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:77 -1
     (nil))

(insn 274 273 275 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 309)) src/gui.c:77 -1
     (nil))

(call_insn 275 274 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:77 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6534_55 = (const char * restrict) &"selected_checker.png"[0];

(insn 276 275 0 (set (reg/f:SI 107 [ D.6534 ])
        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x408fda80 *.LC10>)) src/gui.c:78 -1
     (nil))

;; D.6535_56 = __builtin_strlen (temp_path_10);

(insn 283 276 277 (set (reg:SI 310)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:78 -1
     (nil))

(insn 277 283 278 (set (reg:SI 314)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:78 -1
     (nil))

(insn 278 277 279 (set (reg:SI 313)
        (reg:SI 310)) src/gui.c:78 -1
     (nil))

(insn 279 278 280 (set (reg:QI 315)
        (const_int 0 [0])) src/gui.c:78 -1
     (nil))

(insn 280 279 281 (parallel [
            (set (reg:SI 311)
                (unspec:SI [
                        (mem:BLK (reg:SI 313) [0 A8])
                        (reg:QI 315)
                        (const_int 1 [0x1])
                        (reg:SI 314)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 313))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:78 -1
     (nil))

(insn 281 280 282 (set (reg:SI 312)
        (not:SI (reg:SI 311))) src/gui.c:78 -1
     (nil))

(insn 282 281 0 (parallel [
            (set (reg:SI 108 [ D.6535 ])
                (plus:SI (reg:SI 312)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:78 -1
     (nil))

;; D.6536_57 = temp_path_10 + D.6535_56;

(insn 284 282 0 (parallel [
            (set (reg/f:SI 109 [ D.6536 ])
                (plus:SI (reg:SI 108 [ D.6535 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:78 -1
     (nil))

;; __builtin_memcpy (D.6536_57, D.6534_55, 21);

(insn 285 284 286 (set (reg:SI 316)
        (mem:SI (reg/f:SI 107 [ D.6534 ]) [0 S4 A8])) src/gui.c:78 -1
     (nil))

(insn 286 285 287 (set (mem:SI (reg/f:SI 109 [ D.6536 ]) [0 S4 A8])
        (reg:SI 316)) src/gui.c:78 -1
     (nil))

(insn 287 286 288 (set (reg:SI 317)
        (mem:SI (plus:SI (reg/f:SI 107 [ D.6534 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:78 -1
     (nil))

(insn 288 287 289 (set (mem:SI (plus:SI (reg/f:SI 109 [ D.6536 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 317)) src/gui.c:78 -1
     (nil))

(insn 289 288 290 (set (reg:SI 318)
        (mem:SI (plus:SI (reg/f:SI 107 [ D.6534 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:78 -1
     (nil))

(insn 290 289 291 (set (mem:SI (plus:SI (reg/f:SI 109 [ D.6536 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 318)) src/gui.c:78 -1
     (nil))

(insn 291 290 292 (set (reg:SI 319)
        (mem:SI (plus:SI (reg/f:SI 107 [ D.6534 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:78 -1
     (nil))

(insn 292 291 293 (set (mem:SI (plus:SI (reg/f:SI 109 [ D.6536 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 319)) src/gui.c:78 -1
     (nil))

(insn 293 292 294 (set (reg:SI 320)
        (mem:SI (plus:SI (reg/f:SI 107 [ D.6534 ])
                (const_int 16 [0x10])) [0 S4 A8])) src/gui.c:78 -1
     (nil))

(insn 294 293 295 (set (mem:SI (plus:SI (reg/f:SI 109 [ D.6536 ])
                (const_int 16 [0x10])) [0 S4 A8])
        (reg:SI 320)) src/gui.c:78 -1
     (nil))

(insn 295 294 296 (set (reg:QI 321)
        (mem:QI (plus:SI (reg/f:SI 107 [ D.6534 ])
                (const_int 20 [0x14])) [0 S1 A8])) src/gui.c:78 -1
     (nil))

(insn 296 295 0 (set (mem:QI (plus:SI (reg/f:SI 109 [ D.6536 ])
                (const_int 20 [0x14])) [0 S1 A8])
        (reg:QI 321)) src/gui.c:78 -1
     (nil))

;; D.6537_58 = IMG_Load (temp_path_10);

(insn 297 296 298 (set (reg/f:SI 322)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:79 -1
     (nil))

(insn 298 297 299 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 322)) src/gui.c:79 -1
     (nil))

(call_insn 299 298 300 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:79 -1
     (nil)
    (nil))

(insn 300 299 0 (set (reg/f:SI 110 [ D.6537 ])
        (reg:SI 0 ax)) src/gui.c:79 -1
     (nil))

;; display_9(D)->selected_checker = D.6537_58;

(insn 301 300 302 (set (reg/f:SI 323)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:79 -1
     (nil))

(insn 302 301 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 323)
                (const_int 60 [0x3c])) [0 display_9(D)->selected_checker+0 S4 A32])
        (reg/f:SI 110 [ D.6537 ])) src/gui.c:79 -1
     (nil))

;; D.6538_59 = display_9(D)->img_path;

(insn 303 302 304 (set (reg/f:SI 324)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:82 -1
     (nil))

(insn 304 303 0 (set (reg/f:SI 111 [ D.6538 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 324)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:82 -1
     (nil))

;; D.6539_60 = (const char * restrict) D.6538_59;

(insn 305 304 0 (set (reg/f:SI 112 [ D.6539 ])
        (reg/f:SI 111 [ D.6538 ])) src/gui.c:82 -1
     (nil))

;; strcpy (temp_path_10, D.6539_60);

(insn 306 305 307 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 112 [ D.6539 ])) src/gui.c:82 -1
     (nil))

(insn 307 306 308 (set (reg/f:SI 325)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:82 -1
     (nil))

(insn 308 307 309 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 325)) src/gui.c:82 -1
     (nil))

(call_insn 309 308 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:82 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6540_61 = (const char * restrict) &"flecheSelected1_12.png"[0];

(insn 310 309 0 (set (reg/f:SI 113 [ D.6540 ])
        (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x408fdae0 *.LC11>)) src/gui.c:83 -1
     (nil))

;; D.6541_62 = __builtin_strlen (temp_path_10);

(insn 317 310 311 (set (reg:SI 326)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:83 -1
     (nil))

(insn 311 317 312 (set (reg:SI 330)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:83 -1
     (nil))

(insn 312 311 313 (set (reg:SI 329)
        (reg:SI 326)) src/gui.c:83 -1
     (nil))

(insn 313 312 314 (set (reg:QI 331)
        (const_int 0 [0])) src/gui.c:83 -1
     (nil))

(insn 314 313 315 (parallel [
            (set (reg:SI 327)
                (unspec:SI [
                        (mem:BLK (reg:SI 329) [0 A8])
                        (reg:QI 331)
                        (const_int 1 [0x1])
                        (reg:SI 330)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 329))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:83 -1
     (nil))

(insn 315 314 316 (set (reg:SI 328)
        (not:SI (reg:SI 327))) src/gui.c:83 -1
     (nil))

(insn 316 315 0 (parallel [
            (set (reg:SI 114 [ D.6541 ])
                (plus:SI (reg:SI 328)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:83 -1
     (nil))

;; D.6542_63 = temp_path_10 + D.6541_62;

(insn 318 316 0 (parallel [
            (set (reg/f:SI 115 [ D.6542 ])
                (plus:SI (reg:SI 114 [ D.6541 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:83 -1
     (nil))

;; __builtin_memcpy (D.6542_63, D.6540_61, 23);

(insn 319 318 320 (set (reg:SI 332)
        (mem:SI (reg/f:SI 113 [ D.6540 ]) [0 S4 A8])) src/gui.c:83 -1
     (nil))

(insn 320 319 321 (set (mem:SI (reg/f:SI 115 [ D.6542 ]) [0 S4 A8])
        (reg:SI 332)) src/gui.c:83 -1
     (nil))

(insn 321 320 322 (set (reg:SI 333)
        (mem:SI (plus:SI (reg/f:SI 113 [ D.6540 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:83 -1
     (nil))

(insn 322 321 323 (set (mem:SI (plus:SI (reg/f:SI 115 [ D.6542 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 333)) src/gui.c:83 -1
     (nil))

(insn 323 322 324 (set (reg:SI 334)
        (mem:SI (plus:SI (reg/f:SI 113 [ D.6540 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:83 -1
     (nil))

(insn 324 323 325 (set (mem:SI (plus:SI (reg/f:SI 115 [ D.6542 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 334)) src/gui.c:83 -1
     (nil))

(insn 325 324 326 (set (reg:SI 335)
        (mem:SI (plus:SI (reg/f:SI 113 [ D.6540 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:83 -1
     (nil))

(insn 326 325 327 (set (mem:SI (plus:SI (reg/f:SI 115 [ D.6542 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 335)) src/gui.c:83 -1
     (nil))

(insn 327 326 328 (set (reg:SI 336)
        (mem:SI (plus:SI (reg/f:SI 113 [ D.6540 ])
                (const_int 16 [0x10])) [0 S4 A8])) src/gui.c:83 -1
     (nil))

(insn 328 327 329 (set (mem:SI (plus:SI (reg/f:SI 115 [ D.6542 ])
                (const_int 16 [0x10])) [0 S4 A8])
        (reg:SI 336)) src/gui.c:83 -1
     (nil))

(insn 329 328 330 (set (reg:HI 337)
        (mem:HI (plus:SI (reg/f:SI 113 [ D.6540 ])
                (const_int 20 [0x14])) [0 S2 A8])) src/gui.c:83 -1
     (nil))

(insn 330 329 331 (set (mem:HI (plus:SI (reg/f:SI 115 [ D.6542 ])
                (const_int 20 [0x14])) [0 S2 A8])
        (reg:HI 337)) src/gui.c:83 -1
     (nil))

(insn 331 330 332 (set (reg:QI 338)
        (mem:QI (plus:SI (reg/f:SI 113 [ D.6540 ])
                (const_int 22 [0x16])) [0 S1 A8])) src/gui.c:83 -1
     (nil))

(insn 332 331 0 (set (mem:QI (plus:SI (reg/f:SI 115 [ D.6542 ])
                (const_int 22 [0x16])) [0 S1 A8])
        (reg:QI 338)) src/gui.c:83 -1
     (nil))

;; D.6543_64 = IMG_Load (temp_path_10);

(insn 333 332 334 (set (reg/f:SI 339)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:84 -1
     (nil))

(insn 334 333 335 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 339)) src/gui.c:84 -1
     (nil))

(call_insn 335 334 336 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:84 -1
     (nil)
    (nil))

(insn 336 335 0 (set (reg/f:SI 116 [ D.6543 ])
        (reg:SI 0 ax)) src/gui.c:84 -1
     (nil))

;; display_9(D)->possibility1_12 = D.6543_64;

(insn 337 336 338 (set (reg/f:SI 340)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:84 -1
     (nil))

(insn 338 337 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 340)
                (const_int 104 [0x68])) [0 display_9(D)->possibility1_12+0 S4 A32])
        (reg/f:SI 116 [ D.6543 ])) src/gui.c:84 -1
     (nil))

;; D.6544_65 = display_9(D)->img_path;

(insn 339 338 340 (set (reg/f:SI 341)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:87 -1
     (nil))

(insn 340 339 0 (set (reg/f:SI 117 [ D.6544 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 341)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:87 -1
     (nil))

;; D.6545_66 = (const char * restrict) D.6544_65;

(insn 341 340 0 (set (reg/f:SI 118 [ D.6545 ])
        (reg/f:SI 117 [ D.6544 ])) src/gui.c:87 -1
     (nil))

;; strcpy (temp_path_10, D.6545_66);

(insn 342 341 343 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 118 [ D.6545 ])) src/gui.c:87 -1
     (nil))

(insn 343 342 344 (set (reg/f:SI 342)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:87 -1
     (nil))

(insn 344 343 345 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 342)) src/gui.c:87 -1
     (nil))

(call_insn 345 344 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:87 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6546_67 = (const char * restrict) &"flecheSelected13_24.png"[0];

(insn 346 345 0 (set (reg/f:SI 119 [ D.6546 ])
        (symbol_ref/f:SI ("*.LC12") [flags 0x2]  <var_decl 0x408fdb40 *.LC12>)) src/gui.c:88 -1
     (nil))

;; D.6547_68 = __builtin_strlen (temp_path_10);

(insn 353 346 347 (set (reg:SI 343)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:88 -1
     (nil))

(insn 347 353 348 (set (reg:SI 347)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:88 -1
     (nil))

(insn 348 347 349 (set (reg:SI 346)
        (reg:SI 343)) src/gui.c:88 -1
     (nil))

(insn 349 348 350 (set (reg:QI 348)
        (const_int 0 [0])) src/gui.c:88 -1
     (nil))

(insn 350 349 351 (parallel [
            (set (reg:SI 344)
                (unspec:SI [
                        (mem:BLK (reg:SI 346) [0 A8])
                        (reg:QI 348)
                        (const_int 1 [0x1])
                        (reg:SI 347)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 346))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:88 -1
     (nil))

(insn 351 350 352 (set (reg:SI 345)
        (not:SI (reg:SI 344))) src/gui.c:88 -1
     (nil))

(insn 352 351 0 (parallel [
            (set (reg:SI 120 [ D.6547 ])
                (plus:SI (reg:SI 345)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:88 -1
     (nil))

;; D.6548_69 = temp_path_10 + D.6547_68;

(insn 354 352 0 (parallel [
            (set (reg/f:SI 121 [ D.6548 ])
                (plus:SI (reg:SI 120 [ D.6547 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:88 -1
     (nil))

;; __builtin_memcpy (D.6548_69, D.6546_67, 24);

(insn 355 354 356 (set (reg:SI 349)
        (mem:SI (reg/f:SI 119 [ D.6546 ]) [0 S4 A8])) src/gui.c:88 -1
     (nil))

(insn 356 355 357 (set (mem:SI (reg/f:SI 121 [ D.6548 ]) [0 S4 A8])
        (reg:SI 349)) src/gui.c:88 -1
     (nil))

(insn 357 356 358 (set (reg:SI 350)
        (mem:SI (plus:SI (reg/f:SI 119 [ D.6546 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:88 -1
     (nil))

(insn 358 357 359 (set (mem:SI (plus:SI (reg/f:SI 121 [ D.6548 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 350)) src/gui.c:88 -1
     (nil))

(insn 359 358 360 (set (reg:SI 351)
        (mem:SI (plus:SI (reg/f:SI 119 [ D.6546 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:88 -1
     (nil))

(insn 360 359 361 (set (mem:SI (plus:SI (reg/f:SI 121 [ D.6548 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 351)) src/gui.c:88 -1
     (nil))

(insn 361 360 362 (set (reg:SI 352)
        (mem:SI (plus:SI (reg/f:SI 119 [ D.6546 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:88 -1
     (nil))

(insn 362 361 363 (set (mem:SI (plus:SI (reg/f:SI 121 [ D.6548 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 352)) src/gui.c:88 -1
     (nil))

(insn 363 362 364 (set (reg:SI 353)
        (mem:SI (plus:SI (reg/f:SI 119 [ D.6546 ])
                (const_int 16 [0x10])) [0 S4 A8])) src/gui.c:88 -1
     (nil))

(insn 364 363 365 (set (mem:SI (plus:SI (reg/f:SI 121 [ D.6548 ])
                (const_int 16 [0x10])) [0 S4 A8])
        (reg:SI 353)) src/gui.c:88 -1
     (nil))

(insn 365 364 366 (set (reg:SI 354)
        (mem:SI (plus:SI (reg/f:SI 119 [ D.6546 ])
                (const_int 20 [0x14])) [0 S4 A8])) src/gui.c:88 -1
     (nil))

(insn 366 365 0 (set (mem:SI (plus:SI (reg/f:SI 121 [ D.6548 ])
                (const_int 20 [0x14])) [0 S4 A8])
        (reg:SI 354)) src/gui.c:88 -1
     (nil))

;; D.6549_70 = IMG_Load (temp_path_10);

(insn 367 366 368 (set (reg/f:SI 355)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:89 -1
     (nil))

(insn 368 367 369 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 355)) src/gui.c:89 -1
     (nil))

(call_insn 369 368 370 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:89 -1
     (nil)
    (nil))

(insn 370 369 0 (set (reg/f:SI 122 [ D.6549 ])
        (reg:SI 0 ax)) src/gui.c:89 -1
     (nil))

;; display_9(D)->possibility13_24 = D.6549_70;

(insn 371 370 372 (set (reg/f:SI 356)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:89 -1
     (nil))

(insn 372 371 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 356)
                (const_int 108 [0x6c])) [0 display_9(D)->possibility13_24+0 S4 A32])
        (reg/f:SI 122 [ D.6549 ])) src/gui.c:89 -1
     (nil))

;; D.6550_71 = display_9(D)->img_path;

(insn 373 372 374 (set (reg/f:SI 357)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:92 -1
     (nil))

(insn 374 373 0 (set (reg/f:SI 123 [ D.6550 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 357)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:92 -1
     (nil))

;; D.6551_72 = (const char * restrict) D.6550_71;

(insn 375 374 0 (set (reg/f:SI 124 [ D.6551 ])
        (reg/f:SI 123 [ D.6550 ])) src/gui.c:92 -1
     (nil))

;; strcpy (temp_path_10, D.6551_72);

(insn 376 375 377 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 124 [ D.6551 ])) src/gui.c:92 -1
     (nil))

(insn 377 376 378 (set (reg/f:SI 358)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:92 -1
     (nil))

(insn 378 377 379 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 358)) src/gui.c:92 -1
     (nil))

(call_insn 379 378 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:92 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6552_73 = (const char * restrict) &"out_selected.png"[0];

(insn 380 379 0 (set (reg/f:SI 125 [ D.6552 ])
        (symbol_ref/f:SI ("*.LC13") [flags 0x2]  <var_decl 0x408fdba0 *.LC13>)) src/gui.c:93 -1
     (nil))

;; D.6553_74 = __builtin_strlen (temp_path_10);

(insn 387 380 381 (set (reg:SI 359)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:93 -1
     (nil))

(insn 381 387 382 (set (reg:SI 363)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:93 -1
     (nil))

(insn 382 381 383 (set (reg:SI 362)
        (reg:SI 359)) src/gui.c:93 -1
     (nil))

(insn 383 382 384 (set (reg:QI 364)
        (const_int 0 [0])) src/gui.c:93 -1
     (nil))

(insn 384 383 385 (parallel [
            (set (reg:SI 360)
                (unspec:SI [
                        (mem:BLK (reg:SI 362) [0 A8])
                        (reg:QI 364)
                        (const_int 1 [0x1])
                        (reg:SI 363)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 362))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:93 -1
     (nil))

(insn 385 384 386 (set (reg:SI 361)
        (not:SI (reg:SI 360))) src/gui.c:93 -1
     (nil))

(insn 386 385 0 (parallel [
            (set (reg:SI 126 [ D.6553 ])
                (plus:SI (reg:SI 361)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:93 -1
     (nil))

;; D.6554_75 = temp_path_10 + D.6553_74;

(insn 388 386 0 (parallel [
            (set (reg/f:SI 127 [ D.6554 ])
                (plus:SI (reg:SI 126 [ D.6553 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:93 -1
     (nil))

;; __builtin_memcpy (D.6554_75, D.6552_73, 17);

(insn 389 388 390 (set (reg:SI 365)
        (mem:SI (reg/f:SI 125 [ D.6552 ]) [0 S4 A8])) src/gui.c:93 -1
     (nil))

(insn 390 389 391 (set (mem:SI (reg/f:SI 127 [ D.6554 ]) [0 S4 A8])
        (reg:SI 365)) src/gui.c:93 -1
     (nil))

(insn 391 390 392 (set (reg:SI 366)
        (mem:SI (plus:SI (reg/f:SI 125 [ D.6552 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:93 -1
     (nil))

(insn 392 391 393 (set (mem:SI (plus:SI (reg/f:SI 127 [ D.6554 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 366)) src/gui.c:93 -1
     (nil))

(insn 393 392 394 (set (reg:SI 367)
        (mem:SI (plus:SI (reg/f:SI 125 [ D.6552 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:93 -1
     (nil))

(insn 394 393 395 (set (mem:SI (plus:SI (reg/f:SI 127 [ D.6554 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 367)) src/gui.c:93 -1
     (nil))

(insn 395 394 396 (set (reg:SI 368)
        (mem:SI (plus:SI (reg/f:SI 125 [ D.6552 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:93 -1
     (nil))

(insn 396 395 397 (set (mem:SI (plus:SI (reg/f:SI 127 [ D.6554 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 368)) src/gui.c:93 -1
     (nil))

(insn 397 396 398 (set (reg:QI 369)
        (mem:QI (plus:SI (reg/f:SI 125 [ D.6552 ])
                (const_int 16 [0x10])) [0 S1 A8])) src/gui.c:93 -1
     (nil))

(insn 398 397 0 (set (mem:QI (plus:SI (reg/f:SI 127 [ D.6554 ])
                (const_int 16 [0x10])) [0 S1 A8])
        (reg:QI 369)) src/gui.c:93 -1
     (nil))

;; D.6555_76 = IMG_Load (temp_path_10);

(insn 399 398 400 (set (reg/f:SI 370)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:94 -1
     (nil))

(insn 400 399 401 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 370)) src/gui.c:94 -1
     (nil))

(call_insn 401 400 402 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:94 -1
     (nil)
    (nil))

(insn 402 401 0 (set (reg/f:SI 128 [ D.6555 ])
        (reg:SI 0 ax)) src/gui.c:94 -1
     (nil))

;; display_9(D)->possibility_out = D.6555_76;

(insn 403 402 404 (set (reg/f:SI 371)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:94 -1
     (nil))

(insn 404 403 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 371)
                (const_int 112 [0x70])) [0 display_9(D)->possibility_out+0 S4 A32])
        (reg/f:SI 128 [ D.6555 ])) src/gui.c:94 -1
     (nil))

;; D.6556_77 = display_9(D)->img_path;

(insn 405 404 406 (set (reg/f:SI 372)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:97 -1
     (nil))

(insn 406 405 0 (set (reg/f:SI 129 [ D.6556 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 372)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:97 -1
     (nil))

;; D.6557_78 = (const char * restrict) D.6556_77;

(insn 407 406 0 (set (reg/f:SI 130 [ D.6557 ])
        (reg/f:SI 129 [ D.6556 ])) src/gui.c:97 -1
     (nil))

;; strcpy (temp_path_10, D.6557_78);

(insn 408 407 409 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 130 [ D.6557 ])) src/gui.c:97 -1
     (nil))

(insn 409 408 410 (set (reg/f:SI 373)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:97 -1
     (nil))

(insn 410 409 411 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 373)) src/gui.c:97 -1
     (nil))

(call_insn 411 410 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:97 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6558_79 = (const char * restrict) &"msgBox.png"[0];

(insn 412 411 0 (set (reg/f:SI 131 [ D.6558 ])
        (symbol_ref/f:SI ("*.LC14") [flags 0x2]  <var_decl 0x408fdc00 *.LC14>)) src/gui.c:98 -1
     (nil))

;; D.6559_80 = __builtin_strlen (temp_path_10);

(insn 419 412 413 (set (reg:SI 374)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:98 -1
     (nil))

(insn 413 419 414 (set (reg:SI 378)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:98 -1
     (nil))

(insn 414 413 415 (set (reg:SI 377)
        (reg:SI 374)) src/gui.c:98 -1
     (nil))

(insn 415 414 416 (set (reg:QI 379)
        (const_int 0 [0])) src/gui.c:98 -1
     (nil))

(insn 416 415 417 (parallel [
            (set (reg:SI 375)
                (unspec:SI [
                        (mem:BLK (reg:SI 377) [0 A8])
                        (reg:QI 379)
                        (const_int 1 [0x1])
                        (reg:SI 378)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 377))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:98 -1
     (nil))

(insn 417 416 418 (set (reg:SI 376)
        (not:SI (reg:SI 375))) src/gui.c:98 -1
     (nil))

(insn 418 417 0 (parallel [
            (set (reg:SI 132 [ D.6559 ])
                (plus:SI (reg:SI 376)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:98 -1
     (nil))

;; D.6560_81 = temp_path_10 + D.6559_80;

(insn 420 418 0 (parallel [
            (set (reg/f:SI 133 [ D.6560 ])
                (plus:SI (reg:SI 132 [ D.6559 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:98 -1
     (nil))

;; __builtin_memcpy (D.6560_81, D.6558_79, 11);

(insn 421 420 422 (set (reg:SI 380)
        (mem:SI (reg/f:SI 131 [ D.6558 ]) [0 S4 A8])) src/gui.c:98 -1
     (nil))

(insn 422 421 423 (set (mem:SI (reg/f:SI 133 [ D.6560 ]) [0 S4 A8])
        (reg:SI 380)) src/gui.c:98 -1
     (nil))

(insn 423 422 424 (set (reg:SI 381)
        (mem:SI (plus:SI (reg/f:SI 131 [ D.6558 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:98 -1
     (nil))

(insn 424 423 425 (set (mem:SI (plus:SI (reg/f:SI 133 [ D.6560 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 381)) src/gui.c:98 -1
     (nil))

(insn 425 424 426 (set (reg:HI 382)
        (mem:HI (plus:SI (reg/f:SI 131 [ D.6558 ])
                (const_int 8 [0x8])) [0 S2 A8])) src/gui.c:98 -1
     (nil))

(insn 426 425 427 (set (mem:HI (plus:SI (reg/f:SI 133 [ D.6560 ])
                (const_int 8 [0x8])) [0 S2 A8])
        (reg:HI 382)) src/gui.c:98 -1
     (nil))

(insn 427 426 428 (set (reg:QI 383)
        (mem:QI (plus:SI (reg/f:SI 131 [ D.6558 ])
                (const_int 10 [0xa])) [0 S1 A8])) src/gui.c:98 -1
     (nil))

(insn 428 427 0 (set (mem:QI (plus:SI (reg/f:SI 133 [ D.6560 ])
                (const_int 10 [0xa])) [0 S1 A8])
        (reg:QI 383)) src/gui.c:98 -1
     (nil))

;; D.6561_82 = IMG_Load (temp_path_10);

(insn 429 428 430 (set (reg/f:SI 384)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:99 -1
     (nil))

(insn 430 429 431 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 384)) src/gui.c:99 -1
     (nil))

(call_insn 431 430 432 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:99 -1
     (nil)
    (nil))

(insn 432 431 0 (set (reg/f:SI 134 [ D.6561 ])
        (reg:SI 0 ax)) src/gui.c:99 -1
     (nil))

;; display_9(D)->msg_box = D.6561_82;

(insn 433 432 434 (set (reg/f:SI 385)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:99 -1
     (nil))

(insn 434 433 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 385)
                (const_int 40 [0x28])) [0 display_9(D)->msg_box+0 S4 A32])
        (reg/f:SI 134 [ D.6561 ])) src/gui.c:99 -1
     (nil))

;; temp_name_83 = malloc (100);

(insn 435 434 436 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 100 [0x64])) src/gui.c:102 -1
     (nil))

(call_insn 436 435 437 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:102 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 437 436 438 (set (reg/f:SI 386)
        (reg:SI 0 ax)) src/gui.c:102 -1
     (expr_list:REG_NOALIAS (reg/f:SI 386)
        (nil)))

(insn 438 437 0 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_name+0 S4 A32])
        (reg/f:SI 386)) src/gui.c:102 -1
     (nil))

;; i_84 = 1;

(insn 439 438 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:104 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; D.6562_85 = display_9(D)->img_path;

(insn 443 442 444 (set (reg/f:SI 387)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:106 -1
     (nil))

(insn 444 443 0 (set (reg/f:SI 135 [ D.6562 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 387)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:106 -1
     (nil))

;; D.6563_86 = (const char * restrict) D.6562_85;

(insn 445 444 0 (set (reg/f:SI 136 [ D.6563 ])
        (reg/f:SI 135 [ D.6562 ])) src/gui.c:106 -1
     (nil))

;; strcpy (temp_path_10, D.6563_86);

(insn 446 445 447 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 136 [ D.6563 ])) src/gui.c:106 -1
     (nil))

(insn 447 446 448 (set (reg/f:SI 388)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:106 -1
     (nil))

(insn 448 447 449 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 388)) src/gui.c:106 -1
     (nil))

(call_insn 449 448 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:106 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6564_87 = (const char * restrict) &"die/die[%d].png"[0];

(insn 450 449 0 (set (reg/f:SI 137 [ D.6564 ])
        (symbol_ref/f:SI ("*.LC15") [flags 0x2]  <var_decl 0x408fdc60 *.LC15>)) src/gui.c:107 -1
     (nil))

;; sprintf (temp_name_83, D.6564_87, i_1);

(insn 451 450 452 (set (reg:SI 389)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:107 -1
     (nil))

(insn 452 451 453 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 389)) src/gui.c:107 -1
     (nil))

(insn 453 452 454 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 137 [ D.6564 ])) src/gui.c:107 -1
     (nil))

(insn 454 453 455 (set (reg/f:SI 390)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_name+0 S4 A32])) src/gui.c:107 -1
     (nil))

(insn 455 454 456 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 390)) src/gui.c:107 -1
     (nil))

(call_insn 456 455 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 0x406b4200 sprintf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:107 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; temp_name.52_88 = (const char * restrict) temp_name_83;

(insn 457 456 0 (set (reg/f:SI 138 [ temp_name.52 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_name+0 S4 A32])) src/gui.c:108 -1
     (nil))

;; strcat (temp_path_10, temp_name.52_88);

(insn 458 457 459 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 138 [ temp_name.52 ])) src/gui.c:108 -1
     (nil))

(insn 459 458 460 (set (reg/f:SI 391)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:108 -1
     (nil))

(insn 460 459 461 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 391)) src/gui.c:108 -1
     (nil))

(call_insn 461 460 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcat") [flags 0x41]  <function_decl 0x406ae480 strcat>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:108 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6566_89 = i_1 + -1;

(insn 462 461 463 (set (reg:SI 392)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:109 -1
     (nil))

(insn 463 462 0 (parallel [
            (set (reg:SI 139 [ D.6566 ])
                (plus:SI (reg:SI 392)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:109 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; D.6567_90 = IMG_Load (temp_path_10);

(insn 464 463 465 (set (reg/f:SI 393)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:109 -1
     (nil))

(insn 465 464 466 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 393)) src/gui.c:109 -1
     (nil))

(call_insn 466 465 467 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:109 -1
     (nil)
    (nil))

(insn 467 466 0 (set (reg/f:SI 140 [ D.6567 ])
        (reg:SI 0 ax)) src/gui.c:109 -1
     (nil))

;; display_9(D)->die[D.6566_89] = D.6567_90;

(insn 468 467 469 (set (reg/f:SI 394)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:109 -1
     (nil))

(insn 469 468 470 (parallel [
            (set (reg:SI 395)
                (plus:SI (reg:SI 139 [ D.6566 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:109 -1
     (nil))

(insn 470 469 0 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 395)
                    (const_int 4 [0x4]))
                (reg/f:SI 394)) [0 display_9(D)->die S4 A32])
        (reg/f:SI 140 [ D.6567 ])) src/gui.c:109 -1
     (nil))

;; i_91 = i_1 + 1;

(insn 471 470 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:104 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 472 471 473 3 "" [0 uses])

(note 473 472 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 <= 6)

(insn 475 473 476 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 6 [0x6]))) src/gui.c:104 -1
     (nil))

(jump_insn 476 475 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 474)
            (pc))) src/gui.c:104 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; display_9(D)->die1_position.x = 410;

(insn 478 477 479 (set (reg/f:SI 396)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:112 -1
     (nil))

(insn 479 478 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 396)
                (const_int 88 [0x58])) [0 display_9(D)->die1_position.x+0 S2 A32])
        (const_int 410 [0x19a])) src/gui.c:112 -1
     (nil))

;; display_9(D)->die1_position.y = 340;

(insn 480 479 481 (set (reg/f:SI 397)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:113 -1
     (nil))

(insn 481 480 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 397)
                (const_int 90 [0x5a])) [0 display_9(D)->die1_position.y+0 S2 A16])
        (const_int 340 [0x154])) src/gui.c:113 -1
     (nil))

;; display_9(D)->die2_position.x = 450;

(insn 482 481 483 (set (reg/f:SI 398)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:115 -1
     (nil))

(insn 483 482 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 398)
                (const_int 96 [0x60])) [0 display_9(D)->die2_position.x+0 S2 A32])
        (const_int 450 [0x1c2])) src/gui.c:115 -1
     (nil))

;; display_9(D)->die2_position.y = 340;

(insn 484 483 485 (set (reg/f:SI 399)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:116 -1
     (nil))

(insn 485 484 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 399)
                (const_int 98 [0x62])) [0 display_9(D)->die2_position.y+0 S2 A16])
        (const_int 340 [0x154])) src/gui.c:116 -1
     (nil))

;; display_9(D)->window_width = 800;

(insn 486 485 487 (set (reg/f:SI 400)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:119 -1
     (nil))

(insn 487 486 0 (set (mem/s/j:SI (plus:SI (reg/f:SI 400)
                (const_int 124 [0x7c])) [0 display_9(D)->window_width+0 S4 A32])
        (const_int 800 [0x320])) src/gui.c:119 -1
     (nil))

;; display_9(D)->window_height = 600;

(insn 488 487 489 (set (reg/f:SI 401)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:120 -1
     (nil))

(insn 489 488 0 (set (mem/s/j:SI (plus:SI (reg/f:SI 401)
                (const_int 128 [0x80])) [0 display_9(D)->window_height+0 S4 A32])
        (const_int 600 [0x258])) src/gui.c:120 -1
     (nil))

;; display_9(D)->positions[0].x = 520;

(insn 490 489 491 (set (reg/f:SI 402)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:123 -1
     (nil))

(insn 491 490 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 402)
                (const_int 132 [0x84])) [0 display_9(D)->positions[0].x+0 S2 A32])
        (const_int 520 [0x208])) src/gui.c:123 -1
     (nil))

;; display_9(D)->positions[0].y = 562;

(insn 492 491 493 (set (reg/f:SI 403)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:124 -1
     (nil))

(insn 493 492 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 403)
                (const_int 134 [0x86])) [0 display_9(D)->positions[0].y+0 S2 A16])
        (const_int 562 [0x232])) src/gui.c:124 -1
     (nil))

;; i_92 = 1;

(insn 494 493 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:126 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; D.6568_93 = i_2 + -1;

(insn 498 497 499 (set (reg:SI 404)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:128 -1
     (nil))

(insn 499 498 0 (parallel [
            (set (reg:SI 141 [ D.6568 ])
                (plus:SI (reg:SI 404)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:128 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; D.6569_94 = display_9(D)->positions[D.6568_93].y;

(insn 500 499 501 (set (reg/f:SI 405)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:128 -1
     (nil))

(insn 501 500 502 (parallel [
            (set (reg:SI 406)
                (plus:SI (reg:SI 141 [ D.6568 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:128 -1
     (nil))

(insn 502 501 0 (set (reg:HI 142 [ D.6569 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 406)
                        (const_int 8 [0x8]))
                    (reg/f:SI 405))
                (const_int 6 [0x6])) [0 display_9(D)->positions[D.6568_93].y+0 S2 A16])) src/gui.c:128 -1
     (nil))

;; display_9(D)->positions[i_2].y = D.6569_94;

(insn 503 502 504 (set (reg/f:SI 407)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:128 -1
     (nil))

(insn 504 503 505 (set (reg:SI 409)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:128 -1
     (nil))

(insn 505 504 506 (parallel [
            (set (reg:SI 408)
                (plus:SI (reg:SI 409)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:128 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 506 505 0 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 408)
                        (const_int 8 [0x8]))
                    (reg/f:SI 407))
                (const_int 6 [0x6])) [0 display_9(D)->positions[i_2].y+0 S2 A16])
        (reg:HI 142 [ D.6569 ])) src/gui.c:128 -1
     (nil))

;; if (i_2 <= 5)

(insn 507 506 508 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 5 [0x5]))) src/gui.c:129 -1
     (nil))

(jump_insn 508 507 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:129 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; D.6572_95 = i_2 + -1;

(insn 510 509 511 (set (reg:SI 410)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:130 -1
     (nil))

(insn 511 510 0 (parallel [
            (set (reg:SI 143 [ D.6572 ])
                (plus:SI (reg:SI 410)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:130 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; D.6573_96 = display_9(D)->positions[D.6572_95].x;

(insn 512 511 513 (set (reg/f:SI 411)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:130 -1
     (nil))

(insn 513 512 514 (parallel [
            (set (reg:SI 412)
                (plus:SI (reg:SI 143 [ D.6572 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:130 -1
     (nil))

(insn 514 513 0 (set (reg:HI 144 [ D.6573 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 412)
                        (const_int 8 [0x8]))
                    (reg/f:SI 411))
                (const_int 4 [0x4])) [0 display_9(D)->positions[D.6572_95].x+0 S2 A32])) src/gui.c:130 -1
     (nil))

;; D.6574_97 = (short unsigned int) D.6573_96;

(insn 515 514 0 (set (reg:HI 145 [ D.6574 ])
        (reg:HI 144 [ D.6573 ])) src/gui.c:130 -1
     (nil))

;; D.6575_98 = D.6574_97 + 65498;

(insn 516 515 0 (parallel [
            (set (reg:HI 146 [ D.6575 ])
                (plus:HI (reg:HI 145 [ D.6574 ])
                    (const_int -38 [0xffffffffffffffda])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:130 -1
     (nil))

;; D.6576_99 = (Sint16) D.6575_98;

(insn 517 516 0 (set (reg:HI 147 [ D.6576 ])
        (reg:HI 146 [ D.6575 ])) src/gui.c:130 -1
     (nil))

;; display_9(D)->positions[i_2].x = D.6576_99;

(insn 518 517 519 (set (reg/f:SI 413)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:130 -1
     (nil))

(insn 519 518 520 (set (reg:SI 415)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:130 -1
     (nil))

(insn 520 519 521 (parallel [
            (set (reg:SI 414)
                (plus:SI (reg:SI 415)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:130 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 521 520 0 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 414)
                        (const_int 8 [0x8]))
                    (reg/f:SI 413))
                (const_int 4 [0x4])) [0 display_9(D)->positions[i_2].x+0 S2 A32])
        (reg:HI 147 [ D.6576 ])) src/gui.c:130 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 524 523 525 6 "" [0 uses])

(note 525 524 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_2 == 6)

(insn 526 525 527 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 6 [0x6]))) src/gui.c:131 -1
     (nil))

(jump_insn 527 526 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:131 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; D.6580_100 = i_2 + -1;

(insn 529 528 530 (set (reg:SI 416)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:132 -1
     (nil))

(insn 530 529 0 (parallel [
            (set (reg:SI 148 [ D.6580 ])
                (plus:SI (reg:SI 416)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:132 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; D.6581_101 = display_9(D)->positions[D.6580_100].x;

(insn 531 530 532 (set (reg/f:SI 417)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:132 -1
     (nil))

(insn 532 531 533 (parallel [
            (set (reg:SI 418)
                (plus:SI (reg:SI 148 [ D.6580 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:132 -1
     (nil))

(insn 533 532 0 (set (reg:HI 149 [ D.6581 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 418)
                        (const_int 8 [0x8]))
                    (reg/f:SI 417))
                (const_int 4 [0x4])) [0 display_9(D)->positions[D.6580_100].x+0 S2 A32])) src/gui.c:132 -1
     (nil))

;; D.6582_102 = (short unsigned int) D.6581_101;

(insn 534 533 0 (set (reg:HI 150 [ D.6582 ])
        (reg:HI 149 [ D.6581 ])) src/gui.c:132 -1
     (nil))

;; D.6583_103 = D.6582_102 + 65462;

(insn 535 534 0 (parallel [
            (set (reg:HI 151 [ D.6583 ])
                (plus:HI (reg:HI 150 [ D.6582 ])
                    (const_int -74 [0xffffffffffffffb6])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:132 -1
     (nil))

;; D.6584_104 = (Sint16) D.6583_103;

(insn 536 535 0 (set (reg:HI 152 [ D.6584 ])
        (reg:HI 151 [ D.6583 ])) src/gui.c:132 -1
     (nil))

;; display_9(D)->positions[i_2].x = D.6584_104;

(insn 537 536 538 (set (reg/f:SI 419)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:132 -1
     (nil))

(insn 538 537 539 (set (reg:SI 421)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:132 -1
     (nil))

(insn 539 538 540 (parallel [
            (set (reg:SI 420)
                (plus:SI (reg:SI 421)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:132 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 540 539 0 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 420)
                        (const_int 8 [0x8]))
                    (reg/f:SI 419))
                (const_int 4 [0x4])) [0 display_9(D)->positions[i_2].x+0 S2 A32])
        (reg:HI 152 [ D.6584 ])) src/gui.c:132 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 543 542 544 8 "" [0 uses])

(note 544 543 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_2 <= 11)

(insn 545 544 546 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 11 [0xb]))) src/gui.c:133 -1
     (nil))

(jump_insn 546 545 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:133 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; D.6588_105 = i_2 + -1;

(insn 548 547 549 (set (reg:SI 422)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:134 -1
     (nil))

(insn 549 548 0 (parallel [
            (set (reg:SI 153 [ D.6588 ])
                (plus:SI (reg:SI 422)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:134 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; D.6589_106 = display_9(D)->positions[D.6588_105].x;

(insn 550 549 551 (set (reg/f:SI 423)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:134 -1
     (nil))

(insn 551 550 552 (parallel [
            (set (reg:SI 424)
                (plus:SI (reg:SI 153 [ D.6588 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:134 -1
     (nil))

(insn 552 551 0 (set (reg:HI 154 [ D.6589 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 424)
                        (const_int 8 [0x8]))
                    (reg/f:SI 423))
                (const_int 4 [0x4])) [0 display_9(D)->positions[D.6588_105].x+0 S2 A32])) src/gui.c:134 -1
     (nil))

;; D.6590_107 = (short unsigned int) D.6589_106;

(insn 553 552 0 (set (reg:HI 155 [ D.6590 ])
        (reg:HI 154 [ D.6589 ])) src/gui.c:134 -1
     (nil))

;; D.6591_108 = D.6590_107 + 65498;

(insn 554 553 0 (parallel [
            (set (reg:HI 156 [ D.6591 ])
                (plus:HI (reg:HI 155 [ D.6590 ])
                    (const_int -38 [0xffffffffffffffda])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:134 -1
     (nil))

;; D.6592_109 = (Sint16) D.6591_108;

(insn 555 554 0 (set (reg:HI 157 [ D.6592 ])
        (reg:HI 156 [ D.6591 ])) src/gui.c:134 -1
     (nil))

;; display_9(D)->positions[i_2].x = D.6592_109;

(insn 556 555 557 (set (reg/f:SI 425)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:134 -1
     (nil))

(insn 557 556 558 (set (reg:SI 427)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:134 -1
     (nil))

(insn 558 557 559 (parallel [
            (set (reg:SI 426)
                (plus:SI (reg:SI 427)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:134 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 559 558 0 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 426)
                        (const_int 8 [0x8]))
                    (reg/f:SI 425))
                (const_int 4 [0x4])) [0 display_9(D)->positions[i_2].x+0 S2 A32])
        (reg:HI 157 [ D.6592 ])) src/gui.c:134 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 562 561 563 9 "" [0 uses])

(note 563 562 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_2 == 12)

(insn 564 563 565 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 12 [0xc]))) src/gui.c:135 -1
     (nil))

(jump_insn 565 564 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:135 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; D.6596_110 = i_2 + -1;

(insn 567 566 568 (set (reg:SI 428)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:137 -1
     (nil))

(insn 568 567 0 (parallel [
            (set (reg:SI 158 [ D.6596 ])
                (plus:SI (reg:SI 428)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:137 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; D.6597_111 = display_9(D)->positions[D.6596_110].x;

(insn 569 568 570 (set (reg/f:SI 429)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:137 -1
     (nil))

(insn 570 569 571 (parallel [
            (set (reg:SI 430)
                (plus:SI (reg:SI 158 [ D.6596 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:137 -1
     (nil))

(insn 571 570 0 (set (reg:HI 159 [ D.6597 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 430)
                        (const_int 8 [0x8]))
                    (reg/f:SI 429))
                (const_int 4 [0x4])) [0 display_9(D)->positions[D.6596_110].x+0 S2 A32])) src/gui.c:137 -1
     (nil))

;; display_9(D)->positions[i_2].x = D.6597_111;

(insn 572 571 573 (set (reg/f:SI 431)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:137 -1
     (nil))

(insn 573 572 574 (set (reg:SI 433)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:137 -1
     (nil))

(insn 574 573 575 (parallel [
            (set (reg:SI 432)
                (plus:SI (reg:SI 433)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:137 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 575 574 0 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 432)
                        (const_int 8 [0x8]))
                    (reg/f:SI 431))
                (const_int 4 [0x4])) [0 display_9(D)->positions[i_2].x+0 S2 A32])
        (reg:HI 159 [ D.6597 ])) src/gui.c:137 -1
     (nil))

;; display_9(D)->positions[i_2].y = 145;

(insn 576 575 577 (set (reg/f:SI 434)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:138 -1
     (nil))

(insn 577 576 578 (set (reg:SI 436)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:138 -1
     (nil))

(insn 578 577 579 (parallel [
            (set (reg:SI 435)
                (plus:SI (reg:SI 436)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:138 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 579 578 0 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 435)
                        (const_int 8 [0x8]))
                    (reg/f:SI 434))
                (const_int 6 [0x6])) [0 display_9(D)->positions[i_2].y+0 S2 A16])
        (const_int 145 [0x91])) src/gui.c:138 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 582 581 583 10 "" [0 uses])

(note 583 582 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_2 <= 17)

(insn 584 583 585 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 17 [0x11]))) src/gui.c:140 -1
     (nil))

(jump_insn 585 584 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:140 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; D.6601_112 = i_2 + -1;

(insn 587 586 588 (set (reg:SI 437)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:141 -1
     (nil))

(insn 588 587 0 (parallel [
            (set (reg:SI 160 [ D.6601 ])
                (plus:SI (reg:SI 437)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:141 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; D.6602_113 = display_9(D)->positions[D.6601_112].x;

(insn 589 588 590 (set (reg/f:SI 438)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:141 -1
     (nil))

(insn 590 589 591 (parallel [
            (set (reg:SI 439)
                (plus:SI (reg:SI 160 [ D.6601 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:141 -1
     (nil))

(insn 591 590 0 (set (reg:HI 161 [ D.6602 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 439)
                        (const_int 8 [0x8]))
                    (reg/f:SI 438))
                (const_int 4 [0x4])) [0 display_9(D)->positions[D.6601_112].x+0 S2 A32])) src/gui.c:141 -1
     (nil))

;; D.6603_114 = (short unsigned int) D.6602_113;

(insn 592 591 0 (set (reg:HI 162 [ D.6603 ])
        (reg:HI 161 [ D.6602 ])) src/gui.c:141 -1
     (nil))

;; D.6604_115 = D.6603_114 + 38;

(insn 593 592 0 (parallel [
            (set (reg:HI 163 [ D.6604 ])
                (plus:HI (reg:HI 162 [ D.6603 ])
                    (const_int 38 [0x26])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:141 -1
     (nil))

;; D.6605_116 = (Sint16) D.6604_115;

(insn 594 593 0 (set (reg:HI 164 [ D.6605 ])
        (reg:HI 163 [ D.6604 ])) src/gui.c:141 -1
     (nil))

;; display_9(D)->positions[i_2].x = D.6605_116;

(insn 595 594 596 (set (reg/f:SI 440)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:141 -1
     (nil))

(insn 596 595 597 (set (reg:SI 442)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:141 -1
     (nil))

(insn 597 596 598 (parallel [
            (set (reg:SI 441)
                (plus:SI (reg:SI 442)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:141 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 598 597 0 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 441)
                        (const_int 8 [0x8]))
                    (reg/f:SI 440))
                (const_int 4 [0x4])) [0 display_9(D)->positions[i_2].x+0 S2 A32])
        (reg:HI 164 [ D.6605 ])) src/gui.c:141 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 601 600 602 11 "" [0 uses])

(note 602 601 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_2 == 18)

(insn 603 602 604 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 18 [0x12]))) src/gui.c:142 -1
     (nil))

(jump_insn 604 603 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:142 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; D.6609_117 = i_2 + -1;

(insn 606 605 607 (set (reg:SI 443)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:143 -1
     (nil))

(insn 607 606 0 (parallel [
            (set (reg:SI 165 [ D.6609 ])
                (plus:SI (reg:SI 443)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:143 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; D.6610_118 = display_9(D)->positions[D.6609_117].x;

(insn 608 607 609 (set (reg/f:SI 444)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:143 -1
     (nil))

(insn 609 608 610 (parallel [
            (set (reg:SI 445)
                (plus:SI (reg:SI 165 [ D.6609 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:143 -1
     (nil))

(insn 610 609 0 (set (reg:HI 166 [ D.6610 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 445)
                        (const_int 8 [0x8]))
                    (reg/f:SI 444))
                (const_int 4 [0x4])) [0 display_9(D)->positions[D.6609_117].x+0 S2 A32])) src/gui.c:143 -1
     (nil))

;; D.6611_119 = (short unsigned int) D.6610_118;

(insn 611 610 0 (set (reg:HI 167 [ D.6611 ])
        (reg:HI 166 [ D.6610 ])) src/gui.c:143 -1
     (nil))

;; D.6612_120 = D.6611_119 + 74;

(insn 612 611 0 (parallel [
            (set (reg:HI 168 [ D.6612 ])
                (plus:HI (reg:HI 167 [ D.6611 ])
                    (const_int 74 [0x4a])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:143 -1
     (nil))

;; D.6613_121 = (Sint16) D.6612_120;

(insn 613 612 0 (set (reg:HI 169 [ D.6613 ])
        (reg:HI 168 [ D.6612 ])) src/gui.c:143 -1
     (nil))

;; display_9(D)->positions[i_2].x = D.6613_121;

(insn 614 613 615 (set (reg/f:SI 446)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:143 -1
     (nil))

(insn 615 614 616 (set (reg:SI 448)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:143 -1
     (nil))

(insn 616 615 617 (parallel [
            (set (reg:SI 447)
                (plus:SI (reg:SI 448)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:143 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 617 616 0 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 447)
                        (const_int 8 [0x8]))
                    (reg/f:SI 446))
                (const_int 4 [0x4])) [0 display_9(D)->positions[i_2].x+0 S2 A32])
        (reg:HI 169 [ D.6613 ])) src/gui.c:143 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; 

(code_label 620 619 621 12 "" [0 uses])

(note 621 620 0 NOTE_INSN_BASIC_BLOCK)

;; D.6615_122 = i_2 + -1;

(insn 622 621 623 (set (reg:SI 449)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:145 -1
     (nil))

(insn 623 622 0 (parallel [
            (set (reg:SI 170 [ D.6615 ])
                (plus:SI (reg:SI 449)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:145 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; D.6616_123 = display_9(D)->positions[D.6615_122].x;

(insn 624 623 625 (set (reg/f:SI 450)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:145 -1
     (nil))

(insn 625 624 626 (parallel [
            (set (reg:SI 451)
                (plus:SI (reg:SI 170 [ D.6615 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:145 -1
     (nil))

(insn 626 625 0 (set (reg:HI 171 [ D.6616 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 451)
                        (const_int 8 [0x8]))
                    (reg/f:SI 450))
                (const_int 4 [0x4])) [0 display_9(D)->positions[D.6615_122].x+0 S2 A32])) src/gui.c:145 -1
     (nil))

;; D.6617_124 = (short unsigned int) D.6616_123;

(insn 627 626 0 (set (reg:HI 172 [ D.6617 ])
        (reg:HI 171 [ D.6616 ])) src/gui.c:145 -1
     (nil))

;; D.6618_125 = D.6617_124 + 38;

(insn 628 627 0 (parallel [
            (set (reg:HI 173 [ D.6618 ])
                (plus:HI (reg:HI 172 [ D.6617 ])
                    (const_int 38 [0x26])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:145 -1
     (nil))

;; D.6619_126 = (Sint16) D.6618_125;

(insn 629 628 0 (set (reg:HI 174 [ D.6619 ])
        (reg:HI 173 [ D.6618 ])) src/gui.c:145 -1
     (nil))

;; display_9(D)->positions[i_2].x = D.6619_126;

(insn 630 629 631 (set (reg/f:SI 452)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:145 -1
     (nil))

(insn 631 630 632 (set (reg:SI 454)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:145 -1
     (nil))

(insn 632 631 633 (parallel [
            (set (reg:SI 453)
                (plus:SI (reg:SI 454)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:145 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 633 632 0 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 453)
                        (const_int 8 [0x8]))
                    (reg/f:SI 452))
                (const_int 4 [0x4])) [0 display_9(D)->positions[i_2].x+0 S2 A32])
        (reg:HI 174 [ D.6619 ])) src/gui.c:145 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; 

(code_label 634 633 635 7 "" [0 uses])

(note 635 634 0 NOTE_INSN_BASIC_BLOCK)

;; i_127 = i_2 + 1;

(insn 636 635 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:126 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; 

(code_label 637 636 638 5 "" [0 uses])

(note 638 637 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_2 <= 23)

(insn 640 638 641 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 23 [0x17]))) src/gui.c:126 -1
     (nil))

(jump_insn 641 640 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 639)
            (pc))) src/gui.c:126 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; display_9(D)->positions[24].x = 300;

(insn 643 642 644 (set (reg/f:SI 455)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:148 -1
     (nil))

(insn 644 643 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 455)
                (const_int 324 [0x144])) [0 display_9(D)->positions[24].x+0 S2 A32])
        (const_int 300 [0x12c])) src/gui.c:148 -1
     (nil))

;; display_9(D)->positions[24].y = 480;

(insn 645 644 646 (set (reg/f:SI 456)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:149 -1
     (nil))

(insn 646 645 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 456)
                (const_int 326 [0x146])) [0 display_9(D)->positions[24].y+0 S2 A16])
        (const_int 480 [0x1e0])) src/gui.c:149 -1
     (nil))

;; display_9(D)->positions[25].x = 568;

(insn 647 646 648 (set (reg/f:SI 457)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:151 -1
     (nil))

(insn 648 647 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 457)
                (const_int 332 [0x14c])) [0 display_9(D)->positions[25].x+0 S2 A32])
        (const_int 568 [0x238])) src/gui.c:151 -1
     (nil))

;; display_9(D)->positions[25].y = 140;

(insn 649 648 650 (set (reg/f:SI 458)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:152 -1
     (nil))

(insn 650 649 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 458)
                (const_int 334 [0x14e])) [0 display_9(D)->positions[25].y+0 S2 A16])
        (const_int 140 [0x8c])) src/gui.c:152 -1
     (nil))

;; display_9(D)->positions[26].x = 300;

(insn 651 650 652 (set (reg/f:SI 459)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:154 -1
     (nil))

(insn 652 651 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 459)
                (const_int 340 [0x154])) [0 display_9(D)->positions[26].x+0 S2 A32])
        (const_int 300 [0x12c])) src/gui.c:154 -1
     (nil))

;; display_9(D)->positions[26].y = 220;

(insn 653 652 654 (set (reg/f:SI 460)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:155 -1
     (nil))

(insn 654 653 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 460)
                (const_int 342 [0x156])) [0 display_9(D)->positions[26].y+0 S2 A16])
        (const_int 220 [0xdc])) src/gui.c:155 -1
     (nil))

;; display_9(D)->positions[27].x = 568;

(insn 655 654 656 (set (reg/f:SI 461)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:157 -1
     (nil))

(insn 656 655 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 461)
                (const_int 348 [0x15c])) [0 display_9(D)->positions[27].x+0 S2 A32])
        (const_int 568 [0x238])) src/gui.c:157 -1
     (nil))

;; display_9(D)->positions[27].y = 590;

(insn 657 656 658 (set (reg/f:SI 462)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:158 -1
     (nil))

(insn 658 657 0 (set (mem/s/j:HI (plus:SI (reg/f:SI 462)
                (const_int 350 [0x15e])) [0 display_9(D)->positions[27].y+0 S2 A16])
        (const_int 590 [0x24e])) src/gui.c:158 -1
     (nil))

;; D.6620_128 = display_9(D)->window_height;

(insn 659 658 660 (set (reg/f:SI 463)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:161 -1
     (nil))

(insn 660 659 0 (set (reg:SI 175 [ D.6620 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 463)
                (const_int 128 [0x80])) [0 display_9(D)->window_height+0 S4 A32])) src/gui.c:161 -1
     (nil))

;; D.6621_129 = display_9(D)->window_width;

(insn 661 660 662 (set (reg/f:SI 464)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:161 -1
     (nil))

(insn 662 661 0 (set (reg:SI 176 [ D.6621 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 464)
                (const_int 124 [0x7c])) [0 display_9(D)->window_width+0 S4 A32])) src/gui.c:161 -1
     (nil))

;; D.6622_130 = SDL_SetVideoMode (D.6621_129, D.6620_128, 32, 1073741825);

(insn 663 662 664 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (const_int 1073741825 [0x40000001])) src/gui.c:161 -1
     (nil))

(insn 664 663 665 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (const_int 32 [0x20])) src/gui.c:161 -1
     (nil))

(insn 665 664 666 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 175 [ D.6620 ])) src/gui.c:161 -1
     (nil))

(insn 666 665 667 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 176 [ D.6621 ])) src/gui.c:161 -1
     (nil))

(call_insn 667 666 668 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_SetVideoMode") [flags 0x41]  <function_decl 0x4079f880 SDL_SetVideoMode>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:161 -1
     (nil)
    (nil))

(insn 668 667 0 (set (reg/f:SI 177 [ D.6622 ])
        (reg:SI 0 ax)) src/gui.c:161 -1
     (nil))

;; display_9(D)->screen = D.6622_130;

(insn 669 668 670 (set (reg/f:SI 465)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:161 -1
     (nil))

(insn 670 669 0 (set (mem/s/f/j:SI (reg/f:SI 465) [0 display_9(D)->screen+0 S4 A32])
        (reg/f:SI 177 [ D.6622 ])) src/gui.c:161 -1
     (nil))

;; D.6623_131 = display_9(D)->screen;

(insn 671 670 672 (set (reg/f:SI 466)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:163 -1
     (nil))

(insn 672 671 0 (set (reg/f:SI 178 [ D.6623 ])
        (mem/s/f/j:SI (reg/f:SI 466) [0 display_9(D)->screen+0 S4 A32])) src/gui.c:163 -1
     (nil))

;; if (D.6623_131 == 0B)

(insn 673 672 674 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 178 [ D.6623 ])
            (const_int 0 [0]))) src/gui.c:163 -1
     (nil))

(jump_insn 674 673 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:163 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; D.6626_132 = SDL_GetError ();

(call_insn 676 675 677 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_GetError") [flags 0x41]  <function_decl 0x40773880 SDL_GetError>) [0 S1 A8])
            (const_int 0 [0]))) src/gui.c:165 -1
     (nil)
    (nil))

(insn 677 676 0 (set (reg/f:SI 179 [ D.6626 ])
        (reg:SI 0 ax)) src/gui.c:165 -1
     (nil))

;; D.6627_133 = (const char * restrict) &"Impossible de charger le mode vidéo : %s\n"[0];

(insn 678 677 0 (set (reg/f:SI 180 [ D.6627 ])
        (symbol_ref/f:SI ("*.LC16") [flags 0x2]  <var_decl 0x408fdcc0 *.LC16>)) src/gui.c:165 -1
     (nil))

;; stderr.53_134 = stderr;

(insn 679 678 0 (set (reg/f:SI 181 [ stderr.53 ])
        (mem/f/c/i:SI (symbol_ref:SI ("stderr") [flags 0x40]  <var_decl 0x40711120 stderr>) [0 stderr+0 S4 A32])) src/gui.c:165 -1
     (nil))

;; stderr.54_135 = (struct FILE * restrict) stderr.53_134;

(insn 680 679 0 (set (reg/f:SI 182 [ stderr.54 ])
        (reg/f:SI 181 [ stderr.53 ])) src/gui.c:165 -1
     (nil))

;; fprintf (stderr.54_135, D.6627_133, D.6626_132);

(insn 681 680 682 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 179 [ D.6626 ])) src/gui.c:165 -1
     (nil))

(insn 682 681 683 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 180 [ D.6627 ])) src/gui.c:165 -1
     (nil))

(insn 683 682 684 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 182 [ stderr.54 ])) src/gui.c:165 -1
     (nil))

(call_insn 684 683 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fprintf") [flags 0x41]  <function_decl 0x406b1300 fprintf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:165 -1
     (nil)
    (nil))

;; free (temp_path_10);

(insn 685 684 686 (set (reg/f:SI 467)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:166 -1
     (nil))

(insn 686 685 687 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 467)) src/gui.c:166 -1
     (nil))

(call_insn 687 686 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:166 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; free (temp_name_83);

(insn 688 687 689 (set (reg/f:SI 468)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_name+0 S4 A32])) src/gui.c:167 -1
     (nil))

(insn 689 688 690 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 468)) src/gui.c:167 -1
     (nil))

(call_insn 690 689 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:167 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; exit (1);

(insn 691 690 692 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:168 -1
     (nil))

(call_insn 692 691 693 (call (mem:QI (symbol_ref:SI ("exit") [flags 0x41]  <function_decl 0x406bd980 exit>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:168 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))

(barrier 693 692 0)

;; Generating RTL for gimple basic block 25

;; 

(code_label 694 693 695 14 "" [0 uses])

(note 695 694 0 NOTE_INSN_BASIC_BLOCK)

;; SDL_WM_SetCaption ("Backgammon", 0B);

(insn 696 695 697 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:171 -1
     (nil))

(insn 697 696 698 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC17") [flags 0x2]  <var_decl 0x408fdd20 *.LC17>)) src/gui.c:171 -1
     (nil))

(call_insn 698 697 0 (call (mem:QI (symbol_ref:SI ("SDL_WM_SetCaption") [flags 0x41]  <function_decl 0x407d1e00 SDL_WM_SetCaption>) [0 S1 A8])
        (const_int 8 [0x8])) src/gui.c:171 -1
     (nil)
    (nil))

;; D.6630_136 = TTF_Init ();

(call_insn 699 698 700 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("TTF_Init") [flags 0x41]  <function_decl 0x407fac00 TTF_Init>) [0 S1 A8])
            (const_int 0 [0]))) src/gui.c:174 -1
     (nil)
    (nil))

(insn 700 699 0 (set (reg:SI 183 [ D.6630 ])
        (reg:SI 0 ax)) src/gui.c:174 -1
     (nil))

;; if (D.6630_136 == -1)

(insn 701 700 702 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 183 [ D.6630 ])
            (const_int -1 [0xffffffffffffffff]))) src/gui.c:174 -1
     (nil))

(jump_insn 702 701 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:174 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; D.6633_137 = SDL_GetError ();

(call_insn 704 703 705 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_GetError") [flags 0x41]  <function_decl 0x40773880 SDL_GetError>) [0 S1 A8])
            (const_int 0 [0]))) src/gui.c:176 -1
     (nil)
    (nil))

(insn 705 704 0 (set (reg/f:SI 184 [ D.6633 ])
        (reg:SI 0 ax)) src/gui.c:176 -1
     (nil))

;; D.6634_138 = (const char * restrict) &"Erreur d\'initialisation de TTF_Init : %s\n"[0];

(insn 706 705 0 (set (reg/f:SI 185 [ D.6634 ])
        (symbol_ref/f:SI ("*.LC18") [flags 0x2]  <var_decl 0x408fdd80 *.LC18>)) src/gui.c:176 -1
     (nil))

;; stderr.55_139 = stderr;

(insn 707 706 0 (set (reg/f:SI 186 [ stderr.55 ])
        (mem/f/c/i:SI (symbol_ref:SI ("stderr") [flags 0x40]  <var_decl 0x40711120 stderr>) [0 stderr+0 S4 A32])) src/gui.c:176 -1
     (nil))

;; stderr.56_140 = (struct FILE * restrict) stderr.55_139;

(insn 708 707 0 (set (reg/f:SI 187 [ stderr.56 ])
        (reg/f:SI 186 [ stderr.55 ])) src/gui.c:176 -1
     (nil))

;; fprintf (stderr.56_140, D.6634_138, D.6633_137);

(insn 709 708 710 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 184 [ D.6633 ])) src/gui.c:176 -1
     (nil))

(insn 710 709 711 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 185 [ D.6634 ])) src/gui.c:176 -1
     (nil))

(insn 711 710 712 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 187 [ stderr.56 ])) src/gui.c:176 -1
     (nil))

(call_insn 712 711 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fprintf") [flags 0x41]  <function_decl 0x406b1300 fprintf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:176 -1
     (nil)
    (nil))

;; free (temp_path_10);

(insn 713 712 714 (set (reg/f:SI 469)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:177 -1
     (nil))

(insn 714 713 715 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 469)) src/gui.c:177 -1
     (nil))

(call_insn 715 714 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:177 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; free (temp_name_83);

(insn 716 715 717 (set (reg/f:SI 470)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_name+0 S4 A32])) src/gui.c:178 -1
     (nil))

(insn 717 716 718 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 470)) src/gui.c:178 -1
     (nil))

(call_insn 718 717 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:178 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; exit (1);

(insn 719 718 720 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:179 -1
     (nil))

(call_insn 720 719 721 (call (mem:QI (symbol_ref:SI ("exit") [flags 0x41]  <function_decl 0x406bd980 exit>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:179 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))

(barrier 721 720 0)

;; Generating RTL for gimple basic block 27

;; 

(code_label 722 721 723 15 "" [0 uses])

(note 723 722 0 NOTE_INSN_BASIC_BLOCK)

;; D.6637_141 = display_9(D)->font_path;

(insn 724 723 725 (set (reg/f:SI 471)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:183 -1
     (nil))

(insn 725 724 0 (set (reg/f:SI 188 [ D.6637 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 471)
                (const_int 116 [0x74])) [0 display_9(D)->font_path+0 S4 A32])) src/gui.c:183 -1
     (nil))

;; D.6638_142 = (const char * restrict) D.6637_141;

(insn 726 725 0 (set (reg/f:SI 189 [ D.6638 ])
        (reg/f:SI 188 [ D.6637 ])) src/gui.c:183 -1
     (nil))

;; strcpy (temp_path_10, D.6638_142);

(insn 727 726 728 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 189 [ D.6638 ])) src/gui.c:183 -1
     (nil))

(insn 728 727 729 (set (reg/f:SI 472)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:183 -1
     (nil))

(insn 729 728 730 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 472)) src/gui.c:183 -1
     (nil))

(call_insn 730 729 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:183 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6639_143 = (const char * restrict) &"comic.ttf"[0];

(insn 731 730 0 (set (reg/f:SI 190 [ D.6639 ])
        (symbol_ref/f:SI ("*.LC19") [flags 0x2]  <var_decl 0x408fdde0 *.LC19>)) src/gui.c:184 -1
     (nil))

;; D.6640_144 = __builtin_strlen (temp_path_10);

(insn 738 731 732 (set (reg:SI 473)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:184 -1
     (nil))

(insn 732 738 733 (set (reg:SI 477)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:184 -1
     (nil))

(insn 733 732 734 (set (reg:SI 476)
        (reg:SI 473)) src/gui.c:184 -1
     (nil))

(insn 734 733 735 (set (reg:QI 478)
        (const_int 0 [0])) src/gui.c:184 -1
     (nil))

(insn 735 734 736 (parallel [
            (set (reg:SI 474)
                (unspec:SI [
                        (mem:BLK (reg:SI 476) [0 A8])
                        (reg:QI 478)
                        (const_int 1 [0x1])
                        (reg:SI 477)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 476))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:184 -1
     (nil))

(insn 736 735 737 (set (reg:SI 475)
        (not:SI (reg:SI 474))) src/gui.c:184 -1
     (nil))

(insn 737 736 0 (parallel [
            (set (reg:SI 191 [ D.6640 ])
                (plus:SI (reg:SI 475)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:184 -1
     (nil))

;; D.6641_145 = temp_path_10 + D.6640_144;

(insn 739 737 0 (parallel [
            (set (reg/f:SI 192 [ D.6641 ])
                (plus:SI (reg:SI 191 [ D.6640 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:184 -1
     (nil))

;; __builtin_memcpy (D.6641_145, D.6639_143, 10);

(insn 740 739 741 (set (reg:SI 479)
        (mem:SI (reg/f:SI 190 [ D.6639 ]) [0 S4 A8])) src/gui.c:184 -1
     (nil))

(insn 741 740 742 (set (mem:SI (reg/f:SI 192 [ D.6641 ]) [0 S4 A8])
        (reg:SI 479)) src/gui.c:184 -1
     (nil))

(insn 742 741 743 (set (reg:SI 480)
        (mem:SI (plus:SI (reg/f:SI 190 [ D.6639 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:184 -1
     (nil))

(insn 743 742 744 (set (mem:SI (plus:SI (reg/f:SI 192 [ D.6641 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 480)) src/gui.c:184 -1
     (nil))

(insn 744 743 745 (set (reg:HI 481)
        (mem:HI (plus:SI (reg/f:SI 190 [ D.6639 ])
                (const_int 8 [0x8])) [0 S2 A8])) src/gui.c:184 -1
     (nil))

(insn 745 744 0 (set (mem:HI (plus:SI (reg/f:SI 192 [ D.6641 ])
                (const_int 8 [0x8])) [0 S2 A8])
        (reg:HI 481)) src/gui.c:184 -1
     (nil))

;; D.6642_146 = TTF_OpenFont (temp_path_10, 22);

(insn 746 745 747 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 22 [0x16])) src/gui.c:185 -1
     (nil))

(insn 747 746 748 (set (reg/f:SI 482)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:185 -1
     (nil))

(insn 748 747 749 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 482)) src/gui.c:185 -1
     (nil))

(call_insn 749 748 750 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("TTF_OpenFont") [flags 0x41]  <function_decl 0x407fac80 TTF_OpenFont>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:185 -1
     (nil)
    (nil))

(insn 750 749 0 (set (reg/f:SI 193 [ D.6642 ])
        (reg:SI 0 ax)) src/gui.c:185 -1
     (nil))

;; display_9(D)->font = D.6642_146;

(insn 751 750 752 (set (reg/f:SI 483)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:185 -1
     (nil))

(insn 752 751 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 483)
                (const_int 36 [0x24])) [0 display_9(D)->font+0 S4 A32])
        (reg/f:SI 193 [ D.6642 ])) src/gui.c:185 -1
     (nil))

;; D.6643_147 = malloc (12);

(insn 753 752 754 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 12 [0xc])) src/gui.c:188 -1
     (nil))

(call_insn 754 753 755 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:188 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 755 754 756 (set (reg/f:SI 484)
        (reg:SI 0 ax)) src/gui.c:188 -1
     (expr_list:REG_NOALIAS (reg/f:SI 484)
        (nil)))

(insn 756 755 0 (set (reg/f:SI 194 [ D.6643 ])
        (reg/f:SI 484)) src/gui.c:188 -1
     (nil))

;; game_148(D)->player1_name = D.6643_147;

(insn 757 756 758 (set (reg/f:SI 485)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:188 -1
     (nil))

(insn 758 757 0 (set (mem/s/f/j:SI (reg/f:SI 485) [0 game_148(D)->player1_name+0 S4 A32])
        (reg/f:SI 194 [ D.6643 ])) src/gui.c:188 -1
     (nil))

;; D.6644_149 = malloc (12);

(insn 759 758 760 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 12 [0xc])) src/gui.c:189 -1
     (nil))

(call_insn 760 759 761 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:189 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 761 760 762 (set (reg/f:SI 486)
        (reg:SI 0 ax)) src/gui.c:189 -1
     (expr_list:REG_NOALIAS (reg/f:SI 486)
        (nil)))

(insn 762 761 0 (set (reg/f:SI 195 [ D.6644 ])
        (reg/f:SI 486)) src/gui.c:189 -1
     (nil))

;; game_148(D)->player2_name = D.6644_149;

(insn 763 762 764 (set (reg/f:SI 487)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:189 -1
     (nil))

(insn 764 763 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 487)
                (const_int 4 [0x4])) [0 game_148(D)->player2_name+0 S4 A32])
        (reg/f:SI 195 [ D.6644 ])) src/gui.c:189 -1
     (nil))

;; game_148(D)->player1_checker = 0;

(insn 765 764 766 (set (reg/f:SI 488)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:190 -1
     (nil))

(insn 766 765 0 (set (mem/s/j:SI (plus:SI (reg/f:SI 488)
                (const_int 8 [0x8])) [0 game_148(D)->player1_checker+0 S4 A32])
        (const_int 0 [0])) src/gui.c:190 -1
     (nil))

;; game_148(D)->player2_checker = 1;

(insn 767 766 768 (set (reg/f:SI 489)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:191 -1
     (nil))

(insn 768 767 0 (set (mem/s/j:SI (plus:SI (reg/f:SI 489)
                (const_int 12 [0xc])) [0 game_148(D)->player2_checker+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:191 -1
     (nil))

;; game_148(D)->withDouble = 1;

(insn 769 768 770 (set (reg/f:SI 490)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:192 -1
     (nil))

(insn 770 769 0 (set (mem/s/j:SI (plus:SI (reg/f:SI 490)
                (const_int 16 [0x10])) [0 game_148(D)->withDouble+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:192 -1
     (nil))

;; game_148(D)->scoreLimit = 5;

(insn 771 770 772 (set (reg/f:SI 491)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:193 -1
     (nil))

(insn 772 771 0 (set (mem/s/j:SI (plus:SI (reg/f:SI 491)
                (const_int 20 [0x14])) [0 game_148(D)->scoreLimit+0 S4 A32])
        (const_int 5 [0x5])) src/gui.c:193 -1
     (nil))

;; free (temp_path_10);

(insn 773 772 774 (set (reg/f:SI 492)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:195 -1
     (nil))

(insn 774 773 775 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 492)) src/gui.c:195 -1
     (nil))

(call_insn 775 774 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:195 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; free (temp_name_83);

(insn 776 775 777 (set (reg/f:SI 493)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_name+0 S4 A32])) src/gui.c:196 -1
     (nil))

(insn 777 776 778 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 493)) src/gui.c:196 -1
     (nil))

(call_insn 778 777 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:196 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 32 [0x20])) src/gui.c:22 -1
     (nil))

(call_insn 6 5 7 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_Init") [flags 0x41]  <function_decl 0x407f0700 SDL_Init>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:22 -1
     (nil)
    (nil))

(insn 7 6 8 3 (set (reg:SI 59 [ D.6484 ])
        (reg:SI 0 ax)) src/gui.c:22 -1
     (nil))

(insn 8 7 9 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.6484 ])
            (const_int -1 [0xffffffffffffffff]))) src/gui.c:22 -1
     (nil))

(jump_insn 9 8 10 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) src/gui.c:22 -1
     (nil)
 -> 28)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 4 (set (reg/f:SI 60 [ stderr.50 ])
        (mem/f/c/i:SI (symbol_ref:SI ("stderr") [flags 0x40]  <var_decl 0x40711120 stderr>) [0 stderr+0 S4 A32])) src/gui.c:24 -1
     (nil))

(insn 12 11 13 4 (set (reg/f:SI 61 [ stderr.51 ])
        (reg/f:SI 60 [ stderr.50 ])) src/gui.c:24 -1
     (nil))

(insn 13 12 14 4 (set (reg/f:SI 62 [ D.6489 ])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x408fd6c0 *.LC0>)) src/gui.c:24 -1
     (nil))

(insn 14 13 15 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 61 [ stderr.51 ])) src/gui.c:24 -1
     (nil))

(insn 15 14 16 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (const_int 33 [0x21])) src/gui.c:24 -1
     (nil))

(insn 16 15 17 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:24 -1
     (nil))

(insn 17 16 18 4 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 62 [ D.6489 ])) src/gui.c:24 -1
     (nil))

(call_insn 18 17 19 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fwrite") [flags 0x41]  <function_decl 0x406b1980 __builtin_fwrite>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:24 -1
     (nil)
    (nil))

(insn 19 18 20 4 (set (reg/f:SI 196)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:25 -1
     (nil))

(insn 20 19 21 4 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 196)) src/gui.c:25 -1
     (nil))

(call_insn 21 20 22 4 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:25 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 22 21 23 4 (set (reg/f:SI 197)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_name+0 S4 A32])) src/gui.c:26 -1
     (nil))

(insn 23 22 24 4 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 197)) src/gui.c:26 -1
     (nil))

(call_insn 24 23 25 4 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:26 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 25 24 26 4 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:27 -1
     (nil))

(call_insn 26 25 27 4 (call (mem:QI (symbol_ref:SI ("exit") [flags 0x41]  <function_decl 0x406bd980 exit>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:27 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;; End of basic block 4 -> ()


(barrier 27 26 28)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 28 27 29 5 2 "" [1 uses])

(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 5 (set (reg/f:SI 198)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:31 -1
     (nil))

(insn 31 30 32 5 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 198)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x408fd720 *.LC1>)) src/gui.c:31 -1
     (nil))

(insn 32 31 33 5 (set (reg/f:SI 199)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:34 -1
     (nil))

(insn 33 32 34 5 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 199)
                (const_int 116 [0x74])) [0 display_9(D)->font_path+0 S4 A32])
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x408fd780 *.LC2>)) src/gui.c:34 -1
     (nil))

(insn 34 33 35 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 100 [0x64])) src/gui.c:35 -1
     (nil))

(call_insn 35 34 36 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:35 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 36 35 37 5 (set (reg/f:SI 200)
        (reg:SI 0 ax)) src/gui.c:35 -1
     (expr_list:REG_NOALIAS (reg/f:SI 200)
        (nil)))

(insn 37 36 38 5 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])
        (reg/f:SI 200)) src/gui.c:35 -1
     (nil))

(insn 38 37 39 5 (set (reg/f:SI 201)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:38 -1
     (nil))

(insn 39 38 40 5 (set (reg/f:SI 63 [ D.6490 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 201)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:38 -1
     (nil))

(insn 40 39 41 5 (set (reg/f:SI 64 [ D.6491 ])
        (reg/f:SI 63 [ D.6490 ])) src/gui.c:38 -1
     (nil))

(insn 41 40 42 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 64 [ D.6491 ])) src/gui.c:38 -1
     (nil))

(insn 42 41 43 5 (set (reg/f:SI 202)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:38 -1
     (nil))

(insn 43 42 44 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 202)) src/gui.c:38 -1
     (nil))

(call_insn 44 43 45 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:38 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 45 44 52 5 (set (reg/f:SI 65 [ D.6492 ])
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x408fd7e0 *.LC3>)) src/gui.c:39 -1
     (nil))

(insn 52 45 46 5 (set (reg:SI 203)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:39 -1
     (nil))

(insn 46 52 47 5 (set (reg:SI 207)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:39 -1
     (nil))

(insn 47 46 48 5 (set (reg:SI 206)
        (reg:SI 203)) src/gui.c:39 -1
     (nil))

(insn 48 47 49 5 (set (reg:QI 208)
        (const_int 0 [0])) src/gui.c:39 -1
     (nil))

(insn 49 48 50 5 (parallel [
            (set (reg:SI 204)
                (unspec:SI [
                        (mem:BLK (reg:SI 206) [0 A8])
                        (reg:QI 208)
                        (const_int 1 [0x1])
                        (reg:SI 207)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 206))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:39 -1
     (nil))

(insn 50 49 51 5 (set (reg:SI 205)
        (not:SI (reg:SI 204))) src/gui.c:39 -1
     (nil))

(insn 51 50 53 5 (parallel [
            (set (reg:SI 66 [ D.6493 ])
                (plus:SI (reg:SI 205)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:39 -1
     (nil))

(insn 53 51 54 5 (parallel [
            (set (reg/f:SI 67 [ D.6494 ])
                (plus:SI (reg:SI 66 [ D.6493 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:39 -1
     (nil))

(insn 54 53 55 5 (set (reg:SI 209)
        (mem:SI (reg/f:SI 65 [ D.6492 ]) [0 S4 A8])) src/gui.c:39 -1
     (nil))

(insn 55 54 56 5 (set (mem:SI (reg/f:SI 67 [ D.6494 ]) [0 S4 A8])
        (reg:SI 209)) src/gui.c:39 -1
     (nil))

(insn 56 55 57 5 (set (reg:SI 210)
        (mem:SI (plus:SI (reg/f:SI 65 [ D.6492 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:39 -1
     (nil))

(insn 57 56 58 5 (set (mem:SI (plus:SI (reg/f:SI 67 [ D.6494 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 210)) src/gui.c:39 -1
     (nil))

(insn 58 57 59 5 (set (reg:QI 211)
        (mem:QI (plus:SI (reg/f:SI 65 [ D.6492 ])
                (const_int 8 [0x8])) [0 S1 A8])) src/gui.c:39 -1
     (nil))

(insn 59 58 60 5 (set (mem:QI (plus:SI (reg/f:SI 67 [ D.6494 ])
                (const_int 8 [0x8])) [0 S1 A8])
        (reg:QI 211)) src/gui.c:39 -1
     (nil))

(insn 60 59 61 5 (set (reg/f:SI 212)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:40 -1
     (nil))

(insn 61 60 62 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 212)) src/gui.c:40 -1
     (nil))

(call_insn 62 61 63 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:40 -1
     (nil)
    (nil))

(insn 63 62 64 5 (set (reg/f:SI 68 [ D.6495 ])
        (reg:SI 0 ax)) src/gui.c:40 -1
     (nil))

(insn 64 63 65 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:40 -1
     (nil))

(insn 65 64 66 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 68 [ D.6495 ])) src/gui.c:40 -1
     (nil))

(call_insn 66 65 67 5 (call (mem:QI (symbol_ref:SI ("SDL_WM_SetIcon") [flags 0x41]  <function_decl 0x407d1f00 SDL_WM_SetIcon>) [0 S1 A8])
        (const_int 8 [0x8])) src/gui.c:40 -1
     (nil)
    (nil))

(insn 67 66 68 5 (set (reg/f:SI 213)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:43 -1
     (nil))

(insn 68 67 69 5 (set (reg/f:SI 69 [ D.6496 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 213)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:43 -1
     (nil))

(insn 69 68 70 5 (set (reg/f:SI 70 [ D.6497 ])
        (reg/f:SI 69 [ D.6496 ])) src/gui.c:43 -1
     (nil))

(insn 70 69 71 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 70 [ D.6497 ])) src/gui.c:43 -1
     (nil))

(insn 71 70 72 5 (set (reg/f:SI 214)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:43 -1
     (nil))

(insn 72 71 73 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 214)) src/gui.c:43 -1
     (nil))

(call_insn 73 72 74 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:43 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 74 73 81 5 (set (reg/f:SI 71 [ D.6498 ])
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x408fd840 *.LC4>)) src/gui.c:44 -1
     (nil))

(insn 81 74 75 5 (set (reg:SI 215)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:44 -1
     (nil))

(insn 75 81 76 5 (set (reg:SI 219)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:44 -1
     (nil))

(insn 76 75 77 5 (set (reg:SI 218)
        (reg:SI 215)) src/gui.c:44 -1
     (nil))

(insn 77 76 78 5 (set (reg:QI 220)
        (const_int 0 [0])) src/gui.c:44 -1
     (nil))

(insn 78 77 79 5 (parallel [
            (set (reg:SI 216)
                (unspec:SI [
                        (mem:BLK (reg:SI 218) [0 A8])
                        (reg:QI 220)
                        (const_int 1 [0x1])
                        (reg:SI 219)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 218))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:44 -1
     (nil))

(insn 79 78 80 5 (set (reg:SI 217)
        (not:SI (reg:SI 216))) src/gui.c:44 -1
     (nil))

(insn 80 79 82 5 (parallel [
            (set (reg:SI 72 [ D.6499 ])
                (plus:SI (reg:SI 217)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:44 -1
     (nil))

(insn 82 80 83 5 (parallel [
            (set (reg/f:SI 73 [ D.6500 ])
                (plus:SI (reg:SI 72 [ D.6499 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:44 -1
     (nil))

(insn 83 82 84 5 (set (reg:SI 221)
        (mem:SI (reg/f:SI 71 [ D.6498 ]) [0 S4 A8])) src/gui.c:44 -1
     (nil))

(insn 84 83 85 5 (set (mem:SI (reg/f:SI 73 [ D.6500 ]) [0 S4 A8])
        (reg:SI 221)) src/gui.c:44 -1
     (nil))

(insn 85 84 86 5 (set (reg:SI 222)
        (mem:SI (plus:SI (reg/f:SI 71 [ D.6498 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:44 -1
     (nil))

(insn 86 85 87 5 (set (mem:SI (plus:SI (reg/f:SI 73 [ D.6500 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 222)) src/gui.c:44 -1
     (nil))

(insn 87 86 88 5 (set (reg:SI 223)
        (mem:SI (plus:SI (reg/f:SI 71 [ D.6498 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:44 -1
     (nil))

(insn 88 87 89 5 (set (mem:SI (plus:SI (reg/f:SI 73 [ D.6500 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 223)) src/gui.c:44 -1
     (nil))

(insn 89 88 90 5 (set (reg:HI 224)
        (mem:HI (plus:SI (reg/f:SI 71 [ D.6498 ])
                (const_int 12 [0xc])) [0 S2 A8])) src/gui.c:44 -1
     (nil))

(insn 90 89 91 5 (set (mem:HI (plus:SI (reg/f:SI 73 [ D.6500 ])
                (const_int 12 [0xc])) [0 S2 A8])
        (reg:HI 224)) src/gui.c:44 -1
     (nil))

(insn 91 90 92 5 (set (reg:QI 225)
        (mem:QI (plus:SI (reg/f:SI 71 [ D.6498 ])
                (const_int 14 [0xe])) [0 S1 A8])) src/gui.c:44 -1
     (nil))

(insn 92 91 93 5 (set (mem:QI (plus:SI (reg/f:SI 73 [ D.6500 ])
                (const_int 14 [0xe])) [0 S1 A8])
        (reg:QI 225)) src/gui.c:44 -1
     (nil))

(insn 93 92 94 5 (set (reg/f:SI 226)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:45 -1
     (nil))

(insn 94 93 95 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 226)) src/gui.c:45 -1
     (nil))

(call_insn 95 94 96 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:45 -1
     (nil)
    (nil))

(insn 96 95 97 5 (set (reg/f:SI 74 [ D.6501 ])
        (reg:SI 0 ax)) src/gui.c:45 -1
     (nil))

(insn 97 96 98 5 (set (reg/f:SI 227)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:45 -1
     (nil))

(insn 98 97 99 5 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 227)
                (const_int 12 [0xc])) [0 display_9(D)->background+0 S4 A32])
        (reg/f:SI 74 [ D.6501 ])) src/gui.c:45 -1
     (nil))

(insn 99 98 100 5 (set (reg/f:SI 228)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:46 -1
     (nil))

(insn 100 99 101 5 (set (mem/s/j:HI (plus:SI (reg/f:SI 228)
                (const_int 16 [0x10])) [0 display_9(D)->background_position.x+0 S2 A32])
        (const_int 0 [0])) src/gui.c:46 -1
     (nil))

(insn 101 100 102 5 (set (reg/f:SI 229)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:47 -1
     (nil))

(insn 102 101 103 5 (set (mem/s/j:HI (plus:SI (reg/f:SI 229)
                (const_int 18 [0x12])) [0 display_9(D)->background_position.y+0 S2 A16])
        (const_int 0 [0])) src/gui.c:47 -1
     (nil))

(insn 103 102 104 5 (set (reg/f:SI 230)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:50 -1
     (nil))

(insn 104 103 105 5 (set (reg/f:SI 75 [ D.6502 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 230)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:50 -1
     (nil))

(insn 105 104 106 5 (set (reg/f:SI 76 [ D.6503 ])
        (reg/f:SI 75 [ D.6502 ])) src/gui.c:50 -1
     (nil))

(insn 106 105 107 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 76 [ D.6503 ])) src/gui.c:50 -1
     (nil))

(insn 107 106 108 5 (set (reg/f:SI 231)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:50 -1
     (nil))

(insn 108 107 109 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 231)) src/gui.c:50 -1
     (nil))

(call_insn 109 108 110 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:50 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 110 109 117 5 (set (reg/f:SI 77 [ D.6504 ])
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x408fd8a0 *.LC5>)) src/gui.c:51 -1
     (nil))

(insn 117 110 111 5 (set (reg:SI 232)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:51 -1
     (nil))

(insn 111 117 112 5 (set (reg:SI 236)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:51 -1
     (nil))

(insn 112 111 113 5 (set (reg:SI 235)
        (reg:SI 232)) src/gui.c:51 -1
     (nil))

(insn 113 112 114 5 (set (reg:QI 237)
        (const_int 0 [0])) src/gui.c:51 -1
     (nil))

(insn 114 113 115 5 (parallel [
            (set (reg:SI 233)
                (unspec:SI [
                        (mem:BLK (reg:SI 235) [0 A8])
                        (reg:QI 237)
                        (const_int 1 [0x1])
                        (reg:SI 236)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 235))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:51 -1
     (nil))

(insn 115 114 116 5 (set (reg:SI 234)
        (not:SI (reg:SI 233))) src/gui.c:51 -1
     (nil))

(insn 116 115 118 5 (parallel [
            (set (reg:SI 78 [ D.6505 ])
                (plus:SI (reg:SI 234)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:51 -1
     (nil))

(insn 118 116 119 5 (parallel [
            (set (reg/f:SI 79 [ D.6506 ])
                (plus:SI (reg:SI 78 [ D.6505 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:51 -1
     (nil))

(insn 119 118 120 5 (set (reg:SI 238)
        (mem:SI (reg/f:SI 77 [ D.6504 ]) [0 S4 A8])) src/gui.c:51 -1
     (nil))

(insn 120 119 121 5 (set (mem:SI (reg/f:SI 79 [ D.6506 ]) [0 S4 A8])
        (reg:SI 238)) src/gui.c:51 -1
     (nil))

(insn 121 120 122 5 (set (reg:SI 239)
        (mem:SI (plus:SI (reg/f:SI 77 [ D.6504 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:51 -1
     (nil))

(insn 122 121 123 5 (set (mem:SI (plus:SI (reg/f:SI 79 [ D.6506 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 239)) src/gui.c:51 -1
     (nil))

(insn 123 122 124 5 (set (reg:SI 240)
        (mem:SI (plus:SI (reg/f:SI 77 [ D.6504 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:51 -1
     (nil))

(insn 124 123 125 5 (set (mem:SI (plus:SI (reg/f:SI 79 [ D.6506 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 240)) src/gui.c:51 -1
     (nil))

(insn 125 124 126 5 (set (reg:HI 241)
        (mem:HI (plus:SI (reg/f:SI 77 [ D.6504 ])
                (const_int 12 [0xc])) [0 S2 A8])) src/gui.c:51 -1
     (nil))

(insn 126 125 127 5 (set (mem:HI (plus:SI (reg/f:SI 79 [ D.6506 ])
                (const_int 12 [0xc])) [0 S2 A8])
        (reg:HI 241)) src/gui.c:51 -1
     (nil))

(insn 127 126 128 5 (set (reg/f:SI 242)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:52 -1
     (nil))

(insn 128 127 129 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 242)) src/gui.c:52 -1
     (nil))

(call_insn 129 128 130 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:52 -1
     (nil)
    (nil))

(insn 130 129 131 5 (set (reg/f:SI 80 [ D.6507 ])
        (reg:SI 0 ax)) src/gui.c:52 -1
     (nil))

(insn 131 130 132 5 (set (reg/f:SI 243)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:52 -1
     (nil))

(insn 132 131 133 5 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 243)
                (const_int 24 [0x18])) [0 display_9(D)->gameBoard+0 S4 A32])
        (reg/f:SI 80 [ D.6507 ])) src/gui.c:52 -1
     (nil))

(insn 133 132 134 5 (set (reg/f:SI 244)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:53 -1
     (nil))

(insn 134 133 135 5 (set (mem/s/j:HI (plus:SI (reg/f:SI 244)
                (const_int 28 [0x1c])) [0 display_9(D)->gameBoard_position.x+0 S2 A32])
        (const_int 0 [0])) src/gui.c:53 -1
     (nil))

(insn 135 134 136 5 (set (reg/f:SI 245)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:54 -1
     (nil))

(insn 136 135 137 5 (set (mem/s/j:HI (plus:SI (reg/f:SI 245)
                (const_int 30 [0x1e])) [0 display_9(D)->gameBoard_position.y+0 S2 A16])
        (const_int 140 [0x8c])) src/gui.c:54 -1
     (nil))

(insn 137 136 138 5 (set (reg/f:SI 246)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:57 -1
     (nil))

(insn 138 137 139 5 (set (reg/f:SI 81 [ D.6508 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 246)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:57 -1
     (nil))

(insn 139 138 140 5 (set (reg/f:SI 82 [ D.6509 ])
        (reg/f:SI 81 [ D.6508 ])) src/gui.c:57 -1
     (nil))

(insn 140 139 141 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 82 [ D.6509 ])) src/gui.c:57 -1
     (nil))

(insn 141 140 142 5 (set (reg/f:SI 247)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:57 -1
     (nil))

(insn 142 141 143 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 247)) src/gui.c:57 -1
     (nil))

(call_insn 143 142 144 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:57 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 144 143 151 5 (set (reg/f:SI 83 [ D.6510 ])
        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x408fd900 *.LC6>)) src/gui.c:58 -1
     (nil))

(insn 151 144 145 5 (set (reg:SI 248)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:58 -1
     (nil))

(insn 145 151 146 5 (set (reg:SI 252)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:58 -1
     (nil))

(insn 146 145 147 5 (set (reg:SI 251)
        (reg:SI 248)) src/gui.c:58 -1
     (nil))

(insn 147 146 148 5 (set (reg:QI 253)
        (const_int 0 [0])) src/gui.c:58 -1
     (nil))

(insn 148 147 149 5 (parallel [
            (set (reg:SI 249)
                (unspec:SI [
                        (mem:BLK (reg:SI 251) [0 A8])
                        (reg:QI 253)
                        (const_int 1 [0x1])
                        (reg:SI 252)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 251))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:58 -1
     (nil))

(insn 149 148 150 5 (set (reg:SI 250)
        (not:SI (reg:SI 249))) src/gui.c:58 -1
     (nil))

(insn 150 149 152 5 (parallel [
            (set (reg:SI 84 [ D.6511 ])
                (plus:SI (reg:SI 250)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:58 -1
     (nil))

(insn 152 150 153 5 (parallel [
            (set (reg/f:SI 85 [ D.6512 ])
                (plus:SI (reg:SI 84 [ D.6511 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:58 -1
     (nil))

(insn 153 152 154 5 (set (reg:SI 254)
        (mem:SI (reg/f:SI 83 [ D.6510 ]) [0 S4 A8])) src/gui.c:58 -1
     (nil))

(insn 154 153 155 5 (set (mem:SI (reg/f:SI 85 [ D.6512 ]) [0 S4 A8])
        (reg:SI 254)) src/gui.c:58 -1
     (nil))

(insn 155 154 156 5 (set (reg:SI 255)
        (mem:SI (plus:SI (reg/f:SI 83 [ D.6510 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:58 -1
     (nil))

(insn 156 155 157 5 (set (mem:SI (plus:SI (reg/f:SI 85 [ D.6512 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 255)) src/gui.c:58 -1
     (nil))

(insn 157 156 158 5 (set (reg:SI 256)
        (mem:SI (plus:SI (reg/f:SI 83 [ D.6510 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:58 -1
     (nil))

(insn 158 157 159 5 (set (mem:SI (plus:SI (reg/f:SI 85 [ D.6512 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 256)) src/gui.c:58 -1
     (nil))

(insn 159 158 160 5 (set (reg:SI 257)
        (mem:SI (plus:SI (reg/f:SI 83 [ D.6510 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:58 -1
     (nil))

(insn 160 159 161 5 (set (mem:SI (plus:SI (reg/f:SI 85 [ D.6512 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 257)) src/gui.c:58 -1
     (nil))

(insn 161 160 162 5 (set (reg:HI 258)
        (mem:HI (plus:SI (reg/f:SI 83 [ D.6510 ])
                (const_int 16 [0x10])) [0 S2 A8])) src/gui.c:58 -1
     (nil))

(insn 162 161 163 5 (set (mem:HI (plus:SI (reg/f:SI 85 [ D.6512 ])
                (const_int 16 [0x10])) [0 S2 A8])
        (reg:HI 258)) src/gui.c:58 -1
     (nil))

(insn 163 162 164 5 (set (reg/f:SI 259)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:59 -1
     (nil))

(insn 164 163 165 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 259)) src/gui.c:59 -1
     (nil))

(call_insn 165 164 166 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:59 -1
     (nil)
    (nil))

(insn 166 165 167 5 (set (reg/f:SI 86 [ D.6513 ])
        (reg:SI 0 ax)) src/gui.c:59 -1
     (nil))

(insn 167 166 168 5 (set (reg/f:SI 260)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:59 -1
     (nil))

(insn 168 167 169 5 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 260)
                (const_int 48 [0x30])) [0 display_9(D)->white_checker+0 S4 A32])
        (reg/f:SI 86 [ D.6513 ])) src/gui.c:59 -1
     (nil))

(insn 169 168 170 5 (set (reg/f:SI 261)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:62 -1
     (nil))

(insn 170 169 171 5 (set (reg/f:SI 87 [ D.6514 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 261)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:62 -1
     (nil))

(insn 171 170 172 5 (set (reg/f:SI 88 [ D.6515 ])
        (reg/f:SI 87 [ D.6514 ])) src/gui.c:62 -1
     (nil))

(insn 172 171 173 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 88 [ D.6515 ])) src/gui.c:62 -1
     (nil))

(insn 173 172 174 5 (set (reg/f:SI 262)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:62 -1
     (nil))

(insn 174 173 175 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 262)) src/gui.c:62 -1
     (nil))

(call_insn 175 174 176 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:62 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 176 175 183 5 (set (reg/f:SI 89 [ D.6516 ])
        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x408fd960 *.LC7>)) src/gui.c:63 -1
     (nil))

(insn 183 176 177 5 (set (reg:SI 263)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:63 -1
     (nil))

(insn 177 183 178 5 (set (reg:SI 267)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:63 -1
     (nil))

(insn 178 177 179 5 (set (reg:SI 266)
        (reg:SI 263)) src/gui.c:63 -1
     (nil))

(insn 179 178 180 5 (set (reg:QI 268)
        (const_int 0 [0])) src/gui.c:63 -1
     (nil))

(insn 180 179 181 5 (parallel [
            (set (reg:SI 264)
                (unspec:SI [
                        (mem:BLK (reg:SI 266) [0 A8])
                        (reg:QI 268)
                        (const_int 1 [0x1])
                        (reg:SI 267)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 266))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:63 -1
     (nil))

(insn 181 180 182 5 (set (reg:SI 265)
        (not:SI (reg:SI 264))) src/gui.c:63 -1
     (nil))

(insn 182 181 184 5 (parallel [
            (set (reg:SI 90 [ D.6517 ])
                (plus:SI (reg:SI 265)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:63 -1
     (nil))

(insn 184 182 185 5 (parallel [
            (set (reg/f:SI 91 [ D.6518 ])
                (plus:SI (reg:SI 90 [ D.6517 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:63 -1
     (nil))

(insn 185 184 186 5 (set (reg:SI 269)
        (mem:SI (reg/f:SI 89 [ D.6516 ]) [0 S4 A8])) src/gui.c:63 -1
     (nil))

(insn 186 185 187 5 (set (mem:SI (reg/f:SI 91 [ D.6518 ]) [0 S4 A8])
        (reg:SI 269)) src/gui.c:63 -1
     (nil))

(insn 187 186 188 5 (set (reg:SI 270)
        (mem:SI (plus:SI (reg/f:SI 89 [ D.6516 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:63 -1
     (nil))

(insn 188 187 189 5 (set (mem:SI (plus:SI (reg/f:SI 91 [ D.6518 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 270)) src/gui.c:63 -1
     (nil))

(insn 189 188 190 5 (set (reg:SI 271)
        (mem:SI (plus:SI (reg/f:SI 89 [ D.6516 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:63 -1
     (nil))

(insn 190 189 191 5 (set (mem:SI (plus:SI (reg/f:SI 91 [ D.6518 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 271)) src/gui.c:63 -1
     (nil))

(insn 191 190 192 5 (set (reg:SI 272)
        (mem:SI (plus:SI (reg/f:SI 89 [ D.6516 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:63 -1
     (nil))

(insn 192 191 193 5 (set (mem:SI (plus:SI (reg/f:SI 91 [ D.6518 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 272)) src/gui.c:63 -1
     (nil))

(insn 193 192 194 5 (set (reg:HI 273)
        (mem:HI (plus:SI (reg/f:SI 89 [ D.6516 ])
                (const_int 16 [0x10])) [0 S2 A8])) src/gui.c:63 -1
     (nil))

(insn 194 193 195 5 (set (mem:HI (plus:SI (reg/f:SI 91 [ D.6518 ])
                (const_int 16 [0x10])) [0 S2 A8])
        (reg:HI 273)) src/gui.c:63 -1
     (nil))

(insn 195 194 196 5 (set (reg/f:SI 274)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:64 -1
     (nil))

(insn 196 195 197 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 274)) src/gui.c:64 -1
     (nil))

(call_insn 197 196 198 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:64 -1
     (nil)
    (nil))

(insn 198 197 199 5 (set (reg/f:SI 92 [ D.6519 ])
        (reg:SI 0 ax)) src/gui.c:64 -1
     (nil))

(insn 199 198 200 5 (set (reg/f:SI 275)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:64 -1
     (nil))

(insn 200 199 201 5 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 275)
                (const_int 44 [0x2c])) [0 display_9(D)->green_checker+0 S4 A32])
        (reg/f:SI 92 [ D.6519 ])) src/gui.c:64 -1
     (nil))

(insn 201 200 202 5 (set (reg/f:SI 276)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:67 -1
     (nil))

(insn 202 201 203 5 (set (reg/f:SI 93 [ D.6520 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 276)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:67 -1
     (nil))

(insn 203 202 204 5 (set (reg/f:SI 94 [ D.6521 ])
        (reg/f:SI 93 [ D.6520 ])) src/gui.c:67 -1
     (nil))

(insn 204 203 205 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 94 [ D.6521 ])) src/gui.c:67 -1
     (nil))

(insn 205 204 206 5 (set (reg/f:SI 277)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:67 -1
     (nil))

(insn 206 205 207 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 277)) src/gui.c:67 -1
     (nil))

(call_insn 207 206 208 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:67 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 208 207 215 5 (set (reg/f:SI 95 [ D.6522 ])
        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x408fd9c0 *.LC8>)) src/gui.c:68 -1
     (nil))

(insn 215 208 209 5 (set (reg:SI 278)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:68 -1
     (nil))

(insn 209 215 210 5 (set (reg:SI 282)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:68 -1
     (nil))

(insn 210 209 211 5 (set (reg:SI 281)
        (reg:SI 278)) src/gui.c:68 -1
     (nil))

(insn 211 210 212 5 (set (reg:QI 283)
        (const_int 0 [0])) src/gui.c:68 -1
     (nil))

(insn 212 211 213 5 (parallel [
            (set (reg:SI 279)
                (unspec:SI [
                        (mem:BLK (reg:SI 281) [0 A8])
                        (reg:QI 283)
                        (const_int 1 [0x1])
                        (reg:SI 282)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 281))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:68 -1
     (nil))

(insn 213 212 214 5 (set (reg:SI 280)
        (not:SI (reg:SI 279))) src/gui.c:68 -1
     (nil))

(insn 214 213 216 5 (parallel [
            (set (reg:SI 96 [ D.6523 ])
                (plus:SI (reg:SI 280)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:68 -1
     (nil))

(insn 216 214 217 5 (parallel [
            (set (reg/f:SI 97 [ D.6524 ])
                (plus:SI (reg:SI 96 [ D.6523 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:68 -1
     (nil))

(insn 217 216 218 5 (set (reg:SI 284)
        (mem:SI (reg/f:SI 95 [ D.6522 ]) [0 S4 A8])) src/gui.c:68 -1
     (nil))

(insn 218 217 219 5 (set (mem:SI (reg/f:SI 97 [ D.6524 ]) [0 S4 A8])
        (reg:SI 284)) src/gui.c:68 -1
     (nil))

(insn 219 218 220 5 (set (reg:SI 285)
        (mem:SI (plus:SI (reg/f:SI 95 [ D.6522 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:68 -1
     (nil))

(insn 220 219 221 5 (set (mem:SI (plus:SI (reg/f:SI 97 [ D.6524 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 285)) src/gui.c:68 -1
     (nil))

(insn 221 220 222 5 (set (reg:SI 286)
        (mem:SI (plus:SI (reg/f:SI 95 [ D.6522 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:68 -1
     (nil))

(insn 222 221 223 5 (set (mem:SI (plus:SI (reg/f:SI 97 [ D.6524 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 286)) src/gui.c:68 -1
     (nil))

(insn 223 222 224 5 (set (reg:SI 287)
        (mem:SI (plus:SI (reg/f:SI 95 [ D.6522 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:68 -1
     (nil))

(insn 224 223 225 5 (set (mem:SI (plus:SI (reg/f:SI 97 [ D.6524 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 287)) src/gui.c:68 -1
     (nil))

(insn 225 224 226 5 (set (reg:SI 288)
        (mem:SI (plus:SI (reg/f:SI 95 [ D.6522 ])
                (const_int 16 [0x10])) [0 S4 A8])) src/gui.c:68 -1
     (nil))

(insn 226 225 227 5 (set (mem:SI (plus:SI (reg/f:SI 97 [ D.6524 ])
                (const_int 16 [0x10])) [0 S4 A8])
        (reg:SI 288)) src/gui.c:68 -1
     (nil))

(insn 227 226 228 5 (set (reg:HI 289)
        (mem:HI (plus:SI (reg/f:SI 95 [ D.6522 ])
                (const_int 20 [0x14])) [0 S2 A8])) src/gui.c:68 -1
     (nil))

(insn 228 227 229 5 (set (mem:HI (plus:SI (reg/f:SI 97 [ D.6524 ])
                (const_int 20 [0x14])) [0 S2 A8])
        (reg:HI 289)) src/gui.c:68 -1
     (nil))

(insn 229 228 230 5 (set (reg/f:SI 290)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:69 -1
     (nil))

(insn 230 229 231 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 290)) src/gui.c:69 -1
     (nil))

(call_insn 231 230 232 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:69 -1
     (nil)
    (nil))

(insn 232 231 233 5 (set (reg/f:SI 98 [ D.6525 ])
        (reg:SI 0 ax)) src/gui.c:69 -1
     (nil))

(insn 233 232 234 5 (set (reg/f:SI 291)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:69 -1
     (nil))

(insn 234 233 235 5 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 291)
                (const_int 56 [0x38])) [0 display_9(D)->bar_white_checker+0 S4 A32])
        (reg/f:SI 98 [ D.6525 ])) src/gui.c:69 -1
     (nil))

(insn 235 234 236 5 (set (reg/f:SI 292)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:72 -1
     (nil))

(insn 236 235 237 5 (set (reg/f:SI 99 [ D.6526 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 292)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:72 -1
     (nil))

(insn 237 236 238 5 (set (reg/f:SI 100 [ D.6527 ])
        (reg/f:SI 99 [ D.6526 ])) src/gui.c:72 -1
     (nil))

(insn 238 237 239 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 100 [ D.6527 ])) src/gui.c:72 -1
     (nil))

(insn 239 238 240 5 (set (reg/f:SI 293)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:72 -1
     (nil))

(insn 240 239 241 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 293)) src/gui.c:72 -1
     (nil))

(call_insn 241 240 242 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:72 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 242 241 249 5 (set (reg/f:SI 101 [ D.6528 ])
        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x408fda20 *.LC9>)) src/gui.c:73 -1
     (nil))

(insn 249 242 243 5 (set (reg:SI 294)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:73 -1
     (nil))

(insn 243 249 244 5 (set (reg:SI 298)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:73 -1
     (nil))

(insn 244 243 245 5 (set (reg:SI 297)
        (reg:SI 294)) src/gui.c:73 -1
     (nil))

(insn 245 244 246 5 (set (reg:QI 299)
        (const_int 0 [0])) src/gui.c:73 -1
     (nil))

(insn 246 245 247 5 (parallel [
            (set (reg:SI 295)
                (unspec:SI [
                        (mem:BLK (reg:SI 297) [0 A8])
                        (reg:QI 299)
                        (const_int 1 [0x1])
                        (reg:SI 298)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 297))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:73 -1
     (nil))

(insn 247 246 248 5 (set (reg:SI 296)
        (not:SI (reg:SI 295))) src/gui.c:73 -1
     (nil))

(insn 248 247 250 5 (parallel [
            (set (reg:SI 102 [ D.6529 ])
                (plus:SI (reg:SI 296)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:73 -1
     (nil))

(insn 250 248 251 5 (parallel [
            (set (reg/f:SI 103 [ D.6530 ])
                (plus:SI (reg:SI 102 [ D.6529 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:73 -1
     (nil))

(insn 251 250 252 5 (set (reg:SI 300)
        (mem:SI (reg/f:SI 101 [ D.6528 ]) [0 S4 A8])) src/gui.c:73 -1
     (nil))

(insn 252 251 253 5 (set (mem:SI (reg/f:SI 103 [ D.6530 ]) [0 S4 A8])
        (reg:SI 300)) src/gui.c:73 -1
     (nil))

(insn 253 252 254 5 (set (reg:SI 301)
        (mem:SI (plus:SI (reg/f:SI 101 [ D.6528 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:73 -1
     (nil))

(insn 254 253 255 5 (set (mem:SI (plus:SI (reg/f:SI 103 [ D.6530 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 301)) src/gui.c:73 -1
     (nil))

(insn 255 254 256 5 (set (reg:SI 302)
        (mem:SI (plus:SI (reg/f:SI 101 [ D.6528 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:73 -1
     (nil))

(insn 256 255 257 5 (set (mem:SI (plus:SI (reg/f:SI 103 [ D.6530 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 302)) src/gui.c:73 -1
     (nil))

(insn 257 256 258 5 (set (reg:SI 303)
        (mem:SI (plus:SI (reg/f:SI 101 [ D.6528 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:73 -1
     (nil))

(insn 258 257 259 5 (set (mem:SI (plus:SI (reg/f:SI 103 [ D.6530 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 303)) src/gui.c:73 -1
     (nil))

(insn 259 258 260 5 (set (reg:SI 304)
        (mem:SI (plus:SI (reg/f:SI 101 [ D.6528 ])
                (const_int 16 [0x10])) [0 S4 A8])) src/gui.c:73 -1
     (nil))

(insn 260 259 261 5 (set (mem:SI (plus:SI (reg/f:SI 103 [ D.6530 ])
                (const_int 16 [0x10])) [0 S4 A8])
        (reg:SI 304)) src/gui.c:73 -1
     (nil))

(insn 261 260 262 5 (set (reg:HI 305)
        (mem:HI (plus:SI (reg/f:SI 101 [ D.6528 ])
                (const_int 20 [0x14])) [0 S2 A8])) src/gui.c:73 -1
     (nil))

(insn 262 261 263 5 (set (mem:HI (plus:SI (reg/f:SI 103 [ D.6530 ])
                (const_int 20 [0x14])) [0 S2 A8])
        (reg:HI 305)) src/gui.c:73 -1
     (nil))

(insn 263 262 264 5 (set (reg/f:SI 306)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:74 -1
     (nil))

(insn 264 263 265 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 306)) src/gui.c:74 -1
     (nil))

(call_insn 265 264 266 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:74 -1
     (nil)
    (nil))

(insn 266 265 267 5 (set (reg/f:SI 104 [ D.6531 ])
        (reg:SI 0 ax)) src/gui.c:74 -1
     (nil))

(insn 267 266 268 5 (set (reg/f:SI 307)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:74 -1
     (nil))

(insn 268 267 269 5 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 307)
                (const_int 52 [0x34])) [0 display_9(D)->bar_green_checker+0 S4 A32])
        (reg/f:SI 104 [ D.6531 ])) src/gui.c:74 -1
     (nil))

(insn 269 268 270 5 (set (reg/f:SI 308)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:77 -1
     (nil))

(insn 270 269 271 5 (set (reg/f:SI 105 [ D.6532 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 308)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:77 -1
     (nil))

(insn 271 270 272 5 (set (reg/f:SI 106 [ D.6533 ])
        (reg/f:SI 105 [ D.6532 ])) src/gui.c:77 -1
     (nil))

(insn 272 271 273 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 106 [ D.6533 ])) src/gui.c:77 -1
     (nil))

(insn 273 272 274 5 (set (reg/f:SI 309)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:77 -1
     (nil))

(insn 274 273 275 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 309)) src/gui.c:77 -1
     (nil))

(call_insn 275 274 276 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:77 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 276 275 283 5 (set (reg/f:SI 107 [ D.6534 ])
        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x408fda80 *.LC10>)) src/gui.c:78 -1
     (nil))

(insn 283 276 277 5 (set (reg:SI 310)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:78 -1
     (nil))

(insn 277 283 278 5 (set (reg:SI 314)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:78 -1
     (nil))

(insn 278 277 279 5 (set (reg:SI 313)
        (reg:SI 310)) src/gui.c:78 -1
     (nil))

(insn 279 278 280 5 (set (reg:QI 315)
        (const_int 0 [0])) src/gui.c:78 -1
     (nil))

(insn 280 279 281 5 (parallel [
            (set (reg:SI 311)
                (unspec:SI [
                        (mem:BLK (reg:SI 313) [0 A8])
                        (reg:QI 315)
                        (const_int 1 [0x1])
                        (reg:SI 314)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 313))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:78 -1
     (nil))

(insn 281 280 282 5 (set (reg:SI 312)
        (not:SI (reg:SI 311))) src/gui.c:78 -1
     (nil))

(insn 282 281 284 5 (parallel [
            (set (reg:SI 108 [ D.6535 ])
                (plus:SI (reg:SI 312)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:78 -1
     (nil))

(insn 284 282 285 5 (parallel [
            (set (reg/f:SI 109 [ D.6536 ])
                (plus:SI (reg:SI 108 [ D.6535 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:78 -1
     (nil))

(insn 285 284 286 5 (set (reg:SI 316)
        (mem:SI (reg/f:SI 107 [ D.6534 ]) [0 S4 A8])) src/gui.c:78 -1
     (nil))

(insn 286 285 287 5 (set (mem:SI (reg/f:SI 109 [ D.6536 ]) [0 S4 A8])
        (reg:SI 316)) src/gui.c:78 -1
     (nil))

(insn 287 286 288 5 (set (reg:SI 317)
        (mem:SI (plus:SI (reg/f:SI 107 [ D.6534 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:78 -1
     (nil))

(insn 288 287 289 5 (set (mem:SI (plus:SI (reg/f:SI 109 [ D.6536 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 317)) src/gui.c:78 -1
     (nil))

(insn 289 288 290 5 (set (reg:SI 318)
        (mem:SI (plus:SI (reg/f:SI 107 [ D.6534 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:78 -1
     (nil))

(insn 290 289 291 5 (set (mem:SI (plus:SI (reg/f:SI 109 [ D.6536 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 318)) src/gui.c:78 -1
     (nil))

(insn 291 290 292 5 (set (reg:SI 319)
        (mem:SI (plus:SI (reg/f:SI 107 [ D.6534 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:78 -1
     (nil))

(insn 292 291 293 5 (set (mem:SI (plus:SI (reg/f:SI 109 [ D.6536 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 319)) src/gui.c:78 -1
     (nil))

(insn 293 292 294 5 (set (reg:SI 320)
        (mem:SI (plus:SI (reg/f:SI 107 [ D.6534 ])
                (const_int 16 [0x10])) [0 S4 A8])) src/gui.c:78 -1
     (nil))

(insn 294 293 295 5 (set (mem:SI (plus:SI (reg/f:SI 109 [ D.6536 ])
                (const_int 16 [0x10])) [0 S4 A8])
        (reg:SI 320)) src/gui.c:78 -1
     (nil))

(insn 295 294 296 5 (set (reg:QI 321)
        (mem:QI (plus:SI (reg/f:SI 107 [ D.6534 ])
                (const_int 20 [0x14])) [0 S1 A8])) src/gui.c:78 -1
     (nil))

(insn 296 295 297 5 (set (mem:QI (plus:SI (reg/f:SI 109 [ D.6536 ])
                (const_int 20 [0x14])) [0 S1 A8])
        (reg:QI 321)) src/gui.c:78 -1
     (nil))

(insn 297 296 298 5 (set (reg/f:SI 322)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:79 -1
     (nil))

(insn 298 297 299 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 322)) src/gui.c:79 -1
     (nil))

(call_insn 299 298 300 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:79 -1
     (nil)
    (nil))

(insn 300 299 301 5 (set (reg/f:SI 110 [ D.6537 ])
        (reg:SI 0 ax)) src/gui.c:79 -1
     (nil))

(insn 301 300 302 5 (set (reg/f:SI 323)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:79 -1
     (nil))

(insn 302 301 303 5 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 323)
                (const_int 60 [0x3c])) [0 display_9(D)->selected_checker+0 S4 A32])
        (reg/f:SI 110 [ D.6537 ])) src/gui.c:79 -1
     (nil))

(insn 303 302 304 5 (set (reg/f:SI 324)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:82 -1
     (nil))

(insn 304 303 305 5 (set (reg/f:SI 111 [ D.6538 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 324)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:82 -1
     (nil))

(insn 305 304 306 5 (set (reg/f:SI 112 [ D.6539 ])
        (reg/f:SI 111 [ D.6538 ])) src/gui.c:82 -1
     (nil))

(insn 306 305 307 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 112 [ D.6539 ])) src/gui.c:82 -1
     (nil))

(insn 307 306 308 5 (set (reg/f:SI 325)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:82 -1
     (nil))

(insn 308 307 309 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 325)) src/gui.c:82 -1
     (nil))

(call_insn 309 308 310 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:82 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 310 309 317 5 (set (reg/f:SI 113 [ D.6540 ])
        (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x408fdae0 *.LC11>)) src/gui.c:83 -1
     (nil))

(insn 317 310 311 5 (set (reg:SI 326)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:83 -1
     (nil))

(insn 311 317 312 5 (set (reg:SI 330)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:83 -1
     (nil))

(insn 312 311 313 5 (set (reg:SI 329)
        (reg:SI 326)) src/gui.c:83 -1
     (nil))

(insn 313 312 314 5 (set (reg:QI 331)
        (const_int 0 [0])) src/gui.c:83 -1
     (nil))

(insn 314 313 315 5 (parallel [
            (set (reg:SI 327)
                (unspec:SI [
                        (mem:BLK (reg:SI 329) [0 A8])
                        (reg:QI 331)
                        (const_int 1 [0x1])
                        (reg:SI 330)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 329))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:83 -1
     (nil))

(insn 315 314 316 5 (set (reg:SI 328)
        (not:SI (reg:SI 327))) src/gui.c:83 -1
     (nil))

(insn 316 315 318 5 (parallel [
            (set (reg:SI 114 [ D.6541 ])
                (plus:SI (reg:SI 328)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:83 -1
     (nil))

(insn 318 316 319 5 (parallel [
            (set (reg/f:SI 115 [ D.6542 ])
                (plus:SI (reg:SI 114 [ D.6541 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:83 -1
     (nil))

(insn 319 318 320 5 (set (reg:SI 332)
        (mem:SI (reg/f:SI 113 [ D.6540 ]) [0 S4 A8])) src/gui.c:83 -1
     (nil))

(insn 320 319 321 5 (set (mem:SI (reg/f:SI 115 [ D.6542 ]) [0 S4 A8])
        (reg:SI 332)) src/gui.c:83 -1
     (nil))

(insn 321 320 322 5 (set (reg:SI 333)
        (mem:SI (plus:SI (reg/f:SI 113 [ D.6540 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:83 -1
     (nil))

(insn 322 321 323 5 (set (mem:SI (plus:SI (reg/f:SI 115 [ D.6542 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 333)) src/gui.c:83 -1
     (nil))

(insn 323 322 324 5 (set (reg:SI 334)
        (mem:SI (plus:SI (reg/f:SI 113 [ D.6540 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:83 -1
     (nil))

(insn 324 323 325 5 (set (mem:SI (plus:SI (reg/f:SI 115 [ D.6542 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 334)) src/gui.c:83 -1
     (nil))

(insn 325 324 326 5 (set (reg:SI 335)
        (mem:SI (plus:SI (reg/f:SI 113 [ D.6540 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:83 -1
     (nil))

(insn 326 325 327 5 (set (mem:SI (plus:SI (reg/f:SI 115 [ D.6542 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 335)) src/gui.c:83 -1
     (nil))

(insn 327 326 328 5 (set (reg:SI 336)
        (mem:SI (plus:SI (reg/f:SI 113 [ D.6540 ])
                (const_int 16 [0x10])) [0 S4 A8])) src/gui.c:83 -1
     (nil))

(insn 328 327 329 5 (set (mem:SI (plus:SI (reg/f:SI 115 [ D.6542 ])
                (const_int 16 [0x10])) [0 S4 A8])
        (reg:SI 336)) src/gui.c:83 -1
     (nil))

(insn 329 328 330 5 (set (reg:HI 337)
        (mem:HI (plus:SI (reg/f:SI 113 [ D.6540 ])
                (const_int 20 [0x14])) [0 S2 A8])) src/gui.c:83 -1
     (nil))

(insn 330 329 331 5 (set (mem:HI (plus:SI (reg/f:SI 115 [ D.6542 ])
                (const_int 20 [0x14])) [0 S2 A8])
        (reg:HI 337)) src/gui.c:83 -1
     (nil))

(insn 331 330 332 5 (set (reg:QI 338)
        (mem:QI (plus:SI (reg/f:SI 113 [ D.6540 ])
                (const_int 22 [0x16])) [0 S1 A8])) src/gui.c:83 -1
     (nil))

(insn 332 331 333 5 (set (mem:QI (plus:SI (reg/f:SI 115 [ D.6542 ])
                (const_int 22 [0x16])) [0 S1 A8])
        (reg:QI 338)) src/gui.c:83 -1
     (nil))

(insn 333 332 334 5 (set (reg/f:SI 339)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:84 -1
     (nil))

(insn 334 333 335 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 339)) src/gui.c:84 -1
     (nil))

(call_insn 335 334 336 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:84 -1
     (nil)
    (nil))

(insn 336 335 337 5 (set (reg/f:SI 116 [ D.6543 ])
        (reg:SI 0 ax)) src/gui.c:84 -1
     (nil))

(insn 337 336 338 5 (set (reg/f:SI 340)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:84 -1
     (nil))

(insn 338 337 339 5 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 340)
                (const_int 104 [0x68])) [0 display_9(D)->possibility1_12+0 S4 A32])
        (reg/f:SI 116 [ D.6543 ])) src/gui.c:84 -1
     (nil))

(insn 339 338 340 5 (set (reg/f:SI 341)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:87 -1
     (nil))

(insn 340 339 341 5 (set (reg/f:SI 117 [ D.6544 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 341)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:87 -1
     (nil))

(insn 341 340 342 5 (set (reg/f:SI 118 [ D.6545 ])
        (reg/f:SI 117 [ D.6544 ])) src/gui.c:87 -1
     (nil))

(insn 342 341 343 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 118 [ D.6545 ])) src/gui.c:87 -1
     (nil))

(insn 343 342 344 5 (set (reg/f:SI 342)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:87 -1
     (nil))

(insn 344 343 345 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 342)) src/gui.c:87 -1
     (nil))

(call_insn 345 344 346 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:87 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 346 345 353 5 (set (reg/f:SI 119 [ D.6546 ])
        (symbol_ref/f:SI ("*.LC12") [flags 0x2]  <var_decl 0x408fdb40 *.LC12>)) src/gui.c:88 -1
     (nil))

(insn 353 346 347 5 (set (reg:SI 343)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:88 -1
     (nil))

(insn 347 353 348 5 (set (reg:SI 347)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:88 -1
     (nil))

(insn 348 347 349 5 (set (reg:SI 346)
        (reg:SI 343)) src/gui.c:88 -1
     (nil))

(insn 349 348 350 5 (set (reg:QI 348)
        (const_int 0 [0])) src/gui.c:88 -1
     (nil))

(insn 350 349 351 5 (parallel [
            (set (reg:SI 344)
                (unspec:SI [
                        (mem:BLK (reg:SI 346) [0 A8])
                        (reg:QI 348)
                        (const_int 1 [0x1])
                        (reg:SI 347)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 346))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:88 -1
     (nil))

(insn 351 350 352 5 (set (reg:SI 345)
        (not:SI (reg:SI 344))) src/gui.c:88 -1
     (nil))

(insn 352 351 354 5 (parallel [
            (set (reg:SI 120 [ D.6547 ])
                (plus:SI (reg:SI 345)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:88 -1
     (nil))

(insn 354 352 355 5 (parallel [
            (set (reg/f:SI 121 [ D.6548 ])
                (plus:SI (reg:SI 120 [ D.6547 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:88 -1
     (nil))

(insn 355 354 356 5 (set (reg:SI 349)
        (mem:SI (reg/f:SI 119 [ D.6546 ]) [0 S4 A8])) src/gui.c:88 -1
     (nil))

(insn 356 355 357 5 (set (mem:SI (reg/f:SI 121 [ D.6548 ]) [0 S4 A8])
        (reg:SI 349)) src/gui.c:88 -1
     (nil))

(insn 357 356 358 5 (set (reg:SI 350)
        (mem:SI (plus:SI (reg/f:SI 119 [ D.6546 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:88 -1
     (nil))

(insn 358 357 359 5 (set (mem:SI (plus:SI (reg/f:SI 121 [ D.6548 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 350)) src/gui.c:88 -1
     (nil))

(insn 359 358 360 5 (set (reg:SI 351)
        (mem:SI (plus:SI (reg/f:SI 119 [ D.6546 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:88 -1
     (nil))

(insn 360 359 361 5 (set (mem:SI (plus:SI (reg/f:SI 121 [ D.6548 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 351)) src/gui.c:88 -1
     (nil))

(insn 361 360 362 5 (set (reg:SI 352)
        (mem:SI (plus:SI (reg/f:SI 119 [ D.6546 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:88 -1
     (nil))

(insn 362 361 363 5 (set (mem:SI (plus:SI (reg/f:SI 121 [ D.6548 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 352)) src/gui.c:88 -1
     (nil))

(insn 363 362 364 5 (set (reg:SI 353)
        (mem:SI (plus:SI (reg/f:SI 119 [ D.6546 ])
                (const_int 16 [0x10])) [0 S4 A8])) src/gui.c:88 -1
     (nil))

(insn 364 363 365 5 (set (mem:SI (plus:SI (reg/f:SI 121 [ D.6548 ])
                (const_int 16 [0x10])) [0 S4 A8])
        (reg:SI 353)) src/gui.c:88 -1
     (nil))

(insn 365 364 366 5 (set (reg:SI 354)
        (mem:SI (plus:SI (reg/f:SI 119 [ D.6546 ])
                (const_int 20 [0x14])) [0 S4 A8])) src/gui.c:88 -1
     (nil))

(insn 366 365 367 5 (set (mem:SI (plus:SI (reg/f:SI 121 [ D.6548 ])
                (const_int 20 [0x14])) [0 S4 A8])
        (reg:SI 354)) src/gui.c:88 -1
     (nil))

(insn 367 366 368 5 (set (reg/f:SI 355)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:89 -1
     (nil))

(insn 368 367 369 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 355)) src/gui.c:89 -1
     (nil))

(call_insn 369 368 370 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:89 -1
     (nil)
    (nil))

(insn 370 369 371 5 (set (reg/f:SI 122 [ D.6549 ])
        (reg:SI 0 ax)) src/gui.c:89 -1
     (nil))

(insn 371 370 372 5 (set (reg/f:SI 356)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:89 -1
     (nil))

(insn 372 371 373 5 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 356)
                (const_int 108 [0x6c])) [0 display_9(D)->possibility13_24+0 S4 A32])
        (reg/f:SI 122 [ D.6549 ])) src/gui.c:89 -1
     (nil))

(insn 373 372 374 5 (set (reg/f:SI 357)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:92 -1
     (nil))

(insn 374 373 375 5 (set (reg/f:SI 123 [ D.6550 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 357)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:92 -1
     (nil))

(insn 375 374 376 5 (set (reg/f:SI 124 [ D.6551 ])
        (reg/f:SI 123 [ D.6550 ])) src/gui.c:92 -1
     (nil))

(insn 376 375 377 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 124 [ D.6551 ])) src/gui.c:92 -1
     (nil))

(insn 377 376 378 5 (set (reg/f:SI 358)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:92 -1
     (nil))

(insn 378 377 379 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 358)) src/gui.c:92 -1
     (nil))

(call_insn 379 378 380 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:92 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 380 379 387 5 (set (reg/f:SI 125 [ D.6552 ])
        (symbol_ref/f:SI ("*.LC13") [flags 0x2]  <var_decl 0x408fdba0 *.LC13>)) src/gui.c:93 -1
     (nil))

(insn 387 380 381 5 (set (reg:SI 359)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:93 -1
     (nil))

(insn 381 387 382 5 (set (reg:SI 363)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:93 -1
     (nil))

(insn 382 381 383 5 (set (reg:SI 362)
        (reg:SI 359)) src/gui.c:93 -1
     (nil))

(insn 383 382 384 5 (set (reg:QI 364)
        (const_int 0 [0])) src/gui.c:93 -1
     (nil))

(insn 384 383 385 5 (parallel [
            (set (reg:SI 360)
                (unspec:SI [
                        (mem:BLK (reg:SI 362) [0 A8])
                        (reg:QI 364)
                        (const_int 1 [0x1])
                        (reg:SI 363)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 362))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:93 -1
     (nil))

(insn 385 384 386 5 (set (reg:SI 361)
        (not:SI (reg:SI 360))) src/gui.c:93 -1
     (nil))

(insn 386 385 388 5 (parallel [
            (set (reg:SI 126 [ D.6553 ])
                (plus:SI (reg:SI 361)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:93 -1
     (nil))

(insn 388 386 389 5 (parallel [
            (set (reg/f:SI 127 [ D.6554 ])
                (plus:SI (reg:SI 126 [ D.6553 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:93 -1
     (nil))

(insn 389 388 390 5 (set (reg:SI 365)
        (mem:SI (reg/f:SI 125 [ D.6552 ]) [0 S4 A8])) src/gui.c:93 -1
     (nil))

(insn 390 389 391 5 (set (mem:SI (reg/f:SI 127 [ D.6554 ]) [0 S4 A8])
        (reg:SI 365)) src/gui.c:93 -1
     (nil))

(insn 391 390 392 5 (set (reg:SI 366)
        (mem:SI (plus:SI (reg/f:SI 125 [ D.6552 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:93 -1
     (nil))

(insn 392 391 393 5 (set (mem:SI (plus:SI (reg/f:SI 127 [ D.6554 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 366)) src/gui.c:93 -1
     (nil))

(insn 393 392 394 5 (set (reg:SI 367)
        (mem:SI (plus:SI (reg/f:SI 125 [ D.6552 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:93 -1
     (nil))

(insn 394 393 395 5 (set (mem:SI (plus:SI (reg/f:SI 127 [ D.6554 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 367)) src/gui.c:93 -1
     (nil))

(insn 395 394 396 5 (set (reg:SI 368)
        (mem:SI (plus:SI (reg/f:SI 125 [ D.6552 ])
                (const_int 12 [0xc])) [0 S4 A8])) src/gui.c:93 -1
     (nil))

(insn 396 395 397 5 (set (mem:SI (plus:SI (reg/f:SI 127 [ D.6554 ])
                (const_int 12 [0xc])) [0 S4 A8])
        (reg:SI 368)) src/gui.c:93 -1
     (nil))

(insn 397 396 398 5 (set (reg:QI 369)
        (mem:QI (plus:SI (reg/f:SI 125 [ D.6552 ])
                (const_int 16 [0x10])) [0 S1 A8])) src/gui.c:93 -1
     (nil))

(insn 398 397 399 5 (set (mem:QI (plus:SI (reg/f:SI 127 [ D.6554 ])
                (const_int 16 [0x10])) [0 S1 A8])
        (reg:QI 369)) src/gui.c:93 -1
     (nil))

(insn 399 398 400 5 (set (reg/f:SI 370)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:94 -1
     (nil))

(insn 400 399 401 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 370)) src/gui.c:94 -1
     (nil))

(call_insn 401 400 402 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:94 -1
     (nil)
    (nil))

(insn 402 401 403 5 (set (reg/f:SI 128 [ D.6555 ])
        (reg:SI 0 ax)) src/gui.c:94 -1
     (nil))

(insn 403 402 404 5 (set (reg/f:SI 371)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:94 -1
     (nil))

(insn 404 403 405 5 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 371)
                (const_int 112 [0x70])) [0 display_9(D)->possibility_out+0 S4 A32])
        (reg/f:SI 128 [ D.6555 ])) src/gui.c:94 -1
     (nil))

(insn 405 404 406 5 (set (reg/f:SI 372)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:97 -1
     (nil))

(insn 406 405 407 5 (set (reg/f:SI 129 [ D.6556 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 372)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:97 -1
     (nil))

(insn 407 406 408 5 (set (reg/f:SI 130 [ D.6557 ])
        (reg/f:SI 129 [ D.6556 ])) src/gui.c:97 -1
     (nil))

(insn 408 407 409 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 130 [ D.6557 ])) src/gui.c:97 -1
     (nil))

(insn 409 408 410 5 (set (reg/f:SI 373)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:97 -1
     (nil))

(insn 410 409 411 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 373)) src/gui.c:97 -1
     (nil))

(call_insn 411 410 412 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:97 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 412 411 419 5 (set (reg/f:SI 131 [ D.6558 ])
        (symbol_ref/f:SI ("*.LC14") [flags 0x2]  <var_decl 0x408fdc00 *.LC14>)) src/gui.c:98 -1
     (nil))

(insn 419 412 413 5 (set (reg:SI 374)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:98 -1
     (nil))

(insn 413 419 414 5 (set (reg:SI 378)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:98 -1
     (nil))

(insn 414 413 415 5 (set (reg:SI 377)
        (reg:SI 374)) src/gui.c:98 -1
     (nil))

(insn 415 414 416 5 (set (reg:QI 379)
        (const_int 0 [0])) src/gui.c:98 -1
     (nil))

(insn 416 415 417 5 (parallel [
            (set (reg:SI 375)
                (unspec:SI [
                        (mem:BLK (reg:SI 377) [0 A8])
                        (reg:QI 379)
                        (const_int 1 [0x1])
                        (reg:SI 378)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 377))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:98 -1
     (nil))

(insn 417 416 418 5 (set (reg:SI 376)
        (not:SI (reg:SI 375))) src/gui.c:98 -1
     (nil))

(insn 418 417 420 5 (parallel [
            (set (reg:SI 132 [ D.6559 ])
                (plus:SI (reg:SI 376)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:98 -1
     (nil))

(insn 420 418 421 5 (parallel [
            (set (reg/f:SI 133 [ D.6560 ])
                (plus:SI (reg:SI 132 [ D.6559 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:98 -1
     (nil))

(insn 421 420 422 5 (set (reg:SI 380)
        (mem:SI (reg/f:SI 131 [ D.6558 ]) [0 S4 A8])) src/gui.c:98 -1
     (nil))

(insn 422 421 423 5 (set (mem:SI (reg/f:SI 133 [ D.6560 ]) [0 S4 A8])
        (reg:SI 380)) src/gui.c:98 -1
     (nil))

(insn 423 422 424 5 (set (reg:SI 381)
        (mem:SI (plus:SI (reg/f:SI 131 [ D.6558 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:98 -1
     (nil))

(insn 424 423 425 5 (set (mem:SI (plus:SI (reg/f:SI 133 [ D.6560 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 381)) src/gui.c:98 -1
     (nil))

(insn 425 424 426 5 (set (reg:HI 382)
        (mem:HI (plus:SI (reg/f:SI 131 [ D.6558 ])
                (const_int 8 [0x8])) [0 S2 A8])) src/gui.c:98 -1
     (nil))

(insn 426 425 427 5 (set (mem:HI (plus:SI (reg/f:SI 133 [ D.6560 ])
                (const_int 8 [0x8])) [0 S2 A8])
        (reg:HI 382)) src/gui.c:98 -1
     (nil))

(insn 427 426 428 5 (set (reg:QI 383)
        (mem:QI (plus:SI (reg/f:SI 131 [ D.6558 ])
                (const_int 10 [0xa])) [0 S1 A8])) src/gui.c:98 -1
     (nil))

(insn 428 427 429 5 (set (mem:QI (plus:SI (reg/f:SI 133 [ D.6560 ])
                (const_int 10 [0xa])) [0 S1 A8])
        (reg:QI 383)) src/gui.c:98 -1
     (nil))

(insn 429 428 430 5 (set (reg/f:SI 384)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:99 -1
     (nil))

(insn 430 429 431 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 384)) src/gui.c:99 -1
     (nil))

(call_insn 431 430 432 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:99 -1
     (nil)
    (nil))

(insn 432 431 433 5 (set (reg/f:SI 134 [ D.6561 ])
        (reg:SI 0 ax)) src/gui.c:99 -1
     (nil))

(insn 433 432 434 5 (set (reg/f:SI 385)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:99 -1
     (nil))

(insn 434 433 435 5 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 385)
                (const_int 40 [0x28])) [0 display_9(D)->msg_box+0 S4 A32])
        (reg/f:SI 134 [ D.6561 ])) src/gui.c:99 -1
     (nil))

(insn 435 434 436 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 100 [0x64])) src/gui.c:102 -1
     (nil))

(call_insn 436 435 437 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:102 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 437 436 438 5 (set (reg/f:SI 386)
        (reg:SI 0 ax)) src/gui.c:102 -1
     (expr_list:REG_NOALIAS (reg/f:SI 386)
        (nil)))

(insn 438 437 439 5 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_name+0 S4 A32])
        (reg/f:SI 386)) src/gui.c:102 -1
     (nil))

(insn 439 438 440 5 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:104 -1
     (nil))

(jump_insn 440 439 441 5 (set (pc)
        (label_ref 472)) src/gui.c:104 -1
     (nil)
 -> 472)
;; End of basic block 5 -> ( 7)

;; Succ edge  7

(barrier 441 440 474)

;; Start of basic block ( 7) -> 6
;; Pred edge  7
(code_label 474 441 442 6 4 "" [1 uses])

(note 442 474 443 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 443 442 444 6 (set (reg/f:SI 387)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:106 -1
     (nil))

(insn 444 443 445 6 (set (reg/f:SI 135 [ D.6562 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 387)
                (const_int 120 [0x78])) [0 display_9(D)->img_path+0 S4 A32])) src/gui.c:106 -1
     (nil))

(insn 445 444 446 6 (set (reg/f:SI 136 [ D.6563 ])
        (reg/f:SI 135 [ D.6562 ])) src/gui.c:106 -1
     (nil))

(insn 446 445 447 6 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 136 [ D.6563 ])) src/gui.c:106 -1
     (nil))

(insn 447 446 448 6 (set (reg/f:SI 388)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:106 -1
     (nil))

(insn 448 447 449 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 388)) src/gui.c:106 -1
     (nil))

(call_insn 449 448 450 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:106 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 450 449 451 6 (set (reg/f:SI 137 [ D.6564 ])
        (symbol_ref/f:SI ("*.LC15") [flags 0x2]  <var_decl 0x408fdc60 *.LC15>)) src/gui.c:107 -1
     (nil))

(insn 451 450 452 6 (set (reg:SI 389)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:107 -1
     (nil))

(insn 452 451 453 6 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 389)) src/gui.c:107 -1
     (nil))

(insn 453 452 454 6 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 137 [ D.6564 ])) src/gui.c:107 -1
     (nil))

(insn 454 453 455 6 (set (reg/f:SI 390)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_name+0 S4 A32])) src/gui.c:107 -1
     (nil))

(insn 455 454 456 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 390)) src/gui.c:107 -1
     (nil))

(call_insn 456 455 457 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 0x406b4200 sprintf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:107 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 457 456 458 6 (set (reg/f:SI 138 [ temp_name.52 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_name+0 S4 A32])) src/gui.c:108 -1
     (nil))

(insn 458 457 459 6 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 138 [ temp_name.52 ])) src/gui.c:108 -1
     (nil))

(insn 459 458 460 6 (set (reg/f:SI 391)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:108 -1
     (nil))

(insn 460 459 461 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 391)) src/gui.c:108 -1
     (nil))

(call_insn 461 460 462 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcat") [flags 0x41]  <function_decl 0x406ae480 strcat>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:108 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 462 461 463 6 (set (reg:SI 392)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:109 -1
     (nil))

(insn 463 462 464 6 (parallel [
            (set (reg:SI 139 [ D.6566 ])
                (plus:SI (reg:SI 392)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:109 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 464 463 465 6 (set (reg/f:SI 393)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:109 -1
     (nil))

(insn 465 464 466 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 393)) src/gui.c:109 -1
     (nil))

(call_insn 466 465 467 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:109 -1
     (nil)
    (nil))

(insn 467 466 468 6 (set (reg/f:SI 140 [ D.6567 ])
        (reg:SI 0 ax)) src/gui.c:109 -1
     (nil))

(insn 468 467 469 6 (set (reg/f:SI 394)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:109 -1
     (nil))

(insn 469 468 470 6 (parallel [
            (set (reg:SI 395)
                (plus:SI (reg:SI 139 [ D.6566 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:109 -1
     (nil))

(insn 470 469 471 6 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 395)
                    (const_int 4 [0x4]))
                (reg/f:SI 394)) [0 display_9(D)->die S4 A32])
        (reg/f:SI 140 [ D.6567 ])) src/gui.c:109 -1
     (nil))

(insn 471 470 472 6 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:104 -1
     (nil))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 5 6) -> 7
;; Pred edge  5
;; Pred edge  6 (fallthru)
(code_label 472 471 473 7 3 "" [1 uses])

(note 473 472 475 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 475 473 476 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 6 [0x6]))) src/gui.c:104 -1
     (nil))

(jump_insn 476 475 477 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 474)
            (pc))) src/gui.c:104 -1
     (nil)
 -> 474)
;; End of basic block 7 -> ( 6 8)

;; Succ edge  6
;; Succ edge  8 (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(note 477 476 478 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 478 477 479 8 (set (reg/f:SI 396)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:112 -1
     (nil))

(insn 479 478 480 8 (set (mem/s/j:HI (plus:SI (reg/f:SI 396)
                (const_int 88 [0x58])) [0 display_9(D)->die1_position.x+0 S2 A32])
        (const_int 410 [0x19a])) src/gui.c:112 -1
     (nil))

(insn 480 479 481 8 (set (reg/f:SI 397)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:113 -1
     (nil))

(insn 481 480 482 8 (set (mem/s/j:HI (plus:SI (reg/f:SI 397)
                (const_int 90 [0x5a])) [0 display_9(D)->die1_position.y+0 S2 A16])
        (const_int 340 [0x154])) src/gui.c:113 -1
     (nil))

(insn 482 481 483 8 (set (reg/f:SI 398)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:115 -1
     (nil))

(insn 483 482 484 8 (set (mem/s/j:HI (plus:SI (reg/f:SI 398)
                (const_int 96 [0x60])) [0 display_9(D)->die2_position.x+0 S2 A32])
        (const_int 450 [0x1c2])) src/gui.c:115 -1
     (nil))

(insn 484 483 485 8 (set (reg/f:SI 399)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:116 -1
     (nil))

(insn 485 484 486 8 (set (mem/s/j:HI (plus:SI (reg/f:SI 399)
                (const_int 98 [0x62])) [0 display_9(D)->die2_position.y+0 S2 A16])
        (const_int 340 [0x154])) src/gui.c:116 -1
     (nil))

(insn 486 485 487 8 (set (reg/f:SI 400)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:119 -1
     (nil))

(insn 487 486 488 8 (set (mem/s/j:SI (plus:SI (reg/f:SI 400)
                (const_int 124 [0x7c])) [0 display_9(D)->window_width+0 S4 A32])
        (const_int 800 [0x320])) src/gui.c:119 -1
     (nil))

(insn 488 487 489 8 (set (reg/f:SI 401)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:120 -1
     (nil))

(insn 489 488 490 8 (set (mem/s/j:SI (plus:SI (reg/f:SI 401)
                (const_int 128 [0x80])) [0 display_9(D)->window_height+0 S4 A32])
        (const_int 600 [0x258])) src/gui.c:120 -1
     (nil))

(insn 490 489 491 8 (set (reg/f:SI 402)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:123 -1
     (nil))

(insn 491 490 492 8 (set (mem/s/j:HI (plus:SI (reg/f:SI 402)
                (const_int 132 [0x84])) [0 display_9(D)->positions[0].x+0 S2 A32])
        (const_int 520 [0x208])) src/gui.c:123 -1
     (nil))

(insn 492 491 493 8 (set (reg/f:SI 403)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:124 -1
     (nil))

(insn 493 492 494 8 (set (mem/s/j:HI (plus:SI (reg/f:SI 403)
                (const_int 134 [0x86])) [0 display_9(D)->positions[0].y+0 S2 A16])
        (const_int 562 [0x232])) src/gui.c:124 -1
     (nil))

(insn 494 493 495 8 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:126 -1
     (nil))

(jump_insn 495 494 496 8 (set (pc)
        (label_ref 637)) src/gui.c:126 -1
     (nil)
 -> 637)
;; End of basic block 8 -> ( 23)

;; Succ edge  23

(barrier 496 495 639)

;; Start of basic block ( 23) -> 9
;; Pred edge  23
(code_label 639 496 497 9 13 "" [1 uses])

(note 497 639 498 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 498 497 499 9 (set (reg:SI 404)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:128 -1
     (nil))

(insn 499 498 500 9 (parallel [
            (set (reg:SI 141 [ D.6568 ])
                (plus:SI (reg:SI 404)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:128 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 500 499 501 9 (set (reg/f:SI 405)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:128 -1
     (nil))

(insn 501 500 502 9 (parallel [
            (set (reg:SI 406)
                (plus:SI (reg:SI 141 [ D.6568 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:128 -1
     (nil))

(insn 502 501 503 9 (set (reg:HI 142 [ D.6569 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 406)
                        (const_int 8 [0x8]))
                    (reg/f:SI 405))
                (const_int 6 [0x6])) [0 display_9(D)->positions[D.6568_93].y+0 S2 A16])) src/gui.c:128 -1
     (nil))

(insn 503 502 504 9 (set (reg/f:SI 407)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:128 -1
     (nil))

(insn 504 503 505 9 (set (reg:SI 409)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:128 -1
     (nil))

(insn 505 504 506 9 (parallel [
            (set (reg:SI 408)
                (plus:SI (reg:SI 409)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:128 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 506 505 507 9 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 408)
                        (const_int 8 [0x8]))
                    (reg/f:SI 407))
                (const_int 6 [0x6])) [0 display_9(D)->positions[i_2].y+0 S2 A16])
        (reg:HI 142 [ D.6569 ])) src/gui.c:128 -1
     (nil))

(insn 507 506 508 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 5 [0x5]))) src/gui.c:129 -1
     (nil))

(jump_insn 508 507 509 9 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 524)
            (pc))) src/gui.c:129 -1
     (nil)
 -> 524)
;; End of basic block 9 -> ( 10 11)

;; Succ edge  10 (fallthru)
;; Succ edge  11

;; Start of basic block ( 9) -> 10
;; Pred edge  9 (fallthru)
(note 509 508 510 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 510 509 511 10 (set (reg:SI 410)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:130 -1
     (nil))

(insn 511 510 512 10 (parallel [
            (set (reg:SI 143 [ D.6572 ])
                (plus:SI (reg:SI 410)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:130 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 512 511 513 10 (set (reg/f:SI 411)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:130 -1
     (nil))

(insn 513 512 514 10 (parallel [
            (set (reg:SI 412)
                (plus:SI (reg:SI 143 [ D.6572 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:130 -1
     (nil))

(insn 514 513 515 10 (set (reg:HI 144 [ D.6573 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 412)
                        (const_int 8 [0x8]))
                    (reg/f:SI 411))
                (const_int 4 [0x4])) [0 display_9(D)->positions[D.6572_95].x+0 S2 A32])) src/gui.c:130 -1
     (nil))

(insn 515 514 516 10 (set (reg:HI 145 [ D.6574 ])
        (reg:HI 144 [ D.6573 ])) src/gui.c:130 -1
     (nil))

(insn 516 515 517 10 (parallel [
            (set (reg:HI 146 [ D.6575 ])
                (plus:HI (reg:HI 145 [ D.6574 ])
                    (const_int -38 [0xffffffffffffffda])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:130 -1
     (nil))

(insn 517 516 518 10 (set (reg:HI 147 [ D.6576 ])
        (reg:HI 146 [ D.6575 ])) src/gui.c:130 -1
     (nil))

(insn 518 517 519 10 (set (reg/f:SI 413)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:130 -1
     (nil))

(insn 519 518 520 10 (set (reg:SI 415)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:130 -1
     (nil))

(insn 520 519 521 10 (parallel [
            (set (reg:SI 414)
                (plus:SI (reg:SI 415)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:130 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 521 520 522 10 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 414)
                        (const_int 8 [0x8]))
                    (reg/f:SI 413))
                (const_int 4 [0x4])) [0 display_9(D)->positions[i_2].x+0 S2 A32])
        (reg:HI 147 [ D.6576 ])) src/gui.c:130 -1
     (nil))

(jump_insn 522 521 523 10 (set (pc)
        (label_ref 634)) src/gui.c:130 -1
     (nil)
 -> 634)
;; End of basic block 10 -> ( 22)

;; Succ edge  22

(barrier 523 522 524)

;; Start of basic block ( 9) -> 11
;; Pred edge  9
(code_label 524 523 525 11 6 "" [1 uses])

(note 525 524 526 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 526 525 527 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 6 [0x6]))) src/gui.c:131 -1
     (nil))

(jump_insn 527 526 528 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 543)
            (pc))) src/gui.c:131 -1
     (nil)
 -> 543)
;; End of basic block 11 -> ( 12 13)

;; Succ edge  12 (fallthru)
;; Succ edge  13

;; Start of basic block ( 11) -> 12
;; Pred edge  11 (fallthru)
(note 528 527 529 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 529 528 530 12 (set (reg:SI 416)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:132 -1
     (nil))

(insn 530 529 531 12 (parallel [
            (set (reg:SI 148 [ D.6580 ])
                (plus:SI (reg:SI 416)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:132 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 531 530 532 12 (set (reg/f:SI 417)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:132 -1
     (nil))

(insn 532 531 533 12 (parallel [
            (set (reg:SI 418)
                (plus:SI (reg:SI 148 [ D.6580 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:132 -1
     (nil))

(insn 533 532 534 12 (set (reg:HI 149 [ D.6581 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 418)
                        (const_int 8 [0x8]))
                    (reg/f:SI 417))
                (const_int 4 [0x4])) [0 display_9(D)->positions[D.6580_100].x+0 S2 A32])) src/gui.c:132 -1
     (nil))

(insn 534 533 535 12 (set (reg:HI 150 [ D.6582 ])
        (reg:HI 149 [ D.6581 ])) src/gui.c:132 -1
     (nil))

(insn 535 534 536 12 (parallel [
            (set (reg:HI 151 [ D.6583 ])
                (plus:HI (reg:HI 150 [ D.6582 ])
                    (const_int -74 [0xffffffffffffffb6])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:132 -1
     (nil))

(insn 536 535 537 12 (set (reg:HI 152 [ D.6584 ])
        (reg:HI 151 [ D.6583 ])) src/gui.c:132 -1
     (nil))

(insn 537 536 538 12 (set (reg/f:SI 419)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:132 -1
     (nil))

(insn 538 537 539 12 (set (reg:SI 421)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:132 -1
     (nil))

(insn 539 538 540 12 (parallel [
            (set (reg:SI 420)
                (plus:SI (reg:SI 421)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:132 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 540 539 541 12 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 420)
                        (const_int 8 [0x8]))
                    (reg/f:SI 419))
                (const_int 4 [0x4])) [0 display_9(D)->positions[i_2].x+0 S2 A32])
        (reg:HI 152 [ D.6584 ])) src/gui.c:132 -1
     (nil))

(jump_insn 541 540 542 12 (set (pc)
        (label_ref 634)) src/gui.c:132 -1
     (nil)
 -> 634)
;; End of basic block 12 -> ( 22)

;; Succ edge  22

(barrier 542 541 543)

;; Start of basic block ( 11) -> 13
;; Pred edge  11
(code_label 543 542 544 13 8 "" [1 uses])

(note 544 543 545 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 545 544 546 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 11 [0xb]))) src/gui.c:133 -1
     (nil))

(jump_insn 546 545 547 13 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 562)
            (pc))) src/gui.c:133 -1
     (nil)
 -> 562)
;; End of basic block 13 -> ( 14 15)

;; Succ edge  14 (fallthru)
;; Succ edge  15

;; Start of basic block ( 13) -> 14
;; Pred edge  13 (fallthru)
(note 547 546 548 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 548 547 549 14 (set (reg:SI 422)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:134 -1
     (nil))

(insn 549 548 550 14 (parallel [
            (set (reg:SI 153 [ D.6588 ])
                (plus:SI (reg:SI 422)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:134 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 550 549 551 14 (set (reg/f:SI 423)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:134 -1
     (nil))

(insn 551 550 552 14 (parallel [
            (set (reg:SI 424)
                (plus:SI (reg:SI 153 [ D.6588 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:134 -1
     (nil))

(insn 552 551 553 14 (set (reg:HI 154 [ D.6589 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 424)
                        (const_int 8 [0x8]))
                    (reg/f:SI 423))
                (const_int 4 [0x4])) [0 display_9(D)->positions[D.6588_105].x+0 S2 A32])) src/gui.c:134 -1
     (nil))

(insn 553 552 554 14 (set (reg:HI 155 [ D.6590 ])
        (reg:HI 154 [ D.6589 ])) src/gui.c:134 -1
     (nil))

(insn 554 553 555 14 (parallel [
            (set (reg:HI 156 [ D.6591 ])
                (plus:HI (reg:HI 155 [ D.6590 ])
                    (const_int -38 [0xffffffffffffffda])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:134 -1
     (nil))

(insn 555 554 556 14 (set (reg:HI 157 [ D.6592 ])
        (reg:HI 156 [ D.6591 ])) src/gui.c:134 -1
     (nil))

(insn 556 555 557 14 (set (reg/f:SI 425)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:134 -1
     (nil))

(insn 557 556 558 14 (set (reg:SI 427)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:134 -1
     (nil))

(insn 558 557 559 14 (parallel [
            (set (reg:SI 426)
                (plus:SI (reg:SI 427)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:134 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 559 558 560 14 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 426)
                        (const_int 8 [0x8]))
                    (reg/f:SI 425))
                (const_int 4 [0x4])) [0 display_9(D)->positions[i_2].x+0 S2 A32])
        (reg:HI 157 [ D.6592 ])) src/gui.c:134 -1
     (nil))

(jump_insn 560 559 561 14 (set (pc)
        (label_ref 634)) src/gui.c:134 -1
     (nil)
 -> 634)
;; End of basic block 14 -> ( 22)

;; Succ edge  22

(barrier 561 560 562)

;; Start of basic block ( 13) -> 15
;; Pred edge  13
(code_label 562 561 563 15 9 "" [1 uses])

(note 563 562 564 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 564 563 565 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 12 [0xc]))) src/gui.c:135 -1
     (nil))

(jump_insn 565 564 566 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 582)
            (pc))) src/gui.c:135 -1
     (nil)
 -> 582)
;; End of basic block 15 -> ( 16 17)

;; Succ edge  16 (fallthru)
;; Succ edge  17

;; Start of basic block ( 15) -> 16
;; Pred edge  15 (fallthru)
(note 566 565 567 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 567 566 568 16 (set (reg:SI 428)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:137 -1
     (nil))

(insn 568 567 569 16 (parallel [
            (set (reg:SI 158 [ D.6596 ])
                (plus:SI (reg:SI 428)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:137 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 569 568 570 16 (set (reg/f:SI 429)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:137 -1
     (nil))

(insn 570 569 571 16 (parallel [
            (set (reg:SI 430)
                (plus:SI (reg:SI 158 [ D.6596 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:137 -1
     (nil))

(insn 571 570 572 16 (set (reg:HI 159 [ D.6597 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 430)
                        (const_int 8 [0x8]))
                    (reg/f:SI 429))
                (const_int 4 [0x4])) [0 display_9(D)->positions[D.6596_110].x+0 S2 A32])) src/gui.c:137 -1
     (nil))

(insn 572 571 573 16 (set (reg/f:SI 431)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:137 -1
     (nil))

(insn 573 572 574 16 (set (reg:SI 433)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:137 -1
     (nil))

(insn 574 573 575 16 (parallel [
            (set (reg:SI 432)
                (plus:SI (reg:SI 433)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:137 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 575 574 576 16 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 432)
                        (const_int 8 [0x8]))
                    (reg/f:SI 431))
                (const_int 4 [0x4])) [0 display_9(D)->positions[i_2].x+0 S2 A32])
        (reg:HI 159 [ D.6597 ])) src/gui.c:137 -1
     (nil))

(insn 576 575 577 16 (set (reg/f:SI 434)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:138 -1
     (nil))

(insn 577 576 578 16 (set (reg:SI 436)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:138 -1
     (nil))

(insn 578 577 579 16 (parallel [
            (set (reg:SI 435)
                (plus:SI (reg:SI 436)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:138 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 579 578 580 16 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 435)
                        (const_int 8 [0x8]))
                    (reg/f:SI 434))
                (const_int 6 [0x6])) [0 display_9(D)->positions[i_2].y+0 S2 A16])
        (const_int 145 [0x91])) src/gui.c:138 -1
     (nil))

(jump_insn 580 579 581 16 (set (pc)
        (label_ref 634)) src/gui.c:138 -1
     (nil)
 -> 634)
;; End of basic block 16 -> ( 22)

;; Succ edge  22

(barrier 581 580 582)

;; Start of basic block ( 15) -> 17
;; Pred edge  15
(code_label 582 581 583 17 10 "" [1 uses])

(note 583 582 584 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 584 583 585 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 17 [0x11]))) src/gui.c:140 -1
     (nil))

(jump_insn 585 584 586 17 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 601)
            (pc))) src/gui.c:140 -1
     (nil)
 -> 601)
;; End of basic block 17 -> ( 18 19)

;; Succ edge  18 (fallthru)
;; Succ edge  19

;; Start of basic block ( 17) -> 18
;; Pred edge  17 (fallthru)
(note 586 585 587 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 587 586 588 18 (set (reg:SI 437)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:141 -1
     (nil))

(insn 588 587 589 18 (parallel [
            (set (reg:SI 160 [ D.6601 ])
                (plus:SI (reg:SI 437)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:141 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 589 588 590 18 (set (reg/f:SI 438)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:141 -1
     (nil))

(insn 590 589 591 18 (parallel [
            (set (reg:SI 439)
                (plus:SI (reg:SI 160 [ D.6601 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:141 -1
     (nil))

(insn 591 590 592 18 (set (reg:HI 161 [ D.6602 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 439)
                        (const_int 8 [0x8]))
                    (reg/f:SI 438))
                (const_int 4 [0x4])) [0 display_9(D)->positions[D.6601_112].x+0 S2 A32])) src/gui.c:141 -1
     (nil))

(insn 592 591 593 18 (set (reg:HI 162 [ D.6603 ])
        (reg:HI 161 [ D.6602 ])) src/gui.c:141 -1
     (nil))

(insn 593 592 594 18 (parallel [
            (set (reg:HI 163 [ D.6604 ])
                (plus:HI (reg:HI 162 [ D.6603 ])
                    (const_int 38 [0x26])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:141 -1
     (nil))

(insn 594 593 595 18 (set (reg:HI 164 [ D.6605 ])
        (reg:HI 163 [ D.6604 ])) src/gui.c:141 -1
     (nil))

(insn 595 594 596 18 (set (reg/f:SI 440)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:141 -1
     (nil))

(insn 596 595 597 18 (set (reg:SI 442)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:141 -1
     (nil))

(insn 597 596 598 18 (parallel [
            (set (reg:SI 441)
                (plus:SI (reg:SI 442)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:141 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 598 597 599 18 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 441)
                        (const_int 8 [0x8]))
                    (reg/f:SI 440))
                (const_int 4 [0x4])) [0 display_9(D)->positions[i_2].x+0 S2 A32])
        (reg:HI 164 [ D.6605 ])) src/gui.c:141 -1
     (nil))

(jump_insn 599 598 600 18 (set (pc)
        (label_ref 634)) src/gui.c:141 -1
     (nil)
 -> 634)
;; End of basic block 18 -> ( 22)

;; Succ edge  22

(barrier 600 599 601)

;; Start of basic block ( 17) -> 19
;; Pred edge  17
(code_label 601 600 602 19 11 "" [1 uses])

(note 602 601 603 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 603 602 604 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 18 [0x12]))) src/gui.c:142 -1
     (nil))

(jump_insn 604 603 605 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 620)
            (pc))) src/gui.c:142 -1
     (nil)
 -> 620)
;; End of basic block 19 -> ( 20 21)

;; Succ edge  20 (fallthru)
;; Succ edge  21

;; Start of basic block ( 19) -> 20
;; Pred edge  19 (fallthru)
(note 605 604 606 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 606 605 607 20 (set (reg:SI 443)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:143 -1
     (nil))

(insn 607 606 608 20 (parallel [
            (set (reg:SI 165 [ D.6609 ])
                (plus:SI (reg:SI 443)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:143 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 608 607 609 20 (set (reg/f:SI 444)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:143 -1
     (nil))

(insn 609 608 610 20 (parallel [
            (set (reg:SI 445)
                (plus:SI (reg:SI 165 [ D.6609 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:143 -1
     (nil))

(insn 610 609 611 20 (set (reg:HI 166 [ D.6610 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 445)
                        (const_int 8 [0x8]))
                    (reg/f:SI 444))
                (const_int 4 [0x4])) [0 display_9(D)->positions[D.6609_117].x+0 S2 A32])) src/gui.c:143 -1
     (nil))

(insn 611 610 612 20 (set (reg:HI 167 [ D.6611 ])
        (reg:HI 166 [ D.6610 ])) src/gui.c:143 -1
     (nil))

(insn 612 611 613 20 (parallel [
            (set (reg:HI 168 [ D.6612 ])
                (plus:HI (reg:HI 167 [ D.6611 ])
                    (const_int 74 [0x4a])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:143 -1
     (nil))

(insn 613 612 614 20 (set (reg:HI 169 [ D.6613 ])
        (reg:HI 168 [ D.6612 ])) src/gui.c:143 -1
     (nil))

(insn 614 613 615 20 (set (reg/f:SI 446)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:143 -1
     (nil))

(insn 615 614 616 20 (set (reg:SI 448)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:143 -1
     (nil))

(insn 616 615 617 20 (parallel [
            (set (reg:SI 447)
                (plus:SI (reg:SI 448)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:143 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 617 616 618 20 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 447)
                        (const_int 8 [0x8]))
                    (reg/f:SI 446))
                (const_int 4 [0x4])) [0 display_9(D)->positions[i_2].x+0 S2 A32])
        (reg:HI 169 [ D.6613 ])) src/gui.c:143 -1
     (nil))

(jump_insn 618 617 619 20 (set (pc)
        (label_ref 634)) src/gui.c:143 -1
     (nil)
 -> 634)
;; End of basic block 20 -> ( 22)

;; Succ edge  22

(barrier 619 618 620)

;; Start of basic block ( 19) -> 21
;; Pred edge  19
(code_label 620 619 621 21 12 "" [1 uses])

(note 621 620 622 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 622 621 623 21 (set (reg:SI 449)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:145 -1
     (nil))

(insn 623 622 624 21 (parallel [
            (set (reg:SI 170 [ D.6615 ])
                (plus:SI (reg:SI 449)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:145 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 624 623 625 21 (set (reg/f:SI 450)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:145 -1
     (nil))

(insn 625 624 626 21 (parallel [
            (set (reg:SI 451)
                (plus:SI (reg:SI 170 [ D.6615 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:145 -1
     (nil))

(insn 626 625 627 21 (set (reg:HI 171 [ D.6616 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 451)
                        (const_int 8 [0x8]))
                    (reg/f:SI 450))
                (const_int 4 [0x4])) [0 display_9(D)->positions[D.6615_122].x+0 S2 A32])) src/gui.c:145 -1
     (nil))

(insn 627 626 628 21 (set (reg:HI 172 [ D.6617 ])
        (reg:HI 171 [ D.6616 ])) src/gui.c:145 -1
     (nil))

(insn 628 627 629 21 (parallel [
            (set (reg:HI 173 [ D.6618 ])
                (plus:HI (reg:HI 172 [ D.6617 ])
                    (const_int 38 [0x26])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:145 -1
     (nil))

(insn 629 628 630 21 (set (reg:HI 174 [ D.6619 ])
        (reg:HI 173 [ D.6618 ])) src/gui.c:145 -1
     (nil))

(insn 630 629 631 21 (set (reg/f:SI 452)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:145 -1
     (nil))

(insn 631 630 632 21 (set (reg:SI 454)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) src/gui.c:145 -1
     (nil))

(insn 632 631 633 21 (parallel [
            (set (reg:SI 453)
                (plus:SI (reg:SI 454)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:145 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 633 632 634 21 (set (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 453)
                        (const_int 8 [0x8]))
                    (reg/f:SI 452))
                (const_int 4 [0x4])) [0 display_9(D)->positions[i_2].x+0 S2 A32])
        (reg:HI 174 [ D.6619 ])) src/gui.c:145 -1
     (nil))
;; End of basic block 21 -> ( 22)

;; Succ edge  22 (fallthru)

;; Start of basic block ( 10 12 14 16 18 20 21) -> 22
;; Pred edge  10
;; Pred edge  12
;; Pred edge  14
;; Pred edge  16
;; Pred edge  18
;; Pred edge  20
;; Pred edge  21 (fallthru)
(code_label 634 633 635 22 7 "" [6 uses])

(note 635 634 636 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 636 635 637 22 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:126 -1
     (nil))
;; End of basic block 22 -> ( 23)

;; Succ edge  23 (fallthru)

;; Start of basic block ( 8 22) -> 23
;; Pred edge  8
;; Pred edge  22 (fallthru)
(code_label 637 636 638 23 5 "" [1 uses])

(note 638 637 640 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 640 638 641 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 23 [0x17]))) src/gui.c:126 -1
     (nil))

(jump_insn 641 640 642 23 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 639)
            (pc))) src/gui.c:126 -1
     (nil)
 -> 639)
;; End of basic block 23 -> ( 9 24)

;; Succ edge  9
;; Succ edge  24 (fallthru)

;; Start of basic block ( 23) -> 24
;; Pred edge  23 (fallthru)
(note 642 641 643 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 643 642 644 24 (set (reg/f:SI 455)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:148 -1
     (nil))

(insn 644 643 645 24 (set (mem/s/j:HI (plus:SI (reg/f:SI 455)
                (const_int 324 [0x144])) [0 display_9(D)->positions[24].x+0 S2 A32])
        (const_int 300 [0x12c])) src/gui.c:148 -1
     (nil))

(insn 645 644 646 24 (set (reg/f:SI 456)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:149 -1
     (nil))

(insn 646 645 647 24 (set (mem/s/j:HI (plus:SI (reg/f:SI 456)
                (const_int 326 [0x146])) [0 display_9(D)->positions[24].y+0 S2 A16])
        (const_int 480 [0x1e0])) src/gui.c:149 -1
     (nil))

(insn 647 646 648 24 (set (reg/f:SI 457)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:151 -1
     (nil))

(insn 648 647 649 24 (set (mem/s/j:HI (plus:SI (reg/f:SI 457)
                (const_int 332 [0x14c])) [0 display_9(D)->positions[25].x+0 S2 A32])
        (const_int 568 [0x238])) src/gui.c:151 -1
     (nil))

(insn 649 648 650 24 (set (reg/f:SI 458)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:152 -1
     (nil))

(insn 650 649 651 24 (set (mem/s/j:HI (plus:SI (reg/f:SI 458)
                (const_int 334 [0x14e])) [0 display_9(D)->positions[25].y+0 S2 A16])
        (const_int 140 [0x8c])) src/gui.c:152 -1
     (nil))

(insn 651 650 652 24 (set (reg/f:SI 459)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:154 -1
     (nil))

(insn 652 651 653 24 (set (mem/s/j:HI (plus:SI (reg/f:SI 459)
                (const_int 340 [0x154])) [0 display_9(D)->positions[26].x+0 S2 A32])
        (const_int 300 [0x12c])) src/gui.c:154 -1
     (nil))

(insn 653 652 654 24 (set (reg/f:SI 460)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:155 -1
     (nil))

(insn 654 653 655 24 (set (mem/s/j:HI (plus:SI (reg/f:SI 460)
                (const_int 342 [0x156])) [0 display_9(D)->positions[26].y+0 S2 A16])
        (const_int 220 [0xdc])) src/gui.c:155 -1
     (nil))

(insn 655 654 656 24 (set (reg/f:SI 461)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:157 -1
     (nil))

(insn 656 655 657 24 (set (mem/s/j:HI (plus:SI (reg/f:SI 461)
                (const_int 348 [0x15c])) [0 display_9(D)->positions[27].x+0 S2 A32])
        (const_int 568 [0x238])) src/gui.c:157 -1
     (nil))

(insn 657 656 658 24 (set (reg/f:SI 462)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:158 -1
     (nil))

(insn 658 657 659 24 (set (mem/s/j:HI (plus:SI (reg/f:SI 462)
                (const_int 350 [0x15e])) [0 display_9(D)->positions[27].y+0 S2 A16])
        (const_int 590 [0x24e])) src/gui.c:158 -1
     (nil))

(insn 659 658 660 24 (set (reg/f:SI 463)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:161 -1
     (nil))

(insn 660 659 661 24 (set (reg:SI 175 [ D.6620 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 463)
                (const_int 128 [0x80])) [0 display_9(D)->window_height+0 S4 A32])) src/gui.c:161 -1
     (nil))

(insn 661 660 662 24 (set (reg/f:SI 464)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:161 -1
     (nil))

(insn 662 661 663 24 (set (reg:SI 176 [ D.6621 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 464)
                (const_int 124 [0x7c])) [0 display_9(D)->window_width+0 S4 A32])) src/gui.c:161 -1
     (nil))

(insn 663 662 664 24 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (const_int 1073741825 [0x40000001])) src/gui.c:161 -1
     (nil))

(insn 664 663 665 24 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (const_int 32 [0x20])) src/gui.c:161 -1
     (nil))

(insn 665 664 666 24 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 175 [ D.6620 ])) src/gui.c:161 -1
     (nil))

(insn 666 665 667 24 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 176 [ D.6621 ])) src/gui.c:161 -1
     (nil))

(call_insn 667 666 668 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_SetVideoMode") [flags 0x41]  <function_decl 0x4079f880 SDL_SetVideoMode>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:161 -1
     (nil)
    (nil))

(insn 668 667 669 24 (set (reg/f:SI 177 [ D.6622 ])
        (reg:SI 0 ax)) src/gui.c:161 -1
     (nil))

(insn 669 668 670 24 (set (reg/f:SI 465)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:161 -1
     (nil))

(insn 670 669 671 24 (set (mem/s/f/j:SI (reg/f:SI 465) [0 display_9(D)->screen+0 S4 A32])
        (reg/f:SI 177 [ D.6622 ])) src/gui.c:161 -1
     (nil))

(insn 671 670 672 24 (set (reg/f:SI 466)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:163 -1
     (nil))

(insn 672 671 673 24 (set (reg/f:SI 178 [ D.6623 ])
        (mem/s/f/j:SI (reg/f:SI 466) [0 display_9(D)->screen+0 S4 A32])) src/gui.c:163 -1
     (nil))

(insn 673 672 674 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 178 [ D.6623 ])
            (const_int 0 [0]))) src/gui.c:163 -1
     (nil))

(jump_insn 674 673 675 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 694)
            (pc))) src/gui.c:163 -1
     (nil)
 -> 694)
;; End of basic block 24 -> ( 25 26)

;; Succ edge  25 (fallthru)
;; Succ edge  26

;; Start of basic block ( 24) -> 25
;; Pred edge  24 (fallthru)
(note 675 674 676 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(call_insn 676 675 677 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_GetError") [flags 0x41]  <function_decl 0x40773880 SDL_GetError>) [0 S1 A8])
            (const_int 0 [0]))) src/gui.c:165 -1
     (nil)
    (nil))

(insn 677 676 678 25 (set (reg/f:SI 179 [ D.6626 ])
        (reg:SI 0 ax)) src/gui.c:165 -1
     (nil))

(insn 678 677 679 25 (set (reg/f:SI 180 [ D.6627 ])
        (symbol_ref/f:SI ("*.LC16") [flags 0x2]  <var_decl 0x408fdcc0 *.LC16>)) src/gui.c:165 -1
     (nil))

(insn 679 678 680 25 (set (reg/f:SI 181 [ stderr.53 ])
        (mem/f/c/i:SI (symbol_ref:SI ("stderr") [flags 0x40]  <var_decl 0x40711120 stderr>) [0 stderr+0 S4 A32])) src/gui.c:165 -1
     (nil))

(insn 680 679 681 25 (set (reg/f:SI 182 [ stderr.54 ])
        (reg/f:SI 181 [ stderr.53 ])) src/gui.c:165 -1
     (nil))

(insn 681 680 682 25 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 179 [ D.6626 ])) src/gui.c:165 -1
     (nil))

(insn 682 681 683 25 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 180 [ D.6627 ])) src/gui.c:165 -1
     (nil))

(insn 683 682 684 25 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 182 [ stderr.54 ])) src/gui.c:165 -1
     (nil))

(call_insn 684 683 685 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fprintf") [flags 0x41]  <function_decl 0x406b1300 fprintf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:165 -1
     (nil)
    (nil))

(insn 685 684 686 25 (set (reg/f:SI 467)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:166 -1
     (nil))

(insn 686 685 687 25 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 467)) src/gui.c:166 -1
     (nil))

(call_insn 687 686 688 25 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:166 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 688 687 689 25 (set (reg/f:SI 468)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_name+0 S4 A32])) src/gui.c:167 -1
     (nil))

(insn 689 688 690 25 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 468)) src/gui.c:167 -1
     (nil))

(call_insn 690 689 691 25 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:167 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 691 690 692 25 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:168 -1
     (nil))

(call_insn 692 691 693 25 (call (mem:QI (symbol_ref:SI ("exit") [flags 0x41]  <function_decl 0x406bd980 exit>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:168 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;; End of basic block 25 -> ()


(barrier 693 692 694)

;; Start of basic block ( 24) -> 26
;; Pred edge  24
(code_label 694 693 695 26 14 "" [1 uses])

(note 695 694 696 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 696 695 697 26 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:171 -1
     (nil))

(insn 697 696 698 26 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC17") [flags 0x2]  <var_decl 0x408fdd20 *.LC17>)) src/gui.c:171 -1
     (nil))

(call_insn 698 697 699 26 (call (mem:QI (symbol_ref:SI ("SDL_WM_SetCaption") [flags 0x41]  <function_decl 0x407d1e00 SDL_WM_SetCaption>) [0 S1 A8])
        (const_int 8 [0x8])) src/gui.c:171 -1
     (nil)
    (nil))

(call_insn 699 698 700 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("TTF_Init") [flags 0x41]  <function_decl 0x407fac00 TTF_Init>) [0 S1 A8])
            (const_int 0 [0]))) src/gui.c:174 -1
     (nil)
    (nil))

(insn 700 699 701 26 (set (reg:SI 183 [ D.6630 ])
        (reg:SI 0 ax)) src/gui.c:174 -1
     (nil))

(insn 701 700 702 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 183 [ D.6630 ])
            (const_int -1 [0xffffffffffffffff]))) src/gui.c:174 -1
     (nil))

(jump_insn 702 701 703 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 722)
            (pc))) src/gui.c:174 -1
     (nil)
 -> 722)
;; End of basic block 26 -> ( 27 28)

;; Succ edge  27 (fallthru)
;; Succ edge  28

;; Start of basic block ( 26) -> 27
;; Pred edge  26 (fallthru)
(note 703 702 704 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(call_insn 704 703 705 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_GetError") [flags 0x41]  <function_decl 0x40773880 SDL_GetError>) [0 S1 A8])
            (const_int 0 [0]))) src/gui.c:176 -1
     (nil)
    (nil))

(insn 705 704 706 27 (set (reg/f:SI 184 [ D.6633 ])
        (reg:SI 0 ax)) src/gui.c:176 -1
     (nil))

(insn 706 705 707 27 (set (reg/f:SI 185 [ D.6634 ])
        (symbol_ref/f:SI ("*.LC18") [flags 0x2]  <var_decl 0x408fdd80 *.LC18>)) src/gui.c:176 -1
     (nil))

(insn 707 706 708 27 (set (reg/f:SI 186 [ stderr.55 ])
        (mem/f/c/i:SI (symbol_ref:SI ("stderr") [flags 0x40]  <var_decl 0x40711120 stderr>) [0 stderr+0 S4 A32])) src/gui.c:176 -1
     (nil))

(insn 708 707 709 27 (set (reg/f:SI 187 [ stderr.56 ])
        (reg/f:SI 186 [ stderr.55 ])) src/gui.c:176 -1
     (nil))

(insn 709 708 710 27 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 184 [ D.6633 ])) src/gui.c:176 -1
     (nil))

(insn 710 709 711 27 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 185 [ D.6634 ])) src/gui.c:176 -1
     (nil))

(insn 711 710 712 27 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 187 [ stderr.56 ])) src/gui.c:176 -1
     (nil))

(call_insn 712 711 713 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("fprintf") [flags 0x41]  <function_decl 0x406b1300 fprintf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:176 -1
     (nil)
    (nil))

(insn 713 712 714 27 (set (reg/f:SI 469)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:177 -1
     (nil))

(insn 714 713 715 27 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 469)) src/gui.c:177 -1
     (nil))

(call_insn 715 714 716 27 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:177 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 716 715 717 27 (set (reg/f:SI 470)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_name+0 S4 A32])) src/gui.c:178 -1
     (nil))

(insn 717 716 718 27 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 470)) src/gui.c:178 -1
     (nil))

(call_insn 718 717 719 27 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:178 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 719 718 720 27 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:179 -1
     (nil))

(call_insn 720 719 721 27 (call (mem:QI (symbol_ref:SI ("exit") [flags 0x41]  <function_decl 0x406bd980 exit>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:179 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;; End of basic block 27 -> ()


(barrier 721 720 722)

;; Start of basic block ( 26) -> 28
;; Pred edge  26
(code_label 722 721 723 28 15 "" [1 uses])

(note 723 722 724 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 724 723 725 28 (set (reg/f:SI 471)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:183 -1
     (nil))

(insn 725 724 726 28 (set (reg/f:SI 188 [ D.6637 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 471)
                (const_int 116 [0x74])) [0 display_9(D)->font_path+0 S4 A32])) src/gui.c:183 -1
     (nil))

(insn 726 725 727 28 (set (reg/f:SI 189 [ D.6638 ])
        (reg/f:SI 188 [ D.6637 ])) src/gui.c:183 -1
     (nil))

(insn 727 726 728 28 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 189 [ D.6638 ])) src/gui.c:183 -1
     (nil))

(insn 728 727 729 28 (set (reg/f:SI 472)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:183 -1
     (nil))

(insn 729 728 730 28 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 472)) src/gui.c:183 -1
     (nil))

(call_insn 730 729 731 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:183 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 731 730 738 28 (set (reg/f:SI 190 [ D.6639 ])
        (symbol_ref/f:SI ("*.LC19") [flags 0x2]  <var_decl 0x408fdde0 *.LC19>)) src/gui.c:184 -1
     (nil))

(insn 738 731 732 28 (set (reg:SI 473)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:184 -1
     (nil))

(insn 732 738 733 28 (set (reg:SI 477)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:184 -1
     (nil))

(insn 733 732 734 28 (set (reg:SI 476)
        (reg:SI 473)) src/gui.c:184 -1
     (nil))

(insn 734 733 735 28 (set (reg:QI 478)
        (const_int 0 [0])) src/gui.c:184 -1
     (nil))

(insn 735 734 736 28 (parallel [
            (set (reg:SI 474)
                (unspec:SI [
                        (mem:BLK (reg:SI 476) [0 A8])
                        (reg:QI 478)
                        (const_int 1 [0x1])
                        (reg:SI 477)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 476))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:184 -1
     (nil))

(insn 736 735 737 28 (set (reg:SI 475)
        (not:SI (reg:SI 474))) src/gui.c:184 -1
     (nil))

(insn 737 736 739 28 (parallel [
            (set (reg:SI 191 [ D.6640 ])
                (plus:SI (reg:SI 475)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:184 -1
     (nil))

(insn 739 737 740 28 (parallel [
            (set (reg/f:SI 192 [ D.6641 ])
                (plus:SI (reg:SI 191 [ D.6640 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:184 -1
     (nil))

(insn 740 739 741 28 (set (reg:SI 479)
        (mem:SI (reg/f:SI 190 [ D.6639 ]) [0 S4 A8])) src/gui.c:184 -1
     (nil))

(insn 741 740 742 28 (set (mem:SI (reg/f:SI 192 [ D.6641 ]) [0 S4 A8])
        (reg:SI 479)) src/gui.c:184 -1
     (nil))

(insn 742 741 743 28 (set (reg:SI 480)
        (mem:SI (plus:SI (reg/f:SI 190 [ D.6639 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:184 -1
     (nil))

(insn 743 742 744 28 (set (mem:SI (plus:SI (reg/f:SI 192 [ D.6641 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 480)) src/gui.c:184 -1
     (nil))

(insn 744 743 745 28 (set (reg:HI 481)
        (mem:HI (plus:SI (reg/f:SI 190 [ D.6639 ])
                (const_int 8 [0x8])) [0 S2 A8])) src/gui.c:184 -1
     (nil))

(insn 745 744 746 28 (set (mem:HI (plus:SI (reg/f:SI 192 [ D.6641 ])
                (const_int 8 [0x8])) [0 S2 A8])
        (reg:HI 481)) src/gui.c:184 -1
     (nil))

(insn 746 745 747 28 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 22 [0x16])) src/gui.c:185 -1
     (nil))

(insn 747 746 748 28 (set (reg/f:SI 482)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:185 -1
     (nil))

(insn 748 747 749 28 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 482)) src/gui.c:185 -1
     (nil))

(call_insn 749 748 750 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("TTF_OpenFont") [flags 0x41]  <function_decl 0x407fac80 TTF_OpenFont>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:185 -1
     (nil)
    (nil))

(insn 750 749 751 28 (set (reg/f:SI 193 [ D.6642 ])
        (reg:SI 0 ax)) src/gui.c:185 -1
     (nil))

(insn 751 750 752 28 (set (reg/f:SI 483)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:185 -1
     (nil))

(insn 752 751 753 28 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 483)
                (const_int 36 [0x24])) [0 display_9(D)->font+0 S4 A32])
        (reg/f:SI 193 [ D.6642 ])) src/gui.c:185 -1
     (nil))

(insn 753 752 754 28 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 12 [0xc])) src/gui.c:188 -1
     (nil))

(call_insn 754 753 755 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:188 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 755 754 756 28 (set (reg/f:SI 484)
        (reg:SI 0 ax)) src/gui.c:188 -1
     (expr_list:REG_NOALIAS (reg/f:SI 484)
        (nil)))

(insn 756 755 757 28 (set (reg/f:SI 194 [ D.6643 ])
        (reg/f:SI 484)) src/gui.c:188 -1
     (nil))

(insn 757 756 758 28 (set (reg/f:SI 485)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:188 -1
     (nil))

(insn 758 757 759 28 (set (mem/s/f/j:SI (reg/f:SI 485) [0 game_148(D)->player1_name+0 S4 A32])
        (reg/f:SI 194 [ D.6643 ])) src/gui.c:188 -1
     (nil))

(insn 759 758 760 28 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 12 [0xc])) src/gui.c:189 -1
     (nil))

(call_insn 760 759 761 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:189 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 761 760 762 28 (set (reg/f:SI 486)
        (reg:SI 0 ax)) src/gui.c:189 -1
     (expr_list:REG_NOALIAS (reg/f:SI 486)
        (nil)))

(insn 762 761 763 28 (set (reg/f:SI 195 [ D.6644 ])
        (reg/f:SI 486)) src/gui.c:189 -1
     (nil))

(insn 763 762 764 28 (set (reg/f:SI 487)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:189 -1
     (nil))

(insn 764 763 765 28 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 487)
                (const_int 4 [0x4])) [0 game_148(D)->player2_name+0 S4 A32])
        (reg/f:SI 195 [ D.6644 ])) src/gui.c:189 -1
     (nil))

(insn 765 764 766 28 (set (reg/f:SI 488)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:190 -1
     (nil))

(insn 766 765 767 28 (set (mem/s/j:SI (plus:SI (reg/f:SI 488)
                (const_int 8 [0x8])) [0 game_148(D)->player1_checker+0 S4 A32])
        (const_int 0 [0])) src/gui.c:190 -1
     (nil))

(insn 767 766 768 28 (set (reg/f:SI 489)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:191 -1
     (nil))

(insn 768 767 769 28 (set (mem/s/j:SI (plus:SI (reg/f:SI 489)
                (const_int 12 [0xc])) [0 game_148(D)->player2_checker+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:191 -1
     (nil))

(insn 769 768 770 28 (set (reg/f:SI 490)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:192 -1
     (nil))

(insn 770 769 771 28 (set (mem/s/j:SI (plus:SI (reg/f:SI 490)
                (const_int 16 [0x10])) [0 game_148(D)->withDouble+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:192 -1
     (nil))

(insn 771 770 772 28 (set (reg/f:SI 491)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:193 -1
     (nil))

(insn 772 771 773 28 (set (mem/s/j:SI (plus:SI (reg/f:SI 491)
                (const_int 20 [0x14])) [0 game_148(D)->scoreLimit+0 S4 A32])
        (const_int 5 [0x5])) src/gui.c:193 -1
     (nil))

(insn 773 772 774 28 (set (reg/f:SI 492)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 temp_path+0 S4 A32])) src/gui.c:195 -1
     (nil))

(insn 774 773 775 28 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 492)) src/gui.c:195 -1
     (nil))

(call_insn 775 774 776 28 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:195 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 776 775 777 28 (set (reg/f:SI 493)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_name+0 S4 A32])) src/gui.c:196 -1
     (nil))

(insn 777 776 778 28 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 493)) src/gui.c:196 -1
     (nil))

(call_insn 778 777 779 28 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:196 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;; End of basic block 28 -> ( 29)

;; Succ edge  29 (fallthru)

;; Start of basic block ( 28) -> 29
;; Pred edge  28 (fallthru)
(code_label 779 778 780 29 1 "" [0 uses])

(note 780 779 0 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 29 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Display_Message (Display_Message)

Display_Message (struct SDisplay * display, char * message, struct SDL_Rect position, struct SDL_Color color, int box)
{
  struct SDL_Surface * msg;
  int leng;
  struct SDL_Surface * D.6483;
  struct TTF_Font * D.6482;
  Sint16 D.6481;
  short unsigned int D.6480;
  short unsigned int D.6479;
  Sint16 D.6478;
  Sint16 D.6477;
  short unsigned int D.6476;
  short unsigned int D.6475;
  short unsigned int D.6474;
  int D.6473;
  int D.6472;
  short unsigned int D.6471;
  Sint16 D.6470;
  struct SDL_Surface * D.6469;
  struct SDL_Surface * D.6468;
  size_t D.6465;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.6465_2 = strlen (message_1(D));
  leng_3 = (int) D.6465_2;
  if (box_4(D) != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.6468_6 = display_5(D)->screen;
  D.6469_7 = display_5(D)->msg_box;
  SDL_UpperBlit (D.6469_7, 0B, D.6468_6, &position);
  D.6470_8 = position.x;
  D.6471_9 = (short unsigned int) D.6470_8;
  D.6472_10 = leng_3 * 12;
  D.6473_11 = D.6472_10 / 2;
  D.6474_12 = (short unsigned int) D.6473_11;
  D.6475_13 = D.6471_9 - D.6474_12;
  D.6476_14 = D.6475_13 + 260;
  D.6477_15 = (Sint16) D.6476_14;
  position.x = D.6477_15;
  D.6478_16 = position.y;
  D.6479_17 = (short unsigned int) D.6478_16;
  D.6480_18 = D.6479_17 + 25;
  D.6481_19 = (Sint16) D.6480_18;
  position.y = D.6481_19;
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (false) 3 (fallthru)
  D.6482_20 = display_5(D)->font;
  msg_21 = TTF_RenderText_Blended (D.6482_20, message_1(D), color);
  D.6483_22 = display_5(D)->screen;
  SDL_UpperBlit (msg_21, 0B, D.6483_22, &position);
  SDL_FreeSurface (msg_21);
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (message_1(D) - 1 )
Partition 2 (D.6465_2 - 2 )
Partition 3 (leng_3 - 3 )
Partition 4 (box_4(D) - 4 )
Partition 5 (display_5(D) - 5 )
Partition 6 (D.6468_6 - 6 )
Partition 7 (D.6469_7 - 7 )
Partition 8 (D.6470_8 - 8 )
Partition 9 (D.6471_9 - 9 )
Partition 10 (D.6472_10 - 10 )
Partition 11 (D.6473_11 - 11 )
Partition 12 (D.6474_12 - 12 )
Partition 13 (D.6475_13 - 13 )
Partition 14 (D.6476_14 - 14 )
Partition 15 (D.6477_15 - 15 )
Partition 16 (D.6478_16 - 16 )
Partition 17 (D.6479_17 - 17 )
Partition 18 (D.6480_18 - 18 )
Partition 19 (D.6481_19 - 19 )
Partition 20 (D.6482_20 - 20 )
Partition 21 (msg_21 - 21 )
Partition 22 (D.6483_22 - 22 )


Partition map 

Partition 0 (message_1(D) - 1 )
Partition 1 (box_4(D) - 4 )
Partition 2 (display_5(D) - 5 )


Live on entry to BB2 : message_1(D)  box_4(D)  display_5(D)  

Live on entry to BB3 : message_1(D)  display_5(D)  

Live on entry to BB4 : message_1(D)  display_5(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (message_1(D) - 1 )
Partition 1 (box_4(D) - 4 )
Partition 2 (display_5(D) - 5 )

After Coalescing:

Partition map 

Partition 0 (message_1(D) - 1 )
Partition 1 (D.6465_2 - 2 )
Partition 2 (leng_3 - 3 )
Partition 3 (box_4(D) - 4 )
Partition 4 (display_5(D) - 5 )
Partition 5 (D.6468_6 - 6 )
Partition 6 (D.6469_7 - 7 )
Partition 7 (D.6470_8 - 8 )
Partition 8 (D.6471_9 - 9 )
Partition 9 (D.6472_10 - 10 )
Partition 10 (D.6473_11 - 11 )
Partition 11 (D.6474_12 - 12 )
Partition 12 (D.6475_13 - 13 )
Partition 13 (D.6476_14 - 14 )
Partition 14 (D.6477_15 - 15 )
Partition 15 (D.6478_16 - 16 )
Partition 16 (D.6479_17 - 17 )
Partition 17 (D.6480_18 - 18 )
Partition 18 (D.6481_19 - 19 )
Partition 19 (D.6482_20 - 20 )
Partition 20 (msg_21 - 21 )
Partition 21 (D.6483_22 - 22 )

Display_Message (struct SDisplay * display, char * message, struct SDL_Rect position, struct SDL_Color color, int box)
{
  struct SDL_Surface * msg;
  int leng;
  struct SDL_Surface * D.6483;
  struct TTF_Font * D.6482;
  Sint16 D.6481;
  short unsigned int D.6480;
  short unsigned int D.6479;
  Sint16 D.6478;
  Sint16 D.6477;
  short unsigned int D.6476;
  short unsigned int D.6475;
  short unsigned int D.6474;
  int D.6473;
  int D.6472;
  short unsigned int D.6471;
  Sint16 D.6470;
  struct SDL_Surface * D.6469;
  struct SDL_Surface * D.6468;
  size_t D.6465;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.6465_2 = strlen (message_1(D));
  leng_3 = (int) D.6465_2;
  if (box_4(D) != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.6468_6 = display_5(D)->screen;
  D.6469_7 = display_5(D)->msg_box;
  SDL_UpperBlit (D.6469_7, 0B, D.6468_6, &position);
  D.6470_8 = position.x;
  D.6471_9 = (short unsigned int) D.6470_8;
  D.6472_10 = leng_3 * 12;
  D.6473_11 = D.6472_10 / 2;
  D.6474_12 = (short unsigned int) D.6473_11;
  D.6475_13 = D.6471_9 - D.6474_12;
  D.6476_14 = D.6475_13 + 260;
  D.6477_15 = (Sint16) D.6476_14;
  position.x = D.6477_15;
  D.6478_16 = position.y;
  D.6479_17 = (short unsigned int) D.6478_16;
  D.6480_18 = D.6479_17 + 25;
  D.6481_19 = (Sint16) D.6480_18;
  position.y = D.6481_19;
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (false) 3 (fallthru)
  D.6482_20 = display_5(D)->font;
  msg_21 = TTF_RenderText_Blended (D.6482_20, message_1(D), color);
  D.6483_22 = display_5(D)->screen;
  SDL_UpperBlit (msg_21, 0B, D.6483_22, &position);
  SDL_FreeSurface (msg_21);
  return;
  # SUCC: EXIT

}


Partition 1: size 4 align 4
	msg_21, offset 0
Partition 0: size 4 align 4
	leng_3, offset 0

;; Generating RTL for gimple basic block 2

;; D.6465_2 = strlen (message_1(D));

(insn 11 4 5 (set (reg:SI 76)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 message+0 S4 A32])) src/gui.c:202 -1
     (nil))

(insn 5 11 6 (set (reg:SI 80)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:202 -1
     (nil))

(insn 6 5 7 (set (reg:SI 79)
        (reg:SI 76)) src/gui.c:202 -1
     (nil))

(insn 7 6 8 (set (reg:QI 81)
        (const_int 0 [0])) src/gui.c:202 -1
     (nil))

(insn 8 7 9 (parallel [
            (set (reg:SI 77)
                (unspec:SI [
                        (mem:BLK (reg:SI 79) [0 A8])
                        (reg:QI 81)
                        (const_int 1 [0x1])
                        (reg:SI 80)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 79))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:202 -1
     (nil))

(insn 9 8 10 (set (reg:SI 78)
        (not:SI (reg:SI 77))) src/gui.c:202 -1
     (nil))

(insn 10 9 0 (parallel [
            (set (reg:SI 59 [ D.6465 ])
                (plus:SI (reg:SI 78)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:202 -1
     (nil))

;; leng_3 = (int) D.6465_2;

(insn 12 10 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 leng+0 S4 A32])
        (reg:SI 59 [ D.6465 ])) src/gui.c:202 -1
     (nil))

;; if (box_4(D) != 0)

(insn 13 12 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 20 [0x14])) [0 box+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:203 -1
     (nil))

(jump_insn 14 13 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:203 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; D.6468_6 = display_5(D)->screen;

(insn 16 15 17 (set (reg/f:SI 82)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:205 -1
     (nil))

(insn 17 16 0 (set (reg/f:SI 60 [ D.6468 ])
        (mem/s/f/j:SI (reg/f:SI 82) [0 display_5(D)->screen+0 S4 A32])) src/gui.c:205 -1
     (nil))

;; D.6469_7 = display_5(D)->msg_box;

(insn 18 17 19 (set (reg/f:SI 83)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:205 -1
     (nil))

(insn 19 18 0 (set (reg/f:SI 61 [ D.6469 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 83)
                (const_int 40 [0x28])) [0 display_5(D)->msg_box+0 S4 A32])) src/gui.c:205 -1
     (nil))

;; SDL_UpperBlit (D.6469_7, 0B, D.6468_6, &position);

(insn 20 19 21 (parallel [
            (set (reg:SI 84)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:205 -1
     (nil))

(insn 21 20 22 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 84)) src/gui.c:205 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 8 [0x8]))
        (nil)))

(insn 22 21 23 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 60 [ D.6468 ])) src/gui.c:205 -1
     (nil))

(insn 23 22 24 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:205 -1
     (nil))

(insn 24 23 25 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 61 [ D.6469 ])) src/gui.c:205 -1
     (nil))

(call_insn 25 24 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:205 -1
     (nil)
    (nil))

;; D.6470_8 = position.x;

(insn 26 25 0 (set (reg:HI 62 [ D.6470 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 position.x+0 S2 A32])) src/gui.c:207 -1
     (nil))

;; D.6471_9 = (short unsigned int) D.6470_8;

(insn 27 26 0 (set (reg:HI 63 [ D.6471 ])
        (reg:HI 62 [ D.6470 ])) src/gui.c:207 -1
     (nil))

;; D.6472_10 = leng_3 * 12;

(insn 28 27 29 (set (reg:SI 85)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 leng+0 S4 A32])) src/gui.c:207 -1
     (nil))

(insn 29 28 30 (set (reg:SI 86)
        (reg:SI 85)) src/gui.c:207 -1
     (nil))

(insn 30 29 31 (parallel [
            (set (reg:SI 86)
                (ashift:SI (reg:SI 86)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (nil))

(insn 31 30 32 (parallel [
            (set (reg:SI 86)
                (plus:SI (reg:SI 86)
                    (reg:SI 85)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 85)
            (const_int 3 [0x3]))
        (nil)))

(insn 32 31 33 (parallel [
            (set (reg:SI 87)
                (ashift:SI (reg:SI 86)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (nil))

(insn 33 32 34 (set (reg:SI 86)
        (reg:SI 87)) src/gui.c:207 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 85)
            (const_int 12 [0xc]))
        (nil)))

(insn 34 33 0 (set (reg:SI 64 [ D.6472 ])
        (reg:SI 86)) src/gui.c:207 -1
     (nil))

;; D.6473_11 = D.6472_10 / 2;

(insn 35 34 36 (parallel [
            (set (reg:SI 88)
                (lshiftrt:SI (reg:SI 64 [ D.6472 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (nil))

(insn 36 35 37 (parallel [
            (set (reg:SI 89)
                (plus:SI (reg:SI 88)
                    (reg:SI 64 [ D.6472 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (nil))

(insn 37 36 38 (parallel [
            (set (reg:SI 90)
                (ashiftrt:SI (reg:SI 89)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 64 [ D.6472 ])
            (const_int 2 [0x2]))
        (nil)))

(insn 38 37 0 (set (reg:SI 65 [ D.6473 ])
        (reg:SI 90)) src/gui.c:207 -1
     (nil))

;; D.6474_12 = (short unsigned int) D.6473_11;

(insn 39 38 0 (set (reg:HI 66 [ D.6474 ])
        (subreg:HI (reg:SI 65 [ D.6473 ]) 0)) src/gui.c:207 -1
     (nil))

;; D.6475_13 = D.6471_9 - D.6474_12;

(insn 40 39 0 (parallel [
            (set (reg:HI 67 [ D.6475 ])
                (minus:HI (reg:HI 63 [ D.6471 ])
                    (reg:HI 66 [ D.6474 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (nil))

;; D.6476_14 = D.6475_13 + 260;

(insn 41 40 0 (parallel [
            (set (reg:HI 68 [ D.6476 ])
                (plus:HI (reg:HI 67 [ D.6475 ])
                    (const_int 260 [0x104])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (nil))

;; D.6477_15 = (Sint16) D.6476_14;

(insn 42 41 0 (set (reg:HI 69 [ D.6477 ])
        (reg:HI 68 [ D.6476 ])) src/gui.c:207 -1
     (nil))

;; position.x = D.6477_15;

(insn 43 42 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 position.x+0 S2 A32])
        (reg:HI 69 [ D.6477 ])) src/gui.c:207 -1
     (nil))

;; D.6478_16 = position.y;

(insn 44 43 0 (set (reg:HI 70 [ D.6478 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 10 [0xa])) [0 position.y+0 S2 A16])) src/gui.c:208 -1
     (nil))

;; D.6479_17 = (short unsigned int) D.6478_16;

(insn 45 44 0 (set (reg:HI 71 [ D.6479 ])
        (reg:HI 70 [ D.6478 ])) src/gui.c:208 -1
     (nil))

;; D.6480_18 = D.6479_17 + 25;

(insn 46 45 0 (parallel [
            (set (reg:HI 72 [ D.6480 ])
                (plus:HI (reg:HI 71 [ D.6479 ])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:208 -1
     (nil))

;; D.6481_19 = (Sint16) D.6480_18;

(insn 47 46 0 (set (reg:HI 73 [ D.6481 ])
        (reg:HI 72 [ D.6480 ])) src/gui.c:208 -1
     (nil))

;; position.y = D.6481_19;

(insn 48 47 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 10 [0xa])) [0 position.y+0 S2 A16])
        (reg:HI 73 [ D.6481 ])) src/gui.c:208 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 49 48 50 17 "" [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; D.6482_20 = display_5(D)->font;

(insn 51 50 52 (set (reg/f:SI 91)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:210 -1
     (nil))

(insn 52 51 0 (set (reg/f:SI 74 [ D.6482 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 91)
                (const_int 36 [0x24])) [0 display_5(D)->font+0 S4 A32])) src/gui.c:210 -1
     (nil))

;; msg_21 = TTF_RenderText_Blended (D.6482_20, message_1(D), color);

(insn 53 52 54 (set (reg:SI 92)
        (mem/s/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 16 [0x10])) [0 color+0 S4 A32])) src/gui.c:210 -1
     (nil))

(insn 54 53 55 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 92)) src/gui.c:210 -1
     (nil))

(insn 55 54 56 (set (reg/f:SI 93)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 message+0 S4 A32])) src/gui.c:210 -1
     (nil))

(insn 56 55 57 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 93)) src/gui.c:210 -1
     (nil))

(insn 57 56 58 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 74 [ D.6482 ])) src/gui.c:210 -1
     (nil))

(call_insn 58 57 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("TTF_RenderText_Blended") [flags 0x41]  <function_decl 0x40801980 TTF_RenderText_Blended>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:210 -1
     (nil)
    (nil))

(insn 59 58 60 (set (reg:SI 94)
        (reg:SI 0 ax)) src/gui.c:210 -1
     (nil))

(insn 60 59 0 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 msg+0 S4 A32])
        (reg:SI 94)) src/gui.c:210 -1
     (nil))

;; D.6483_22 = display_5(D)->screen;

(insn 61 60 62 (set (reg/f:SI 95)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:211 -1
     (nil))

(insn 62 61 0 (set (reg/f:SI 75 [ D.6483 ])
        (mem/s/f/j:SI (reg/f:SI 95) [0 display_5(D)->screen+0 S4 A32])) src/gui.c:211 -1
     (nil))

;; SDL_UpperBlit (msg_21, 0B, D.6483_22, &position);

(insn 63 62 64 (parallel [
            (set (reg:SI 96)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:211 -1
     (nil))

(insn 64 63 65 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 96)) src/gui.c:211 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 8 [0x8]))
        (nil)))

(insn 65 64 66 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 75 [ D.6483 ])) src/gui.c:211 -1
     (nil))

(insn 66 65 67 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:211 -1
     (nil))

(insn 67 66 68 (set (reg/f:SI 97)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 msg+0 S4 A32])) src/gui.c:211 -1
     (nil))

(insn 68 67 69 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 97)) src/gui.c:211 -1
     (nil))

(call_insn 69 68 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:211 -1
     (nil)
    (nil))

;; SDL_FreeSurface (msg_21);

(insn 70 69 71 (set (reg/f:SI 98)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 msg+0 S4 A32])) src/gui.c:212 -1
     (nil))

(insn 71 70 72 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 98)) src/gui.c:212 -1
     (nil))

(call_insn 72 71 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:212 -1
     (nil)
    (nil))


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 4 5 3 (set (reg:SI 76)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 message+0 S4 A32])) src/gui.c:202 -1
     (nil))

(insn 5 11 6 3 (set (reg:SI 80)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:202 -1
     (nil))

(insn 6 5 7 3 (set (reg:SI 79)
        (reg:SI 76)) src/gui.c:202 -1
     (nil))

(insn 7 6 8 3 (set (reg:QI 81)
        (const_int 0 [0])) src/gui.c:202 -1
     (nil))

(insn 8 7 9 3 (parallel [
            (set (reg:SI 77)
                (unspec:SI [
                        (mem:BLK (reg:SI 79) [0 A8])
                        (reg:QI 81)
                        (const_int 1 [0x1])
                        (reg:SI 80)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 79))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:202 -1
     (nil))

(insn 9 8 10 3 (set (reg:SI 78)
        (not:SI (reg:SI 77))) src/gui.c:202 -1
     (nil))

(insn 10 9 12 3 (parallel [
            (set (reg:SI 59 [ D.6465 ])
                (plus:SI (reg:SI 78)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:202 -1
     (nil))

(insn 12 10 13 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 leng+0 S4 A32])
        (reg:SI 59 [ D.6465 ])) src/gui.c:202 -1
     (nil))

(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 20 [0x14])) [0 box+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:203 -1
     (nil))

(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) src/gui.c:203 -1
     (nil)
 -> 49)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 4 (set (reg/f:SI 82)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:205 -1
     (nil))

(insn 17 16 18 4 (set (reg/f:SI 60 [ D.6468 ])
        (mem/s/f/j:SI (reg/f:SI 82) [0 display_5(D)->screen+0 S4 A32])) src/gui.c:205 -1
     (nil))

(insn 18 17 19 4 (set (reg/f:SI 83)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:205 -1
     (nil))

(insn 19 18 20 4 (set (reg/f:SI 61 [ D.6469 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 83)
                (const_int 40 [0x28])) [0 display_5(D)->msg_box+0 S4 A32])) src/gui.c:205 -1
     (nil))

(insn 20 19 21 4 (parallel [
            (set (reg:SI 84)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:205 -1
     (nil))

(insn 21 20 22 4 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 84)) src/gui.c:205 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 8 [0x8]))
        (nil)))

(insn 22 21 23 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 60 [ D.6468 ])) src/gui.c:205 -1
     (nil))

(insn 23 22 24 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:205 -1
     (nil))

(insn 24 23 25 4 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 61 [ D.6469 ])) src/gui.c:205 -1
     (nil))

(call_insn 25 24 26 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:205 -1
     (nil)
    (nil))

(insn 26 25 27 4 (set (reg:HI 62 [ D.6470 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 position.x+0 S2 A32])) src/gui.c:207 -1
     (nil))

(insn 27 26 28 4 (set (reg:HI 63 [ D.6471 ])
        (reg:HI 62 [ D.6470 ])) src/gui.c:207 -1
     (nil))

(insn 28 27 29 4 (set (reg:SI 85)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 leng+0 S4 A32])) src/gui.c:207 -1
     (nil))

(insn 29 28 30 4 (set (reg:SI 86)
        (reg:SI 85)) src/gui.c:207 -1
     (nil))

(insn 30 29 31 4 (parallel [
            (set (reg:SI 86)
                (ashift:SI (reg:SI 86)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (nil))

(insn 31 30 32 4 (parallel [
            (set (reg:SI 86)
                (plus:SI (reg:SI 86)
                    (reg:SI 85)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 85)
            (const_int 3 [0x3]))
        (nil)))

(insn 32 31 33 4 (parallel [
            (set (reg:SI 87)
                (ashift:SI (reg:SI 86)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (nil))

(insn 33 32 34 4 (set (reg:SI 86)
        (reg:SI 87)) src/gui.c:207 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 85)
            (const_int 12 [0xc]))
        (nil)))

(insn 34 33 35 4 (set (reg:SI 64 [ D.6472 ])
        (reg:SI 86)) src/gui.c:207 -1
     (nil))

(insn 35 34 36 4 (parallel [
            (set (reg:SI 88)
                (lshiftrt:SI (reg:SI 64 [ D.6472 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (nil))

(insn 36 35 37 4 (parallel [
            (set (reg:SI 89)
                (plus:SI (reg:SI 88)
                    (reg:SI 64 [ D.6472 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (nil))

(insn 37 36 38 4 (parallel [
            (set (reg:SI 90)
                (ashiftrt:SI (reg:SI 89)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 64 [ D.6472 ])
            (const_int 2 [0x2]))
        (nil)))

(insn 38 37 39 4 (set (reg:SI 65 [ D.6473 ])
        (reg:SI 90)) src/gui.c:207 -1
     (nil))

(insn 39 38 40 4 (set (reg:HI 66 [ D.6474 ])
        (subreg:HI (reg:SI 65 [ D.6473 ]) 0)) src/gui.c:207 -1
     (nil))

(insn 40 39 41 4 (parallel [
            (set (reg:HI 67 [ D.6475 ])
                (minus:HI (reg:HI 63 [ D.6471 ])
                    (reg:HI 66 [ D.6474 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (nil))

(insn 41 40 42 4 (parallel [
            (set (reg:HI 68 [ D.6476 ])
                (plus:HI (reg:HI 67 [ D.6475 ])
                    (const_int 260 [0x104])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:207 -1
     (nil))

(insn 42 41 43 4 (set (reg:HI 69 [ D.6477 ])
        (reg:HI 68 [ D.6476 ])) src/gui.c:207 -1
     (nil))

(insn 43 42 44 4 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 position.x+0 S2 A32])
        (reg:HI 69 [ D.6477 ])) src/gui.c:207 -1
     (nil))

(insn 44 43 45 4 (set (reg:HI 70 [ D.6478 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 10 [0xa])) [0 position.y+0 S2 A16])) src/gui.c:208 -1
     (nil))

(insn 45 44 46 4 (set (reg:HI 71 [ D.6479 ])
        (reg:HI 70 [ D.6478 ])) src/gui.c:208 -1
     (nil))

(insn 46 45 47 4 (parallel [
            (set (reg:HI 72 [ D.6480 ])
                (plus:HI (reg:HI 71 [ D.6479 ])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:208 -1
     (nil))

(insn 47 46 48 4 (set (reg:HI 73 [ D.6481 ])
        (reg:HI 72 [ D.6480 ])) src/gui.c:208 -1
     (nil))

(insn 48 47 49 4 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 10 [0xa])) [0 position.y+0 S2 A16])
        (reg:HI 73 [ D.6481 ])) src/gui.c:208 -1
     (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 49 48 50 5 17 "" [1 uses])

(note 50 49 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 5 (set (reg/f:SI 91)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:210 -1
     (nil))

(insn 52 51 53 5 (set (reg/f:SI 74 [ D.6482 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 91)
                (const_int 36 [0x24])) [0 display_5(D)->font+0 S4 A32])) src/gui.c:210 -1
     (nil))

(insn 53 52 54 5 (set (reg:SI 92)
        (mem/s/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 16 [0x10])) [0 color+0 S4 A32])) src/gui.c:210 -1
     (nil))

(insn 54 53 55 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 92)) src/gui.c:210 -1
     (nil))

(insn 55 54 56 5 (set (reg/f:SI 93)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 message+0 S4 A32])) src/gui.c:210 -1
     (nil))

(insn 56 55 57 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 93)) src/gui.c:210 -1
     (nil))

(insn 57 56 58 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 74 [ D.6482 ])) src/gui.c:210 -1
     (nil))

(call_insn 58 57 59 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("TTF_RenderText_Blended") [flags 0x41]  <function_decl 0x40801980 TTF_RenderText_Blended>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:210 -1
     (nil)
    (nil))

(insn 59 58 60 5 (set (reg:SI 94)
        (reg:SI 0 ax)) src/gui.c:210 -1
     (nil))

(insn 60 59 61 5 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 msg+0 S4 A32])
        (reg:SI 94)) src/gui.c:210 -1
     (nil))

(insn 61 60 62 5 (set (reg/f:SI 95)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:211 -1
     (nil))

(insn 62 61 63 5 (set (reg/f:SI 75 [ D.6483 ])
        (mem/s/f/j:SI (reg/f:SI 95) [0 display_5(D)->screen+0 S4 A32])) src/gui.c:211 -1
     (nil))

(insn 63 62 64 5 (parallel [
            (set (reg:SI 96)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:211 -1
     (nil))

(insn 64 63 65 5 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 96)) src/gui.c:211 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 8 [0x8]))
        (nil)))

(insn 65 64 66 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 75 [ D.6483 ])) src/gui.c:211 -1
     (nil))

(insn 66 65 67 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:211 -1
     (nil))

(insn 67 66 68 5 (set (reg/f:SI 97)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 msg+0 S4 A32])) src/gui.c:211 -1
     (nil))

(insn 68 67 69 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 97)) src/gui.c:211 -1
     (nil))

(call_insn 69 68 70 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:211 -1
     (nil)
    (nil))

(insn 70 69 71 5 (set (reg/f:SI 98)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 msg+0 S4 A32])) src/gui.c:212 -1
     (nil))

(insn 71 70 72 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 98)) src/gui.c:212 -1
     (nil))

(call_insn 72 71 73 5 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:212 -1
     (nil)
    (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(code_label 73 72 74 6 16 "" [0 uses])

(note 74 73 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Display_Message_Click (Display_Message_Click)

Display_Message_Click (struct SDisplay * display, char * message, struct SDL_Rect position, struct SDL_Color color, int box)
{
  union SDL_Event event;
  struct SDL_Surface * msg;
  int leng;
  Uint16 D.6460;
  Uint16 D.6457;
  Uint16 D.6454;
  Uint16 D.6451;
  Uint8 D.6448;
  int D.6447;
  int D.6446;
  Uint8 D.6445;
  struct SDL_Surface * D.6444;
  struct SDL_Surface * D.6443;
  struct TTF_Font * D.6442;
  Sint16 D.6441;
  short unsigned int D.6440;
  short unsigned int D.6439;
  Sint16 D.6438;
  Sint16 D.6437;
  short unsigned int D.6436;
  short unsigned int D.6435;
  short unsigned int D.6434;
  int D.6433;
  int D.6432;
  short unsigned int D.6431;
  Sint16 D.6430;
  struct SDL_Surface * D.6429;
  struct SDL_Surface * D.6428;
  size_t D.6425;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.6425_3 = strlen (message_2(D));
  leng_4 = (int) D.6425_3;
  if (box_5(D) != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.6428_7 = display_6(D)->screen;
  D.6429_8 = display_6(D)->msg_box;
  SDL_UpperBlit (D.6429_8, 0B, D.6428_7, &position);
  D.6430_9 = position.x;
  D.6431_10 = (short unsigned int) D.6430_9;
  D.6432_11 = leng_4 * 12;
  D.6433_12 = D.6432_11 / 2;
  D.6434_13 = (short unsigned int) D.6433_12;
  D.6435_14 = D.6431_10 - D.6434_13;
  D.6436_15 = D.6435_14 + 260;
  D.6437_16 = (Sint16) D.6436_15;
  position.x = D.6437_16;
  D.6438_17 = position.y;
  D.6439_18 = (short unsigned int) D.6438_17;
  D.6440_19 = D.6439_18 + 25;
  D.6441_20 = (Sint16) D.6440_19;
  position.y = D.6441_20;
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (false) 3 (fallthru)
  D.6442_21 = display_6(D)->font;
  msg_22 = TTF_RenderText_Blended (D.6442_21, message_2(D), color);
  D.6443_23 = display_6(D)->screen;
  SDL_UpperBlit (msg_22, 0B, D.6443_23, &position);
  SDL_FreeSurface (msg_22);
  D.6444_24 = display_6(D)->screen;
  SDL_Flip (D.6444_24);
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 4 (fallthru) 14 (fallthru)
  SDL_WaitEvent (&event);
  D.6445_25 = event.type;
  D.6446_26 = (int) D.6445_25;
  switch (D.6446_26) <default: <L15>, case 6: <L4>, case 12: <L3>>
  # SUCC: 14 7 6

  # BLOCK 6
  # PRED: 5
<L3>:
  D.6447_27 = 1;
  goto <bb 15>;
  # SUCC: 15 (fallthru)

  # BLOCK 7
  # PRED: 5
<L4>:
  D.6448_28 = event.button.button;
  if (D.6448_28 == 1)
    goto <bb 8>;
  else
    goto <bb 13>;
  # SUCC: 8 (true) 13 (false)

  # BLOCK 8
  # PRED: 7 (true)
  D.6451_29 = event.button.x;
  if (D.6451_29 > 79)
    goto <bb 9>;
  else
    goto <bb 13>;
  # SUCC: 9 (true) 13 (false)

  # BLOCK 9
  # PRED: 8 (true)
  D.6454_30 = event.button.x;
  if (D.6454_30 <= 548)
    goto <bb 10>;
  else
    goto <bb 13>;
  # SUCC: 10 (true) 13 (false)

  # BLOCK 10
  # PRED: 9 (true)
  D.6457_31 = event.button.y;
  if (D.6457_31 > 324)
    goto <bb 11>;
  else
    goto <bb 13>;
  # SUCC: 11 (true) 13 (false)

  # BLOCK 11
  # PRED: 10 (true)
  D.6460_32 = event.button.y;
  if (D.6460_32 <= 415)
    goto <bb 12>;
  else
    goto <bb 13>;
  # SUCC: 12 (true) 13 (false)

  # BLOCK 12
  # PRED: 11 (true)
  D.6447_33 = 0;
  goto <bb 15>;
  # SUCC: 15 (fallthru)

  # BLOCK 13
  # PRED: 7 (false) 8 (false) 9 (false) 10 (false) 11 (false)
  # SUCC: 14 (fallthru)

  # BLOCK 14
  # PRED: 5 13 (fallthru)
<L15>:
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 15
  # PRED: 6 (fallthru) 12 (fallthru)
  # D.6447_1 = PHI <D.6447_27(6), D.6447_33(12)>
  return D.6447_1;
  # SUCC: EXIT

}



Partition map 

Partition 1 (D.6447_1 - 1 )
Partition 2 (message_2(D) - 2 )
Partition 3 (D.6425_3 - 3 )
Partition 4 (leng_4 - 4 )
Partition 5 (box_5(D) - 5 )
Partition 6 (display_6(D) - 6 )
Partition 7 (D.6428_7 - 7 )
Partition 8 (D.6429_8 - 8 )
Partition 9 (D.6430_9 - 9 )
Partition 10 (D.6431_10 - 10 )
Partition 11 (D.6432_11 - 11 )
Partition 12 (D.6433_12 - 12 )
Partition 13 (D.6434_13 - 13 )
Partition 14 (D.6435_14 - 14 )
Partition 15 (D.6436_15 - 15 )
Partition 16 (D.6437_16 - 16 )
Partition 17 (D.6438_17 - 17 )
Partition 18 (D.6439_18 - 18 )
Partition 19 (D.6440_19 - 19 )
Partition 20 (D.6441_20 - 20 )
Partition 21 (D.6442_21 - 21 )
Partition 22 (msg_22 - 22 )
Partition 23 (D.6443_23 - 23 )
Partition 24 (D.6444_24 - 24 )
Partition 25 (D.6445_25 - 25 )
Partition 26 (D.6446_26 - 26 )
Partition 27 (D.6447_27 - 27 )
Partition 28 (D.6448_28 - 28 )
Partition 29 (D.6451_29 - 29 )
Partition 30 (D.6454_30 - 30 )
Partition 31 (D.6457_31 - 31 )
Partition 32 (D.6460_32 - 32 )
Partition 33 (D.6447_33 - 33 )


Partition map 

Partition 0 (D.6447_1 - 1 )
Partition 1 (message_2(D) - 2 )
Partition 2 (box_5(D) - 5 )
Partition 3 (display_6(D) - 6 )
Partition 4 (D.6447_27 - 27 )
Partition 5 (D.6447_33 - 33 )


Live on entry to BB2 : message_2(D)  box_5(D)  display_6(D)  

Live on entry to BB3 : message_2(D)  display_6(D)  

Live on entry to BB4 : message_2(D)  display_6(D)  

Live on entry to BB5 : 

Live on entry to BB6 : 

Live on entry to BB7 : 

Live on entry to BB8 : 

Live on entry to BB9 : 

Live on entry to BB10 : 

Live on entry to BB11 : 

Live on entry to BB12 : 

Live on entry to BB13 : 

Live on entry to BB14 : 

Live on entry to BB15 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (D.6447_1 - 1 )
Partition 1 (message_2(D) - 2 )
Partition 2 (box_5(D) - 5 )
Partition 3 (display_6(D) - 6 )
Partition 4 (D.6447_27 - 27 )
Partition 5 (D.6447_33 - 33 )

Coalesce list: (1)D.6447_1 & (33)D.6447_33 [map: 0, 5] : Success -> 0
Coalesce list: (1)D.6447_1 & (27)D.6447_27 [map: 0, 4] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (D.6447_1 - 1 27 33 )
Partition 1 (message_2(D) - 2 )
Partition 2 (D.6425_3 - 3 )
Partition 3 (leng_4 - 4 )
Partition 4 (box_5(D) - 5 )
Partition 5 (display_6(D) - 6 )
Partition 6 (D.6428_7 - 7 )
Partition 7 (D.6429_8 - 8 )
Partition 8 (D.6430_9 - 9 )
Partition 9 (D.6431_10 - 10 )
Partition 10 (D.6432_11 - 11 )
Partition 11 (D.6433_12 - 12 )
Partition 12 (D.6434_13 - 13 )
Partition 13 (D.6435_14 - 14 )
Partition 14 (D.6436_15 - 15 )
Partition 15 (D.6437_16 - 16 )
Partition 16 (D.6438_17 - 17 )
Partition 17 (D.6439_18 - 18 )
Partition 18 (D.6440_19 - 19 )
Partition 19 (D.6441_20 - 20 )
Partition 20 (D.6442_21 - 21 )
Partition 21 (msg_22 - 22 )
Partition 22 (D.6443_23 - 23 )
Partition 23 (D.6444_24 - 24 )
Partition 24 (D.6445_25 - 25 )
Partition 25 (D.6446_26 - 26 )
Partition 26 (D.6448_28 - 28 )
Partition 27 (D.6451_29 - 29 )
Partition 28 (D.6454_30 - 30 )
Partition 29 (D.6457_31 - 31 )
Partition 30 (D.6460_32 - 32 )

Display_Message_Click (struct SDisplay * display, char * message, struct SDL_Rect position, struct SDL_Color color, int box)
{
  union SDL_Event event;
  struct SDL_Surface * msg;
  int leng;
  Uint16 D.6460;
  Uint16 D.6457;
  Uint16 D.6454;
  Uint16 D.6451;
  Uint8 D.6448;
  int D.6447;
  int D.6446;
  Uint8 D.6445;
  struct SDL_Surface * D.6444;
  struct SDL_Surface * D.6443;
  struct TTF_Font * D.6442;
  Sint16 D.6441;
  short unsigned int D.6440;
  short unsigned int D.6439;
  Sint16 D.6438;
  Sint16 D.6437;
  short unsigned int D.6436;
  short unsigned int D.6435;
  short unsigned int D.6434;
  int D.6433;
  int D.6432;
  short unsigned int D.6431;
  Sint16 D.6430;
  struct SDL_Surface * D.6429;
  struct SDL_Surface * D.6428;
  size_t D.6425;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.6425_3 = strlen (message_2(D));
  leng_4 = (int) D.6425_3;
  if (box_5(D) != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.6428_7 = display_6(D)->screen;
  D.6429_8 = display_6(D)->msg_box;
  SDL_UpperBlit (D.6429_8, 0B, D.6428_7, &position);
  D.6430_9 = position.x;
  D.6431_10 = (short unsigned int) D.6430_9;
  D.6432_11 = leng_4 * 12;
  D.6433_12 = D.6432_11 / 2;
  D.6434_13 = (short unsigned int) D.6433_12;
  D.6435_14 = D.6431_10 - D.6434_13;
  D.6436_15 = D.6435_14 + 260;
  D.6437_16 = (Sint16) D.6436_15;
  position.x = D.6437_16;
  D.6438_17 = position.y;
  D.6439_18 = (short unsigned int) D.6438_17;
  D.6440_19 = D.6439_18 + 25;
  D.6441_20 = (Sint16) D.6440_19;
  position.y = D.6441_20;
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (false) 3 (fallthru)
  D.6442_21 = display_6(D)->font;
  msg_22 = TTF_RenderText_Blended (D.6442_21, message_2(D), color);
  D.6443_23 = display_6(D)->screen;
  SDL_UpperBlit (msg_22, 0B, D.6443_23, &position);
  SDL_FreeSurface (msg_22);
  D.6444_24 = display_6(D)->screen;
  SDL_Flip (D.6444_24);
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 4 (fallthru) 14 (fallthru)
  SDL_WaitEvent (&event);
  D.6445_25 = event.type;
  D.6446_26 = (int) D.6445_25;
  switch (D.6446_26) <default: <L15>, case 6: <L4>, case 12: <L3>>
  # SUCC: 14 7 6

  # BLOCK 6
  # PRED: 5
<L3>:
  D.6447_27 = 1;
  goto <bb 15>;
  # SUCC: 15 (fallthru)

  # BLOCK 7
  # PRED: 5
<L4>:
  D.6448_28 = event.button.button;
  if (D.6448_28 == 1)
    goto <bb 8>;
  else
    goto <bb 13>;
  # SUCC: 8 (true) 13 (false)

  # BLOCK 8
  # PRED: 7 (true)
  D.6451_29 = event.button.x;
  if (D.6451_29 > 79)
    goto <bb 9>;
  else
    goto <bb 13>;
  # SUCC: 9 (true) 13 (false)

  # BLOCK 9
  # PRED: 8 (true)
  D.6454_30 = event.button.x;
  if (D.6454_30 <= 548)
    goto <bb 10>;
  else
    goto <bb 13>;
  # SUCC: 10 (true) 13 (false)

  # BLOCK 10
  # PRED: 9 (true)
  D.6457_31 = event.button.y;
  if (D.6457_31 > 324)
    goto <bb 11>;
  else
    goto <bb 13>;
  # SUCC: 11 (true) 13 (false)

  # BLOCK 11
  # PRED: 10 (true)
  D.6460_32 = event.button.y;
  if (D.6460_32 <= 415)
    goto <bb 12>;
  else
    goto <bb 13>;
  # SUCC: 12 (true) 13 (false)

  # BLOCK 12
  # PRED: 11 (true)
  D.6447_33 = 0;
  goto <bb 15>;
  # SUCC: 15 (fallthru)

  # BLOCK 13
  # PRED: 7 (false) 8 (false) 9 (false) 10 (false) 11 (false)
  # SUCC: 14 (fallthru)

  # BLOCK 14
  # PRED: 5 13 (fallthru)
<L15>:
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 15
  # PRED: 6 (fallthru) 12 (fallthru)
  # D.6447_1 = PHI <D.6447_27(6), D.6447_33(12)>
  return D.6447_1;
  # SUCC: EXIT

}


Partition 1: size 4 align 4
	msg_22, offset 0
Partition 0: size 4 align 4
	leng_4, offset 0
Partition 2: size 20 align 4
	event, offset 0

;; Generating RTL for gimple basic block 2

;; D.6425_3 = strlen (message_2(D));

(insn 11 4 5 (set (reg:SI 86)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 message+0 S4 A32])) src/gui.c:217 -1
     (nil))

(insn 5 11 6 (set (reg:SI 90)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:217 -1
     (nil))

(insn 6 5 7 (set (reg:SI 89)
        (reg:SI 86)) src/gui.c:217 -1
     (nil))

(insn 7 6 8 (set (reg:QI 91)
        (const_int 0 [0])) src/gui.c:217 -1
     (nil))

(insn 8 7 9 (parallel [
            (set (reg:SI 87)
                (unspec:SI [
                        (mem:BLK (reg:SI 89) [0 A8])
                        (reg:QI 91)
                        (const_int 1 [0x1])
                        (reg:SI 90)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 89))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:217 -1
     (nil))

(insn 9 8 10 (set (reg:SI 88)
        (not:SI (reg:SI 87))) src/gui.c:217 -1
     (nil))

(insn 10 9 0 (parallel [
            (set (reg:SI 60 [ D.6425 ])
                (plus:SI (reg:SI 88)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:217 -1
     (nil))

;; leng_4 = (int) D.6425_3;

(insn 12 10 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 leng+0 S4 A32])
        (reg:SI 60 [ D.6425 ])) src/gui.c:217 -1
     (nil))

;; if (box_5(D) != 0)

(insn 13 12 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 20 [0x14])) [0 box+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:218 -1
     (nil))

(jump_insn 14 13 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:218 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; D.6428_7 = display_6(D)->screen;

(insn 16 15 17 (set (reg/f:SI 92)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:220 -1
     (nil))

(insn 17 16 0 (set (reg/f:SI 61 [ D.6428 ])
        (mem/s/f/j:SI (reg/f:SI 92) [0 display_6(D)->screen+0 S4 A32])) src/gui.c:220 -1
     (nil))

;; D.6429_8 = display_6(D)->msg_box;

(insn 18 17 19 (set (reg/f:SI 93)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:220 -1
     (nil))

(insn 19 18 0 (set (reg/f:SI 62 [ D.6429 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 93)
                (const_int 40 [0x28])) [0 display_6(D)->msg_box+0 S4 A32])) src/gui.c:220 -1
     (nil))

;; SDL_UpperBlit (D.6429_8, 0B, D.6428_7, &position);

(insn 20 19 21 (parallel [
            (set (reg:SI 94)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:220 -1
     (nil))

(insn 21 20 22 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 94)) src/gui.c:220 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 8 [0x8]))
        (nil)))

(insn 22 21 23 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 61 [ D.6428 ])) src/gui.c:220 -1
     (nil))

(insn 23 22 24 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:220 -1
     (nil))

(insn 24 23 25 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 62 [ D.6429 ])) src/gui.c:220 -1
     (nil))

(call_insn 25 24 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:220 -1
     (nil)
    (nil))

;; D.6430_9 = position.x;

(insn 26 25 0 (set (reg:HI 63 [ D.6430 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 position.x+0 S2 A32])) src/gui.c:222 -1
     (nil))

;; D.6431_10 = (short unsigned int) D.6430_9;

(insn 27 26 0 (set (reg:HI 64 [ D.6431 ])
        (reg:HI 63 [ D.6430 ])) src/gui.c:222 -1
     (nil))

;; D.6432_11 = leng_4 * 12;

(insn 28 27 29 (set (reg:SI 95)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 leng+0 S4 A32])) src/gui.c:222 -1
     (nil))

(insn 29 28 30 (set (reg:SI 96)
        (reg:SI 95)) src/gui.c:222 -1
     (nil))

(insn 30 29 31 (parallel [
            (set (reg:SI 96)
                (ashift:SI (reg:SI 96)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (nil))

(insn 31 30 32 (parallel [
            (set (reg:SI 96)
                (plus:SI (reg:SI 96)
                    (reg:SI 95)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 95)
            (const_int 3 [0x3]))
        (nil)))

(insn 32 31 33 (parallel [
            (set (reg:SI 97)
                (ashift:SI (reg:SI 96)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (nil))

(insn 33 32 34 (set (reg:SI 96)
        (reg:SI 97)) src/gui.c:222 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 95)
            (const_int 12 [0xc]))
        (nil)))

(insn 34 33 0 (set (reg:SI 65 [ D.6432 ])
        (reg:SI 96)) src/gui.c:222 -1
     (nil))

;; D.6433_12 = D.6432_11 / 2;

(insn 35 34 36 (parallel [
            (set (reg:SI 98)
                (lshiftrt:SI (reg:SI 65 [ D.6432 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (nil))

(insn 36 35 37 (parallel [
            (set (reg:SI 99)
                (plus:SI (reg:SI 98)
                    (reg:SI 65 [ D.6432 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (nil))

(insn 37 36 38 (parallel [
            (set (reg:SI 100)
                (ashiftrt:SI (reg:SI 99)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 65 [ D.6432 ])
            (const_int 2 [0x2]))
        (nil)))

(insn 38 37 0 (set (reg:SI 66 [ D.6433 ])
        (reg:SI 100)) src/gui.c:222 -1
     (nil))

;; D.6434_13 = (short unsigned int) D.6433_12;

(insn 39 38 0 (set (reg:HI 67 [ D.6434 ])
        (subreg:HI (reg:SI 66 [ D.6433 ]) 0)) src/gui.c:222 -1
     (nil))

;; D.6435_14 = D.6431_10 - D.6434_13;

(insn 40 39 0 (parallel [
            (set (reg:HI 68 [ D.6435 ])
                (minus:HI (reg:HI 64 [ D.6431 ])
                    (reg:HI 67 [ D.6434 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (nil))

;; D.6436_15 = D.6435_14 + 260;

(insn 41 40 0 (parallel [
            (set (reg:HI 69 [ D.6436 ])
                (plus:HI (reg:HI 68 [ D.6435 ])
                    (const_int 260 [0x104])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (nil))

;; D.6437_16 = (Sint16) D.6436_15;

(insn 42 41 0 (set (reg:HI 70 [ D.6437 ])
        (reg:HI 69 [ D.6436 ])) src/gui.c:222 -1
     (nil))

;; position.x = D.6437_16;

(insn 43 42 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 position.x+0 S2 A32])
        (reg:HI 70 [ D.6437 ])) src/gui.c:222 -1
     (nil))

;; D.6438_17 = position.y;

(insn 44 43 0 (set (reg:HI 71 [ D.6438 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 10 [0xa])) [0 position.y+0 S2 A16])) src/gui.c:223 -1
     (nil))

;; D.6439_18 = (short unsigned int) D.6438_17;

(insn 45 44 0 (set (reg:HI 72 [ D.6439 ])
        (reg:HI 71 [ D.6438 ])) src/gui.c:223 -1
     (nil))

;; D.6440_19 = D.6439_18 + 25;

(insn 46 45 0 (parallel [
            (set (reg:HI 73 [ D.6440 ])
                (plus:HI (reg:HI 72 [ D.6439 ])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:223 -1
     (nil))

;; D.6441_20 = (Sint16) D.6440_19;

(insn 47 46 0 (set (reg:HI 74 [ D.6441 ])
        (reg:HI 73 [ D.6440 ])) src/gui.c:223 -1
     (nil))

;; position.y = D.6441_20;

(insn 48 47 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 10 [0xa])) [0 position.y+0 S2 A16])
        (reg:HI 74 [ D.6441 ])) src/gui.c:223 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 49 48 50 19 "" [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; D.6442_21 = display_6(D)->font;

(insn 51 50 52 (set (reg/f:SI 101)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:225 -1
     (nil))

(insn 52 51 0 (set (reg/f:SI 75 [ D.6442 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 101)
                (const_int 36 [0x24])) [0 display_6(D)->font+0 S4 A32])) src/gui.c:225 -1
     (nil))

;; msg_22 = TTF_RenderText_Blended (D.6442_21, message_2(D), color);

(insn 53 52 54 (set (reg:SI 102)
        (mem/s/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 16 [0x10])) [0 color+0 S4 A32])) src/gui.c:225 -1
     (nil))

(insn 54 53 55 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 102)) src/gui.c:225 -1
     (nil))

(insn 55 54 56 (set (reg/f:SI 103)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 message+0 S4 A32])) src/gui.c:225 -1
     (nil))

(insn 56 55 57 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 103)) src/gui.c:225 -1
     (nil))

(insn 57 56 58 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 75 [ D.6442 ])) src/gui.c:225 -1
     (nil))

(call_insn 58 57 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("TTF_RenderText_Blended") [flags 0x41]  <function_decl 0x40801980 TTF_RenderText_Blended>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:225 -1
     (nil)
    (nil))

(insn 59 58 60 (set (reg:SI 104)
        (reg:SI 0 ax)) src/gui.c:225 -1
     (nil))

(insn 60 59 0 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 msg+0 S4 A32])
        (reg:SI 104)) src/gui.c:225 -1
     (nil))

;; D.6443_23 = display_6(D)->screen;

(insn 61 60 62 (set (reg/f:SI 105)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:226 -1
     (nil))

(insn 62 61 0 (set (reg/f:SI 76 [ D.6443 ])
        (mem/s/f/j:SI (reg/f:SI 105) [0 display_6(D)->screen+0 S4 A32])) src/gui.c:226 -1
     (nil))

;; SDL_UpperBlit (msg_22, 0B, D.6443_23, &position);

(insn 63 62 64 (parallel [
            (set (reg:SI 106)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:226 -1
     (nil))

(insn 64 63 65 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 106)) src/gui.c:226 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 8 [0x8]))
        (nil)))

(insn 65 64 66 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 76 [ D.6443 ])) src/gui.c:226 -1
     (nil))

(insn 66 65 67 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:226 -1
     (nil))

(insn 67 66 68 (set (reg/f:SI 107)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 msg+0 S4 A32])) src/gui.c:226 -1
     (nil))

(insn 68 67 69 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 107)) src/gui.c:226 -1
     (nil))

(call_insn 69 68 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:226 -1
     (nil)
    (nil))

;; SDL_FreeSurface (msg_22);

(insn 70 69 71 (set (reg/f:SI 108)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 msg+0 S4 A32])) src/gui.c:227 -1
     (nil))

(insn 71 70 72 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 108)) src/gui.c:227 -1
     (nil))

(call_insn 72 71 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:227 -1
     (nil)
    (nil))

;; D.6444_24 = display_6(D)->screen;

(insn 73 72 74 (set (reg/f:SI 109)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:228 -1
     (nil))

(insn 74 73 0 (set (reg/f:SI 77 [ D.6444 ])
        (mem/s/f/j:SI (reg/f:SI 109) [0 display_6(D)->screen+0 S4 A32])) src/gui.c:228 -1
     (nil))

;; SDL_Flip (D.6444_24);

(insn 75 74 76 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 77 [ D.6444 ])) src/gui.c:228 -1
     (nil))

(call_insn 76 75 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_Flip") [flags 0x41]  <function_decl 0x4079fa00 SDL_Flip>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:228 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 5

;; SDL_WaitEvent (&event);

(insn 78 77 79 (parallel [
            (set (reg:SI 110)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:232 -1
     (nil))

(insn 79 78 80 (set (mem/f/i:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 110)) src/gui.c:232 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -28 [0xffffffffffffffe4]))
        (nil)))

(call_insn 80 79 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_WaitEvent") [flags 0x41]  <function_decl 0x407d8f80 SDL_WaitEvent>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:232 -1
     (nil)
    (nil))

;; D.6445_25 = event.type;

(insn 81 80 0 (set (reg:QI 78 [ D.6445 ])
        (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 event.type+0 S1 A32])) src/gui.c:233 -1
     (nil))

;; D.6446_26 = (int) D.6445_25;

(insn 82 81 0 (parallel [
            (set (reg:SI 79 [ D.6446 ])
                (zero_extend:SI (reg:QI 78 [ D.6445 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:233 -1
     (nil))

;; switch (D.6446_26) <default: <L15>, case 6: <L4>, case 12: <L3>>

(insn 83 82 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79 [ D.6446 ])
            (const_int 6 [0x6]))) src/gui.c:233 -1
     (nil))

(jump_insn 84 83 85 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:233 -1
     (nil))

(insn 85 84 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79 [ D.6446 ])
            (const_int 12 [0xc]))) src/gui.c:233 -1
     (nil))

(jump_insn 86 85 87 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:233 -1
     (nil))

(jump_insn 87 86 88 (set (pc)
        (label_ref 0)) src/gui.c:233 -1
     (nil))

(barrier 88 87 0)

;; Generating RTL for gimple basic block 6

;; <L3>:

(code_label 89 88 90 22 "" [0 uses])

(note 90 89 0 NOTE_INSN_BASIC_BLOCK)

;; D.6447_27 = 1;

(insn 91 90 0 (set (reg:SI 59 [ D.6447 ])
        (const_int 1 [0x1])) src/gui.c:236 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; <L4>:

(code_label 94 93 95 21 "" [0 uses])

(note 95 94 0 NOTE_INSN_BASIC_BLOCK)

;; D.6448_28 = event.button.button;

(insn 96 95 0 (set (reg:QI 80 [ D.6448 ])
        (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -26 [0xffffffffffffffe6])) [0 event.button.button+0 S1 A16])) src/gui.c:239 -1
     (nil))

;; if (D.6448_28 == 1)

(insn 97 96 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 80 [ D.6448 ])
            (const_int 1 [0x1]))) src/gui.c:239 -1
     (nil))

(jump_insn 98 97 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:239 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; D.6451_29 = event.button.x;

(insn 100 99 0 (set (reg:HI 81 [ D.6451 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 event.button.x+0 S2 A32])) src/gui.c:241 -1
     (nil))

;; if (D.6451_29 > 79)

(insn 101 100 102 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 81 [ D.6451 ])
            (const_int 79 [0x4f]))) src/gui.c:241 -1
     (nil))

(jump_insn 102 101 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:241 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; D.6454_30 = event.button.x;

(insn 104 103 0 (set (reg:HI 82 [ D.6454 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 event.button.x+0 S2 A32])) src/gui.c:241 -1
     (nil))

;; if (D.6454_30 <= 548)

(insn 105 104 106 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 82 [ D.6454 ])
            (const_int 548 [0x224]))) src/gui.c:241 -1
     (nil))

(jump_insn 106 105 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:241 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; D.6457_31 = event.button.y;

(insn 108 107 0 (set (reg:HI 83 [ D.6457 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -22 [0xffffffffffffffea])) [0 event.button.y+0 S2 A16])) src/gui.c:241 -1
     (nil))

;; if (D.6457_31 > 324)

(insn 109 108 110 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 83 [ D.6457 ])
            (const_int 324 [0x144]))) src/gui.c:241 -1
     (nil))

(jump_insn 110 109 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:241 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; D.6460_32 = event.button.y;

(insn 112 111 0 (set (reg:HI 84 [ D.6460 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -22 [0xffffffffffffffea])) [0 event.button.y+0 S2 A16])) src/gui.c:241 -1
     (nil))

;; if (D.6460_32 <= 415)

(insn 113 112 114 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 84 [ D.6460 ])
            (const_int 415 [0x19f]))) src/gui.c:241 -1
     (nil))

(jump_insn 114 113 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:241 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; D.6447_33 = 0;

(insn 116 115 0 (set (reg:SI 59 [ D.6447 ])
        (const_int 0 [0])) src/gui.c:242 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 119 118 120 24 "" [0 uses])

(note 120 119 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 14

;; <L15>:

(code_label 121 120 122 20 "" [0 uses])

(note 122 121 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 15

;; 

(code_label 126 125 127 23 "" [0 uses])

(note 127 126 0 NOTE_INSN_BASIC_BLOCK)

;; return D.6447_1;

(insn 128 127 129 (set (reg:SI 85 [ <retval> ])
        (reg:SI 59 [ D.6447 ])) src/gui.c:247 -1
     (nil))

(jump_insn 129 128 130 (set (pc)
        (label_ref 0)) src/gui.c:247 -1
     (nil))

(barrier 130 129 0)
Purged edges from bb 19


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 4 5 3 (set (reg:SI 86)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 message+0 S4 A32])) src/gui.c:217 -1
     (nil))

(insn 5 11 6 3 (set (reg:SI 90)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:217 -1
     (nil))

(insn 6 5 7 3 (set (reg:SI 89)
        (reg:SI 86)) src/gui.c:217 -1
     (nil))

(insn 7 6 8 3 (set (reg:QI 91)
        (const_int 0 [0])) src/gui.c:217 -1
     (nil))

(insn 8 7 9 3 (parallel [
            (set (reg:SI 87)
                (unspec:SI [
                        (mem:BLK (reg:SI 89) [0 A8])
                        (reg:QI 91)
                        (const_int 1 [0x1])
                        (reg:SI 90)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 89))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:217 -1
     (nil))

(insn 9 8 10 3 (set (reg:SI 88)
        (not:SI (reg:SI 87))) src/gui.c:217 -1
     (nil))

(insn 10 9 12 3 (parallel [
            (set (reg:SI 60 [ D.6425 ])
                (plus:SI (reg:SI 88)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:217 -1
     (nil))

(insn 12 10 13 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 leng+0 S4 A32])
        (reg:SI 60 [ D.6425 ])) src/gui.c:217 -1
     (nil))

(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 20 [0x14])) [0 box+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:218 -1
     (nil))

(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) src/gui.c:218 -1
     (nil)
 -> 49)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 4 (set (reg/f:SI 92)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:220 -1
     (nil))

(insn 17 16 18 4 (set (reg/f:SI 61 [ D.6428 ])
        (mem/s/f/j:SI (reg/f:SI 92) [0 display_6(D)->screen+0 S4 A32])) src/gui.c:220 -1
     (nil))

(insn 18 17 19 4 (set (reg/f:SI 93)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:220 -1
     (nil))

(insn 19 18 20 4 (set (reg/f:SI 62 [ D.6429 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 93)
                (const_int 40 [0x28])) [0 display_6(D)->msg_box+0 S4 A32])) src/gui.c:220 -1
     (nil))

(insn 20 19 21 4 (parallel [
            (set (reg:SI 94)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:220 -1
     (nil))

(insn 21 20 22 4 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 94)) src/gui.c:220 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 8 [0x8]))
        (nil)))

(insn 22 21 23 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 61 [ D.6428 ])) src/gui.c:220 -1
     (nil))

(insn 23 22 24 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:220 -1
     (nil))

(insn 24 23 25 4 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 62 [ D.6429 ])) src/gui.c:220 -1
     (nil))

(call_insn 25 24 26 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:220 -1
     (nil)
    (nil))

(insn 26 25 27 4 (set (reg:HI 63 [ D.6430 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 position.x+0 S2 A32])) src/gui.c:222 -1
     (nil))

(insn 27 26 28 4 (set (reg:HI 64 [ D.6431 ])
        (reg:HI 63 [ D.6430 ])) src/gui.c:222 -1
     (nil))

(insn 28 27 29 4 (set (reg:SI 95)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 leng+0 S4 A32])) src/gui.c:222 -1
     (nil))

(insn 29 28 30 4 (set (reg:SI 96)
        (reg:SI 95)) src/gui.c:222 -1
     (nil))

(insn 30 29 31 4 (parallel [
            (set (reg:SI 96)
                (ashift:SI (reg:SI 96)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (nil))

(insn 31 30 32 4 (parallel [
            (set (reg:SI 96)
                (plus:SI (reg:SI 96)
                    (reg:SI 95)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 95)
            (const_int 3 [0x3]))
        (nil)))

(insn 32 31 33 4 (parallel [
            (set (reg:SI 97)
                (ashift:SI (reg:SI 96)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (nil))

(insn 33 32 34 4 (set (reg:SI 96)
        (reg:SI 97)) src/gui.c:222 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 95)
            (const_int 12 [0xc]))
        (nil)))

(insn 34 33 35 4 (set (reg:SI 65 [ D.6432 ])
        (reg:SI 96)) src/gui.c:222 -1
     (nil))

(insn 35 34 36 4 (parallel [
            (set (reg:SI 98)
                (lshiftrt:SI (reg:SI 65 [ D.6432 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (nil))

(insn 36 35 37 4 (parallel [
            (set (reg:SI 99)
                (plus:SI (reg:SI 98)
                    (reg:SI 65 [ D.6432 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (nil))

(insn 37 36 38 4 (parallel [
            (set (reg:SI 100)
                (ashiftrt:SI (reg:SI 99)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 65 [ D.6432 ])
            (const_int 2 [0x2]))
        (nil)))

(insn 38 37 39 4 (set (reg:SI 66 [ D.6433 ])
        (reg:SI 100)) src/gui.c:222 -1
     (nil))

(insn 39 38 40 4 (set (reg:HI 67 [ D.6434 ])
        (subreg:HI (reg:SI 66 [ D.6433 ]) 0)) src/gui.c:222 -1
     (nil))

(insn 40 39 41 4 (parallel [
            (set (reg:HI 68 [ D.6435 ])
                (minus:HI (reg:HI 64 [ D.6431 ])
                    (reg:HI 67 [ D.6434 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (nil))

(insn 41 40 42 4 (parallel [
            (set (reg:HI 69 [ D.6436 ])
                (plus:HI (reg:HI 68 [ D.6435 ])
                    (const_int 260 [0x104])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:222 -1
     (nil))

(insn 42 41 43 4 (set (reg:HI 70 [ D.6437 ])
        (reg:HI 69 [ D.6436 ])) src/gui.c:222 -1
     (nil))

(insn 43 42 44 4 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 position.x+0 S2 A32])
        (reg:HI 70 [ D.6437 ])) src/gui.c:222 -1
     (nil))

(insn 44 43 45 4 (set (reg:HI 71 [ D.6438 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 10 [0xa])) [0 position.y+0 S2 A16])) src/gui.c:223 -1
     (nil))

(insn 45 44 46 4 (set (reg:HI 72 [ D.6439 ])
        (reg:HI 71 [ D.6438 ])) src/gui.c:223 -1
     (nil))

(insn 46 45 47 4 (parallel [
            (set (reg:HI 73 [ D.6440 ])
                (plus:HI (reg:HI 72 [ D.6439 ])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:223 -1
     (nil))

(insn 47 46 48 4 (set (reg:HI 74 [ D.6441 ])
        (reg:HI 73 [ D.6440 ])) src/gui.c:223 -1
     (nil))

(insn 48 47 49 4 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 10 [0xa])) [0 position.y+0 S2 A16])
        (reg:HI 74 [ D.6441 ])) src/gui.c:223 -1
     (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 49 48 50 5 19 "" [1 uses])

(note 50 49 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 5 (set (reg/f:SI 101)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:225 -1
     (nil))

(insn 52 51 53 5 (set (reg/f:SI 75 [ D.6442 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 101)
                (const_int 36 [0x24])) [0 display_6(D)->font+0 S4 A32])) src/gui.c:225 -1
     (nil))

(insn 53 52 54 5 (set (reg:SI 102)
        (mem/s/c:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 16 [0x10])) [0 color+0 S4 A32])) src/gui.c:225 -1
     (nil))

(insn 54 53 55 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 102)) src/gui.c:225 -1
     (nil))

(insn 55 54 56 5 (set (reg/f:SI 103)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 message+0 S4 A32])) src/gui.c:225 -1
     (nil))

(insn 56 55 57 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 103)) src/gui.c:225 -1
     (nil))

(insn 57 56 58 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 75 [ D.6442 ])) src/gui.c:225 -1
     (nil))

(call_insn 58 57 59 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("TTF_RenderText_Blended") [flags 0x41]  <function_decl 0x40801980 TTF_RenderText_Blended>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:225 -1
     (nil)
    (nil))

(insn 59 58 60 5 (set (reg:SI 104)
        (reg:SI 0 ax)) src/gui.c:225 -1
     (nil))

(insn 60 59 61 5 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 msg+0 S4 A32])
        (reg:SI 104)) src/gui.c:225 -1
     (nil))

(insn 61 60 62 5 (set (reg/f:SI 105)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:226 -1
     (nil))

(insn 62 61 63 5 (set (reg/f:SI 76 [ D.6443 ])
        (mem/s/f/j:SI (reg/f:SI 105) [0 display_6(D)->screen+0 S4 A32])) src/gui.c:226 -1
     (nil))

(insn 63 62 64 5 (parallel [
            (set (reg:SI 106)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:226 -1
     (nil))

(insn 64 63 65 5 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 106)) src/gui.c:226 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 8 [0x8]))
        (nil)))

(insn 65 64 66 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 76 [ D.6443 ])) src/gui.c:226 -1
     (nil))

(insn 66 65 67 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:226 -1
     (nil))

(insn 67 66 68 5 (set (reg/f:SI 107)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 msg+0 S4 A32])) src/gui.c:226 -1
     (nil))

(insn 68 67 69 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 107)) src/gui.c:226 -1
     (nil))

(call_insn 69 68 70 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:226 -1
     (nil)
    (nil))

(insn 70 69 71 5 (set (reg/f:SI 108)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 msg+0 S4 A32])) src/gui.c:227 -1
     (nil))

(insn 71 70 72 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 108)) src/gui.c:227 -1
     (nil))

(call_insn 72 71 73 5 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:227 -1
     (nil)
    (nil))

(insn 73 72 74 5 (set (reg/f:SI 109)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:228 -1
     (nil))

(insn 74 73 75 5 (set (reg/f:SI 77 [ D.6444 ])
        (mem/s/f/j:SI (reg/f:SI 109) [0 display_6(D)->screen+0 S4 A32])) src/gui.c:228 -1
     (nil))

(insn 75 74 76 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 77 [ D.6444 ])) src/gui.c:228 -1
     (nil))

(call_insn 76 75 123 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_Flip") [flags 0x41]  <function_decl 0x4079fa00 SDL_Flip>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:228 -1
     (nil)
    (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 5 17) -> 6
;; Pred edge  5 (fallthru)
;; Pred edge  17
(code_label 123 76 77 6 25 "" [1 uses])

(note 77 123 78 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 79 6 (parallel [
            (set (reg:SI 110)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:232 -1
     (nil))

(insn 79 78 80 6 (set (mem/f/i:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 110)) src/gui.c:232 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -28 [0xffffffffffffffe4]))
        (nil)))

(call_insn 80 79 81 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_WaitEvent") [flags 0x41]  <function_decl 0x407d8f80 SDL_WaitEvent>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:232 -1
     (nil)
    (nil))

(insn 81 80 82 6 (set (reg:QI 78 [ D.6445 ])
        (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 event.type+0 S1 A32])) src/gui.c:233 -1
     (nil))

(insn 82 81 83 6 (parallel [
            (set (reg:SI 79 [ D.6446 ])
                (zero_extend:SI (reg:QI 78 [ D.6445 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:233 -1
     (nil))

(insn 83 82 84 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79 [ D.6446 ])
            (const_int 6 [0x6]))) src/gui.c:233 -1
     (nil))

(jump_insn 84 83 137 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) src/gui.c:233 -1
     (nil)
 -> 94)
;; End of basic block 6 -> ( 10 7)

;; Succ edge  10
;; Succ edge  7 (fallthru)

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(note 137 84 85 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 85 137 86 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79 [ D.6446 ])
            (const_int 12 [0xc]))) src/gui.c:233 -1
     (nil))

(jump_insn 86 85 138 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) src/gui.c:233 -1
     (nil)
 -> 89)
;; End of basic block 7 -> ( 9 8)

;; Succ edge  9
;; Succ edge  8 (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(note 138 86 87 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 87 138 88 8 (set (pc)
        (label_ref 121)) src/gui.c:233 -1
     (nil)
 -> 121)
;; End of basic block 8 -> ( 17)

;; Succ edge  17

(barrier 88 87 89)

;; Start of basic block ( 7) -> 9
;; Pred edge  7
(code_label 89 88 90 9 22 "" [1 uses])

(note 90 89 91 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 92 9 (set (reg:SI 59 [ D.6447 ])
        (const_int 1 [0x1])) src/gui.c:236 -1
     (nil))

(jump_insn 92 91 93 9 (set (pc)
        (label_ref 126)) src/gui.c:236 -1
     (nil)
 -> 126)
;; End of basic block 9 -> ( 18)

;; Succ edge  18

(barrier 93 92 94)

;; Start of basic block ( 6) -> 10
;; Pred edge  6
(code_label 94 93 95 10 21 "" [1 uses])

(note 95 94 96 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 10 (set (reg:QI 80 [ D.6448 ])
        (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -26 [0xffffffffffffffe6])) [0 event.button.button+0 S1 A16])) src/gui.c:239 -1
     (nil))

(insn 97 96 98 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 80 [ D.6448 ])
            (const_int 1 [0x1]))) src/gui.c:239 -1
     (nil))

(jump_insn 98 97 99 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) src/gui.c:239 -1
     (nil)
 -> 119)
;; End of basic block 10 -> ( 11 16)

;; Succ edge  11 (fallthru)
;; Succ edge  16

;; Start of basic block ( 10) -> 11
;; Pred edge  10 (fallthru)
(note 99 98 100 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 101 11 (set (reg:HI 81 [ D.6451 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 event.button.x+0 S2 A32])) src/gui.c:241 -1
     (nil))

(insn 101 100 102 11 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 81 [ D.6451 ])
            (const_int 79 [0x4f]))) src/gui.c:241 -1
     (nil))

(jump_insn 102 101 103 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) src/gui.c:241 -1
     (nil)
 -> 119)
;; End of basic block 11 -> ( 12 16)

;; Succ edge  12 (fallthru)
;; Succ edge  16

;; Start of basic block ( 11) -> 12
;; Pred edge  11 (fallthru)
(note 103 102 104 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 105 12 (set (reg:HI 82 [ D.6454 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 event.button.x+0 S2 A32])) src/gui.c:241 -1
     (nil))

(insn 105 104 106 12 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 82 [ D.6454 ])
            (const_int 548 [0x224]))) src/gui.c:241 -1
     (nil))

(jump_insn 106 105 107 12 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) src/gui.c:241 -1
     (nil)
 -> 119)
;; End of basic block 12 -> ( 13 16)

;; Succ edge  13 (fallthru)
;; Succ edge  16

;; Start of basic block ( 12) -> 13
;; Pred edge  12 (fallthru)
(note 107 106 108 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 109 13 (set (reg:HI 83 [ D.6457 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -22 [0xffffffffffffffea])) [0 event.button.y+0 S2 A16])) src/gui.c:241 -1
     (nil))

(insn 109 108 110 13 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 83 [ D.6457 ])
            (const_int 324 [0x144]))) src/gui.c:241 -1
     (nil))

(jump_insn 110 109 111 13 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) src/gui.c:241 -1
     (nil)
 -> 119)
;; End of basic block 13 -> ( 14 16)

;; Succ edge  14 (fallthru)
;; Succ edge  16

;; Start of basic block ( 13) -> 14
;; Pred edge  13 (fallthru)
(note 111 110 112 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 113 14 (set (reg:HI 84 [ D.6460 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -22 [0xffffffffffffffea])) [0 event.button.y+0 S2 A16])) src/gui.c:241 -1
     (nil))

(insn 113 112 114 14 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 84 [ D.6460 ])
            (const_int 415 [0x19f]))) src/gui.c:241 -1
     (nil))

(jump_insn 114 113 115 14 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) src/gui.c:241 -1
     (nil)
 -> 119)
;; End of basic block 14 -> ( 15 16)

;; Succ edge  15 (fallthru)
;; Succ edge  16

;; Start of basic block ( 14) -> 15
;; Pred edge  14 (fallthru)
(note 115 114 116 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 117 15 (set (reg:SI 59 [ D.6447 ])
        (const_int 0 [0])) src/gui.c:242 -1
     (nil))

(jump_insn 117 116 118 15 (set (pc)
        (label_ref 126)) src/gui.c:242 -1
     (nil)
 -> 126)
;; End of basic block 15 -> ( 18)

;; Succ edge  18

(barrier 118 117 119)

;; Start of basic block ( 10 11 12 13 14) -> 16
;; Pred edge  10
;; Pred edge  11
;; Pred edge  12
;; Pred edge  13
;; Pred edge  14
(code_label 119 118 120 16 24 "" [5 uses])

(note 120 119 121 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 16 -> ( 17)

;; Succ edge  17 (fallthru)

;; Start of basic block ( 8 16) -> 17
;; Pred edge  8
;; Pred edge  16 (fallthru)
(code_label 121 120 122 17 20 "" [1 uses])

(note 122 121 124 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(jump_insn 124 122 125 17 (set (pc)
        (label_ref 123)) src/gui.c:247 -1
     (nil)
 -> 123)
;; End of basic block 17 -> ( 6)

;; Succ edge  6

(barrier 125 124 126)

;; Start of basic block ( 9 15) -> 18
;; Pred edge  9
;; Pred edge  15
(code_label 126 125 127 18 23 "" [2 uses])

(note 127 126 128 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 129 18 (set (reg:SI 85 [ <retval> ])
        (reg:SI 59 [ D.6447 ])) src/gui.c:247 -1
     (nil))

(jump_insn 129 128 130 18 (set (pc)
        (label_ref 131)) src/gui.c:247 -1
     (nil)
 -> 131)
;; End of basic block 18 -> ( 20)

;; Succ edge  20

(barrier 130 129 136)

;; Start of basic block () -> 19
(note 136 130 133 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 133 136 134 19 (clobber (reg/i:SI 0 ax)) src/gui.c:248 -1
     (nil))

(insn 134 133 131 19 (clobber (reg:SI 85 [ <retval> ])) src/gui.c:248 -1
     (nil))
;; End of basic block 19 -> ( 20)

;; Succ edge  20 (fallthru)

;; Start of basic block ( 18 19) -> 20
;; Pred edge  18
;; Pred edge  19 (fallthru)
(code_label 131 134 139 20 18 "" [1 uses])

(note 139 131 132 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 132 139 135 20 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) src/gui.c:248 -1
     (nil))

(insn 135 132 0 20 (use (reg/i:SI 0 ax)) src/gui.c:248 -1
     (nil))
;; End of basic block 20 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Display_Exit (Display_Exit)

Display_Exit (struct SDisplay * display)
{
  int i;
  struct TTF_Font * D.6424;
  struct SDL_Surface * D.6423;
  struct SDL_Surface * D.6422;
  struct SDL_Surface * D.6421;
  struct SDL_Surface * D.6420;
  struct SDL_Surface * D.6419;
  struct SDL_Surface * D.6418;
  struct SDL_Surface * D.6417;
  struct SDL_Surface * D.6416;
  struct SDL_Surface * D.6415;
  struct SDL_Surface * D.6414;
  struct SDL_Surface * D.6413;
  struct SDL_Surface * D.6412;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.6412_3 = display_2(D)->background;
  SDL_FreeSurface (D.6412_3);
  D.6413_4 = display_2(D)->background_menu;
  SDL_FreeSurface (D.6413_4);
  D.6414_5 = display_2(D)->gameBoard;
  SDL_FreeSurface (D.6414_5);
  D.6415_6 = display_2(D)->checked;
  SDL_FreeSurface (D.6415_6);
  D.6416_7 = display_2(D)->white_checker;
  SDL_FreeSurface (D.6416_7);
  D.6417_8 = display_2(D)->green_checker;
  SDL_FreeSurface (D.6417_8);
  D.6418_9 = display_2(D)->selected_checker;
  SDL_FreeSurface (D.6418_9);
  D.6419_10 = display_2(D)->msg_box;
  SDL_FreeSurface (D.6419_10);
  D.6420_11 = display_2(D)->possibility1_12;
  SDL_FreeSurface (D.6420_11);
  D.6421_12 = display_2(D)->possibility13_24;
  SDL_FreeSurface (D.6421_12);
  i_13 = 0;
  goto <bb 4>;
  # SUCC: 4 (fallthru)

  # BLOCK 3
  # PRED: 4 (true)
  D.6422_14 = display_2(D)->die[i_1];
  SDL_FreeSurface (D.6422_14);
  i_15 = i_1 + 1;
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (fallthru) 3 (fallthru)
  # i_1 = PHI <i_13(2), i_15(3)>
  if (i_1 <= 5)
    goto <bb 3>;
  else
    goto <bb 5>;
  # SUCC: 3 (true) 5 (false)

  # BLOCK 5
  # PRED: 4 (false)
  D.6423_16 = display_2(D)->screen;
  SDL_FreeSurface (D.6423_16);
  D.6424_17 = display_2(D)->font;
  TTF_CloseFont (D.6424_17);
  TTF_Quit ();
  SDL_Quit ();
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (display_2(D) - 2 )
Partition 3 (D.6412_3 - 3 )
Partition 4 (D.6413_4 - 4 )
Partition 5 (D.6414_5 - 5 )
Partition 6 (D.6415_6 - 6 )
Partition 7 (D.6416_7 - 7 )
Partition 8 (D.6417_8 - 8 )
Partition 9 (D.6418_9 - 9 )
Partition 10 (D.6419_10 - 10 )
Partition 11 (D.6420_11 - 11 )
Partition 12 (D.6421_12 - 12 )
Partition 13 (i_13 - 13 )
Partition 14 (D.6422_14 - 14 )
Partition 15 (i_15 - 15 )
Partition 16 (D.6423_16 - 16 )
Partition 17 (D.6424_17 - 17 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (display_2(D) - 2 )
Partition 2 (i_13 - 13 )
Partition 3 (i_15 - 15 )


Live on entry to BB2 : display_2(D)  

Live on entry to BB3 : i_1  display_2(D)  

Live on entry to BB4 : display_2(D)  

Live on entry to BB5 : display_2(D)  

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_15
(2147483646) i_1 <-> i_13

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (display_2(D) - 2 )
Partition 2 (i_13 - 13 )
Partition 3 (i_15 - 15 )

Coalesce list: (1)i_1 & (15)i_15 [map: 0, 3] : Success -> 0
Coalesce list: (1)i_1 & (13)i_13 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (15)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (13)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 13 15 )
Partition 1 (display_2(D) - 2 )
Partition 2 (D.6412_3 - 3 )
Partition 3 (D.6413_4 - 4 )
Partition 4 (D.6414_5 - 5 )
Partition 5 (D.6415_6 - 6 )
Partition 6 (D.6416_7 - 7 )
Partition 7 (D.6417_8 - 8 )
Partition 8 (D.6418_9 - 9 )
Partition 9 (D.6419_10 - 10 )
Partition 10 (D.6420_11 - 11 )
Partition 11 (D.6421_12 - 12 )
Partition 12 (D.6422_14 - 14 )
Partition 13 (D.6423_16 - 16 )
Partition 14 (D.6424_17 - 17 )

Display_Exit (struct SDisplay * display)
{
  int i;
  struct TTF_Font * D.6424;
  struct SDL_Surface * D.6423;
  struct SDL_Surface * D.6422;
  struct SDL_Surface * D.6421;
  struct SDL_Surface * D.6420;
  struct SDL_Surface * D.6419;
  struct SDL_Surface * D.6418;
  struct SDL_Surface * D.6417;
  struct SDL_Surface * D.6416;
  struct SDL_Surface * D.6415;
  struct SDL_Surface * D.6414;
  struct SDL_Surface * D.6413;
  struct SDL_Surface * D.6412;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.6412_3 = display_2(D)->background;
  SDL_FreeSurface (D.6412_3);
  D.6413_4 = display_2(D)->background_menu;
  SDL_FreeSurface (D.6413_4);
  D.6414_5 = display_2(D)->gameBoard;
  SDL_FreeSurface (D.6414_5);
  D.6415_6 = display_2(D)->checked;
  SDL_FreeSurface (D.6415_6);
  D.6416_7 = display_2(D)->white_checker;
  SDL_FreeSurface (D.6416_7);
  D.6417_8 = display_2(D)->green_checker;
  SDL_FreeSurface (D.6417_8);
  D.6418_9 = display_2(D)->selected_checker;
  SDL_FreeSurface (D.6418_9);
  D.6419_10 = display_2(D)->msg_box;
  SDL_FreeSurface (D.6419_10);
  D.6420_11 = display_2(D)->possibility1_12;
  SDL_FreeSurface (D.6420_11);
  D.6421_12 = display_2(D)->possibility13_24;
  SDL_FreeSurface (D.6421_12);
  i_13 = 0;
  goto <bb 4>;
  # SUCC: 4 (fallthru)

  # BLOCK 3
  # PRED: 4 (true)
  D.6422_14 = display_2(D)->die[i_1];
  SDL_FreeSurface (D.6422_14);
  i_15 = i_1 + 1;
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (fallthru) 3 (fallthru)
  # i_1 = PHI <i_13(2), i_15(3)>
  if (i_1 <= 5)
    goto <bb 3>;
  else
    goto <bb 5>;
  # SUCC: 3 (true) 5 (false)

  # BLOCK 5
  # PRED: 4 (false)
  D.6423_16 = display_2(D)->screen;
  SDL_FreeSurface (D.6423_16);
  D.6424_17 = display_2(D)->font;
  TTF_CloseFont (D.6424_17);
  TTF_Quit ();
  SDL_Quit ();
  return;
  # SUCC: EXIT

}


Partition 0: size 4 align 4
	i_1, offset 0

;; Generating RTL for gimple basic block 2

;; D.6412_3 = display_2(D)->background;

(insn 5 4 6 (set (reg/f:SI 72)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:254 -1
     (nil))

(insn 6 5 0 (set (reg/f:SI 59 [ D.6412 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 72)
                (const_int 12 [0xc])) [0 display_2(D)->background+0 S4 A32])) src/gui.c:254 -1
     (nil))

;; SDL_FreeSurface (D.6412_3);

(insn 7 6 8 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 59 [ D.6412 ])) src/gui.c:254 -1
     (nil))

(call_insn 8 7 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:254 -1
     (nil)
    (nil))

;; D.6413_4 = display_2(D)->background_menu;

(insn 9 8 10 (set (reg/f:SI 73)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:255 -1
     (nil))

(insn 10 9 0 (set (reg/f:SI 60 [ D.6413 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 73)
                (const_int 4 [0x4])) [0 display_2(D)->background_menu+0 S4 A32])) src/gui.c:255 -1
     (nil))

;; SDL_FreeSurface (D.6413_4);

(insn 11 10 12 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 60 [ D.6413 ])) src/gui.c:255 -1
     (nil))

(call_insn 12 11 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:255 -1
     (nil)
    (nil))

;; D.6414_5 = display_2(D)->gameBoard;

(insn 13 12 14 (set (reg/f:SI 74)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:256 -1
     (nil))

(insn 14 13 0 (set (reg/f:SI 61 [ D.6414 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 74)
                (const_int 24 [0x18])) [0 display_2(D)->gameBoard+0 S4 A32])) src/gui.c:256 -1
     (nil))

;; SDL_FreeSurface (D.6414_5);

(insn 15 14 16 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 61 [ D.6414 ])) src/gui.c:256 -1
     (nil))

(call_insn 16 15 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:256 -1
     (nil)
    (nil))

;; D.6415_6 = display_2(D)->checked;

(insn 17 16 18 (set (reg/f:SI 75)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:257 -1
     (nil))

(insn 18 17 0 (set (reg/f:SI 62 [ D.6415 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 75)
                (const_int 8 [0x8])) [0 display_2(D)->checked+0 S4 A32])) src/gui.c:257 -1
     (nil))

;; SDL_FreeSurface (D.6415_6);

(insn 19 18 20 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 62 [ D.6415 ])) src/gui.c:257 -1
     (nil))

(call_insn 20 19 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:257 -1
     (nil)
    (nil))

;; D.6416_7 = display_2(D)->white_checker;

(insn 21 20 22 (set (reg/f:SI 76)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:258 -1
     (nil))

(insn 22 21 0 (set (reg/f:SI 63 [ D.6416 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 76)
                (const_int 48 [0x30])) [0 display_2(D)->white_checker+0 S4 A32])) src/gui.c:258 -1
     (nil))

;; SDL_FreeSurface (D.6416_7);

(insn 23 22 24 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 63 [ D.6416 ])) src/gui.c:258 -1
     (nil))

(call_insn 24 23 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:258 -1
     (nil)
    (nil))

;; D.6417_8 = display_2(D)->green_checker;

(insn 25 24 26 (set (reg/f:SI 77)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:259 -1
     (nil))

(insn 26 25 0 (set (reg/f:SI 64 [ D.6417 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 77)
                (const_int 44 [0x2c])) [0 display_2(D)->green_checker+0 S4 A32])) src/gui.c:259 -1
     (nil))

;; SDL_FreeSurface (D.6417_8);

(insn 27 26 28 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 64 [ D.6417 ])) src/gui.c:259 -1
     (nil))

(call_insn 28 27 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:259 -1
     (nil)
    (nil))

;; D.6418_9 = display_2(D)->selected_checker;

(insn 29 28 30 (set (reg/f:SI 78)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:260 -1
     (nil))

(insn 30 29 0 (set (reg/f:SI 65 [ D.6418 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 78)
                (const_int 60 [0x3c])) [0 display_2(D)->selected_checker+0 S4 A32])) src/gui.c:260 -1
     (nil))

;; SDL_FreeSurface (D.6418_9);

(insn 31 30 32 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 65 [ D.6418 ])) src/gui.c:260 -1
     (nil))

(call_insn 32 31 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:260 -1
     (nil)
    (nil))

;; D.6419_10 = display_2(D)->msg_box;

(insn 33 32 34 (set (reg/f:SI 79)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:261 -1
     (nil))

(insn 34 33 0 (set (reg/f:SI 66 [ D.6419 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 79)
                (const_int 40 [0x28])) [0 display_2(D)->msg_box+0 S4 A32])) src/gui.c:261 -1
     (nil))

;; SDL_FreeSurface (D.6419_10);

(insn 35 34 36 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 66 [ D.6419 ])) src/gui.c:261 -1
     (nil))

(call_insn 36 35 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:261 -1
     (nil)
    (nil))

;; D.6420_11 = display_2(D)->possibility1_12;

(insn 37 36 38 (set (reg/f:SI 80)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:262 -1
     (nil))

(insn 38 37 0 (set (reg/f:SI 67 [ D.6420 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 80)
                (const_int 104 [0x68])) [0 display_2(D)->possibility1_12+0 S4 A32])) src/gui.c:262 -1
     (nil))

;; SDL_FreeSurface (D.6420_11);

(insn 39 38 40 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 67 [ D.6420 ])) src/gui.c:262 -1
     (nil))

(call_insn 40 39 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:262 -1
     (nil)
    (nil))

;; D.6421_12 = display_2(D)->possibility13_24;

(insn 41 40 42 (set (reg/f:SI 81)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:263 -1
     (nil))

(insn 42 41 0 (set (reg/f:SI 68 [ D.6421 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 81)
                (const_int 108 [0x6c])) [0 display_2(D)->possibility13_24+0 S4 A32])) src/gui.c:263 -1
     (nil))

;; SDL_FreeSurface (D.6421_12);

(insn 43 42 44 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 68 [ D.6421 ])) src/gui.c:263 -1
     (nil))

(call_insn 44 43 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:263 -1
     (nil)
    (nil))

;; i_13 = 0;

(insn 45 44 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:265 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; D.6422_14 = display_2(D)->die[i_1];

(insn 49 48 50 (set (reg/f:SI 82)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:267 -1
     (nil))

(insn 50 49 51 (set (reg:SI 84)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) src/gui.c:267 -1
     (nil))

(insn 51 50 52 (parallel [
            (set (reg:SI 83)
                (plus:SI (reg:SI 84)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:267 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 52 51 0 (set (reg/f:SI 69 [ D.6422 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 83)
                    (const_int 4 [0x4]))
                (reg/f:SI 82)) [0 display_2(D)->die S4 A32])) src/gui.c:267 -1
     (nil))

;; SDL_FreeSurface (D.6422_14);

(insn 53 52 54 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 69 [ D.6422 ])) src/gui.c:267 -1
     (nil))

(call_insn 54 53 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:267 -1
     (nil)
    (nil))

;; i_15 = i_1 + 1;

(insn 55 54 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:265 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 56 55 57 28 "" [0 uses])

(note 57 56 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 <= 5)

(insn 59 57 60 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 5 [0x5]))) src/gui.c:265 -1
     (nil))

(jump_insn 60 59 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) src/gui.c:265 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; D.6423_16 = display_2(D)->screen;

(insn 62 61 63 (set (reg/f:SI 85)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:269 -1
     (nil))

(insn 63 62 0 (set (reg/f:SI 70 [ D.6423 ])
        (mem/s/f/j:SI (reg/f:SI 85) [0 display_2(D)->screen+0 S4 A32])) src/gui.c:269 -1
     (nil))

;; SDL_FreeSurface (D.6423_16);

(insn 64 63 65 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 70 [ D.6423 ])) src/gui.c:269 -1
     (nil))

(call_insn 65 64 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:269 -1
     (nil)
    (nil))

;; D.6424_17 = display_2(D)->font;

(insn 66 65 67 (set (reg/f:SI 86)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:271 -1
     (nil))

(insn 67 66 0 (set (reg/f:SI 71 [ D.6424 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 86)
                (const_int 36 [0x24])) [0 display_2(D)->font+0 S4 A32])) src/gui.c:271 -1
     (nil))

;; TTF_CloseFont (D.6424_17);

(insn 68 67 69 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 71 [ D.6424 ])) src/gui.c:271 -1
     (nil))

(call_insn 69 68 0 (call (mem:QI (symbol_ref:SI ("TTF_CloseFont") [flags 0x41]  <function_decl 0x40801b80 TTF_CloseFont>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:271 -1
     (nil)
    (nil))

;; TTF_Quit ();

(call_insn 70 69 0 (call (mem:QI (symbol_ref:SI ("TTF_Quit") [flags 0x41]  <function_decl 0x40801c00 TTF_Quit>) [0 S1 A8])
        (const_int 0 [0])) src/gui.c:273 -1
     (nil)
    (nil))

;; SDL_Quit ();

(call_insn 71 70 0 (call (mem:QI (symbol_ref:SI ("SDL_Quit") [flags 0x41]  <function_decl 0x407f0900 SDL_Quit>) [0 S1 A8])
        (const_int 0 [0])) src/gui.c:274 -1
     (nil)
    (nil))


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (reg/f:SI 72)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:254 -1
     (nil))

(insn 6 5 7 3 (set (reg/f:SI 59 [ D.6412 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 72)
                (const_int 12 [0xc])) [0 display_2(D)->background+0 S4 A32])) src/gui.c:254 -1
     (nil))

(insn 7 6 8 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 59 [ D.6412 ])) src/gui.c:254 -1
     (nil))

(call_insn 8 7 9 3 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:254 -1
     (nil)
    (nil))

(insn 9 8 10 3 (set (reg/f:SI 73)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:255 -1
     (nil))

(insn 10 9 11 3 (set (reg/f:SI 60 [ D.6413 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 73)
                (const_int 4 [0x4])) [0 display_2(D)->background_menu+0 S4 A32])) src/gui.c:255 -1
     (nil))

(insn 11 10 12 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 60 [ D.6413 ])) src/gui.c:255 -1
     (nil))

(call_insn 12 11 13 3 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:255 -1
     (nil)
    (nil))

(insn 13 12 14 3 (set (reg/f:SI 74)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:256 -1
     (nil))

(insn 14 13 15 3 (set (reg/f:SI 61 [ D.6414 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 74)
                (const_int 24 [0x18])) [0 display_2(D)->gameBoard+0 S4 A32])) src/gui.c:256 -1
     (nil))

(insn 15 14 16 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 61 [ D.6414 ])) src/gui.c:256 -1
     (nil))

(call_insn 16 15 17 3 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:256 -1
     (nil)
    (nil))

(insn 17 16 18 3 (set (reg/f:SI 75)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:257 -1
     (nil))

(insn 18 17 19 3 (set (reg/f:SI 62 [ D.6415 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 75)
                (const_int 8 [0x8])) [0 display_2(D)->checked+0 S4 A32])) src/gui.c:257 -1
     (nil))

(insn 19 18 20 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 62 [ D.6415 ])) src/gui.c:257 -1
     (nil))

(call_insn 20 19 21 3 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:257 -1
     (nil)
    (nil))

(insn 21 20 22 3 (set (reg/f:SI 76)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:258 -1
     (nil))

(insn 22 21 23 3 (set (reg/f:SI 63 [ D.6416 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 76)
                (const_int 48 [0x30])) [0 display_2(D)->white_checker+0 S4 A32])) src/gui.c:258 -1
     (nil))

(insn 23 22 24 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 63 [ D.6416 ])) src/gui.c:258 -1
     (nil))

(call_insn 24 23 25 3 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:258 -1
     (nil)
    (nil))

(insn 25 24 26 3 (set (reg/f:SI 77)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:259 -1
     (nil))

(insn 26 25 27 3 (set (reg/f:SI 64 [ D.6417 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 77)
                (const_int 44 [0x2c])) [0 display_2(D)->green_checker+0 S4 A32])) src/gui.c:259 -1
     (nil))

(insn 27 26 28 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 64 [ D.6417 ])) src/gui.c:259 -1
     (nil))

(call_insn 28 27 29 3 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:259 -1
     (nil)
    (nil))

(insn 29 28 30 3 (set (reg/f:SI 78)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:260 -1
     (nil))

(insn 30 29 31 3 (set (reg/f:SI 65 [ D.6418 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 78)
                (const_int 60 [0x3c])) [0 display_2(D)->selected_checker+0 S4 A32])) src/gui.c:260 -1
     (nil))

(insn 31 30 32 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 65 [ D.6418 ])) src/gui.c:260 -1
     (nil))

(call_insn 32 31 33 3 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:260 -1
     (nil)
    (nil))

(insn 33 32 34 3 (set (reg/f:SI 79)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:261 -1
     (nil))

(insn 34 33 35 3 (set (reg/f:SI 66 [ D.6419 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 79)
                (const_int 40 [0x28])) [0 display_2(D)->msg_box+0 S4 A32])) src/gui.c:261 -1
     (nil))

(insn 35 34 36 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 66 [ D.6419 ])) src/gui.c:261 -1
     (nil))

(call_insn 36 35 37 3 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:261 -1
     (nil)
    (nil))

(insn 37 36 38 3 (set (reg/f:SI 80)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:262 -1
     (nil))

(insn 38 37 39 3 (set (reg/f:SI 67 [ D.6420 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 80)
                (const_int 104 [0x68])) [0 display_2(D)->possibility1_12+0 S4 A32])) src/gui.c:262 -1
     (nil))

(insn 39 38 40 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 67 [ D.6420 ])) src/gui.c:262 -1
     (nil))

(call_insn 40 39 41 3 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:262 -1
     (nil)
    (nil))

(insn 41 40 42 3 (set (reg/f:SI 81)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:263 -1
     (nil))

(insn 42 41 43 3 (set (reg/f:SI 68 [ D.6421 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 81)
                (const_int 108 [0x6c])) [0 display_2(D)->possibility13_24+0 S4 A32])) src/gui.c:263 -1
     (nil))

(insn 43 42 44 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 68 [ D.6421 ])) src/gui.c:263 -1
     (nil))

(call_insn 44 43 45 3 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:263 -1
     (nil)
    (nil))

(insn 45 44 46 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:265 -1
     (nil))

(jump_insn 46 45 47 3 (set (pc)
        (label_ref 56)) src/gui.c:265 -1
     (nil)
 -> 56)
;; End of basic block 3 -> ( 5)

;; Succ edge  5

(barrier 47 46 58)

;; Start of basic block ( 5) -> 4
;; Pred edge  5
(code_label 58 47 48 4 29 "" [1 uses])

(note 48 58 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 4 (set (reg/f:SI 82)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:267 -1
     (nil))

(insn 50 49 51 4 (set (reg:SI 84)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) src/gui.c:267 -1
     (nil))

(insn 51 50 52 4 (parallel [
            (set (reg:SI 83)
                (plus:SI (reg:SI 84)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:267 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 52 51 53 4 (set (reg/f:SI 69 [ D.6422 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 83)
                    (const_int 4 [0x4]))
                (reg/f:SI 82)) [0 display_2(D)->die S4 A32])) src/gui.c:267 -1
     (nil))

(insn 53 52 54 4 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 69 [ D.6422 ])) src/gui.c:267 -1
     (nil))

(call_insn 54 53 55 4 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:267 -1
     (nil)
    (nil))

(insn 55 54 56 4 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:265 -1
     (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 56 55 57 5 28 "" [1 uses])

(note 57 56 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 59 57 60 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 5 [0x5]))) src/gui.c:265 -1
     (nil))

(jump_insn 60 59 61 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) src/gui.c:265 -1
     (nil)
 -> 58)
;; End of basic block 5 -> ( 4 6)

;; Succ edge  4
;; Succ edge  6 (fallthru)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 61 60 62 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 6 (set (reg/f:SI 85)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:269 -1
     (nil))

(insn 63 62 64 6 (set (reg/f:SI 70 [ D.6423 ])
        (mem/s/f/j:SI (reg/f:SI 85) [0 display_2(D)->screen+0 S4 A32])) src/gui.c:269 -1
     (nil))

(insn 64 63 65 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 70 [ D.6423 ])) src/gui.c:269 -1
     (nil))

(call_insn 65 64 66 6 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:269 -1
     (nil)
    (nil))

(insn 66 65 67 6 (set (reg/f:SI 86)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:271 -1
     (nil))

(insn 67 66 68 6 (set (reg/f:SI 71 [ D.6424 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 86)
                (const_int 36 [0x24])) [0 display_2(D)->font+0 S4 A32])) src/gui.c:271 -1
     (nil))

(insn 68 67 69 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 71 [ D.6424 ])) src/gui.c:271 -1
     (nil))

(call_insn 69 68 70 6 (call (mem:QI (symbol_ref:SI ("TTF_CloseFont") [flags 0x41]  <function_decl 0x40801b80 TTF_CloseFont>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:271 -1
     (nil)
    (nil))

(call_insn 70 69 71 6 (call (mem:QI (symbol_ref:SI ("TTF_Quit") [flags 0x41]  <function_decl 0x40801c00 TTF_Quit>) [0 S1 A8])
        (const_int 0 [0])) src/gui.c:273 -1
     (nil)
    (nil))

(call_insn 71 70 72 6 (call (mem:QI (symbol_ref:SI ("SDL_Quit") [flags 0x41]  <function_decl 0x407f0900 SDL_Quit>) [0 S1 A8])
        (const_int 0 [0])) src/gui.c:274 -1
     (nil)
    (nil))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(code_label 72 71 73 7 27 "" [0 uses])

(note 73 72 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Display_Clear (Display_Clear)

Display_Clear (struct SDisplay * display)
{
  char * temp_path;
  struct SDL_Surface * D.6411;
  struct SDL_Surface * D.6410;
  struct SDL_Rect * D.6409;
  struct SDL_Surface * D.6408;
  char * D.6407;
  unsigned int D.6406;
  const char * restrict D.6405;
  const char * restrict D.6404;
  char * D.6403;
  struct SDL_Surface * D.6402;
  struct SDL_Surface * D.6401;
  struct SDL_Rect * D.6400;
  struct SDL_Surface * D.6399;
  char * D.6398;
  unsigned int D.6397;
  const char * restrict D.6396;
  const char * restrict D.6395;
  char * D.6394;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  temp_path_1 = malloc (100);
  D.6394_3 = display_2(D)->img_path;
  D.6395_4 = (const char * restrict) D.6394_3;
  strcpy (temp_path_1, D.6395_4);
  D.6396_5 = (const char * restrict) &"background.png"[0];
  D.6397_6 = __builtin_strlen (temp_path_1);
  D.6398_7 = temp_path_1 + D.6397_6;
  __builtin_memcpy (D.6398_7, D.6396_5, 15);
  D.6399_8 = IMG_Load (temp_path_1);
  display_2(D)->background = D.6399_8;
  D.6400_9 = &display_2(D)->background_position;
  D.6401_10 = display_2(D)->screen;
  D.6402_11 = display_2(D)->background;
  SDL_UpperBlit (D.6402_11, 0B, D.6401_10, D.6400_9);
  D.6403_12 = display_2(D)->img_path;
  D.6404_13 = (const char * restrict) D.6403_12;
  strcpy (temp_path_1, D.6404_13);
  D.6405_14 = (const char * restrict) &"gameBoard.png"[0];
  D.6406_15 = __builtin_strlen (temp_path_1);
  D.6407_16 = temp_path_1 + D.6406_15;
  __builtin_memcpy (D.6407_16, D.6405_14, 14);
  D.6408_17 = IMG_Load (temp_path_1);
  display_2(D)->background = D.6408_17;
  D.6409_18 = &display_2(D)->gameBoard_position;
  D.6410_19 = display_2(D)->screen;
  D.6411_20 = display_2(D)->gameBoard;
  SDL_UpperBlit (D.6411_20, 0B, D.6410_19, D.6409_18);
  free (temp_path_1);
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (temp_path_1 - 1 )
Partition 2 (display_2(D) - 2 )
Partition 3 (D.6394_3 - 3 )
Partition 4 (D.6395_4 - 4 )
Partition 5 (D.6396_5 - 5 )
Partition 6 (D.6397_6 - 6 )
Partition 7 (D.6398_7 - 7 )
Partition 8 (D.6399_8 - 8 )
Partition 9 (D.6400_9 - 9 )
Partition 10 (D.6401_10 - 10 )
Partition 11 (D.6402_11 - 11 )
Partition 12 (D.6403_12 - 12 )
Partition 13 (D.6404_13 - 13 )
Partition 14 (D.6405_14 - 14 )
Partition 15 (D.6406_15 - 15 )
Partition 16 (D.6407_16 - 16 )
Partition 17 (D.6408_17 - 17 )
Partition 18 (D.6409_18 - 18 )
Partition 19 (D.6410_19 - 19 )
Partition 20 (D.6411_20 - 20 )


Partition map 

Partition 0 (display_2(D) - 2 )


Live on entry to BB2 : display_2(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (display_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (temp_path_1 - 1 )
Partition 1 (display_2(D) - 2 )
Partition 2 (D.6394_3 - 3 )
Partition 3 (D.6395_4 - 4 )
Partition 4 (D.6396_5 - 5 )
Partition 5 (D.6397_6 - 6 )
Partition 6 (D.6398_7 - 7 )
Partition 7 (D.6399_8 - 8 )
Partition 8 (D.6400_9 - 9 )
Partition 9 (D.6401_10 - 10 )
Partition 10 (D.6402_11 - 11 )
Partition 11 (D.6403_12 - 12 )
Partition 12 (D.6404_13 - 13 )
Partition 13 (D.6405_14 - 14 )
Partition 14 (D.6406_15 - 15 )
Partition 15 (D.6407_16 - 16 )
Partition 16 (D.6408_17 - 17 )
Partition 17 (D.6409_18 - 18 )
Partition 18 (D.6410_19 - 19 )
Partition 19 (D.6411_20 - 20 )

Display_Clear (struct SDisplay * display)
{
  char * temp_path;
  struct SDL_Surface * D.6411;
  struct SDL_Surface * D.6410;
  struct SDL_Rect * D.6409;
  struct SDL_Surface * D.6408;
  char * D.6407;
  unsigned int D.6406;
  const char * restrict D.6405;
  const char * restrict D.6404;
  char * D.6403;
  struct SDL_Surface * D.6402;
  struct SDL_Surface * D.6401;
  struct SDL_Rect * D.6400;
  struct SDL_Surface * D.6399;
  char * D.6398;
  unsigned int D.6397;
  const char * restrict D.6396;
  const char * restrict D.6395;
  char * D.6394;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  temp_path_1 = malloc (100);
  D.6394_3 = display_2(D)->img_path;
  D.6395_4 = (const char * restrict) D.6394_3;
  strcpy (temp_path_1, D.6395_4);
  D.6396_5 = (const char * restrict) &"background.png"[0];
  D.6397_6 = __builtin_strlen (temp_path_1);
  D.6398_7 = temp_path_1 + D.6397_6;
  __builtin_memcpy (D.6398_7, D.6396_5, 15);
  D.6399_8 = IMG_Load (temp_path_1);
  display_2(D)->background = D.6399_8;
  D.6400_9 = &display_2(D)->background_position;
  D.6401_10 = display_2(D)->screen;
  D.6402_11 = display_2(D)->background;
  SDL_UpperBlit (D.6402_11, 0B, D.6401_10, D.6400_9);
  D.6403_12 = display_2(D)->img_path;
  D.6404_13 = (const char * restrict) D.6403_12;
  strcpy (temp_path_1, D.6404_13);
  D.6405_14 = (const char * restrict) &"gameBoard.png"[0];
  D.6406_15 = __builtin_strlen (temp_path_1);
  D.6407_16 = temp_path_1 + D.6406_15;
  __builtin_memcpy (D.6407_16, D.6405_14, 14);
  D.6408_17 = IMG_Load (temp_path_1);
  display_2(D)->background = D.6408_17;
  D.6409_18 = &display_2(D)->gameBoard_position;
  D.6410_19 = display_2(D)->screen;
  D.6411_20 = display_2(D)->gameBoard;
  SDL_UpperBlit (D.6411_20, 0B, D.6410_19, D.6409_18);
  free (temp_path_1);
  return;
  # SUCC: EXIT

}


Partition 0: size 4 align 4
	temp_path_1, offset 0

;; Generating RTL for gimple basic block 2

;; temp_path_1 = malloc (100);

(insn 5 4 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 100 [0x64])) src/gui.c:281 -1
     (nil))

(call_insn 6 5 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:281 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 7 6 8 (set (reg/f:SI 77)
        (reg:SI 0 ax)) src/gui.c:281 -1
     (expr_list:REG_NOALIAS (reg/f:SI 77)
        (nil)))

(insn 8 7 0 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])
        (reg/f:SI 77)) src/gui.c:281 -1
     (nil))

;; D.6394_3 = display_2(D)->img_path;

(insn 9 8 10 (set (reg/f:SI 78)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:282 -1
     (nil))

(insn 10 9 0 (set (reg/f:SI 59 [ D.6394 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 78)
                (const_int 120 [0x78])) [0 display_2(D)->img_path+0 S4 A32])) src/gui.c:282 -1
     (nil))

;; D.6395_4 = (const char * restrict) D.6394_3;

(insn 11 10 0 (set (reg/f:SI 60 [ D.6395 ])
        (reg/f:SI 59 [ D.6394 ])) src/gui.c:282 -1
     (nil))

;; strcpy (temp_path_1, D.6395_4);

(insn 12 11 13 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 60 [ D.6395 ])) src/gui.c:282 -1
     (nil))

(insn 13 12 14 (set (reg/f:SI 79)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:282 -1
     (nil))

(insn 14 13 15 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 79)) src/gui.c:282 -1
     (nil))

(call_insn 15 14 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:282 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6396_5 = (const char * restrict) &"background.png"[0];

(insn 16 15 0 (set (reg/f:SI 61 [ D.6396 ])
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x408fd840 *.LC4>)) src/gui.c:283 -1
     (nil))

;; D.6397_6 = __builtin_strlen (temp_path_1);

(insn 23 16 17 (set (reg:SI 80)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:283 -1
     (nil))

(insn 17 23 18 (set (reg:SI 84)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:283 -1
     (nil))

(insn 18 17 19 (set (reg:SI 83)
        (reg:SI 80)) src/gui.c:283 -1
     (nil))

(insn 19 18 20 (set (reg:QI 85)
        (const_int 0 [0])) src/gui.c:283 -1
     (nil))

(insn 20 19 21 (parallel [
            (set (reg:SI 81)
                (unspec:SI [
                        (mem:BLK (reg:SI 83) [0 A8])
                        (reg:QI 85)
                        (const_int 1 [0x1])
                        (reg:SI 84)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 83))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:283 -1
     (nil))

(insn 21 20 22 (set (reg:SI 82)
        (not:SI (reg:SI 81))) src/gui.c:283 -1
     (nil))

(insn 22 21 0 (parallel [
            (set (reg:SI 62 [ D.6397 ])
                (plus:SI (reg:SI 82)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:283 -1
     (nil))

;; D.6398_7 = temp_path_1 + D.6397_6;

(insn 24 22 0 (parallel [
            (set (reg/f:SI 63 [ D.6398 ])
                (plus:SI (reg:SI 62 [ D.6397 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:283 -1
     (nil))

;; __builtin_memcpy (D.6398_7, D.6396_5, 15);

(insn 25 24 26 (set (reg:SI 86)
        (mem:SI (reg/f:SI 61 [ D.6396 ]) [0 S4 A8])) src/gui.c:283 -1
     (nil))

(insn 26 25 27 (set (mem:SI (reg/f:SI 63 [ D.6398 ]) [0 S4 A8])
        (reg:SI 86)) src/gui.c:283 -1
     (nil))

(insn 27 26 28 (set (reg:SI 87)
        (mem:SI (plus:SI (reg/f:SI 61 [ D.6396 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:283 -1
     (nil))

(insn 28 27 29 (set (mem:SI (plus:SI (reg/f:SI 63 [ D.6398 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 87)) src/gui.c:283 -1
     (nil))

(insn 29 28 30 (set (reg:SI 88)
        (mem:SI (plus:SI (reg/f:SI 61 [ D.6396 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:283 -1
     (nil))

(insn 30 29 31 (set (mem:SI (plus:SI (reg/f:SI 63 [ D.6398 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 88)) src/gui.c:283 -1
     (nil))

(insn 31 30 32 (set (reg:HI 89)
        (mem:HI (plus:SI (reg/f:SI 61 [ D.6396 ])
                (const_int 12 [0xc])) [0 S2 A8])) src/gui.c:283 -1
     (nil))

(insn 32 31 33 (set (mem:HI (plus:SI (reg/f:SI 63 [ D.6398 ])
                (const_int 12 [0xc])) [0 S2 A8])
        (reg:HI 89)) src/gui.c:283 -1
     (nil))

(insn 33 32 34 (set (reg:QI 90)
        (mem:QI (plus:SI (reg/f:SI 61 [ D.6396 ])
                (const_int 14 [0xe])) [0 S1 A8])) src/gui.c:283 -1
     (nil))

(insn 34 33 0 (set (mem:QI (plus:SI (reg/f:SI 63 [ D.6398 ])
                (const_int 14 [0xe])) [0 S1 A8])
        (reg:QI 90)) src/gui.c:283 -1
     (nil))

;; D.6399_8 = IMG_Load (temp_path_1);

(insn 35 34 36 (set (reg/f:SI 91)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:284 -1
     (nil))

(insn 36 35 37 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 91)) src/gui.c:284 -1
     (nil))

(call_insn 37 36 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:284 -1
     (nil)
    (nil))

(insn 38 37 0 (set (reg/f:SI 64 [ D.6399 ])
        (reg:SI 0 ax)) src/gui.c:284 -1
     (nil))

;; display_2(D)->background = D.6399_8;

(insn 39 38 40 (set (reg/f:SI 92)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:284 -1
     (nil))

(insn 40 39 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 92)
                (const_int 12 [0xc])) [0 display_2(D)->background+0 S4 A32])
        (reg/f:SI 64 [ D.6399 ])) src/gui.c:284 -1
     (nil))

;; D.6400_9 = &display_2(D)->background_position;

(insn 41 40 42 (set (reg/f:SI 93)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:287 -1
     (nil))

(insn 42 41 0 (parallel [
            (set (reg/f:SI 65 [ D.6400 ])
                (plus:SI (reg/f:SI 93)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:287 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

;; D.6401_10 = display_2(D)->screen;

(insn 43 42 44 (set (reg/f:SI 94)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:287 -1
     (nil))

(insn 44 43 0 (set (reg/f:SI 66 [ D.6401 ])
        (mem/s/f/j:SI (reg/f:SI 94) [0 display_2(D)->screen+0 S4 A32])) src/gui.c:287 -1
     (nil))

;; D.6402_11 = display_2(D)->background;

(insn 45 44 46 (set (reg/f:SI 95)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:287 -1
     (nil))

(insn 46 45 0 (set (reg/f:SI 67 [ D.6402 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 95)
                (const_int 12 [0xc])) [0 display_2(D)->background+0 S4 A32])) src/gui.c:287 -1
     (nil))

;; SDL_UpperBlit (D.6402_11, 0B, D.6401_10, D.6400_9);

(insn 47 46 48 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 65 [ D.6400 ])) src/gui.c:287 -1
     (nil))

(insn 48 47 49 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 66 [ D.6401 ])) src/gui.c:287 -1
     (nil))

(insn 49 48 50 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:287 -1
     (nil))

(insn 50 49 51 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 67 [ D.6402 ])) src/gui.c:287 -1
     (nil))

(call_insn 51 50 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:287 -1
     (nil)
    (nil))

;; D.6403_12 = display_2(D)->img_path;

(insn 52 51 53 (set (reg/f:SI 96)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:288 -1
     (nil))

(insn 53 52 0 (set (reg/f:SI 68 [ D.6403 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 96)
                (const_int 120 [0x78])) [0 display_2(D)->img_path+0 S4 A32])) src/gui.c:288 -1
     (nil))

;; D.6404_13 = (const char * restrict) D.6403_12;

(insn 54 53 0 (set (reg/f:SI 69 [ D.6404 ])
        (reg/f:SI 68 [ D.6403 ])) src/gui.c:288 -1
     (nil))

;; strcpy (temp_path_1, D.6404_13);

(insn 55 54 56 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 69 [ D.6404 ])) src/gui.c:288 -1
     (nil))

(insn 56 55 57 (set (reg/f:SI 97)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:288 -1
     (nil))

(insn 57 56 58 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 97)) src/gui.c:288 -1
     (nil))

(call_insn 58 57 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:288 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6405_14 = (const char * restrict) &"gameBoard.png"[0];

(insn 59 58 0 (set (reg/f:SI 70 [ D.6405 ])
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x408fd8a0 *.LC5>)) src/gui.c:289 -1
     (nil))

;; D.6406_15 = __builtin_strlen (temp_path_1);

(insn 66 59 60 (set (reg:SI 98)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:289 -1
     (nil))

(insn 60 66 61 (set (reg:SI 102)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:289 -1
     (nil))

(insn 61 60 62 (set (reg:SI 101)
        (reg:SI 98)) src/gui.c:289 -1
     (nil))

(insn 62 61 63 (set (reg:QI 103)
        (const_int 0 [0])) src/gui.c:289 -1
     (nil))

(insn 63 62 64 (parallel [
            (set (reg:SI 99)
                (unspec:SI [
                        (mem:BLK (reg:SI 101) [0 A8])
                        (reg:QI 103)
                        (const_int 1 [0x1])
                        (reg:SI 102)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 101))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:289 -1
     (nil))

(insn 64 63 65 (set (reg:SI 100)
        (not:SI (reg:SI 99))) src/gui.c:289 -1
     (nil))

(insn 65 64 0 (parallel [
            (set (reg:SI 71 [ D.6406 ])
                (plus:SI (reg:SI 100)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:289 -1
     (nil))

;; D.6407_16 = temp_path_1 + D.6406_15;

(insn 67 65 0 (parallel [
            (set (reg/f:SI 72 [ D.6407 ])
                (plus:SI (reg:SI 71 [ D.6406 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:289 -1
     (nil))

;; __builtin_memcpy (D.6407_16, D.6405_14, 14);

(insn 68 67 69 (set (reg:SI 104)
        (mem:SI (reg/f:SI 70 [ D.6405 ]) [0 S4 A8])) src/gui.c:289 -1
     (nil))

(insn 69 68 70 (set (mem:SI (reg/f:SI 72 [ D.6407 ]) [0 S4 A8])
        (reg:SI 104)) src/gui.c:289 -1
     (nil))

(insn 70 69 71 (set (reg:SI 105)
        (mem:SI (plus:SI (reg/f:SI 70 [ D.6405 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:289 -1
     (nil))

(insn 71 70 72 (set (mem:SI (plus:SI (reg/f:SI 72 [ D.6407 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 105)) src/gui.c:289 -1
     (nil))

(insn 72 71 73 (set (reg:SI 106)
        (mem:SI (plus:SI (reg/f:SI 70 [ D.6405 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:289 -1
     (nil))

(insn 73 72 74 (set (mem:SI (plus:SI (reg/f:SI 72 [ D.6407 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 106)) src/gui.c:289 -1
     (nil))

(insn 74 73 75 (set (reg:HI 107)
        (mem:HI (plus:SI (reg/f:SI 70 [ D.6405 ])
                (const_int 12 [0xc])) [0 S2 A8])) src/gui.c:289 -1
     (nil))

(insn 75 74 0 (set (mem:HI (plus:SI (reg/f:SI 72 [ D.6407 ])
                (const_int 12 [0xc])) [0 S2 A8])
        (reg:HI 107)) src/gui.c:289 -1
     (nil))

;; D.6408_17 = IMG_Load (temp_path_1);

(insn 76 75 77 (set (reg/f:SI 108)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:290 -1
     (nil))

(insn 77 76 78 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 108)) src/gui.c:290 -1
     (nil))

(call_insn 78 77 79 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:290 -1
     (nil)
    (nil))

(insn 79 78 0 (set (reg/f:SI 73 [ D.6408 ])
        (reg:SI 0 ax)) src/gui.c:290 -1
     (nil))

;; display_2(D)->background = D.6408_17;

(insn 80 79 81 (set (reg/f:SI 109)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:290 -1
     (nil))

(insn 81 80 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 109)
                (const_int 12 [0xc])) [0 display_2(D)->background+0 S4 A32])
        (reg/f:SI 73 [ D.6408 ])) src/gui.c:290 -1
     (nil))

;; D.6409_18 = &display_2(D)->gameBoard_position;

(insn 82 81 83 (set (reg/f:SI 110)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:292 -1
     (nil))

(insn 83 82 0 (parallel [
            (set (reg/f:SI 74 [ D.6409 ])
                (plus:SI (reg/f:SI 110)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:292 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])
            (const_int 28 [0x1c]))
        (nil)))

;; D.6410_19 = display_2(D)->screen;

(insn 84 83 85 (set (reg/f:SI 111)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:292 -1
     (nil))

(insn 85 84 0 (set (reg/f:SI 75 [ D.6410 ])
        (mem/s/f/j:SI (reg/f:SI 111) [0 display_2(D)->screen+0 S4 A32])) src/gui.c:292 -1
     (nil))

;; D.6411_20 = display_2(D)->gameBoard;

(insn 86 85 87 (set (reg/f:SI 112)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:292 -1
     (nil))

(insn 87 86 0 (set (reg/f:SI 76 [ D.6411 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 112)
                (const_int 24 [0x18])) [0 display_2(D)->gameBoard+0 S4 A32])) src/gui.c:292 -1
     (nil))

;; SDL_UpperBlit (D.6411_20, 0B, D.6410_19, D.6409_18);

(insn 88 87 89 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 74 [ D.6409 ])) src/gui.c:292 -1
     (nil))

(insn 89 88 90 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 75 [ D.6410 ])) src/gui.c:292 -1
     (nil))

(insn 90 89 91 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:292 -1
     (nil))

(insn 91 90 92 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 76 [ D.6411 ])) src/gui.c:292 -1
     (nil))

(call_insn 92 91 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:292 -1
     (nil)
    (nil))

;; free (temp_path_1);

(insn 93 92 94 (set (reg/f:SI 113)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:294 -1
     (nil))

(insn 94 93 95 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 113)) src/gui.c:294 -1
     (nil))

(call_insn 95 94 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:294 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 100 [0x64])) src/gui.c:281 -1
     (nil))

(call_insn 6 5 7 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:281 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 7 6 8 3 (set (reg/f:SI 77)
        (reg:SI 0 ax)) src/gui.c:281 -1
     (expr_list:REG_NOALIAS (reg/f:SI 77)
        (nil)))

(insn 8 7 9 3 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])
        (reg/f:SI 77)) src/gui.c:281 -1
     (nil))

(insn 9 8 10 3 (set (reg/f:SI 78)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:282 -1
     (nil))

(insn 10 9 11 3 (set (reg/f:SI 59 [ D.6394 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 78)
                (const_int 120 [0x78])) [0 display_2(D)->img_path+0 S4 A32])) src/gui.c:282 -1
     (nil))

(insn 11 10 12 3 (set (reg/f:SI 60 [ D.6395 ])
        (reg/f:SI 59 [ D.6394 ])) src/gui.c:282 -1
     (nil))

(insn 12 11 13 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 60 [ D.6395 ])) src/gui.c:282 -1
     (nil))

(insn 13 12 14 3 (set (reg/f:SI 79)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:282 -1
     (nil))

(insn 14 13 15 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 79)) src/gui.c:282 -1
     (nil))

(call_insn 15 14 16 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:282 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 16 15 23 3 (set (reg/f:SI 61 [ D.6396 ])
        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x408fd840 *.LC4>)) src/gui.c:283 -1
     (nil))

(insn 23 16 17 3 (set (reg:SI 80)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:283 -1
     (nil))

(insn 17 23 18 3 (set (reg:SI 84)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:283 -1
     (nil))

(insn 18 17 19 3 (set (reg:SI 83)
        (reg:SI 80)) src/gui.c:283 -1
     (nil))

(insn 19 18 20 3 (set (reg:QI 85)
        (const_int 0 [0])) src/gui.c:283 -1
     (nil))

(insn 20 19 21 3 (parallel [
            (set (reg:SI 81)
                (unspec:SI [
                        (mem:BLK (reg:SI 83) [0 A8])
                        (reg:QI 85)
                        (const_int 1 [0x1])
                        (reg:SI 84)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 83))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:283 -1
     (nil))

(insn 21 20 22 3 (set (reg:SI 82)
        (not:SI (reg:SI 81))) src/gui.c:283 -1
     (nil))

(insn 22 21 24 3 (parallel [
            (set (reg:SI 62 [ D.6397 ])
                (plus:SI (reg:SI 82)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:283 -1
     (nil))

(insn 24 22 25 3 (parallel [
            (set (reg/f:SI 63 [ D.6398 ])
                (plus:SI (reg:SI 62 [ D.6397 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:283 -1
     (nil))

(insn 25 24 26 3 (set (reg:SI 86)
        (mem:SI (reg/f:SI 61 [ D.6396 ]) [0 S4 A8])) src/gui.c:283 -1
     (nil))

(insn 26 25 27 3 (set (mem:SI (reg/f:SI 63 [ D.6398 ]) [0 S4 A8])
        (reg:SI 86)) src/gui.c:283 -1
     (nil))

(insn 27 26 28 3 (set (reg:SI 87)
        (mem:SI (plus:SI (reg/f:SI 61 [ D.6396 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:283 -1
     (nil))

(insn 28 27 29 3 (set (mem:SI (plus:SI (reg/f:SI 63 [ D.6398 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 87)) src/gui.c:283 -1
     (nil))

(insn 29 28 30 3 (set (reg:SI 88)
        (mem:SI (plus:SI (reg/f:SI 61 [ D.6396 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:283 -1
     (nil))

(insn 30 29 31 3 (set (mem:SI (plus:SI (reg/f:SI 63 [ D.6398 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 88)) src/gui.c:283 -1
     (nil))

(insn 31 30 32 3 (set (reg:HI 89)
        (mem:HI (plus:SI (reg/f:SI 61 [ D.6396 ])
                (const_int 12 [0xc])) [0 S2 A8])) src/gui.c:283 -1
     (nil))

(insn 32 31 33 3 (set (mem:HI (plus:SI (reg/f:SI 63 [ D.6398 ])
                (const_int 12 [0xc])) [0 S2 A8])
        (reg:HI 89)) src/gui.c:283 -1
     (nil))

(insn 33 32 34 3 (set (reg:QI 90)
        (mem:QI (plus:SI (reg/f:SI 61 [ D.6396 ])
                (const_int 14 [0xe])) [0 S1 A8])) src/gui.c:283 -1
     (nil))

(insn 34 33 35 3 (set (mem:QI (plus:SI (reg/f:SI 63 [ D.6398 ])
                (const_int 14 [0xe])) [0 S1 A8])
        (reg:QI 90)) src/gui.c:283 -1
     (nil))

(insn 35 34 36 3 (set (reg/f:SI 91)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:284 -1
     (nil))

(insn 36 35 37 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 91)) src/gui.c:284 -1
     (nil))

(call_insn 37 36 38 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:284 -1
     (nil)
    (nil))

(insn 38 37 39 3 (set (reg/f:SI 64 [ D.6399 ])
        (reg:SI 0 ax)) src/gui.c:284 -1
     (nil))

(insn 39 38 40 3 (set (reg/f:SI 92)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:284 -1
     (nil))

(insn 40 39 41 3 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 92)
                (const_int 12 [0xc])) [0 display_2(D)->background+0 S4 A32])
        (reg/f:SI 64 [ D.6399 ])) src/gui.c:284 -1
     (nil))

(insn 41 40 42 3 (set (reg/f:SI 93)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:287 -1
     (nil))

(insn 42 41 43 3 (parallel [
            (set (reg/f:SI 65 [ D.6400 ])
                (plus:SI (reg/f:SI 93)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:287 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 43 42 44 3 (set (reg/f:SI 94)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:287 -1
     (nil))

(insn 44 43 45 3 (set (reg/f:SI 66 [ D.6401 ])
        (mem/s/f/j:SI (reg/f:SI 94) [0 display_2(D)->screen+0 S4 A32])) src/gui.c:287 -1
     (nil))

(insn 45 44 46 3 (set (reg/f:SI 95)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:287 -1
     (nil))

(insn 46 45 47 3 (set (reg/f:SI 67 [ D.6402 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 95)
                (const_int 12 [0xc])) [0 display_2(D)->background+0 S4 A32])) src/gui.c:287 -1
     (nil))

(insn 47 46 48 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 65 [ D.6400 ])) src/gui.c:287 -1
     (nil))

(insn 48 47 49 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 66 [ D.6401 ])) src/gui.c:287 -1
     (nil))

(insn 49 48 50 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:287 -1
     (nil))

(insn 50 49 51 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 67 [ D.6402 ])) src/gui.c:287 -1
     (nil))

(call_insn 51 50 52 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:287 -1
     (nil)
    (nil))

(insn 52 51 53 3 (set (reg/f:SI 96)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:288 -1
     (nil))

(insn 53 52 54 3 (set (reg/f:SI 68 [ D.6403 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 96)
                (const_int 120 [0x78])) [0 display_2(D)->img_path+0 S4 A32])) src/gui.c:288 -1
     (nil))

(insn 54 53 55 3 (set (reg/f:SI 69 [ D.6404 ])
        (reg/f:SI 68 [ D.6403 ])) src/gui.c:288 -1
     (nil))

(insn 55 54 56 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 69 [ D.6404 ])) src/gui.c:288 -1
     (nil))

(insn 56 55 57 3 (set (reg/f:SI 97)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:288 -1
     (nil))

(insn 57 56 58 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 97)) src/gui.c:288 -1
     (nil))

(call_insn 58 57 59 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:288 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 59 58 66 3 (set (reg/f:SI 70 [ D.6405 ])
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x408fd8a0 *.LC5>)) src/gui.c:289 -1
     (nil))

(insn 66 59 60 3 (set (reg:SI 98)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:289 -1
     (nil))

(insn 60 66 61 3 (set (reg:SI 102)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:289 -1
     (nil))

(insn 61 60 62 3 (set (reg:SI 101)
        (reg:SI 98)) src/gui.c:289 -1
     (nil))

(insn 62 61 63 3 (set (reg:QI 103)
        (const_int 0 [0])) src/gui.c:289 -1
     (nil))

(insn 63 62 64 3 (parallel [
            (set (reg:SI 99)
                (unspec:SI [
                        (mem:BLK (reg:SI 101) [0 A8])
                        (reg:QI 103)
                        (const_int 1 [0x1])
                        (reg:SI 102)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 101))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:289 -1
     (nil))

(insn 64 63 65 3 (set (reg:SI 100)
        (not:SI (reg:SI 99))) src/gui.c:289 -1
     (nil))

(insn 65 64 67 3 (parallel [
            (set (reg:SI 71 [ D.6406 ])
                (plus:SI (reg:SI 100)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:289 -1
     (nil))

(insn 67 65 68 3 (parallel [
            (set (reg/f:SI 72 [ D.6407 ])
                (plus:SI (reg:SI 71 [ D.6406 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:289 -1
     (nil))

(insn 68 67 69 3 (set (reg:SI 104)
        (mem:SI (reg/f:SI 70 [ D.6405 ]) [0 S4 A8])) src/gui.c:289 -1
     (nil))

(insn 69 68 70 3 (set (mem:SI (reg/f:SI 72 [ D.6407 ]) [0 S4 A8])
        (reg:SI 104)) src/gui.c:289 -1
     (nil))

(insn 70 69 71 3 (set (reg:SI 105)
        (mem:SI (plus:SI (reg/f:SI 70 [ D.6405 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:289 -1
     (nil))

(insn 71 70 72 3 (set (mem:SI (plus:SI (reg/f:SI 72 [ D.6407 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 105)) src/gui.c:289 -1
     (nil))

(insn 72 71 73 3 (set (reg:SI 106)
        (mem:SI (plus:SI (reg/f:SI 70 [ D.6405 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:289 -1
     (nil))

(insn 73 72 74 3 (set (mem:SI (plus:SI (reg/f:SI 72 [ D.6407 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 106)) src/gui.c:289 -1
     (nil))

(insn 74 73 75 3 (set (reg:HI 107)
        (mem:HI (plus:SI (reg/f:SI 70 [ D.6405 ])
                (const_int 12 [0xc])) [0 S2 A8])) src/gui.c:289 -1
     (nil))

(insn 75 74 76 3 (set (mem:HI (plus:SI (reg/f:SI 72 [ D.6407 ])
                (const_int 12 [0xc])) [0 S2 A8])
        (reg:HI 107)) src/gui.c:289 -1
     (nil))

(insn 76 75 77 3 (set (reg/f:SI 108)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:290 -1
     (nil))

(insn 77 76 78 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 108)) src/gui.c:290 -1
     (nil))

(call_insn 78 77 79 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:290 -1
     (nil)
    (nil))

(insn 79 78 80 3 (set (reg/f:SI 73 [ D.6408 ])
        (reg:SI 0 ax)) src/gui.c:290 -1
     (nil))

(insn 80 79 81 3 (set (reg/f:SI 109)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:290 -1
     (nil))

(insn 81 80 82 3 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 109)
                (const_int 12 [0xc])) [0 display_2(D)->background+0 S4 A32])
        (reg/f:SI 73 [ D.6408 ])) src/gui.c:290 -1
     (nil))

(insn 82 81 83 3 (set (reg/f:SI 110)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:292 -1
     (nil))

(insn 83 82 84 3 (parallel [
            (set (reg/f:SI 74 [ D.6409 ])
                (plus:SI (reg/f:SI 110)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:292 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])
            (const_int 28 [0x1c]))
        (nil)))

(insn 84 83 85 3 (set (reg/f:SI 111)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:292 -1
     (nil))

(insn 85 84 86 3 (set (reg/f:SI 75 [ D.6410 ])
        (mem/s/f/j:SI (reg/f:SI 111) [0 display_2(D)->screen+0 S4 A32])) src/gui.c:292 -1
     (nil))

(insn 86 85 87 3 (set (reg/f:SI 112)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:292 -1
     (nil))

(insn 87 86 88 3 (set (reg/f:SI 76 [ D.6411 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 112)
                (const_int 24 [0x18])) [0 display_2(D)->gameBoard+0 S4 A32])) src/gui.c:292 -1
     (nil))

(insn 88 87 89 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 74 [ D.6409 ])) src/gui.c:292 -1
     (nil))

(insn 89 88 90 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 75 [ D.6410 ])) src/gui.c:292 -1
     (nil))

(insn 90 89 91 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:292 -1
     (nil))

(insn 91 90 92 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 76 [ D.6411 ])) src/gui.c:292 -1
     (nil))

(call_insn 92 91 93 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:292 -1
     (nil)
    (nil))

(insn 93 92 94 3 (set (reg/f:SI 113)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:294 -1
     (nil))

(insn 94 93 95 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 113)) src/gui.c:294 -1
     (nil))

(call_insn 95 94 96 3 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:294 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(code_label 96 95 97 4 30 "" [0 uses])

(note 97 96 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Display_RefreshGameBoard (Display_RefreshGameBoard)

Display_RefreshGameBoard (struct SDisplay * display, struct SGameState * gameState, struct SGame * game)
{
  char * temp_path;
  struct SDL_Surface * D.6393;
  struct SDL_Surface * D.6392;
  struct SDL_Surface * D.6391;
  struct SDL_Rect * D.6390;
  struct SDL_Surface * D.6389;
  char * D.6388;
  unsigned int D.6387;
  const char * restrict D.6386;
  const char * restrict D.6385;
  char * D.6384;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  temp_path_1 = malloc (100);
  D.6384_3 = display_2(D)->img_path;
  D.6385_4 = (const char * restrict) D.6384_3;
  strcpy (temp_path_1, D.6385_4);
  D.6386_5 = (const char * restrict) &"gameBoard.png"[0];
  D.6387_6 = __builtin_strlen (temp_path_1);
  D.6388_7 = temp_path_1 + D.6387_6;
  __builtin_memcpy (D.6388_7, D.6386_5, 14);
  D.6389_8 = IMG_Load (temp_path_1);
  display_2(D)->background = D.6389_8;
  free (temp_path_1);
  D.6390_9 = &display_2(D)->gameBoard_position;
  D.6391_10 = display_2(D)->screen;
  D.6392_11 = display_2(D)->gameBoard;
  SDL_UpperBlit (D.6392_11, 0B, D.6391_10, D.6390_9);
  Display_Checkers (display_2(D), gameState_12(D), game_13(D));
  Display_DrawOut (display_2(D), gameState_12(D), game_13(D));
  Display_DrawBar (display_2(D), gameState_12(D), game_13(D));
  Display_Die (display_2(D), gameState_12(D));
  D.6393_14 = display_2(D)->screen;
  SDL_Flip (D.6393_14);
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (temp_path_1 - 1 )
Partition 2 (display_2(D) - 2 )
Partition 3 (D.6384_3 - 3 )
Partition 4 (D.6385_4 - 4 )
Partition 5 (D.6386_5 - 5 )
Partition 6 (D.6387_6 - 6 )
Partition 7 (D.6388_7 - 7 )
Partition 8 (D.6389_8 - 8 )
Partition 9 (D.6390_9 - 9 )
Partition 10 (D.6391_10 - 10 )
Partition 11 (D.6392_11 - 11 )
Partition 12 (gameState_12(D) - 12 )
Partition 13 (game_13(D) - 13 )
Partition 14 (D.6393_14 - 14 )


Partition map 

Partition 0 (display_2(D) - 2 )
Partition 1 (gameState_12(D) - 12 )
Partition 2 (game_13(D) - 13 )


Live on entry to BB2 : display_2(D)  gameState_12(D)  game_13(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (display_2(D) - 2 )
Partition 1 (gameState_12(D) - 12 )
Partition 2 (game_13(D) - 13 )

After Coalescing:

Partition map 

Partition 0 (temp_path_1 - 1 )
Partition 1 (display_2(D) - 2 )
Partition 2 (D.6384_3 - 3 )
Partition 3 (D.6385_4 - 4 )
Partition 4 (D.6386_5 - 5 )
Partition 5 (D.6387_6 - 6 )
Partition 6 (D.6388_7 - 7 )
Partition 7 (D.6389_8 - 8 )
Partition 8 (D.6390_9 - 9 )
Partition 9 (D.6391_10 - 10 )
Partition 10 (D.6392_11 - 11 )
Partition 11 (gameState_12(D) - 12 )
Partition 12 (game_13(D) - 13 )
Partition 13 (D.6393_14 - 14 )

Display_RefreshGameBoard (struct SDisplay * display, struct SGameState * gameState, struct SGame * game)
{
  char * temp_path;
  struct SDL_Surface * D.6393;
  struct SDL_Surface * D.6392;
  struct SDL_Surface * D.6391;
  struct SDL_Rect * D.6390;
  struct SDL_Surface * D.6389;
  char * D.6388;
  unsigned int D.6387;
  const char * restrict D.6386;
  const char * restrict D.6385;
  char * D.6384;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  temp_path_1 = malloc (100);
  D.6384_3 = display_2(D)->img_path;
  D.6385_4 = (const char * restrict) D.6384_3;
  strcpy (temp_path_1, D.6385_4);
  D.6386_5 = (const char * restrict) &"gameBoard.png"[0];
  D.6387_6 = __builtin_strlen (temp_path_1);
  D.6388_7 = temp_path_1 + D.6387_6;
  __builtin_memcpy (D.6388_7, D.6386_5, 14);
  D.6389_8 = IMG_Load (temp_path_1);
  display_2(D)->background = D.6389_8;
  free (temp_path_1);
  D.6390_9 = &display_2(D)->gameBoard_position;
  D.6391_10 = display_2(D)->screen;
  D.6392_11 = display_2(D)->gameBoard;
  SDL_UpperBlit (D.6392_11, 0B, D.6391_10, D.6390_9);
  Display_Checkers (display_2(D), gameState_12(D), game_13(D));
  Display_DrawOut (display_2(D), gameState_12(D), game_13(D));
  Display_DrawBar (display_2(D), gameState_12(D), game_13(D));
  Display_Die (display_2(D), gameState_12(D));
  D.6393_14 = display_2(D)->screen;
  SDL_Flip (D.6393_14);
  return;
  # SUCC: EXIT

}


Partition 0: size 4 align 4
	temp_path_1, offset 0

;; Generating RTL for gimple basic block 2

;; temp_path_1 = malloc (100);

(insn 5 4 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 100 [0x64])) src/gui.c:301 -1
     (nil))

(call_insn 6 5 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:301 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 7 6 8 (set (reg/f:SI 69)
        (reg:SI 0 ax)) src/gui.c:301 -1
     (expr_list:REG_NOALIAS (reg/f:SI 69)
        (nil)))

(insn 8 7 0 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])
        (reg/f:SI 69)) src/gui.c:301 -1
     (nil))

;; D.6384_3 = display_2(D)->img_path;

(insn 9 8 10 (set (reg/f:SI 70)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:302 -1
     (nil))

(insn 10 9 0 (set (reg/f:SI 59 [ D.6384 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 70)
                (const_int 120 [0x78])) [0 display_2(D)->img_path+0 S4 A32])) src/gui.c:302 -1
     (nil))

;; D.6385_4 = (const char * restrict) D.6384_3;

(insn 11 10 0 (set (reg/f:SI 60 [ D.6385 ])
        (reg/f:SI 59 [ D.6384 ])) src/gui.c:302 -1
     (nil))

;; strcpy (temp_path_1, D.6385_4);

(insn 12 11 13 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 60 [ D.6385 ])) src/gui.c:302 -1
     (nil))

(insn 13 12 14 (set (reg/f:SI 71)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:302 -1
     (nil))

(insn 14 13 15 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 71)) src/gui.c:302 -1
     (nil))

(call_insn 15 14 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:302 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6386_5 = (const char * restrict) &"gameBoard.png"[0];

(insn 16 15 0 (set (reg/f:SI 61 [ D.6386 ])
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x408fd8a0 *.LC5>)) src/gui.c:303 -1
     (nil))

;; D.6387_6 = __builtin_strlen (temp_path_1);

(insn 23 16 17 (set (reg:SI 72)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:303 -1
     (nil))

(insn 17 23 18 (set (reg:SI 76)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:303 -1
     (nil))

(insn 18 17 19 (set (reg:SI 75)
        (reg:SI 72)) src/gui.c:303 -1
     (nil))

(insn 19 18 20 (set (reg:QI 77)
        (const_int 0 [0])) src/gui.c:303 -1
     (nil))

(insn 20 19 21 (parallel [
            (set (reg:SI 73)
                (unspec:SI [
                        (mem:BLK (reg:SI 75) [0 A8])
                        (reg:QI 77)
                        (const_int 1 [0x1])
                        (reg:SI 76)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 75))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:303 -1
     (nil))

(insn 21 20 22 (set (reg:SI 74)
        (not:SI (reg:SI 73))) src/gui.c:303 -1
     (nil))

(insn 22 21 0 (parallel [
            (set (reg:SI 62 [ D.6387 ])
                (plus:SI (reg:SI 74)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:303 -1
     (nil))

;; D.6388_7 = temp_path_1 + D.6387_6;

(insn 24 22 0 (parallel [
            (set (reg/f:SI 63 [ D.6388 ])
                (plus:SI (reg:SI 62 [ D.6387 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:303 -1
     (nil))

;; __builtin_memcpy (D.6388_7, D.6386_5, 14);

(insn 25 24 26 (set (reg:SI 78)
        (mem:SI (reg/f:SI 61 [ D.6386 ]) [0 S4 A8])) src/gui.c:303 -1
     (nil))

(insn 26 25 27 (set (mem:SI (reg/f:SI 63 [ D.6388 ]) [0 S4 A8])
        (reg:SI 78)) src/gui.c:303 -1
     (nil))

(insn 27 26 28 (set (reg:SI 79)
        (mem:SI (plus:SI (reg/f:SI 61 [ D.6386 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:303 -1
     (nil))

(insn 28 27 29 (set (mem:SI (plus:SI (reg/f:SI 63 [ D.6388 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 79)) src/gui.c:303 -1
     (nil))

(insn 29 28 30 (set (reg:SI 80)
        (mem:SI (plus:SI (reg/f:SI 61 [ D.6386 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:303 -1
     (nil))

(insn 30 29 31 (set (mem:SI (plus:SI (reg/f:SI 63 [ D.6388 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 80)) src/gui.c:303 -1
     (nil))

(insn 31 30 32 (set (reg:HI 81)
        (mem:HI (plus:SI (reg/f:SI 61 [ D.6386 ])
                (const_int 12 [0xc])) [0 S2 A8])) src/gui.c:303 -1
     (nil))

(insn 32 31 0 (set (mem:HI (plus:SI (reg/f:SI 63 [ D.6388 ])
                (const_int 12 [0xc])) [0 S2 A8])
        (reg:HI 81)) src/gui.c:303 -1
     (nil))

;; D.6389_8 = IMG_Load (temp_path_1);

(insn 33 32 34 (set (reg/f:SI 82)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:304 -1
     (nil))

(insn 34 33 35 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 82)) src/gui.c:304 -1
     (nil))

(call_insn 35 34 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:304 -1
     (nil)
    (nil))

(insn 36 35 0 (set (reg/f:SI 64 [ D.6389 ])
        (reg:SI 0 ax)) src/gui.c:304 -1
     (nil))

;; display_2(D)->background = D.6389_8;

(insn 37 36 38 (set (reg/f:SI 83)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:304 -1
     (nil))

(insn 38 37 0 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 83)
                (const_int 12 [0xc])) [0 display_2(D)->background+0 S4 A32])
        (reg/f:SI 64 [ D.6389 ])) src/gui.c:304 -1
     (nil))

;; free (temp_path_1);

(insn 39 38 40 (set (reg/f:SI 84)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:305 -1
     (nil))

(insn 40 39 41 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 84)) src/gui.c:305 -1
     (nil))

(call_insn 41 40 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:305 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6390_9 = &display_2(D)->gameBoard_position;

(insn 42 41 43 (set (reg/f:SI 85)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:307 -1
     (nil))

(insn 43 42 0 (parallel [
            (set (reg/f:SI 65 [ D.6390 ])
                (plus:SI (reg/f:SI 85)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:307 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])
            (const_int 28 [0x1c]))
        (nil)))

;; D.6391_10 = display_2(D)->screen;

(insn 44 43 45 (set (reg/f:SI 86)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:307 -1
     (nil))

(insn 45 44 0 (set (reg/f:SI 66 [ D.6391 ])
        (mem/s/f/j:SI (reg/f:SI 86) [0 display_2(D)->screen+0 S4 A32])) src/gui.c:307 -1
     (nil))

;; D.6392_11 = display_2(D)->gameBoard;

(insn 46 45 47 (set (reg/f:SI 87)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:307 -1
     (nil))

(insn 47 46 0 (set (reg/f:SI 67 [ D.6392 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 87)
                (const_int 24 [0x18])) [0 display_2(D)->gameBoard+0 S4 A32])) src/gui.c:307 -1
     (nil))

;; SDL_UpperBlit (D.6392_11, 0B, D.6391_10, D.6390_9);

(insn 48 47 49 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 65 [ D.6390 ])) src/gui.c:307 -1
     (nil))

(insn 49 48 50 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 66 [ D.6391 ])) src/gui.c:307 -1
     (nil))

(insn 50 49 51 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:307 -1
     (nil))

(insn 51 50 52 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 67 [ D.6392 ])) src/gui.c:307 -1
     (nil))

(call_insn 52 51 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:307 -1
     (nil)
    (nil))

;; Display_Checkers (display_2(D), gameState_12(D), game_13(D));

(insn 53 52 54 (set (reg/f:SI 88)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:310 -1
     (nil))

(insn 54 53 55 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 88)) src/gui.c:310 -1
     (nil))

(insn 55 54 56 (set (reg/f:SI 89)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:310 -1
     (nil))

(insn 56 55 57 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 89)) src/gui.c:310 -1
     (nil))

(insn 57 56 58 (set (reg/f:SI 90)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:310 -1
     (nil))

(insn 58 57 59 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 90)) src/gui.c:310 -1
     (nil))

(call_insn 59 58 0 (call (mem:QI (symbol_ref:SI ("Display_Checkers") [flags 0x3]  <function_decl 0x4081a000 Display_Checkers>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:310 -1
     (nil)
    (nil))

;; Display_DrawOut (display_2(D), gameState_12(D), game_13(D));

(insn 60 59 61 (set (reg/f:SI 91)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:311 -1
     (nil))

(insn 61 60 62 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 91)) src/gui.c:311 -1
     (nil))

(insn 62 61 63 (set (reg/f:SI 92)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:311 -1
     (nil))

(insn 63 62 64 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 92)) src/gui.c:311 -1
     (nil))

(insn 64 63 65 (set (reg/f:SI 93)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:311 -1
     (nil))

(insn 65 64 66 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 93)) src/gui.c:311 -1
     (nil))

(call_insn 66 65 0 (call (mem:QI (symbol_ref:SI ("Display_DrawOut") [flags 0x3]  <function_decl 0x4081a880 Display_DrawOut>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:311 -1
     (nil)
    (nil))

;; Display_DrawBar (display_2(D), gameState_12(D), game_13(D));

(insn 67 66 68 (set (reg/f:SI 94)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:312 -1
     (nil))

(insn 68 67 69 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 94)) src/gui.c:312 -1
     (nil))

(insn 69 68 70 (set (reg/f:SI 95)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:312 -1
     (nil))

(insn 70 69 71 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 95)) src/gui.c:312 -1
     (nil))

(insn 71 70 72 (set (reg/f:SI 96)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:312 -1
     (nil))

(insn 72 71 73 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 96)) src/gui.c:312 -1
     (nil))

(call_insn 73 72 0 (call (mem:QI (symbol_ref:SI ("Display_DrawBar") [flags 0x3]  <function_decl 0x4081a900 Display_DrawBar>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:312 -1
     (nil)
    (nil))

;; Display_Die (display_2(D), gameState_12(D));

(insn 74 73 75 (set (reg/f:SI 97)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:314 -1
     (nil))

(insn 75 74 76 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 97)) src/gui.c:314 -1
     (nil))

(insn 76 75 77 (set (reg/f:SI 98)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:314 -1
     (nil))

(insn 77 76 78 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 98)) src/gui.c:314 -1
     (nil))

(call_insn 78 77 0 (call (mem:QI (symbol_ref:SI ("Display_Die") [flags 0x3]  <function_decl 0x4081a080 Display_Die>) [0 S1 A8])
        (const_int 8 [0x8])) src/gui.c:314 -1
     (nil)
    (nil))

;; D.6393_14 = display_2(D)->screen;

(insn 79 78 80 (set (reg/f:SI 99)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:316 -1
     (nil))

(insn 80 79 0 (set (reg/f:SI 68 [ D.6393 ])
        (mem/s/f/j:SI (reg/f:SI 99) [0 display_2(D)->screen+0 S4 A32])) src/gui.c:316 -1
     (nil))

;; SDL_Flip (D.6393_14);

(insn 81 80 82 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 68 [ D.6393 ])) src/gui.c:316 -1
     (nil))

(call_insn 82 81 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_Flip") [flags 0x41]  <function_decl 0x4079fa00 SDL_Flip>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:316 -1
     (nil)
    (nil))


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 100 [0x64])) src/gui.c:301 -1
     (nil))

(call_insn 6 5 7 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:301 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 7 6 8 3 (set (reg/f:SI 69)
        (reg:SI 0 ax)) src/gui.c:301 -1
     (expr_list:REG_NOALIAS (reg/f:SI 69)
        (nil)))

(insn 8 7 9 3 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])
        (reg/f:SI 69)) src/gui.c:301 -1
     (nil))

(insn 9 8 10 3 (set (reg/f:SI 70)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:302 -1
     (nil))

(insn 10 9 11 3 (set (reg/f:SI 59 [ D.6384 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 70)
                (const_int 120 [0x78])) [0 display_2(D)->img_path+0 S4 A32])) src/gui.c:302 -1
     (nil))

(insn 11 10 12 3 (set (reg/f:SI 60 [ D.6385 ])
        (reg/f:SI 59 [ D.6384 ])) src/gui.c:302 -1
     (nil))

(insn 12 11 13 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 60 [ D.6385 ])) src/gui.c:302 -1
     (nil))

(insn 13 12 14 3 (set (reg/f:SI 71)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:302 -1
     (nil))

(insn 14 13 15 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 71)) src/gui.c:302 -1
     (nil))

(call_insn 15 14 16 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x406ae780 strcpy>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:302 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 16 15 23 3 (set (reg/f:SI 61 [ D.6386 ])
        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x408fd8a0 *.LC5>)) src/gui.c:303 -1
     (nil))

(insn 23 16 17 3 (set (reg:SI 72)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:303 -1
     (nil))

(insn 17 23 18 3 (set (reg:SI 76)
        (const_int -1 [0xffffffffffffffff])) src/gui.c:303 -1
     (nil))

(insn 18 17 19 3 (set (reg:SI 75)
        (reg:SI 72)) src/gui.c:303 -1
     (nil))

(insn 19 18 20 3 (set (reg:QI 77)
        (const_int 0 [0])) src/gui.c:303 -1
     (nil))

(insn 20 19 21 3 (parallel [
            (set (reg:SI 73)
                (unspec:SI [
                        (mem:BLK (reg:SI 75) [0 A8])
                        (reg:QI 77)
                        (const_int 1 [0x1])
                        (reg:SI 76)
                    ] UNSPEC_SCAS))
            (clobber (reg:SI 75))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:303 -1
     (nil))

(insn 21 20 22 3 (set (reg:SI 74)
        (not:SI (reg:SI 73))) src/gui.c:303 -1
     (nil))

(insn 22 21 24 3 (parallel [
            (set (reg:SI 62 [ D.6387 ])
                (plus:SI (reg:SI 74)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:303 -1
     (nil))

(insn 24 22 25 3 (parallel [
            (set (reg/f:SI 63 [ D.6388 ])
                (plus:SI (reg:SI 62 [ D.6387 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:303 -1
     (nil))

(insn 25 24 26 3 (set (reg:SI 78)
        (mem:SI (reg/f:SI 61 [ D.6386 ]) [0 S4 A8])) src/gui.c:303 -1
     (nil))

(insn 26 25 27 3 (set (mem:SI (reg/f:SI 63 [ D.6388 ]) [0 S4 A8])
        (reg:SI 78)) src/gui.c:303 -1
     (nil))

(insn 27 26 28 3 (set (reg:SI 79)
        (mem:SI (plus:SI (reg/f:SI 61 [ D.6386 ])
                (const_int 4 [0x4])) [0 S4 A8])) src/gui.c:303 -1
     (nil))

(insn 28 27 29 3 (set (mem:SI (plus:SI (reg/f:SI 63 [ D.6388 ])
                (const_int 4 [0x4])) [0 S4 A8])
        (reg:SI 79)) src/gui.c:303 -1
     (nil))

(insn 29 28 30 3 (set (reg:SI 80)
        (mem:SI (plus:SI (reg/f:SI 61 [ D.6386 ])
                (const_int 8 [0x8])) [0 S4 A8])) src/gui.c:303 -1
     (nil))

(insn 30 29 31 3 (set (mem:SI (plus:SI (reg/f:SI 63 [ D.6388 ])
                (const_int 8 [0x8])) [0 S4 A8])
        (reg:SI 80)) src/gui.c:303 -1
     (nil))

(insn 31 30 32 3 (set (reg:HI 81)
        (mem:HI (plus:SI (reg/f:SI 61 [ D.6386 ])
                (const_int 12 [0xc])) [0 S2 A8])) src/gui.c:303 -1
     (nil))

(insn 32 31 33 3 (set (mem:HI (plus:SI (reg/f:SI 63 [ D.6388 ])
                (const_int 12 [0xc])) [0 S2 A8])
        (reg:HI 81)) src/gui.c:303 -1
     (nil))

(insn 33 32 34 3 (set (reg/f:SI 82)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:304 -1
     (nil))

(insn 34 33 35 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 82)) src/gui.c:304 -1
     (nil))

(call_insn 35 34 36 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("IMG_Load") [flags 0x41]  <function_decl 0x407f0b80 IMG_Load>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:304 -1
     (nil)
    (nil))

(insn 36 35 37 3 (set (reg/f:SI 64 [ D.6389 ])
        (reg:SI 0 ax)) src/gui.c:304 -1
     (nil))

(insn 37 36 38 3 (set (reg/f:SI 83)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:304 -1
     (nil))

(insn 38 37 39 3 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 83)
                (const_int 12 [0xc])) [0 display_2(D)->background+0 S4 A32])
        (reg/f:SI 64 [ D.6389 ])) src/gui.c:304 -1
     (nil))

(insn 39 38 40 3 (set (reg/f:SI 84)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 temp_path+0 S4 A32])) src/gui.c:305 -1
     (nil))

(insn 40 39 41 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 84)) src/gui.c:305 -1
     (nil))

(call_insn 41 40 42 3 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:305 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 42 41 43 3 (set (reg/f:SI 85)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:307 -1
     (nil))

(insn 43 42 44 3 (parallel [
            (set (reg/f:SI 65 [ D.6390 ])
                (plus:SI (reg/f:SI 85)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:307 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])
            (const_int 28 [0x1c]))
        (nil)))

(insn 44 43 45 3 (set (reg/f:SI 86)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:307 -1
     (nil))

(insn 45 44 46 3 (set (reg/f:SI 66 [ D.6391 ])
        (mem/s/f/j:SI (reg/f:SI 86) [0 display_2(D)->screen+0 S4 A32])) src/gui.c:307 -1
     (nil))

(insn 46 45 47 3 (set (reg/f:SI 87)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:307 -1
     (nil))

(insn 47 46 48 3 (set (reg/f:SI 67 [ D.6392 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 87)
                (const_int 24 [0x18])) [0 display_2(D)->gameBoard+0 S4 A32])) src/gui.c:307 -1
     (nil))

(insn 48 47 49 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 65 [ D.6390 ])) src/gui.c:307 -1
     (nil))

(insn 49 48 50 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 66 [ D.6391 ])) src/gui.c:307 -1
     (nil))

(insn 50 49 51 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:307 -1
     (nil))

(insn 51 50 52 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 67 [ D.6392 ])) src/gui.c:307 -1
     (nil))

(call_insn 52 51 53 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:307 -1
     (nil)
    (nil))

(insn 53 52 54 3 (set (reg/f:SI 88)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:310 -1
     (nil))

(insn 54 53 55 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 88)) src/gui.c:310 -1
     (nil))

(insn 55 54 56 3 (set (reg/f:SI 89)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:310 -1
     (nil))

(insn 56 55 57 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 89)) src/gui.c:310 -1
     (nil))

(insn 57 56 58 3 (set (reg/f:SI 90)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:310 -1
     (nil))

(insn 58 57 59 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 90)) src/gui.c:310 -1
     (nil))

(call_insn 59 58 60 3 (call (mem:QI (symbol_ref:SI ("Display_Checkers") [flags 0x3]  <function_decl 0x4081a000 Display_Checkers>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:310 -1
     (nil)
    (nil))

(insn 60 59 61 3 (set (reg/f:SI 91)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:311 -1
     (nil))

(insn 61 60 62 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 91)) src/gui.c:311 -1
     (nil))

(insn 62 61 63 3 (set (reg/f:SI 92)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:311 -1
     (nil))

(insn 63 62 64 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 92)) src/gui.c:311 -1
     (nil))

(insn 64 63 65 3 (set (reg/f:SI 93)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:311 -1
     (nil))

(insn 65 64 66 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 93)) src/gui.c:311 -1
     (nil))

(call_insn 66 65 67 3 (call (mem:QI (symbol_ref:SI ("Display_DrawOut") [flags 0x3]  <function_decl 0x4081a880 Display_DrawOut>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:311 -1
     (nil)
    (nil))

(insn 67 66 68 3 (set (reg/f:SI 94)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:312 -1
     (nil))

(insn 68 67 69 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 94)) src/gui.c:312 -1
     (nil))

(insn 69 68 70 3 (set (reg/f:SI 95)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:312 -1
     (nil))

(insn 70 69 71 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 95)) src/gui.c:312 -1
     (nil))

(insn 71 70 72 3 (set (reg/f:SI 96)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:312 -1
     (nil))

(insn 72 71 73 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 96)) src/gui.c:312 -1
     (nil))

(call_insn 73 72 74 3 (call (mem:QI (symbol_ref:SI ("Display_DrawBar") [flags 0x3]  <function_decl 0x4081a900 Display_DrawBar>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:312 -1
     (nil)
    (nil))

(insn 74 73 75 3 (set (reg/f:SI 97)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:314 -1
     (nil))

(insn 75 74 76 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 97)) src/gui.c:314 -1
     (nil))

(insn 76 75 77 3 (set (reg/f:SI 98)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:314 -1
     (nil))

(insn 77 76 78 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 98)) src/gui.c:314 -1
     (nil))

(call_insn 78 77 79 3 (call (mem:QI (symbol_ref:SI ("Display_Die") [flags 0x3]  <function_decl 0x4081a080 Display_Die>) [0 S1 A8])
        (const_int 8 [0x8])) src/gui.c:314 -1
     (nil)
    (nil))

(insn 79 78 80 3 (set (reg/f:SI 99)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:316 -1
     (nil))

(insn 80 79 81 3 (set (reg/f:SI 68 [ D.6393 ])
        (mem/s/f/j:SI (reg/f:SI 99) [0 display_2(D)->screen+0 S4 A32])) src/gui.c:316 -1
     (nil))

(insn 81 80 82 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 68 [ D.6393 ])) src/gui.c:316 -1
     (nil))

(call_insn 82 81 83 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_Flip") [flags 0x41]  <function_decl 0x4079fa00 SDL_Flip>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:316 -1
     (nil)
    (nil))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(code_label 83 82 84 4 31 "" [0 uses])

(note 84 83 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Display_Score (Display_Score)

Display_Score (struct SDisplay * display, struct SGameState * gameState, struct SGame * game)
{
  struct SDL_Color c;
  char * scoreP2;
  char * scoreP1;
  struct SDL_Rect pos;
  char * D.6383;
  char * D.6382;
  const char * restrict D.6381;
  unsigned int D.6380;
  const char * restrict D.6379;
  unsigned int D.6378;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  scoreP1_1 = malloc (3);
  scoreP2_2 = malloc (3);
  c.r = 255;
  c.g = 255;
  c.b = 255;
  c.unused = 0;
  D.6378_4 = gameState_3(D)->score;
  D.6379_5 = (const char * restrict) &"%d"[0];
  sprintf (scoreP1_1, D.6379_5, D.6378_4);
  D.6380_6 = gameState_3(D)->scoreP2;
  D.6381_7 = (const char * restrict) &"%d"[0];
  sprintf (scoreP2_2, D.6381_7, D.6380_6);
  pos.x = 108;
  pos.y = 40;
  D.6382_9 = game_8(D)->player1_name;
  Display_Message (display_10(D), D.6382_9, pos, c, 0);
  pos.x = 310;
  Display_Message (display_10(D), scoreP1_1, pos, c, 0);
  pos.y = 85;
  Display_Message (display_10(D), scoreP2_2, pos, c, 0);
  pos.x = 108;
  D.6383_11 = game_8(D)->player2_name;
  Display_Message (display_10(D), D.6383_11, pos, c, 0);
  free (scoreP1_1);
  free (scoreP2_2);
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (scoreP1_1 - 1 )
Partition 2 (scoreP2_2 - 2 )
Partition 3 (gameState_3(D) - 3 )
Partition 4 (D.6378_4 - 4 )
Partition 5 (D.6379_5 - 5 )
Partition 6 (D.6380_6 - 6 )
Partition 7 (D.6381_7 - 7 )
Partition 8 (game_8(D) - 8 )
Partition 9 (D.6382_9 - 9 )
Partition 10 (display_10(D) - 10 )
Partition 11 (D.6383_11 - 11 )


Partition map 

Partition 0 (gameState_3(D) - 3 )
Partition 1 (game_8(D) - 8 )
Partition 2 (display_10(D) - 10 )


Live on entry to BB2 : gameState_3(D)  game_8(D)  display_10(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (gameState_3(D) - 3 )
Partition 1 (game_8(D) - 8 )
Partition 2 (display_10(D) - 10 )

After Coalescing:

Partition map 

Partition 0 (scoreP1_1 - 1 )
Partition 1 (scoreP2_2 - 2 )
Partition 2 (gameState_3(D) - 3 )
Partition 3 (D.6378_4 - 4 )
Partition 4 (D.6379_5 - 5 )
Partition 5 (D.6380_6 - 6 )
Partition 6 (D.6381_7 - 7 )
Partition 7 (game_8(D) - 8 )
Partition 8 (D.6382_9 - 9 )
Partition 9 (display_10(D) - 10 )
Partition 10 (D.6383_11 - 11 )

Display_Score (struct SDisplay * display, struct SGameState * gameState, struct SGame * game)
{
  struct SDL_Color c;
  char * scoreP2;
  char * scoreP1;
  struct SDL_Rect pos;
  char * D.6383;
  char * D.6382;
  const char * restrict D.6381;
  unsigned int D.6380;
  const char * restrict D.6379;
  unsigned int D.6378;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  scoreP1_1 = malloc (3);
  scoreP2_2 = malloc (3);
  c.r = 255;
  c.g = 255;
  c.b = 255;
  c.unused = 0;
  D.6378_4 = gameState_3(D)->score;
  D.6379_5 = (const char * restrict) &"%d"[0];
  sprintf (scoreP1_1, D.6379_5, D.6378_4);
  D.6380_6 = gameState_3(D)->scoreP2;
  D.6381_7 = (const char * restrict) &"%d"[0];
  sprintf (scoreP2_2, D.6381_7, D.6380_6);
  pos.x = 108;
  pos.y = 40;
  D.6382_9 = game_8(D)->player1_name;
  Display_Message (display_10(D), D.6382_9, pos, c, 0);
  pos.x = 310;
  Display_Message (display_10(D), scoreP1_1, pos, c, 0);
  pos.y = 85;
  Display_Message (display_10(D), scoreP2_2, pos, c, 0);
  pos.x = 108;
  D.6383_11 = game_8(D)->player2_name;
  Display_Message (display_10(D), D.6383_11, pos, c, 0);
  free (scoreP1_1);
  free (scoreP2_2);
  return;
  # SUCC: EXIT

}


Partition 3: size 4 align 1
	c, offset 0
Partition 1: size 4 align 4
	scoreP2_2, offset 0
Partition 0: size 4 align 4
	scoreP1_1, offset 0
Partition 2: size 8 align 2
	pos, offset 0

;; Generating RTL for gimple basic block 2

;; scoreP1_1 = malloc (3);

(insn 5 4 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 3 [0x3])) src/gui.c:322 -1
     (nil))

(call_insn 6 5 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:322 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 7 6 8 (set (reg/f:SI 65)
        (reg:SI 0 ax)) src/gui.c:322 -1
     (expr_list:REG_NOALIAS (reg/f:SI 65)
        (nil)))

(insn 8 7 0 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 scoreP1+0 S4 A32])
        (reg/f:SI 65)) src/gui.c:322 -1
     (nil))

;; scoreP2_2 = malloc (3);

(insn 9 8 10 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 3 [0x3])) src/gui.c:323 -1
     (nil))

(call_insn 10 9 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:323 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 11 10 12 (set (reg/f:SI 66)
        (reg:SI 0 ax)) src/gui.c:323 -1
     (expr_list:REG_NOALIAS (reg/f:SI 66)
        (nil)))

(insn 12 11 0 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 scoreP2+0 S4 A32])
        (reg/f:SI 66)) src/gui.c:323 -1
     (nil))

;; c.r = 255;

(insn 13 12 0 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c.r+0 S1 A32])
        (const_int -1 [0xffffffffffffffff])) src/gui.c:324 -1
     (nil))

;; c.g = 255;

(insn 14 13 0 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -3 [0xfffffffffffffffd])) [0 c.g+0 S1 A8])
        (const_int -1 [0xffffffffffffffff])) src/gui.c:324 -1
     (nil))

;; c.b = 255;

(insn 15 14 0 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 c.b+0 S1 A16])
        (const_int -1 [0xffffffffffffffff])) src/gui.c:324 -1
     (nil))

;; c.unused = 0;

(insn 16 15 0 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 c.unused+0 S1 A8])
        (const_int 0 [0])) src/gui.c:324 -1
     (nil))

;; D.6378_4 = gameState_3(D)->score;

(insn 17 16 18 (set (reg/f:SI 67)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:326 -1
     (nil))

(insn 18 17 0 (set (reg:SI 59 [ D.6378 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 67)
                (const_int 232 [0xe8])) [0 gameState_3(D)->score+0 S4 A32])) src/gui.c:326 -1
     (nil))

;; D.6379_5 = (const char * restrict) &"%d"[0];

(insn 19 18 0 (set (reg/f:SI 60 [ D.6379 ])
        (symbol_ref/f:SI ("*.LC20") [flags 0x2]  <var_decl 0x408fdea0 *.LC20>)) src/gui.c:326 -1
     (nil))

;; sprintf (scoreP1_1, D.6379_5, D.6378_4);

(insn 20 19 21 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 59 [ D.6378 ])) src/gui.c:326 -1
     (nil))

(insn 21 20 22 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 60 [ D.6379 ])) src/gui.c:326 -1
     (nil))

(insn 22 21 23 (set (reg/f:SI 68)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 scoreP1+0 S4 A32])) src/gui.c:326 -1
     (nil))

(insn 23 22 24 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 68)) src/gui.c:326 -1
     (nil))

(call_insn 24 23 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 0x406b4200 sprintf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:326 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6380_6 = gameState_3(D)->scoreP2;

(insn 25 24 26 (set (reg/f:SI 69)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:327 -1
     (nil))

(insn 26 25 0 (set (reg:SI 61 [ D.6380 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 69)
                (const_int 236 [0xec])) [0 gameState_3(D)->scoreP2+0 S4 A32])) src/gui.c:327 -1
     (nil))

;; D.6381_7 = (const char * restrict) &"%d"[0];

(insn 27 26 0 (set (reg/f:SI 62 [ D.6381 ])
        (symbol_ref/f:SI ("*.LC20") [flags 0x2]  <var_decl 0x408fdea0 *.LC20>)) src/gui.c:327 -1
     (nil))

;; sprintf (scoreP2_2, D.6381_7, D.6380_6);

(insn 28 27 29 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 61 [ D.6380 ])) src/gui.c:327 -1
     (nil))

(insn 29 28 30 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 62 [ D.6381 ])) src/gui.c:327 -1
     (nil))

(insn 30 29 31 (set (reg/f:SI 70)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 scoreP2+0 S4 A32])) src/gui.c:327 -1
     (nil))

(insn 31 30 32 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 70)) src/gui.c:327 -1
     (nil))

(call_insn 32 31 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 0x406b4200 sprintf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:327 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; pos.x = 108;

(insn 33 32 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pos.x+0 S2 A32])
        (const_int 108 [0x6c])) src/gui.c:329 -1
     (nil))

;; pos.y = 40;

(insn 34 33 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -18 [0xffffffffffffffee])) [0 pos.y+0 S2 A16])
        (const_int 40 [0x28])) src/gui.c:330 -1
     (nil))

;; D.6382_9 = game_8(D)->player1_name;

(insn 35 34 36 (set (reg/f:SI 71)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:331 -1
     (nil))

(insn 36 35 0 (set (reg/f:SI 63 [ D.6382 ])
        (mem/s/f/j:SI (reg/f:SI 71) [0 game_8(D)->player1_name+0 S4 A32])) src/gui.c:331 -1
     (nil))

;; Display_Message (display_10(D), D.6382_9, pos, c, 0);

(insn 37 36 38 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:331 -1
     (nil))

(insn 38 37 39 (set (reg:SI 72)
        (mem/s/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])) src/gui.c:331 -1
     (nil))

(insn 39 38 40 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 72)) src/gui.c:331 -1
     (nil))

(insn 40 39 41 (set (reg:DI 73)
        (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pos+0 S8 A32])) src/gui.c:331 -1
     (nil))

(insn 41 40 42 (set (mem:DI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S8 A32])
        (reg:DI 73)) src/gui.c:331 -1
     (nil))

(insn 42 41 43 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 63 [ D.6382 ])) src/gui.c:331 -1
     (nil))

(insn 43 42 44 (set (reg/f:SI 74)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:331 -1
     (nil))

(insn 44 43 45 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 74)) src/gui.c:331 -1
     (nil))

(call_insn 45 44 0 (call (mem:QI (symbol_ref:SI ("Display_Message") [flags 0x3]  <function_decl 0x4081a380 Display_Message>) [0 S1 A8])
        (const_int 24 [0x18])) src/gui.c:331 -1
     (nil)
    (nil))

;; pos.x = 310;

(insn 46 45 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pos.x+0 S2 A32])
        (const_int 310 [0x136])) src/gui.c:332 -1
     (nil))

;; Display_Message (display_10(D), scoreP1_1, pos, c, 0);

(insn 47 46 48 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:333 -1
     (nil))

(insn 48 47 49 (set (reg:SI 75)
        (mem/s/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])) src/gui.c:333 -1
     (nil))

(insn 49 48 50 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 75)) src/gui.c:333 -1
     (nil))

(insn 50 49 51 (set (reg:DI 76)
        (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pos+0 S8 A32])) src/gui.c:333 -1
     (nil))

(insn 51 50 52 (set (mem:DI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S8 A32])
        (reg:DI 76)) src/gui.c:333 -1
     (nil))

(insn 52 51 53 (set (reg/f:SI 77)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 scoreP1+0 S4 A32])) src/gui.c:333 -1
     (nil))

(insn 53 52 54 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 77)) src/gui.c:333 -1
     (nil))

(insn 54 53 55 (set (reg/f:SI 78)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:333 -1
     (nil))

(insn 55 54 56 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 78)) src/gui.c:333 -1
     (nil))

(call_insn 56 55 0 (call (mem:QI (symbol_ref:SI ("Display_Message") [flags 0x3]  <function_decl 0x4081a380 Display_Message>) [0 S1 A8])
        (const_int 24 [0x18])) src/gui.c:333 -1
     (nil)
    (nil))

;; pos.y = 85;

(insn 57 56 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -18 [0xffffffffffffffee])) [0 pos.y+0 S2 A16])
        (const_int 85 [0x55])) src/gui.c:334 -1
     (nil))

;; Display_Message (display_10(D), scoreP2_2, pos, c, 0);

(insn 58 57 59 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:335 -1
     (nil))

(insn 59 58 60 (set (reg:SI 79)
        (mem/s/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])) src/gui.c:335 -1
     (nil))

(insn 60 59 61 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 79)) src/gui.c:335 -1
     (nil))

(insn 61 60 62 (set (reg:DI 80)
        (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pos+0 S8 A32])) src/gui.c:335 -1
     (nil))

(insn 62 61 63 (set (mem:DI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S8 A32])
        (reg:DI 80)) src/gui.c:335 -1
     (nil))

(insn 63 62 64 (set (reg/f:SI 81)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 scoreP2+0 S4 A32])) src/gui.c:335 -1
     (nil))

(insn 64 63 65 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 81)) src/gui.c:335 -1
     (nil))

(insn 65 64 66 (set (reg/f:SI 82)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:335 -1
     (nil))

(insn 66 65 67 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 82)) src/gui.c:335 -1
     (nil))

(call_insn 67 66 0 (call (mem:QI (symbol_ref:SI ("Display_Message") [flags 0x3]  <function_decl 0x4081a380 Display_Message>) [0 S1 A8])
        (const_int 24 [0x18])) src/gui.c:335 -1
     (nil)
    (nil))

;; pos.x = 108;

(insn 68 67 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pos.x+0 S2 A32])
        (const_int 108 [0x6c])) src/gui.c:336 -1
     (nil))

;; D.6383_11 = game_8(D)->player2_name;

(insn 69 68 70 (set (reg/f:SI 83)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:337 -1
     (nil))

(insn 70 69 0 (set (reg/f:SI 64 [ D.6383 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 83)
                (const_int 4 [0x4])) [0 game_8(D)->player2_name+0 S4 A32])) src/gui.c:337 -1
     (nil))

;; Display_Message (display_10(D), D.6383_11, pos, c, 0);

(insn 71 70 72 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:337 -1
     (nil))

(insn 72 71 73 (set (reg:SI 84)
        (mem/s/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])) src/gui.c:337 -1
     (nil))

(insn 73 72 74 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 84)) src/gui.c:337 -1
     (nil))

(insn 74 73 75 (set (reg:DI 85)
        (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pos+0 S8 A32])) src/gui.c:337 -1
     (nil))

(insn 75 74 76 (set (mem:DI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S8 A32])
        (reg:DI 85)) src/gui.c:337 -1
     (nil))

(insn 76 75 77 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 64 [ D.6383 ])) src/gui.c:337 -1
     (nil))

(insn 77 76 78 (set (reg/f:SI 86)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:337 -1
     (nil))

(insn 78 77 79 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 86)) src/gui.c:337 -1
     (nil))

(call_insn 79 78 0 (call (mem:QI (symbol_ref:SI ("Display_Message") [flags 0x3]  <function_decl 0x4081a380 Display_Message>) [0 S1 A8])
        (const_int 24 [0x18])) src/gui.c:337 -1
     (nil)
    (nil))

;; free (scoreP1_1);

(insn 80 79 81 (set (reg/f:SI 87)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 scoreP1+0 S4 A32])) src/gui.c:339 -1
     (nil))

(insn 81 80 82 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 87)) src/gui.c:339 -1
     (nil))

(call_insn 82 81 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:339 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; free (scoreP2_2);

(insn 83 82 84 (set (reg/f:SI 88)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 scoreP2+0 S4 A32])) src/gui.c:340 -1
     (nil))

(insn 84 83 85 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 88)) src/gui.c:340 -1
     (nil))

(call_insn 85 84 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:340 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 3 [0x3])) src/gui.c:322 -1
     (nil))

(call_insn 6 5 7 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:322 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 7 6 8 3 (set (reg/f:SI 65)
        (reg:SI 0 ax)) src/gui.c:322 -1
     (expr_list:REG_NOALIAS (reg/f:SI 65)
        (nil)))

(insn 8 7 9 3 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 scoreP1+0 S4 A32])
        (reg/f:SI 65)) src/gui.c:322 -1
     (nil))

(insn 9 8 10 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 3 [0x3])) src/gui.c:323 -1
     (nil))

(call_insn 10 9 11 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:323 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 11 10 12 3 (set (reg/f:SI 66)
        (reg:SI 0 ax)) src/gui.c:323 -1
     (expr_list:REG_NOALIAS (reg/f:SI 66)
        (nil)))

(insn 12 11 13 3 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 scoreP2+0 S4 A32])
        (reg/f:SI 66)) src/gui.c:323 -1
     (nil))

(insn 13 12 14 3 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c.r+0 S1 A32])
        (const_int -1 [0xffffffffffffffff])) src/gui.c:324 -1
     (nil))

(insn 14 13 15 3 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -3 [0xfffffffffffffffd])) [0 c.g+0 S1 A8])
        (const_int -1 [0xffffffffffffffff])) src/gui.c:324 -1
     (nil))

(insn 15 14 16 3 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 c.b+0 S1 A16])
        (const_int -1 [0xffffffffffffffff])) src/gui.c:324 -1
     (nil))

(insn 16 15 17 3 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 c.unused+0 S1 A8])
        (const_int 0 [0])) src/gui.c:324 -1
     (nil))

(insn 17 16 18 3 (set (reg/f:SI 67)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:326 -1
     (nil))

(insn 18 17 19 3 (set (reg:SI 59 [ D.6378 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 67)
                (const_int 232 [0xe8])) [0 gameState_3(D)->score+0 S4 A32])) src/gui.c:326 -1
     (nil))

(insn 19 18 20 3 (set (reg/f:SI 60 [ D.6379 ])
        (symbol_ref/f:SI ("*.LC20") [flags 0x2]  <var_decl 0x408fdea0 *.LC20>)) src/gui.c:326 -1
     (nil))

(insn 20 19 21 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 59 [ D.6378 ])) src/gui.c:326 -1
     (nil))

(insn 21 20 22 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 60 [ D.6379 ])) src/gui.c:326 -1
     (nil))

(insn 22 21 23 3 (set (reg/f:SI 68)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 scoreP1+0 S4 A32])) src/gui.c:326 -1
     (nil))

(insn 23 22 24 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 68)) src/gui.c:326 -1
     (nil))

(call_insn 24 23 25 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 0x406b4200 sprintf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:326 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 25 24 26 3 (set (reg/f:SI 69)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:327 -1
     (nil))

(insn 26 25 27 3 (set (reg:SI 61 [ D.6380 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 69)
                (const_int 236 [0xec])) [0 gameState_3(D)->scoreP2+0 S4 A32])) src/gui.c:327 -1
     (nil))

(insn 27 26 28 3 (set (reg/f:SI 62 [ D.6381 ])
        (symbol_ref/f:SI ("*.LC20") [flags 0x2]  <var_decl 0x408fdea0 *.LC20>)) src/gui.c:327 -1
     (nil))

(insn 28 27 29 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 61 [ D.6380 ])) src/gui.c:327 -1
     (nil))

(insn 29 28 30 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 62 [ D.6381 ])) src/gui.c:327 -1
     (nil))

(insn 30 29 31 3 (set (reg/f:SI 70)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 scoreP2+0 S4 A32])) src/gui.c:327 -1
     (nil))

(insn 31 30 32 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 70)) src/gui.c:327 -1
     (nil))

(call_insn 32 31 33 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 0x406b4200 sprintf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:327 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 33 32 34 3 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pos.x+0 S2 A32])
        (const_int 108 [0x6c])) src/gui.c:329 -1
     (nil))

(insn 34 33 35 3 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -18 [0xffffffffffffffee])) [0 pos.y+0 S2 A16])
        (const_int 40 [0x28])) src/gui.c:330 -1
     (nil))

(insn 35 34 36 3 (set (reg/f:SI 71)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:331 -1
     (nil))

(insn 36 35 37 3 (set (reg/f:SI 63 [ D.6382 ])
        (mem/s/f/j:SI (reg/f:SI 71) [0 game_8(D)->player1_name+0 S4 A32])) src/gui.c:331 -1
     (nil))

(insn 37 36 38 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:331 -1
     (nil))

(insn 38 37 39 3 (set (reg:SI 72)
        (mem/s/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])) src/gui.c:331 -1
     (nil))

(insn 39 38 40 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 72)) src/gui.c:331 -1
     (nil))

(insn 40 39 41 3 (set (reg:DI 73)
        (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pos+0 S8 A32])) src/gui.c:331 -1
     (nil))

(insn 41 40 42 3 (set (mem:DI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S8 A32])
        (reg:DI 73)) src/gui.c:331 -1
     (nil))

(insn 42 41 43 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 63 [ D.6382 ])) src/gui.c:331 -1
     (nil))

(insn 43 42 44 3 (set (reg/f:SI 74)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:331 -1
     (nil))

(insn 44 43 45 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 74)) src/gui.c:331 -1
     (nil))

(call_insn 45 44 46 3 (call (mem:QI (symbol_ref:SI ("Display_Message") [flags 0x3]  <function_decl 0x4081a380 Display_Message>) [0 S1 A8])
        (const_int 24 [0x18])) src/gui.c:331 -1
     (nil)
    (nil))

(insn 46 45 47 3 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pos.x+0 S2 A32])
        (const_int 310 [0x136])) src/gui.c:332 -1
     (nil))

(insn 47 46 48 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:333 -1
     (nil))

(insn 48 47 49 3 (set (reg:SI 75)
        (mem/s/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])) src/gui.c:333 -1
     (nil))

(insn 49 48 50 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 75)) src/gui.c:333 -1
     (nil))

(insn 50 49 51 3 (set (reg:DI 76)
        (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pos+0 S8 A32])) src/gui.c:333 -1
     (nil))

(insn 51 50 52 3 (set (mem:DI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S8 A32])
        (reg:DI 76)) src/gui.c:333 -1
     (nil))

(insn 52 51 53 3 (set (reg/f:SI 77)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 scoreP1+0 S4 A32])) src/gui.c:333 -1
     (nil))

(insn 53 52 54 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 77)) src/gui.c:333 -1
     (nil))

(insn 54 53 55 3 (set (reg/f:SI 78)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:333 -1
     (nil))

(insn 55 54 56 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 78)) src/gui.c:333 -1
     (nil))

(call_insn 56 55 57 3 (call (mem:QI (symbol_ref:SI ("Display_Message") [flags 0x3]  <function_decl 0x4081a380 Display_Message>) [0 S1 A8])
        (const_int 24 [0x18])) src/gui.c:333 -1
     (nil)
    (nil))

(insn 57 56 58 3 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -18 [0xffffffffffffffee])) [0 pos.y+0 S2 A16])
        (const_int 85 [0x55])) src/gui.c:334 -1
     (nil))

(insn 58 57 59 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:335 -1
     (nil))

(insn 59 58 60 3 (set (reg:SI 79)
        (mem/s/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])) src/gui.c:335 -1
     (nil))

(insn 60 59 61 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 79)) src/gui.c:335 -1
     (nil))

(insn 61 60 62 3 (set (reg:DI 80)
        (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pos+0 S8 A32])) src/gui.c:335 -1
     (nil))

(insn 62 61 63 3 (set (mem:DI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S8 A32])
        (reg:DI 80)) src/gui.c:335 -1
     (nil))

(insn 63 62 64 3 (set (reg/f:SI 81)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 scoreP2+0 S4 A32])) src/gui.c:335 -1
     (nil))

(insn 64 63 65 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 81)) src/gui.c:335 -1
     (nil))

(insn 65 64 66 3 (set (reg/f:SI 82)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:335 -1
     (nil))

(insn 66 65 67 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 82)) src/gui.c:335 -1
     (nil))

(call_insn 67 66 68 3 (call (mem:QI (symbol_ref:SI ("Display_Message") [flags 0x3]  <function_decl 0x4081a380 Display_Message>) [0 S1 A8])
        (const_int 24 [0x18])) src/gui.c:335 -1
     (nil)
    (nil))

(insn 68 67 69 3 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pos.x+0 S2 A32])
        (const_int 108 [0x6c])) src/gui.c:336 -1
     (nil))

(insn 69 68 70 3 (set (reg/f:SI 83)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:337 -1
     (nil))

(insn 70 69 71 3 (set (reg/f:SI 64 [ D.6383 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 83)
                (const_int 4 [0x4])) [0 game_8(D)->player2_name+0 S4 A32])) src/gui.c:337 -1
     (nil))

(insn 71 70 72 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:337 -1
     (nil))

(insn 72 71 73 3 (set (reg:SI 84)
        (mem/s/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S4 A32])) src/gui.c:337 -1
     (nil))

(insn 73 72 74 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 84)) src/gui.c:337 -1
     (nil))

(insn 74 73 75 3 (set (reg:DI 85)
        (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pos+0 S8 A32])) src/gui.c:337 -1
     (nil))

(insn 75 74 76 3 (set (mem:DI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S8 A32])
        (reg:DI 85)) src/gui.c:337 -1
     (nil))

(insn 76 75 77 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 64 [ D.6383 ])) src/gui.c:337 -1
     (nil))

(insn 77 76 78 3 (set (reg/f:SI 86)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:337 -1
     (nil))

(insn 78 77 79 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 86)) src/gui.c:337 -1
     (nil))

(call_insn 79 78 80 3 (call (mem:QI (symbol_ref:SI ("Display_Message") [flags 0x3]  <function_decl 0x4081a380 Display_Message>) [0 S1 A8])
        (const_int 24 [0x18])) src/gui.c:337 -1
     (nil)
    (nil))

(insn 80 79 81 3 (set (reg/f:SI 87)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 scoreP1+0 S4 A32])) src/gui.c:339 -1
     (nil))

(insn 81 80 82 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 87)) src/gui.c:339 -1
     (nil))

(call_insn 82 81 83 3 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:339 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 83 82 84 3 (set (reg/f:SI 88)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 scoreP2+0 S4 A32])) src/gui.c:340 -1
     (nil))

(insn 84 83 85 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 88)) src/gui.c:340 -1
     (nil))

(call_insn 85 84 86 3 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:340 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(code_label 86 85 87 4 32 "" [0 uses])

(note 87 86 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Display_Die (Display_Die)

Display_Die (struct SDisplay * display, struct SGameState * game)
{
  struct SDL_Rect new_pos;
  struct SDL_Surface * D.6377;
  unsigned int D.6376;
  unsigned int D.6375;
  struct SDL_Surface * D.6374;
  struct SDL_Rect * D.6373;
  struct SDL_Surface * D.6372;
  unsigned int D.6371;
  unsigned int D.6370;
  struct SDL_Surface * D.6369;
  struct SDL_Rect * D.6368;
  struct SDL_Surface * D.6366;
  unsigned int D.6365;
  unsigned int D.6364;
  struct SDL_Surface * D.6363;
  Sint16 D.6362;
  short unsigned int D.6361;
  short unsigned int D.6360;
  Sint16 D.6359;
  struct SDL_Surface * D.6358;
  unsigned int D.6357;
  unsigned int D.6356;
  struct SDL_Surface * D.6355;
  Sint16 D.6354;
  short unsigned int D.6353;
  short unsigned int D.6352;
  Sint16 D.6351;
  struct SDL_Surface * D.6350;
  unsigned int D.6349;
  unsigned int D.6348;
  struct SDL_Surface * D.6347;
  Sint16 D.6346;
  struct SDL_Surface * D.6345;
  unsigned int D.6344;
  unsigned int D.6343;
  struct SDL_Surface * D.6342;
  Sint16 D.6341;
  Sint16 D.6340;
  short unsigned int D.6339;
  short unsigned int D.6338;
  Sint16 D.6337;
  unsigned int D.6334;
  unsigned int D.6333;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.6333_2 = game_1(D)->die1;
  D.6334_3 = game_1(D)->die2;
  if (D.6333_2 == D.6334_3)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.6337_5 = display_4(D)->die1_position.x;
  D.6338_6 = (short unsigned int) D.6337_5;
  D.6339_7 = D.6338_6 + 65496;
  D.6340_8 = (Sint16) D.6339_7;
  new_pos.x = D.6340_8;
  D.6341_9 = display_4(D)->die1_position.y;
  new_pos.y = D.6341_9;
  D.6342_10 = display_4(D)->screen;
  D.6343_11 = game_1(D)->die1;
  D.6344_12 = D.6343_11 + 4294967295;
  D.6345_13 = display_4(D)->die[D.6344_12];
  SDL_UpperBlit (D.6345_13, 0B, D.6342_10, &new_pos);
  D.6346_14 = display_4(D)->die1_position.x;
  new_pos.x = D.6346_14;
  D.6347_15 = display_4(D)->screen;
  D.6348_16 = game_1(D)->die1;
  D.6349_17 = D.6348_16 + 4294967295;
  D.6350_18 = display_4(D)->die[D.6349_17];
  SDL_UpperBlit (D.6350_18, 0B, D.6347_15, &new_pos);
  D.6351_19 = display_4(D)->die1_position.x;
  D.6352_20 = (short unsigned int) D.6351_19;
  D.6353_21 = D.6352_20 + 40;
  D.6354_22 = (Sint16) D.6353_21;
  new_pos.x = D.6354_22;
  D.6355_23 = display_4(D)->screen;
  D.6356_24 = game_1(D)->die1;
  D.6357_25 = D.6356_24 + 4294967295;
  D.6358_26 = display_4(D)->die[D.6357_25];
  SDL_UpperBlit (D.6358_26, 0B, D.6355_23, &new_pos);
  D.6359_27 = display_4(D)->die1_position.x;
  D.6360_28 = (short unsigned int) D.6359_27;
  D.6361_29 = D.6360_28 + 80;
  D.6362_30 = (Sint16) D.6361_29;
  new_pos.x = D.6362_30;
  D.6363_31 = display_4(D)->screen;
  D.6364_32 = game_1(D)->die1;
  D.6365_33 = D.6364_32 + 4294967295;
  D.6366_34 = display_4(D)->die[D.6365_33];
  SDL_UpperBlit (D.6366_34, 0B, D.6363_31, &new_pos);
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  D.6368_35 = &display_4(D)->die1_position;
  D.6369_36 = display_4(D)->screen;
  D.6370_37 = game_1(D)->die1;
  D.6371_38 = D.6370_37 + 4294967295;
  D.6372_39 = display_4(D)->die[D.6371_38];
  SDL_UpperBlit (D.6372_39, 0B, D.6369_36, D.6368_35);
  D.6373_40 = &display_4(D)->die2_position;
  D.6374_41 = display_4(D)->screen;
  D.6375_42 = game_1(D)->die2;
  D.6376_43 = D.6375_42 + 4294967295;
  D.6377_44 = display_4(D)->die[D.6376_43];
  SDL_UpperBlit (D.6377_44, 0B, D.6374_41, D.6373_40);
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (game_1(D) - 1 )
Partition 2 (D.6333_2 - 2 )
Partition 3 (D.6334_3 - 3 )
Partition 4 (display_4(D) - 4 )
Partition 5 (D.6337_5 - 5 )
Partition 6 (D.6338_6 - 6 )
Partition 7 (D.6339_7 - 7 )
Partition 8 (D.6340_8 - 8 )
Partition 9 (D.6341_9 - 9 )
Partition 10 (D.6342_10 - 10 )
Partition 11 (D.6343_11 - 11 )
Partition 12 (D.6344_12 - 12 )
Partition 13 (D.6345_13 - 13 )
Partition 14 (D.6346_14 - 14 )
Partition 15 (D.6347_15 - 15 )
Partition 16 (D.6348_16 - 16 )
Partition 17 (D.6349_17 - 17 )
Partition 18 (D.6350_18 - 18 )
Partition 19 (D.6351_19 - 19 )
Partition 20 (D.6352_20 - 20 )
Partition 21 (D.6353_21 - 21 )
Partition 22 (D.6354_22 - 22 )
Partition 23 (D.6355_23 - 23 )
Partition 24 (D.6356_24 - 24 )
Partition 25 (D.6357_25 - 25 )
Partition 26 (D.6358_26 - 26 )
Partition 27 (D.6359_27 - 27 )
Partition 28 (D.6360_28 - 28 )
Partition 29 (D.6361_29 - 29 )
Partition 30 (D.6362_30 - 30 )
Partition 31 (D.6363_31 - 31 )
Partition 32 (D.6364_32 - 32 )
Partition 33 (D.6365_33 - 33 )
Partition 34 (D.6366_34 - 34 )
Partition 35 (D.6368_35 - 35 )
Partition 36 (D.6369_36 - 36 )
Partition 37 (D.6370_37 - 37 )
Partition 38 (D.6371_38 - 38 )
Partition 39 (D.6372_39 - 39 )
Partition 40 (D.6373_40 - 40 )
Partition 41 (D.6374_41 - 41 )
Partition 42 (D.6375_42 - 42 )
Partition 43 (D.6376_43 - 43 )
Partition 44 (D.6377_44 - 44 )


Partition map 

Partition 0 (game_1(D) - 1 )
Partition 1 (display_4(D) - 4 )


Live on entry to BB2 : game_1(D)  display_4(D)  

Live on entry to BB3 : game_1(D)  display_4(D)  

Live on entry to BB4 : game_1(D)  display_4(D)  

Live on entry to BB5 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (game_1(D) - 1 )
Partition 1 (display_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (game_1(D) - 1 )
Partition 1 (D.6333_2 - 2 )
Partition 2 (D.6334_3 - 3 )
Partition 3 (display_4(D) - 4 )
Partition 4 (D.6337_5 - 5 )
Partition 5 (D.6338_6 - 6 )
Partition 6 (D.6339_7 - 7 )
Partition 7 (D.6340_8 - 8 )
Partition 8 (D.6341_9 - 9 )
Partition 9 (D.6342_10 - 10 )
Partition 10 (D.6343_11 - 11 )
Partition 11 (D.6344_12 - 12 )
Partition 12 (D.6345_13 - 13 )
Partition 13 (D.6346_14 - 14 )
Partition 14 (D.6347_15 - 15 )
Partition 15 (D.6348_16 - 16 )
Partition 16 (D.6349_17 - 17 )
Partition 17 (D.6350_18 - 18 )
Partition 18 (D.6351_19 - 19 )
Partition 19 (D.6352_20 - 20 )
Partition 20 (D.6353_21 - 21 )
Partition 21 (D.6354_22 - 22 )
Partition 22 (D.6355_23 - 23 )
Partition 23 (D.6356_24 - 24 )
Partition 24 (D.6357_25 - 25 )
Partition 25 (D.6358_26 - 26 )
Partition 26 (D.6359_27 - 27 )
Partition 27 (D.6360_28 - 28 )
Partition 28 (D.6361_29 - 29 )
Partition 29 (D.6362_30 - 30 )
Partition 30 (D.6363_31 - 31 )
Partition 31 (D.6364_32 - 32 )
Partition 32 (D.6365_33 - 33 )
Partition 33 (D.6366_34 - 34 )
Partition 34 (D.6368_35 - 35 )
Partition 35 (D.6369_36 - 36 )
Partition 36 (D.6370_37 - 37 )
Partition 37 (D.6371_38 - 38 )
Partition 38 (D.6372_39 - 39 )
Partition 39 (D.6373_40 - 40 )
Partition 40 (D.6374_41 - 41 )
Partition 41 (D.6375_42 - 42 )
Partition 42 (D.6376_43 - 43 )
Partition 43 (D.6377_44 - 44 )

Display_Die (struct SDisplay * display, struct SGameState * game)
{
  struct SDL_Rect new_pos;
  struct SDL_Surface * D.6377;
  unsigned int D.6376;
  unsigned int D.6375;
  struct SDL_Surface * D.6374;
  struct SDL_Rect * D.6373;
  struct SDL_Surface * D.6372;
  unsigned int D.6371;
  unsigned int D.6370;
  struct SDL_Surface * D.6369;
  struct SDL_Rect * D.6368;
  struct SDL_Surface * D.6366;
  unsigned int D.6365;
  unsigned int D.6364;
  struct SDL_Surface * D.6363;
  Sint16 D.6362;
  short unsigned int D.6361;
  short unsigned int D.6360;
  Sint16 D.6359;
  struct SDL_Surface * D.6358;
  unsigned int D.6357;
  unsigned int D.6356;
  struct SDL_Surface * D.6355;
  Sint16 D.6354;
  short unsigned int D.6353;
  short unsigned int D.6352;
  Sint16 D.6351;
  struct SDL_Surface * D.6350;
  unsigned int D.6349;
  unsigned int D.6348;
  struct SDL_Surface * D.6347;
  Sint16 D.6346;
  struct SDL_Surface * D.6345;
  unsigned int D.6344;
  unsigned int D.6343;
  struct SDL_Surface * D.6342;
  Sint16 D.6341;
  Sint16 D.6340;
  short unsigned int D.6339;
  short unsigned int D.6338;
  Sint16 D.6337;
  unsigned int D.6334;
  unsigned int D.6333;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.6333_2 = game_1(D)->die1;
  D.6334_3 = game_1(D)->die2;
  if (D.6333_2 == D.6334_3)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.6337_5 = display_4(D)->die1_position.x;
  D.6338_6 = (short unsigned int) D.6337_5;
  D.6339_7 = D.6338_6 + 65496;
  D.6340_8 = (Sint16) D.6339_7;
  new_pos.x = D.6340_8;
  D.6341_9 = display_4(D)->die1_position.y;
  new_pos.y = D.6341_9;
  D.6342_10 = display_4(D)->screen;
  D.6343_11 = game_1(D)->die1;
  D.6344_12 = D.6343_11 + 4294967295;
  D.6345_13 = display_4(D)->die[D.6344_12];
  SDL_UpperBlit (D.6345_13, 0B, D.6342_10, &new_pos);
  D.6346_14 = display_4(D)->die1_position.x;
  new_pos.x = D.6346_14;
  D.6347_15 = display_4(D)->screen;
  D.6348_16 = game_1(D)->die1;
  D.6349_17 = D.6348_16 + 4294967295;
  D.6350_18 = display_4(D)->die[D.6349_17];
  SDL_UpperBlit (D.6350_18, 0B, D.6347_15, &new_pos);
  D.6351_19 = display_4(D)->die1_position.x;
  D.6352_20 = (short unsigned int) D.6351_19;
  D.6353_21 = D.6352_20 + 40;
  D.6354_22 = (Sint16) D.6353_21;
  new_pos.x = D.6354_22;
  D.6355_23 = display_4(D)->screen;
  D.6356_24 = game_1(D)->die1;
  D.6357_25 = D.6356_24 + 4294967295;
  D.6358_26 = display_4(D)->die[D.6357_25];
  SDL_UpperBlit (D.6358_26, 0B, D.6355_23, &new_pos);
  D.6359_27 = display_4(D)->die1_position.x;
  D.6360_28 = (short unsigned int) D.6359_27;
  D.6361_29 = D.6360_28 + 80;
  D.6362_30 = (Sint16) D.6361_29;
  new_pos.x = D.6362_30;
  D.6363_31 = display_4(D)->screen;
  D.6364_32 = game_1(D)->die1;
  D.6365_33 = D.6364_32 + 4294967295;
  D.6366_34 = display_4(D)->die[D.6365_33];
  SDL_UpperBlit (D.6366_34, 0B, D.6363_31, &new_pos);
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  D.6368_35 = &display_4(D)->die1_position;
  D.6369_36 = display_4(D)->screen;
  D.6370_37 = game_1(D)->die1;
  D.6371_38 = D.6370_37 + 4294967295;
  D.6372_39 = display_4(D)->die[D.6371_38];
  SDL_UpperBlit (D.6372_39, 0B, D.6369_36, D.6368_35);
  D.6373_40 = &display_4(D)->die2_position;
  D.6374_41 = display_4(D)->screen;
  D.6375_42 = game_1(D)->die2;
  D.6376_43 = D.6375_42 + 4294967295;
  D.6377_44 = display_4(D)->die[D.6376_43];
  SDL_UpperBlit (D.6377_44, 0B, D.6374_41, D.6373_40);
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  return;
  # SUCC: EXIT

}


Partition 0: size 8 align 2
	new_pos, offset 0

;; Generating RTL for gimple basic block 2

;; D.6333_2 = game_1(D)->die1;

(insn 5 4 6 (set (reg/f:SI 101)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:348 -1
     (nil))

(insn 6 5 0 (set (reg:SI 59 [ D.6333 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 101)
                (const_int 224 [0xe0])) [0 game_1(D)->die1+0 S4 A32])) src/gui.c:348 -1
     (nil))

;; D.6334_3 = game_1(D)->die2;

(insn 7 6 8 (set (reg/f:SI 102)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:348 -1
     (nil))

(insn 8 7 0 (set (reg:SI 60 [ D.6334 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 102)
                (const_int 228 [0xe4])) [0 game_1(D)->die2+0 S4 A32])) src/gui.c:348 -1
     (nil))

;; if (D.6333_2 == D.6334_3)

(insn 9 8 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.6333 ])
            (reg:SI 60 [ D.6334 ]))) src/gui.c:348 -1
     (nil))

(jump_insn 10 9 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:348 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; D.6337_5 = display_4(D)->die1_position.x;

(insn 12 11 13 (set (reg/f:SI 103)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:350 -1
     (nil))

(insn 13 12 0 (set (reg:HI 61 [ D.6337 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 103)
                (const_int 88 [0x58])) [0 display_4(D)->die1_position.x+0 S2 A32])) src/gui.c:350 -1
     (nil))

;; D.6338_6 = (short unsigned int) D.6337_5;

(insn 14 13 0 (set (reg:HI 62 [ D.6338 ])
        (reg:HI 61 [ D.6337 ])) src/gui.c:350 -1
     (nil))

;; D.6339_7 = D.6338_6 + 65496;

(insn 15 14 0 (parallel [
            (set (reg:HI 63 [ D.6339 ])
                (plus:HI (reg:HI 62 [ D.6338 ])
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:350 -1
     (nil))

;; D.6340_8 = (Sint16) D.6339_7;

(insn 16 15 0 (set (reg:HI 64 [ D.6340 ])
        (reg:HI 63 [ D.6339 ])) src/gui.c:350 -1
     (nil))

;; new_pos.x = D.6340_8;

(insn 17 16 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 new_pos.x+0 S2 A32])
        (reg:HI 64 [ D.6340 ])) src/gui.c:350 -1
     (nil))

;; D.6341_9 = display_4(D)->die1_position.y;

(insn 18 17 19 (set (reg/f:SI 104)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:351 -1
     (nil))

(insn 19 18 0 (set (reg:HI 65 [ D.6341 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 104)
                (const_int 90 [0x5a])) [0 display_4(D)->die1_position.y+0 S2 A16])) src/gui.c:351 -1
     (nil))

;; new_pos.y = D.6341_9;

(insn 20 19 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 new_pos.y+0 S2 A16])
        (reg:HI 65 [ D.6341 ])) src/gui.c:351 -1
     (nil))

;; D.6342_10 = display_4(D)->screen;

(insn 21 20 22 (set (reg/f:SI 105)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:352 -1
     (nil))

(insn 22 21 0 (set (reg/f:SI 66 [ D.6342 ])
        (mem/s/f/j:SI (reg/f:SI 105) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:352 -1
     (nil))

;; D.6343_11 = game_1(D)->die1;

(insn 23 22 24 (set (reg/f:SI 106)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:352 -1
     (nil))

(insn 24 23 0 (set (reg:SI 67 [ D.6343 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 106)
                (const_int 224 [0xe0])) [0 game_1(D)->die1+0 S4 A32])) src/gui.c:352 -1
     (nil))

;; D.6344_12 = D.6343_11 + 4294967295;

(insn 25 24 0 (parallel [
            (set (reg:SI 68 [ D.6344 ])
                (plus:SI (reg:SI 67 [ D.6343 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:352 -1
     (nil))

;; D.6345_13 = display_4(D)->die[D.6344_12];

(insn 26 25 27 (set (reg/f:SI 107)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:352 -1
     (nil))

(insn 27 26 28 (parallel [
            (set (reg:SI 108)
                (plus:SI (reg:SI 68 [ D.6344 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:352 -1
     (nil))

(insn 28 27 0 (set (reg/f:SI 69 [ D.6345 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 108)
                    (const_int 4 [0x4]))
                (reg/f:SI 107)) [0 display_4(D)->die S4 A32])) src/gui.c:352 -1
     (nil))

;; SDL_UpperBlit (D.6345_13, 0B, D.6342_10, &new_pos);

(insn 29 28 30 (parallel [
            (set (reg:SI 109)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:352 -1
     (nil))

(insn 30 29 31 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 109)) src/gui.c:352 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 31 30 32 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 66 [ D.6342 ])) src/gui.c:352 -1
     (nil))

(insn 32 31 33 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:352 -1
     (nil))

(insn 33 32 34 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 69 [ D.6345 ])) src/gui.c:352 -1
     (nil))

(call_insn 34 33 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:352 -1
     (nil)
    (nil))

;; D.6346_14 = display_4(D)->die1_position.x;

(insn 35 34 36 (set (reg/f:SI 110)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:353 -1
     (nil))

(insn 36 35 0 (set (reg:HI 70 [ D.6346 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 110)
                (const_int 88 [0x58])) [0 display_4(D)->die1_position.x+0 S2 A32])) src/gui.c:353 -1
     (nil))

;; new_pos.x = D.6346_14;

(insn 37 36 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 new_pos.x+0 S2 A32])
        (reg:HI 70 [ D.6346 ])) src/gui.c:353 -1
     (nil))

;; D.6347_15 = display_4(D)->screen;

(insn 38 37 39 (set (reg/f:SI 111)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:354 -1
     (nil))

(insn 39 38 0 (set (reg/f:SI 71 [ D.6347 ])
        (mem/s/f/j:SI (reg/f:SI 111) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:354 -1
     (nil))

;; D.6348_16 = game_1(D)->die1;

(insn 40 39 41 (set (reg/f:SI 112)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:354 -1
     (nil))

(insn 41 40 0 (set (reg:SI 72 [ D.6348 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 112)
                (const_int 224 [0xe0])) [0 game_1(D)->die1+0 S4 A32])) src/gui.c:354 -1
     (nil))

;; D.6349_17 = D.6348_16 + 4294967295;

(insn 42 41 0 (parallel [
            (set (reg:SI 73 [ D.6349 ])
                (plus:SI (reg:SI 72 [ D.6348 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:354 -1
     (nil))

;; D.6350_18 = display_4(D)->die[D.6349_17];

(insn 43 42 44 (set (reg/f:SI 113)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:354 -1
     (nil))

(insn 44 43 45 (parallel [
            (set (reg:SI 114)
                (plus:SI (reg:SI 73 [ D.6349 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:354 -1
     (nil))

(insn 45 44 0 (set (reg/f:SI 74 [ D.6350 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 114)
                    (const_int 4 [0x4]))
                (reg/f:SI 113)) [0 display_4(D)->die S4 A32])) src/gui.c:354 -1
     (nil))

;; SDL_UpperBlit (D.6350_18, 0B, D.6347_15, &new_pos);

(insn 46 45 47 (parallel [
            (set (reg:SI 115)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:354 -1
     (nil))

(insn 47 46 48 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 115)) src/gui.c:354 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 48 47 49 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 71 [ D.6347 ])) src/gui.c:354 -1
     (nil))

(insn 49 48 50 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:354 -1
     (nil))

(insn 50 49 51 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 74 [ D.6350 ])) src/gui.c:354 -1
     (nil))

(call_insn 51 50 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:354 -1
     (nil)
    (nil))

;; D.6351_19 = display_4(D)->die1_position.x;

(insn 52 51 53 (set (reg/f:SI 116)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:355 -1
     (nil))

(insn 53 52 0 (set (reg:HI 75 [ D.6351 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 116)
                (const_int 88 [0x58])) [0 display_4(D)->die1_position.x+0 S2 A32])) src/gui.c:355 -1
     (nil))

;; D.6352_20 = (short unsigned int) D.6351_19;

(insn 54 53 0 (set (reg:HI 76 [ D.6352 ])
        (reg:HI 75 [ D.6351 ])) src/gui.c:355 -1
     (nil))

;; D.6353_21 = D.6352_20 + 40;

(insn 55 54 0 (parallel [
            (set (reg:HI 77 [ D.6353 ])
                (plus:HI (reg:HI 76 [ D.6352 ])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:355 -1
     (nil))

;; D.6354_22 = (Sint16) D.6353_21;

(insn 56 55 0 (set (reg:HI 78 [ D.6354 ])
        (reg:HI 77 [ D.6353 ])) src/gui.c:355 -1
     (nil))

;; new_pos.x = D.6354_22;

(insn 57 56 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 new_pos.x+0 S2 A32])
        (reg:HI 78 [ D.6354 ])) src/gui.c:355 -1
     (nil))

;; D.6355_23 = display_4(D)->screen;

(insn 58 57 59 (set (reg/f:SI 117)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:356 -1
     (nil))

(insn 59 58 0 (set (reg/f:SI 79 [ D.6355 ])
        (mem/s/f/j:SI (reg/f:SI 117) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:356 -1
     (nil))

;; D.6356_24 = game_1(D)->die1;

(insn 60 59 61 (set (reg/f:SI 118)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:356 -1
     (nil))

(insn 61 60 0 (set (reg:SI 80 [ D.6356 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 118)
                (const_int 224 [0xe0])) [0 game_1(D)->die1+0 S4 A32])) src/gui.c:356 -1
     (nil))

;; D.6357_25 = D.6356_24 + 4294967295;

(insn 62 61 0 (parallel [
            (set (reg:SI 81 [ D.6357 ])
                (plus:SI (reg:SI 80 [ D.6356 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:356 -1
     (nil))

;; D.6358_26 = display_4(D)->die[D.6357_25];

(insn 63 62 64 (set (reg/f:SI 119)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:356 -1
     (nil))

(insn 64 63 65 (parallel [
            (set (reg:SI 120)
                (plus:SI (reg:SI 81 [ D.6357 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:356 -1
     (nil))

(insn 65 64 0 (set (reg/f:SI 82 [ D.6358 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 120)
                    (const_int 4 [0x4]))
                (reg/f:SI 119)) [0 display_4(D)->die S4 A32])) src/gui.c:356 -1
     (nil))

;; SDL_UpperBlit (D.6358_26, 0B, D.6355_23, &new_pos);

(insn 66 65 67 (parallel [
            (set (reg:SI 121)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:356 -1
     (nil))

(insn 67 66 68 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 121)) src/gui.c:356 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 68 67 69 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 79 [ D.6355 ])) src/gui.c:356 -1
     (nil))

(insn 69 68 70 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:356 -1
     (nil))

(insn 70 69 71 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 82 [ D.6358 ])) src/gui.c:356 -1
     (nil))

(call_insn 71 70 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:356 -1
     (nil)
    (nil))

;; D.6359_27 = display_4(D)->die1_position.x;

(insn 72 71 73 (set (reg/f:SI 122)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:357 -1
     (nil))

(insn 73 72 0 (set (reg:HI 83 [ D.6359 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 122)
                (const_int 88 [0x58])) [0 display_4(D)->die1_position.x+0 S2 A32])) src/gui.c:357 -1
     (nil))

;; D.6360_28 = (short unsigned int) D.6359_27;

(insn 74 73 0 (set (reg:HI 84 [ D.6360 ])
        (reg:HI 83 [ D.6359 ])) src/gui.c:357 -1
     (nil))

;; D.6361_29 = D.6360_28 + 80;

(insn 75 74 0 (parallel [
            (set (reg:HI 85 [ D.6361 ])
                (plus:HI (reg:HI 84 [ D.6360 ])
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:357 -1
     (nil))

;; D.6362_30 = (Sint16) D.6361_29;

(insn 76 75 0 (set (reg:HI 86 [ D.6362 ])
        (reg:HI 85 [ D.6361 ])) src/gui.c:357 -1
     (nil))

;; new_pos.x = D.6362_30;

(insn 77 76 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 new_pos.x+0 S2 A32])
        (reg:HI 86 [ D.6362 ])) src/gui.c:357 -1
     (nil))

;; D.6363_31 = display_4(D)->screen;

(insn 78 77 79 (set (reg/f:SI 123)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:358 -1
     (nil))

(insn 79 78 0 (set (reg/f:SI 87 [ D.6363 ])
        (mem/s/f/j:SI (reg/f:SI 123) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:358 -1
     (nil))

;; D.6364_32 = game_1(D)->die1;

(insn 80 79 81 (set (reg/f:SI 124)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:358 -1
     (nil))

(insn 81 80 0 (set (reg:SI 88 [ D.6364 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 124)
                (const_int 224 [0xe0])) [0 game_1(D)->die1+0 S4 A32])) src/gui.c:358 -1
     (nil))

;; D.6365_33 = D.6364_32 + 4294967295;

(insn 82 81 0 (parallel [
            (set (reg:SI 89 [ D.6365 ])
                (plus:SI (reg:SI 88 [ D.6364 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:358 -1
     (nil))

;; D.6366_34 = display_4(D)->die[D.6365_33];

(insn 83 82 84 (set (reg/f:SI 125)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:358 -1
     (nil))

(insn 84 83 85 (parallel [
            (set (reg:SI 126)
                (plus:SI (reg:SI 89 [ D.6365 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:358 -1
     (nil))

(insn 85 84 0 (set (reg/f:SI 90 [ D.6366 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 126)
                    (const_int 4 [0x4]))
                (reg/f:SI 125)) [0 display_4(D)->die S4 A32])) src/gui.c:358 -1
     (nil))

;; SDL_UpperBlit (D.6366_34, 0B, D.6363_31, &new_pos);

(insn 86 85 87 (parallel [
            (set (reg:SI 127)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:358 -1
     (nil))

(insn 87 86 88 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 127)) src/gui.c:358 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 88 87 89 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 87 [ D.6363 ])) src/gui.c:358 -1
     (nil))

(insn 89 88 90 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:358 -1
     (nil))

(insn 90 89 91 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 90 [ D.6366 ])) src/gui.c:358 -1
     (nil))

(call_insn 91 90 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:358 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 94 93 95 34 "" [0 uses])

(note 95 94 0 NOTE_INSN_BASIC_BLOCK)

;; D.6368_35 = &display_4(D)->die1_position;

(insn 96 95 97 (set (reg/f:SI 128)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:362 -1
     (nil))

(insn 97 96 0 (parallel [
            (set (reg/f:SI 91 [ D.6368 ])
                (plus:SI (reg/f:SI 128)
                    (const_int 88 [0x58])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:362 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])
            (const_int 88 [0x58]))
        (nil)))

;; D.6369_36 = display_4(D)->screen;

(insn 98 97 99 (set (reg/f:SI 129)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:362 -1
     (nil))

(insn 99 98 0 (set (reg/f:SI 92 [ D.6369 ])
        (mem/s/f/j:SI (reg/f:SI 129) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:362 -1
     (nil))

;; D.6370_37 = game_1(D)->die1;

(insn 100 99 101 (set (reg/f:SI 130)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:362 -1
     (nil))

(insn 101 100 0 (set (reg:SI 93 [ D.6370 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 130)
                (const_int 224 [0xe0])) [0 game_1(D)->die1+0 S4 A32])) src/gui.c:362 -1
     (nil))

;; D.6371_38 = D.6370_37 + 4294967295;

(insn 102 101 0 (parallel [
            (set (reg:SI 94 [ D.6371 ])
                (plus:SI (reg:SI 93 [ D.6370 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:362 -1
     (nil))

;; D.6372_39 = display_4(D)->die[D.6371_38];

(insn 103 102 104 (set (reg/f:SI 131)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:362 -1
     (nil))

(insn 104 103 105 (parallel [
            (set (reg:SI 132)
                (plus:SI (reg:SI 94 [ D.6371 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:362 -1
     (nil))

(insn 105 104 0 (set (reg/f:SI 95 [ D.6372 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 132)
                    (const_int 4 [0x4]))
                (reg/f:SI 131)) [0 display_4(D)->die S4 A32])) src/gui.c:362 -1
     (nil))

;; SDL_UpperBlit (D.6372_39, 0B, D.6369_36, D.6368_35);

(insn 106 105 107 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 91 [ D.6368 ])) src/gui.c:362 -1
     (nil))

(insn 107 106 108 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 92 [ D.6369 ])) src/gui.c:362 -1
     (nil))

(insn 108 107 109 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:362 -1
     (nil))

(insn 109 108 110 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 95 [ D.6372 ])) src/gui.c:362 -1
     (nil))

(call_insn 110 109 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:362 -1
     (nil)
    (nil))

;; D.6373_40 = &display_4(D)->die2_position;

(insn 111 110 112 (set (reg/f:SI 133)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:363 -1
     (nil))

(insn 112 111 0 (parallel [
            (set (reg/f:SI 96 [ D.6373 ])
                (plus:SI (reg/f:SI 133)
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:363 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])
            (const_int 96 [0x60]))
        (nil)))

;; D.6374_41 = display_4(D)->screen;

(insn 113 112 114 (set (reg/f:SI 134)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:363 -1
     (nil))

(insn 114 113 0 (set (reg/f:SI 97 [ D.6374 ])
        (mem/s/f/j:SI (reg/f:SI 134) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:363 -1
     (nil))

;; D.6375_42 = game_1(D)->die2;

(insn 115 114 116 (set (reg/f:SI 135)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:363 -1
     (nil))

(insn 116 115 0 (set (reg:SI 98 [ D.6375 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 135)
                (const_int 228 [0xe4])) [0 game_1(D)->die2+0 S4 A32])) src/gui.c:363 -1
     (nil))

;; D.6376_43 = D.6375_42 + 4294967295;

(insn 117 116 0 (parallel [
            (set (reg:SI 99 [ D.6376 ])
                (plus:SI (reg:SI 98 [ D.6375 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:363 -1
     (nil))

;; D.6377_44 = display_4(D)->die[D.6376_43];

(insn 118 117 119 (set (reg/f:SI 136)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:363 -1
     (nil))

(insn 119 118 120 (parallel [
            (set (reg:SI 137)
                (plus:SI (reg:SI 99 [ D.6376 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:363 -1
     (nil))

(insn 120 119 0 (set (reg/f:SI 100 [ D.6377 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 137)
                    (const_int 4 [0x4]))
                (reg/f:SI 136)) [0 display_4(D)->die S4 A32])) src/gui.c:363 -1
     (nil))

;; SDL_UpperBlit (D.6377_44, 0B, D.6374_41, D.6373_40);

(insn 121 120 122 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 96 [ D.6373 ])) src/gui.c:363 -1
     (nil))

(insn 122 121 123 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 97 [ D.6374 ])) src/gui.c:363 -1
     (nil))

(insn 123 122 124 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:363 -1
     (nil))

(insn 124 123 125 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 100 [ D.6377 ])) src/gui.c:363 -1
     (nil))

(call_insn 125 124 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:363 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 126 125 127 35 "" [0 uses])

(note 127 126 0 NOTE_INSN_BASIC_BLOCK)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (reg/f:SI 101)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:348 -1
     (nil))

(insn 6 5 7 3 (set (reg:SI 59 [ D.6333 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 101)
                (const_int 224 [0xe0])) [0 game_1(D)->die1+0 S4 A32])) src/gui.c:348 -1
     (nil))

(insn 7 6 8 3 (set (reg/f:SI 102)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:348 -1
     (nil))

(insn 8 7 9 3 (set (reg:SI 60 [ D.6334 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 102)
                (const_int 228 [0xe4])) [0 game_1(D)->die2+0 S4 A32])) src/gui.c:348 -1
     (nil))

(insn 9 8 10 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.6333 ])
            (reg:SI 60 [ D.6334 ]))) src/gui.c:348 -1
     (nil))

(jump_insn 10 9 11 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) src/gui.c:348 -1
     (nil)
 -> 94)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 4 (set (reg/f:SI 103)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:350 -1
     (nil))

(insn 13 12 14 4 (set (reg:HI 61 [ D.6337 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 103)
                (const_int 88 [0x58])) [0 display_4(D)->die1_position.x+0 S2 A32])) src/gui.c:350 -1
     (nil))

(insn 14 13 15 4 (set (reg:HI 62 [ D.6338 ])
        (reg:HI 61 [ D.6337 ])) src/gui.c:350 -1
     (nil))

(insn 15 14 16 4 (parallel [
            (set (reg:HI 63 [ D.6339 ])
                (plus:HI (reg:HI 62 [ D.6338 ])
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:350 -1
     (nil))

(insn 16 15 17 4 (set (reg:HI 64 [ D.6340 ])
        (reg:HI 63 [ D.6339 ])) src/gui.c:350 -1
     (nil))

(insn 17 16 18 4 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 new_pos.x+0 S2 A32])
        (reg:HI 64 [ D.6340 ])) src/gui.c:350 -1
     (nil))

(insn 18 17 19 4 (set (reg/f:SI 104)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:351 -1
     (nil))

(insn 19 18 20 4 (set (reg:HI 65 [ D.6341 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 104)
                (const_int 90 [0x5a])) [0 display_4(D)->die1_position.y+0 S2 A16])) src/gui.c:351 -1
     (nil))

(insn 20 19 21 4 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 new_pos.y+0 S2 A16])
        (reg:HI 65 [ D.6341 ])) src/gui.c:351 -1
     (nil))

(insn 21 20 22 4 (set (reg/f:SI 105)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:352 -1
     (nil))

(insn 22 21 23 4 (set (reg/f:SI 66 [ D.6342 ])
        (mem/s/f/j:SI (reg/f:SI 105) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:352 -1
     (nil))

(insn 23 22 24 4 (set (reg/f:SI 106)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:352 -1
     (nil))

(insn 24 23 25 4 (set (reg:SI 67 [ D.6343 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 106)
                (const_int 224 [0xe0])) [0 game_1(D)->die1+0 S4 A32])) src/gui.c:352 -1
     (nil))

(insn 25 24 26 4 (parallel [
            (set (reg:SI 68 [ D.6344 ])
                (plus:SI (reg:SI 67 [ D.6343 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:352 -1
     (nil))

(insn 26 25 27 4 (set (reg/f:SI 107)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:352 -1
     (nil))

(insn 27 26 28 4 (parallel [
            (set (reg:SI 108)
                (plus:SI (reg:SI 68 [ D.6344 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:352 -1
     (nil))

(insn 28 27 29 4 (set (reg/f:SI 69 [ D.6345 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 108)
                    (const_int 4 [0x4]))
                (reg/f:SI 107)) [0 display_4(D)->die S4 A32])) src/gui.c:352 -1
     (nil))

(insn 29 28 30 4 (parallel [
            (set (reg:SI 109)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:352 -1
     (nil))

(insn 30 29 31 4 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 109)) src/gui.c:352 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 31 30 32 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 66 [ D.6342 ])) src/gui.c:352 -1
     (nil))

(insn 32 31 33 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:352 -1
     (nil))

(insn 33 32 34 4 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 69 [ D.6345 ])) src/gui.c:352 -1
     (nil))

(call_insn 34 33 35 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:352 -1
     (nil)
    (nil))

(insn 35 34 36 4 (set (reg/f:SI 110)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:353 -1
     (nil))

(insn 36 35 37 4 (set (reg:HI 70 [ D.6346 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 110)
                (const_int 88 [0x58])) [0 display_4(D)->die1_position.x+0 S2 A32])) src/gui.c:353 -1
     (nil))

(insn 37 36 38 4 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 new_pos.x+0 S2 A32])
        (reg:HI 70 [ D.6346 ])) src/gui.c:353 -1
     (nil))

(insn 38 37 39 4 (set (reg/f:SI 111)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:354 -1
     (nil))

(insn 39 38 40 4 (set (reg/f:SI 71 [ D.6347 ])
        (mem/s/f/j:SI (reg/f:SI 111) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:354 -1
     (nil))

(insn 40 39 41 4 (set (reg/f:SI 112)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:354 -1
     (nil))

(insn 41 40 42 4 (set (reg:SI 72 [ D.6348 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 112)
                (const_int 224 [0xe0])) [0 game_1(D)->die1+0 S4 A32])) src/gui.c:354 -1
     (nil))

(insn 42 41 43 4 (parallel [
            (set (reg:SI 73 [ D.6349 ])
                (plus:SI (reg:SI 72 [ D.6348 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:354 -1
     (nil))

(insn 43 42 44 4 (set (reg/f:SI 113)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:354 -1
     (nil))

(insn 44 43 45 4 (parallel [
            (set (reg:SI 114)
                (plus:SI (reg:SI 73 [ D.6349 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:354 -1
     (nil))

(insn 45 44 46 4 (set (reg/f:SI 74 [ D.6350 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 114)
                    (const_int 4 [0x4]))
                (reg/f:SI 113)) [0 display_4(D)->die S4 A32])) src/gui.c:354 -1
     (nil))

(insn 46 45 47 4 (parallel [
            (set (reg:SI 115)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:354 -1
     (nil))

(insn 47 46 48 4 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 115)) src/gui.c:354 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 48 47 49 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 71 [ D.6347 ])) src/gui.c:354 -1
     (nil))

(insn 49 48 50 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:354 -1
     (nil))

(insn 50 49 51 4 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 74 [ D.6350 ])) src/gui.c:354 -1
     (nil))

(call_insn 51 50 52 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:354 -1
     (nil)
    (nil))

(insn 52 51 53 4 (set (reg/f:SI 116)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:355 -1
     (nil))

(insn 53 52 54 4 (set (reg:HI 75 [ D.6351 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 116)
                (const_int 88 [0x58])) [0 display_4(D)->die1_position.x+0 S2 A32])) src/gui.c:355 -1
     (nil))

(insn 54 53 55 4 (set (reg:HI 76 [ D.6352 ])
        (reg:HI 75 [ D.6351 ])) src/gui.c:355 -1
     (nil))

(insn 55 54 56 4 (parallel [
            (set (reg:HI 77 [ D.6353 ])
                (plus:HI (reg:HI 76 [ D.6352 ])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:355 -1
     (nil))

(insn 56 55 57 4 (set (reg:HI 78 [ D.6354 ])
        (reg:HI 77 [ D.6353 ])) src/gui.c:355 -1
     (nil))

(insn 57 56 58 4 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 new_pos.x+0 S2 A32])
        (reg:HI 78 [ D.6354 ])) src/gui.c:355 -1
     (nil))

(insn 58 57 59 4 (set (reg/f:SI 117)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:356 -1
     (nil))

(insn 59 58 60 4 (set (reg/f:SI 79 [ D.6355 ])
        (mem/s/f/j:SI (reg/f:SI 117) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:356 -1
     (nil))

(insn 60 59 61 4 (set (reg/f:SI 118)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:356 -1
     (nil))

(insn 61 60 62 4 (set (reg:SI 80 [ D.6356 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 118)
                (const_int 224 [0xe0])) [0 game_1(D)->die1+0 S4 A32])) src/gui.c:356 -1
     (nil))

(insn 62 61 63 4 (parallel [
            (set (reg:SI 81 [ D.6357 ])
                (plus:SI (reg:SI 80 [ D.6356 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:356 -1
     (nil))

(insn 63 62 64 4 (set (reg/f:SI 119)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:356 -1
     (nil))

(insn 64 63 65 4 (parallel [
            (set (reg:SI 120)
                (plus:SI (reg:SI 81 [ D.6357 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:356 -1
     (nil))

(insn 65 64 66 4 (set (reg/f:SI 82 [ D.6358 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 120)
                    (const_int 4 [0x4]))
                (reg/f:SI 119)) [0 display_4(D)->die S4 A32])) src/gui.c:356 -1
     (nil))

(insn 66 65 67 4 (parallel [
            (set (reg:SI 121)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:356 -1
     (nil))

(insn 67 66 68 4 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 121)) src/gui.c:356 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 68 67 69 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 79 [ D.6355 ])) src/gui.c:356 -1
     (nil))

(insn 69 68 70 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:356 -1
     (nil))

(insn 70 69 71 4 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 82 [ D.6358 ])) src/gui.c:356 -1
     (nil))

(call_insn 71 70 72 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:356 -1
     (nil)
    (nil))

(insn 72 71 73 4 (set (reg/f:SI 122)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:357 -1
     (nil))

(insn 73 72 74 4 (set (reg:HI 83 [ D.6359 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 122)
                (const_int 88 [0x58])) [0 display_4(D)->die1_position.x+0 S2 A32])) src/gui.c:357 -1
     (nil))

(insn 74 73 75 4 (set (reg:HI 84 [ D.6360 ])
        (reg:HI 83 [ D.6359 ])) src/gui.c:357 -1
     (nil))

(insn 75 74 76 4 (parallel [
            (set (reg:HI 85 [ D.6361 ])
                (plus:HI (reg:HI 84 [ D.6360 ])
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:357 -1
     (nil))

(insn 76 75 77 4 (set (reg:HI 86 [ D.6362 ])
        (reg:HI 85 [ D.6361 ])) src/gui.c:357 -1
     (nil))

(insn 77 76 78 4 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 new_pos.x+0 S2 A32])
        (reg:HI 86 [ D.6362 ])) src/gui.c:357 -1
     (nil))

(insn 78 77 79 4 (set (reg/f:SI 123)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:358 -1
     (nil))

(insn 79 78 80 4 (set (reg/f:SI 87 [ D.6363 ])
        (mem/s/f/j:SI (reg/f:SI 123) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:358 -1
     (nil))

(insn 80 79 81 4 (set (reg/f:SI 124)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:358 -1
     (nil))

(insn 81 80 82 4 (set (reg:SI 88 [ D.6364 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 124)
                (const_int 224 [0xe0])) [0 game_1(D)->die1+0 S4 A32])) src/gui.c:358 -1
     (nil))

(insn 82 81 83 4 (parallel [
            (set (reg:SI 89 [ D.6365 ])
                (plus:SI (reg:SI 88 [ D.6364 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:358 -1
     (nil))

(insn 83 82 84 4 (set (reg/f:SI 125)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:358 -1
     (nil))

(insn 84 83 85 4 (parallel [
            (set (reg:SI 126)
                (plus:SI (reg:SI 89 [ D.6365 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:358 -1
     (nil))

(insn 85 84 86 4 (set (reg/f:SI 90 [ D.6366 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 126)
                    (const_int 4 [0x4]))
                (reg/f:SI 125)) [0 display_4(D)->die S4 A32])) src/gui.c:358 -1
     (nil))

(insn 86 85 87 4 (parallel [
            (set (reg:SI 127)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:358 -1
     (nil))

(insn 87 86 88 4 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 127)) src/gui.c:358 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 88 87 89 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 87 [ D.6363 ])) src/gui.c:358 -1
     (nil))

(insn 89 88 90 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:358 -1
     (nil))

(insn 90 89 91 4 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 90 [ D.6366 ])) src/gui.c:358 -1
     (nil))

(call_insn 91 90 92 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:358 -1
     (nil)
    (nil))

(jump_insn 92 91 93 4 (set (pc)
        (label_ref 126)) src/gui.c:358 -1
     (nil)
 -> 126)
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 93 92 94)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 94 93 95 5 34 "" [1 uses])

(note 95 94 96 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 5 (set (reg/f:SI 128)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:362 -1
     (nil))

(insn 97 96 98 5 (parallel [
            (set (reg/f:SI 91 [ D.6368 ])
                (plus:SI (reg/f:SI 128)
                    (const_int 88 [0x58])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:362 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])
            (const_int 88 [0x58]))
        (nil)))

(insn 98 97 99 5 (set (reg/f:SI 129)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:362 -1
     (nil))

(insn 99 98 100 5 (set (reg/f:SI 92 [ D.6369 ])
        (mem/s/f/j:SI (reg/f:SI 129) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:362 -1
     (nil))

(insn 100 99 101 5 (set (reg/f:SI 130)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:362 -1
     (nil))

(insn 101 100 102 5 (set (reg:SI 93 [ D.6370 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 130)
                (const_int 224 [0xe0])) [0 game_1(D)->die1+0 S4 A32])) src/gui.c:362 -1
     (nil))

(insn 102 101 103 5 (parallel [
            (set (reg:SI 94 [ D.6371 ])
                (plus:SI (reg:SI 93 [ D.6370 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:362 -1
     (nil))

(insn 103 102 104 5 (set (reg/f:SI 131)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:362 -1
     (nil))

(insn 104 103 105 5 (parallel [
            (set (reg:SI 132)
                (plus:SI (reg:SI 94 [ D.6371 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:362 -1
     (nil))

(insn 105 104 106 5 (set (reg/f:SI 95 [ D.6372 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 132)
                    (const_int 4 [0x4]))
                (reg/f:SI 131)) [0 display_4(D)->die S4 A32])) src/gui.c:362 -1
     (nil))

(insn 106 105 107 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 91 [ D.6368 ])) src/gui.c:362 -1
     (nil))

(insn 107 106 108 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 92 [ D.6369 ])) src/gui.c:362 -1
     (nil))

(insn 108 107 109 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:362 -1
     (nil))

(insn 109 108 110 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 95 [ D.6372 ])) src/gui.c:362 -1
     (nil))

(call_insn 110 109 111 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:362 -1
     (nil)
    (nil))

(insn 111 110 112 5 (set (reg/f:SI 133)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:363 -1
     (nil))

(insn 112 111 113 5 (parallel [
            (set (reg/f:SI 96 [ D.6373 ])
                (plus:SI (reg/f:SI 133)
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:363 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])
            (const_int 96 [0x60]))
        (nil)))

(insn 113 112 114 5 (set (reg/f:SI 134)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:363 -1
     (nil))

(insn 114 113 115 5 (set (reg/f:SI 97 [ D.6374 ])
        (mem/s/f/j:SI (reg/f:SI 134) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:363 -1
     (nil))

(insn 115 114 116 5 (set (reg/f:SI 135)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:363 -1
     (nil))

(insn 116 115 117 5 (set (reg:SI 98 [ D.6375 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 135)
                (const_int 228 [0xe4])) [0 game_1(D)->die2+0 S4 A32])) src/gui.c:363 -1
     (nil))

(insn 117 116 118 5 (parallel [
            (set (reg:SI 99 [ D.6376 ])
                (plus:SI (reg:SI 98 [ D.6375 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:363 -1
     (nil))

(insn 118 117 119 5 (set (reg/f:SI 136)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:363 -1
     (nil))

(insn 119 118 120 5 (parallel [
            (set (reg:SI 137)
                (plus:SI (reg:SI 99 [ D.6376 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:363 -1
     (nil))

(insn 120 119 121 5 (set (reg/f:SI 100 [ D.6377 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 137)
                    (const_int 4 [0x4]))
                (reg/f:SI 136)) [0 display_4(D)->die S4 A32])) src/gui.c:363 -1
     (nil))

(insn 121 120 122 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 96 [ D.6373 ])) src/gui.c:363 -1
     (nil))

(insn 122 121 123 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 97 [ D.6374 ])) src/gui.c:363 -1
     (nil))

(insn 123 122 124 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:363 -1
     (nil))

(insn 124 123 125 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 100 [ D.6377 ])) src/gui.c:363 -1
     (nil))

(call_insn 125 124 126 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:363 -1
     (nil)
    (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 126 125 127 6 35 "" [1 uses])

(note 127 126 128 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(code_label 128 127 129 7 33 "" [0 uses])

(note 129 128 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Checker_Draw (Checker_Draw)

Checker_Draw (struct SDisplay * display, struct SDL_Rect position, int player, struct SGame * game)
{
  struct SDL_Surface * D.6332;
  struct SDL_Surface * D.6331;
  struct SDL_Surface * D.6329;
  struct SDL_Surface * D.6328;
  int D.6325;
  struct SDL_Surface * D.6323;
  struct SDL_Surface * D.6322;
  struct SDL_Surface * D.6320;
  struct SDL_Surface * D.6319;
  int D.6316;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  if (player_1(D) == 0)
    goto <bb 3>;
  else
    goto <bb 6>;
  # SUCC: 3 (true) 6 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.6316_3 = game_2(D)->player1_checker;
  if (D.6316_3 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.6319_5 = display_4(D)->screen;
  D.6320_6 = display_4(D)->green_checker;
  SDL_UpperBlit (D.6320_6, 0B, D.6319_5, &position);
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  D.6322_7 = display_4(D)->screen;
  D.6323_8 = display_4(D)->white_checker;
  SDL_UpperBlit (D.6323_8, 0B, D.6322_7, &position);
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 6
  # PRED: 2 (false)
  D.6325_9 = game_2(D)->player2_checker;
  if (D.6325_9 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 (true) 8 (false)

  # BLOCK 7
  # PRED: 6 (true)
  D.6328_10 = display_4(D)->screen;
  D.6329_11 = display_4(D)->green_checker;
  SDL_UpperBlit (D.6329_11, 0B, D.6328_10, &position);
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 8
  # PRED: 6 (false)
  D.6331_12 = display_4(D)->screen;
  D.6332_13 = display_4(D)->white_checker;
  SDL_UpperBlit (D.6332_13, 0B, D.6331_12, &position);
  # SUCC: 9 (fallthru)

  # BLOCK 9
  # PRED: 5 (fallthru) 7 (fallthru) 8 (fallthru) 4 (fallthru)
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (player_1(D) - 1 )
Partition 2 (game_2(D) - 2 )
Partition 3 (D.6316_3 - 3 )
Partition 4 (display_4(D) - 4 )
Partition 5 (D.6319_5 - 5 )
Partition 6 (D.6320_6 - 6 )
Partition 7 (D.6322_7 - 7 )
Partition 8 (D.6323_8 - 8 )
Partition 9 (D.6325_9 - 9 )
Partition 10 (D.6328_10 - 10 )
Partition 11 (D.6329_11 - 11 )
Partition 12 (D.6331_12 - 12 )
Partition 13 (D.6332_13 - 13 )


Partition map 

Partition 0 (player_1(D) - 1 )
Partition 1 (game_2(D) - 2 )
Partition 2 (display_4(D) - 4 )


Live on entry to BB2 : player_1(D)  game_2(D)  display_4(D)  

Live on entry to BB3 : game_2(D)  display_4(D)  

Live on entry to BB4 : display_4(D)  

Live on entry to BB5 : display_4(D)  

Live on entry to BB6 : game_2(D)  display_4(D)  

Live on entry to BB7 : display_4(D)  

Live on entry to BB8 : display_4(D)  

Live on entry to BB9 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (player_1(D) - 1 )
Partition 1 (game_2(D) - 2 )
Partition 2 (display_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (player_1(D) - 1 )
Partition 1 (game_2(D) - 2 )
Partition 2 (D.6316_3 - 3 )
Partition 3 (display_4(D) - 4 )
Partition 4 (D.6319_5 - 5 )
Partition 5 (D.6320_6 - 6 )
Partition 6 (D.6322_7 - 7 )
Partition 7 (D.6323_8 - 8 )
Partition 8 (D.6325_9 - 9 )
Partition 9 (D.6328_10 - 10 )
Partition 10 (D.6329_11 - 11 )
Partition 11 (D.6331_12 - 12 )
Partition 12 (D.6332_13 - 13 )

Checker_Draw (struct SDisplay * display, struct SDL_Rect position, int player, struct SGame * game)
{
  struct SDL_Surface * D.6332;
  struct SDL_Surface * D.6331;
  struct SDL_Surface * D.6329;
  struct SDL_Surface * D.6328;
  int D.6325;
  struct SDL_Surface * D.6323;
  struct SDL_Surface * D.6322;
  struct SDL_Surface * D.6320;
  struct SDL_Surface * D.6319;
  int D.6316;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  if (player_1(D) == 0)
    goto <bb 3>;
  else
    goto <bb 6>;
  # SUCC: 3 (true) 6 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.6316_3 = game_2(D)->player1_checker;
  if (D.6316_3 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.6319_5 = display_4(D)->screen;
  D.6320_6 = display_4(D)->green_checker;
  SDL_UpperBlit (D.6320_6, 0B, D.6319_5, &position);
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  D.6322_7 = display_4(D)->screen;
  D.6323_8 = display_4(D)->white_checker;
  SDL_UpperBlit (D.6323_8, 0B, D.6322_7, &position);
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 6
  # PRED: 2 (false)
  D.6325_9 = game_2(D)->player2_checker;
  if (D.6325_9 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 (true) 8 (false)

  # BLOCK 7
  # PRED: 6 (true)
  D.6328_10 = display_4(D)->screen;
  D.6329_11 = display_4(D)->green_checker;
  SDL_UpperBlit (D.6329_11, 0B, D.6328_10, &position);
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 8
  # PRED: 6 (false)
  D.6331_12 = display_4(D)->screen;
  D.6332_13 = display_4(D)->white_checker;
  SDL_UpperBlit (D.6332_13, 0B, D.6331_12, &position);
  # SUCC: 9 (fallthru)

  # BLOCK 9
  # PRED: 5 (fallthru) 7 (fallthru) 8 (fallthru) 4 (fallthru)
  return;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; if (player_1(D) == 0)

(insn 5 4 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 12 [0xc])) [0 player+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:370 -1
     (nil))

(jump_insn 6 5 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:370 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; D.6316_3 = game_2(D)->player1_checker;

(insn 8 7 9 (set (reg/f:SI 69)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 16 [0x10])) [0 game+0 S4 A32])) src/gui.c:372 -1
     (nil))

(insn 9 8 0 (set (reg:SI 59 [ D.6316 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 69)
                (const_int 8 [0x8])) [0 game_2(D)->player1_checker+0 S4 A32])) src/gui.c:372 -1
     (nil))

;; if (D.6316_3 == 0)

(insn 10 9 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.6316 ])
            (const_int 0 [0]))) src/gui.c:372 -1
     (nil))

(jump_insn 11 10 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:372 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; D.6319_5 = display_4(D)->screen;

(insn 13 12 14 (set (reg/f:SI 70)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:373 -1
     (nil))

(insn 14 13 0 (set (reg/f:SI 60 [ D.6319 ])
        (mem/s/f/j:SI (reg/f:SI 70) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:373 -1
     (nil))

;; D.6320_6 = display_4(D)->green_checker;

(insn 15 14 16 (set (reg/f:SI 71)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:373 -1
     (nil))

(insn 16 15 0 (set (reg/f:SI 61 [ D.6320 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 71)
                (const_int 44 [0x2c])) [0 display_4(D)->green_checker+0 S4 A32])) src/gui.c:373 -1
     (nil))

;; SDL_UpperBlit (D.6320_6, 0B, D.6319_5, &position);

(insn 17 16 18 (parallel [
            (set (reg:SI 72)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:373 -1
     (nil))

(insn 18 17 19 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 72)) src/gui.c:373 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 4 [0x4]))
        (nil)))

(insn 19 18 20 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 60 [ D.6319 ])) src/gui.c:373 -1
     (nil))

(insn 20 19 21 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:373 -1
     (nil))

(insn 21 20 22 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 61 [ D.6320 ])) src/gui.c:373 -1
     (nil))

(call_insn 22 21 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:373 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 25 24 26 38 "" [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; D.6322_7 = display_4(D)->screen;

(insn 27 26 28 (set (reg/f:SI 73)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:375 -1
     (nil))

(insn 28 27 0 (set (reg/f:SI 62 [ D.6322 ])
        (mem/s/f/j:SI (reg/f:SI 73) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:375 -1
     (nil))

;; D.6323_8 = display_4(D)->white_checker;

(insn 29 28 30 (set (reg/f:SI 74)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:375 -1
     (nil))

(insn 30 29 0 (set (reg/f:SI 63 [ D.6323 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 74)
                (const_int 48 [0x30])) [0 display_4(D)->white_checker+0 S4 A32])) src/gui.c:375 -1
     (nil))

;; SDL_UpperBlit (D.6323_8, 0B, D.6322_7, &position);

(insn 31 30 32 (parallel [
            (set (reg:SI 75)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:375 -1
     (nil))

(insn 32 31 33 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 75)) src/gui.c:375 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 4 [0x4]))
        (nil)))

(insn 33 32 34 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 62 [ D.6322 ])) src/gui.c:375 -1
     (nil))

(insn 34 33 35 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:375 -1
     (nil))

(insn 35 34 36 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 63 [ D.6323 ])) src/gui.c:375 -1
     (nil))

(call_insn 36 35 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:375 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 39 38 40 37 "" [0 uses])

(note 40 39 0 NOTE_INSN_BASIC_BLOCK)

;; D.6325_9 = game_2(D)->player2_checker;

(insn 41 40 42 (set (reg/f:SI 76)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 16 [0x10])) [0 game+0 S4 A32])) src/gui.c:379 -1
     (nil))

(insn 42 41 0 (set (reg:SI 64 [ D.6325 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 76)
                (const_int 12 [0xc])) [0 game_2(D)->player2_checker+0 S4 A32])) src/gui.c:379 -1
     (nil))

;; if (D.6325_9 == 0)

(insn 43 42 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ D.6325 ])
            (const_int 0 [0]))) src/gui.c:379 -1
     (nil))

(jump_insn 44 43 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:379 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; D.6328_10 = display_4(D)->screen;

(insn 46 45 47 (set (reg/f:SI 77)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:380 -1
     (nil))

(insn 47 46 0 (set (reg/f:SI 65 [ D.6328 ])
        (mem/s/f/j:SI (reg/f:SI 77) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:380 -1
     (nil))

;; D.6329_11 = display_4(D)->green_checker;

(insn 48 47 49 (set (reg/f:SI 78)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:380 -1
     (nil))

(insn 49 48 0 (set (reg/f:SI 66 [ D.6329 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 78)
                (const_int 44 [0x2c])) [0 display_4(D)->green_checker+0 S4 A32])) src/gui.c:380 -1
     (nil))

;; SDL_UpperBlit (D.6329_11, 0B, D.6328_10, &position);

(insn 50 49 51 (parallel [
            (set (reg:SI 79)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:380 -1
     (nil))

(insn 51 50 52 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 79)) src/gui.c:380 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 4 [0x4]))
        (nil)))

(insn 52 51 53 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 65 [ D.6328 ])) src/gui.c:380 -1
     (nil))

(insn 53 52 54 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:380 -1
     (nil))

(insn 54 53 55 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 66 [ D.6329 ])) src/gui.c:380 -1
     (nil))

(call_insn 55 54 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:380 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 58 57 59 40 "" [0 uses])

(note 59 58 0 NOTE_INSN_BASIC_BLOCK)

;; D.6331_12 = display_4(D)->screen;

(insn 60 59 61 (set (reg/f:SI 80)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:382 -1
     (nil))

(insn 61 60 0 (set (reg/f:SI 67 [ D.6331 ])
        (mem/s/f/j:SI (reg/f:SI 80) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:382 -1
     (nil))

;; D.6332_13 = display_4(D)->white_checker;

(insn 62 61 63 (set (reg/f:SI 81)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:382 -1
     (nil))

(insn 63 62 0 (set (reg/f:SI 68 [ D.6332 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 81)
                (const_int 48 [0x30])) [0 display_4(D)->white_checker+0 S4 A32])) src/gui.c:382 -1
     (nil))

;; SDL_UpperBlit (D.6332_13, 0B, D.6331_12, &position);

(insn 64 63 65 (parallel [
            (set (reg:SI 82)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:382 -1
     (nil))

(insn 65 64 66 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 82)) src/gui.c:382 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 4 [0x4]))
        (nil)))

(insn 66 65 67 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 67 [ D.6331 ])) src/gui.c:382 -1
     (nil))

(insn 67 66 68 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:382 -1
     (nil))

(insn 68 67 69 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 68 [ D.6332 ])) src/gui.c:382 -1
     (nil))

(call_insn 69 68 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:382 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 70 69 71 39 "" [0 uses])

(note 71 70 0 NOTE_INSN_BASIC_BLOCK)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 12 [0xc])) [0 player+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:370 -1
     (nil))

(jump_insn 6 5 7 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) src/gui.c:370 -1
     (nil)
 -> 39)
;; End of basic block 3 -> ( 4 7)

;; Succ edge  4 (fallthru)
;; Succ edge  7

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 7 6 8 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 4 (set (reg/f:SI 69)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 16 [0x10])) [0 game+0 S4 A32])) src/gui.c:372 -1
     (nil))

(insn 9 8 10 4 (set (reg:SI 59 [ D.6316 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 69)
                (const_int 8 [0x8])) [0 game_2(D)->player1_checker+0 S4 A32])) src/gui.c:372 -1
     (nil))

(insn 10 9 11 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.6316 ])
            (const_int 0 [0]))) src/gui.c:372 -1
     (nil))

(jump_insn 11 10 12 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) src/gui.c:372 -1
     (nil)
 -> 25)
;; End of basic block 4 -> ( 5 6)

;; Succ edge  5 (fallthru)
;; Succ edge  6

;; Start of basic block ( 4) -> 5
;; Pred edge  4 (fallthru)
(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 5 (set (reg/f:SI 70)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:373 -1
     (nil))

(insn 14 13 15 5 (set (reg/f:SI 60 [ D.6319 ])
        (mem/s/f/j:SI (reg/f:SI 70) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:373 -1
     (nil))

(insn 15 14 16 5 (set (reg/f:SI 71)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:373 -1
     (nil))

(insn 16 15 17 5 (set (reg/f:SI 61 [ D.6320 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 71)
                (const_int 44 [0x2c])) [0 display_4(D)->green_checker+0 S4 A32])) src/gui.c:373 -1
     (nil))

(insn 17 16 18 5 (parallel [
            (set (reg:SI 72)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:373 -1
     (nil))

(insn 18 17 19 5 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 72)) src/gui.c:373 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 4 [0x4]))
        (nil)))

(insn 19 18 20 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 60 [ D.6319 ])) src/gui.c:373 -1
     (nil))

(insn 20 19 21 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:373 -1
     (nil))

(insn 21 20 22 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 61 [ D.6320 ])) src/gui.c:373 -1
     (nil))

(call_insn 22 21 23 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:373 -1
     (nil)
    (nil))

(jump_insn 23 22 24 5 (set (pc)
        (label_ref 70)) src/gui.c:373 -1
     (nil)
 -> 70)
;; End of basic block 5 -> ( 10)

;; Succ edge  10

(barrier 24 23 25)

;; Start of basic block ( 4) -> 6
;; Pred edge  4
(code_label 25 24 26 6 38 "" [1 uses])

(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 6 (set (reg/f:SI 73)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:375 -1
     (nil))

(insn 28 27 29 6 (set (reg/f:SI 62 [ D.6322 ])
        (mem/s/f/j:SI (reg/f:SI 73) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:375 -1
     (nil))

(insn 29 28 30 6 (set (reg/f:SI 74)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:375 -1
     (nil))

(insn 30 29 31 6 (set (reg/f:SI 63 [ D.6323 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 74)
                (const_int 48 [0x30])) [0 display_4(D)->white_checker+0 S4 A32])) src/gui.c:375 -1
     (nil))

(insn 31 30 32 6 (parallel [
            (set (reg:SI 75)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:375 -1
     (nil))

(insn 32 31 33 6 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 75)) src/gui.c:375 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 4 [0x4]))
        (nil)))

(insn 33 32 34 6 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 62 [ D.6322 ])) src/gui.c:375 -1
     (nil))

(insn 34 33 35 6 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:375 -1
     (nil))

(insn 35 34 36 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 63 [ D.6323 ])) src/gui.c:375 -1
     (nil))

(call_insn 36 35 37 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:375 -1
     (nil)
    (nil))

(jump_insn 37 36 38 6 (set (pc)
        (label_ref 70)) src/gui.c:375 -1
     (nil)
 -> 70)
;; End of basic block 6 -> ( 10)

;; Succ edge  10

(barrier 38 37 39)

;; Start of basic block ( 3) -> 7
;; Pred edge  3
(code_label 39 38 40 7 37 "" [1 uses])

(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 7 (set (reg/f:SI 76)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 16 [0x10])) [0 game+0 S4 A32])) src/gui.c:379 -1
     (nil))

(insn 42 41 43 7 (set (reg:SI 64 [ D.6325 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 76)
                (const_int 12 [0xc])) [0 game_2(D)->player2_checker+0 S4 A32])) src/gui.c:379 -1
     (nil))

(insn 43 42 44 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ D.6325 ])
            (const_int 0 [0]))) src/gui.c:379 -1
     (nil))

(jump_insn 44 43 45 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) src/gui.c:379 -1
     (nil)
 -> 58)
;; End of basic block 7 -> ( 8 9)

;; Succ edge  8 (fallthru)
;; Succ edge  9

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 8 (set (reg/f:SI 77)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:380 -1
     (nil))

(insn 47 46 48 8 (set (reg/f:SI 65 [ D.6328 ])
        (mem/s/f/j:SI (reg/f:SI 77) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:380 -1
     (nil))

(insn 48 47 49 8 (set (reg/f:SI 78)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:380 -1
     (nil))

(insn 49 48 50 8 (set (reg/f:SI 66 [ D.6329 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 78)
                (const_int 44 [0x2c])) [0 display_4(D)->green_checker+0 S4 A32])) src/gui.c:380 -1
     (nil))

(insn 50 49 51 8 (parallel [
            (set (reg:SI 79)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:380 -1
     (nil))

(insn 51 50 52 8 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 79)) src/gui.c:380 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 4 [0x4]))
        (nil)))

(insn 52 51 53 8 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 65 [ D.6328 ])) src/gui.c:380 -1
     (nil))

(insn 53 52 54 8 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:380 -1
     (nil))

(insn 54 53 55 8 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 66 [ D.6329 ])) src/gui.c:380 -1
     (nil))

(call_insn 55 54 56 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:380 -1
     (nil)
    (nil))

(jump_insn 56 55 57 8 (set (pc)
        (label_ref 70)) src/gui.c:380 -1
     (nil)
 -> 70)
;; End of basic block 8 -> ( 10)

;; Succ edge  10

(barrier 57 56 58)

;; Start of basic block ( 7) -> 9
;; Pred edge  7
(code_label 58 57 59 9 40 "" [1 uses])

(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 9 (set (reg/f:SI 80)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:382 -1
     (nil))

(insn 61 60 62 9 (set (reg/f:SI 67 [ D.6331 ])
        (mem/s/f/j:SI (reg/f:SI 80) [0 display_4(D)->screen+0 S4 A32])) src/gui.c:382 -1
     (nil))

(insn 62 61 63 9 (set (reg/f:SI 81)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:382 -1
     (nil))

(insn 63 62 64 9 (set (reg/f:SI 68 [ D.6332 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 81)
                (const_int 48 [0x30])) [0 display_4(D)->white_checker+0 S4 A32])) src/gui.c:382 -1
     (nil))

(insn 64 63 65 9 (parallel [
            (set (reg:SI 82)
                (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:382 -1
     (nil))

(insn 65 64 66 9 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 82)) src/gui.c:382 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 53 virtual-incoming-args)
            (const_int 4 [0x4]))
        (nil)))

(insn 66 65 67 9 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 67 [ D.6331 ])) src/gui.c:382 -1
     (nil))

(insn 67 66 68 9 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:382 -1
     (nil))

(insn 68 67 69 9 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 68 [ D.6332 ])) src/gui.c:382 -1
     (nil))

(call_insn 69 68 70 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:382 -1
     (nil)
    (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 (fallthru)

;; Start of basic block ( 6 8 9 5) -> 10
;; Pred edge  6
;; Pred edge  8
;; Pred edge  9 (fallthru)
;; Pred edge  5
(code_label 70 69 71 10 39 "" [3 uses])

(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 11)

;; Succ edge  11 (fallthru)

;; Start of basic block ( 10) -> 11
;; Pred edge  10 (fallthru)
(code_label 72 71 73 11 36 "" [0 uses])

(note 73 72 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 11 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Display_DrawOut (Display_DrawOut)

Display_DrawOut (struct SDisplay * display, struct SGameState * gameState, struct SGame * game)
{
  unsigned int i;
  struct SDL_Rect pos;
  unsigned int D.6313;
  struct SDL_Surface * D.6312;
  struct SDL_Surface * D.6311;
  struct SDL_Surface * D.6309;
  struct SDL_Surface * D.6308;
  int D.6305;
  Sint16 D.6304;
  short unsigned int D.6303;
  short unsigned int D.6302;
  Sint16 D.6301;
  Sint16 D.6300;
  Sint16 D.6299;
  unsigned int D.6298;
  struct SDL_Surface * D.6297;
  struct SDL_Surface * D.6296;
  struct SDL_Surface * D.6294;
  struct SDL_Surface * D.6293;
  int D.6290;
  Sint16 D.6289;
  short unsigned int D.6288;
  short unsigned int D.6287;
  Sint16 D.6286;
  Sint16 D.6285;
  Sint16 D.6284;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.6284_4 = display_3(D)->positions[25].x;
  pos.x = D.6284_4;
  D.6285_5 = display_3(D)->positions[25].y;
  pos.y = D.6285_5;
  i_6 = 0;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 3
  # PRED: 7 (true)
  D.6286_9 = pos.y;
  D.6287_10 = (short unsigned int) D.6286_9;
  D.6288_11 = D.6287_10 + 10;
  D.6289_12 = (Sint16) D.6288_11;
  pos.y = D.6289_12;
  D.6290_14 = game_13(D)->player1_checker;
  if (D.6290_14 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.6293_15 = display_3(D)->screen;
  D.6294_16 = display_3(D)->bar_green_checker;
  SDL_UpperBlit (D.6294_16, 0B, D.6293_15, &pos);
  goto <bb 6>;
  # SUCC: 6 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  D.6296_17 = display_3(D)->screen;
  D.6297_18 = display_3(D)->bar_white_checker;
  SDL_UpperBlit (D.6297_18, 0B, D.6296_17, &pos);
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (fallthru) 5 (fallthru)
  i_19 = i_1 + 1;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 2 (fallthru) 6 (fallthru)
  # i_1 = PHI <i_6(2), i_19(6)>
  D.6298_8 = gameState_7(D)->zones[25].nb_checkers;
  if (D.6298_8 > i_1)
    goto <bb 3>;
  else
    goto <bb 8>;
  # SUCC: 3 (true) 8 (false)

  # BLOCK 8
  # PRED: 7 (false)
  D.6299_20 = display_3(D)->positions[27].x;
  pos.x = D.6299_20;
  D.6300_21 = display_3(D)->positions[27].y;
  pos.y = D.6300_21;
  i_22 = 0;
  goto <bb 13>;
  # SUCC: 13 (fallthru)

  # BLOCK 9
  # PRED: 13 (true)
  D.6301_24 = pos.y;
  D.6302_25 = (short unsigned int) D.6301_24;
  D.6303_26 = D.6302_25 + 65526;
  D.6304_27 = (Sint16) D.6303_26;
  pos.y = D.6304_27;
  D.6305_28 = game_13(D)->player2_checker;
  if (D.6305_28 == 0)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 (true) 11 (false)

  # BLOCK 10
  # PRED: 9 (true)
  D.6308_29 = display_3(D)->screen;
  D.6309_30 = display_3(D)->bar_green_checker;
  SDL_UpperBlit (D.6309_30, 0B, D.6308_29, &pos);
  goto <bb 12>;
  # SUCC: 12 (fallthru)

  # BLOCK 11
  # PRED: 9 (false)
  D.6311_31 = display_3(D)->screen;
  D.6312_32 = display_3(D)->bar_white_checker;
  SDL_UpperBlit (D.6312_32, 0B, D.6311_31, &pos);
  # SUCC: 12 (fallthru)

  # BLOCK 12
  # PRED: 10 (fallthru) 11 (fallthru)
  i_33 = i_2 + 1;
  # SUCC: 13 (fallthru)

  # BLOCK 13
  # PRED: 8 (fallthru) 12 (fallthru)
  # i_2 = PHI <i_22(8), i_33(12)>
  D.6313_23 = gameState_7(D)->zones[27].nb_checkers;
  if (D.6313_23 > i_2)
    goto <bb 9>;
  else
    goto <bb 14>;
  # SUCC: 9 (true) 14 (false)

  # BLOCK 14
  # PRED: 13 (false)
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (display_3(D) - 3 )
Partition 4 (D.6284_4 - 4 )
Partition 5 (D.6285_5 - 5 )
Partition 6 (i_6 - 6 )
Partition 7 (gameState_7(D) - 7 )
Partition 8 (D.6298_8 - 8 )
Partition 9 (D.6286_9 - 9 )
Partition 10 (D.6287_10 - 10 )
Partition 11 (D.6288_11 - 11 )
Partition 12 (D.6289_12 - 12 )
Partition 13 (game_13(D) - 13 )
Partition 14 (D.6290_14 - 14 )
Partition 15 (D.6293_15 - 15 )
Partition 16 (D.6294_16 - 16 )
Partition 17 (D.6296_17 - 17 )
Partition 18 (D.6297_18 - 18 )
Partition 19 (i_19 - 19 )
Partition 20 (D.6299_20 - 20 )
Partition 21 (D.6300_21 - 21 )
Partition 22 (i_22 - 22 )
Partition 23 (D.6313_23 - 23 )
Partition 24 (D.6301_24 - 24 )
Partition 25 (D.6302_25 - 25 )
Partition 26 (D.6303_26 - 26 )
Partition 27 (D.6304_27 - 27 )
Partition 28 (D.6305_28 - 28 )
Partition 29 (D.6308_29 - 29 )
Partition 30 (D.6309_30 - 30 )
Partition 31 (D.6311_31 - 31 )
Partition 32 (D.6312_32 - 32 )
Partition 33 (i_33 - 33 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (display_3(D) - 3 )
Partition 3 (i_6 - 6 )
Partition 4 (gameState_7(D) - 7 )
Partition 5 (game_13(D) - 13 )
Partition 6 (i_19 - 19 )
Partition 7 (i_22 - 22 )
Partition 8 (i_33 - 33 )


Live on entry to BB2 : display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB3 : i_1  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB4 : i_1  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB5 : i_1  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB6 : i_1  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB7 : display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB8 : display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB9 : i_2  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB10 : i_2  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB11 : i_2  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB12 : i_2  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB13 : display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB14 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_2
(2147483646) i_1 <-> i_6
(2147483646) i_1 <-> i_19
(2147483646) i_1 <-> i_22
(2147483646) i_1 <-> i_33

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (display_3(D) - 3 )
Partition 3 (i_6 - 6 )
Partition 4 (gameState_7(D) - 7 )
Partition 5 (game_13(D) - 13 )
Partition 6 (i_19 - 19 )
Partition 7 (i_22 - 22 )
Partition 8 (i_33 - 33 )

Coalesce list: (1)i_1 & (2)i_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (6)i_6 [map: 0, 3] : Success -> 0
Coalesce list: (1)i_1 & (19)i_19 [map: 0, 6] : Success -> 0
Coalesce list: (1)i_1 & (22)i_22 [map: 0, 7] : Success -> 0
Coalesce list: (1)i_1 & (33)i_33 [map: 0, 8] : Success -> 0
Coalesce list: (2)i_1 & (33)i_1: Already Coalesced.
Coalesce list: (2)i_1 & (22)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (19)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (6)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 2 6 19 22 33 )
Partition 1 (display_3(D) - 3 )
Partition 2 (D.6284_4 - 4 )
Partition 3 (D.6285_5 - 5 )
Partition 4 (gameState_7(D) - 7 )
Partition 5 (D.6298_8 - 8 )
Partition 6 (D.6286_9 - 9 )
Partition 7 (D.6287_10 - 10 )
Partition 8 (D.6288_11 - 11 )
Partition 9 (D.6289_12 - 12 )
Partition 10 (game_13(D) - 13 )
Partition 11 (D.6290_14 - 14 )
Partition 12 (D.6293_15 - 15 )
Partition 13 (D.6294_16 - 16 )
Partition 14 (D.6296_17 - 17 )
Partition 15 (D.6297_18 - 18 )
Partition 16 (D.6299_20 - 20 )
Partition 17 (D.6300_21 - 21 )
Partition 18 (D.6313_23 - 23 )
Partition 19 (D.6301_24 - 24 )
Partition 20 (D.6302_25 - 25 )
Partition 21 (D.6303_26 - 26 )
Partition 22 (D.6304_27 - 27 )
Partition 23 (D.6305_28 - 28 )
Partition 24 (D.6308_29 - 29 )
Partition 25 (D.6309_30 - 30 )
Partition 26 (D.6311_31 - 31 )
Partition 27 (D.6312_32 - 32 )

Display_DrawOut (struct SDisplay * display, struct SGameState * gameState, struct SGame * game)
{
  unsigned int i;
  struct SDL_Rect pos;
  unsigned int D.6313;
  struct SDL_Surface * D.6312;
  struct SDL_Surface * D.6311;
  struct SDL_Surface * D.6309;
  struct SDL_Surface * D.6308;
  int D.6305;
  Sint16 D.6304;
  short unsigned int D.6303;
  short unsigned int D.6302;
  Sint16 D.6301;
  Sint16 D.6300;
  Sint16 D.6299;
  unsigned int D.6298;
  struct SDL_Surface * D.6297;
  struct SDL_Surface * D.6296;
  struct SDL_Surface * D.6294;
  struct SDL_Surface * D.6293;
  int D.6290;
  Sint16 D.6289;
  short unsigned int D.6288;
  short unsigned int D.6287;
  Sint16 D.6286;
  Sint16 D.6285;
  Sint16 D.6284;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.6284_4 = display_3(D)->positions[25].x;
  pos.x = D.6284_4;
  D.6285_5 = display_3(D)->positions[25].y;
  pos.y = D.6285_5;
  i_6 = 0;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 3
  # PRED: 7 (true)
  D.6286_9 = pos.y;
  D.6287_10 = (short unsigned int) D.6286_9;
  D.6288_11 = D.6287_10 + 10;
  D.6289_12 = (Sint16) D.6288_11;
  pos.y = D.6289_12;
  D.6290_14 = game_13(D)->player1_checker;
  if (D.6290_14 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.6293_15 = display_3(D)->screen;
  D.6294_16 = display_3(D)->bar_green_checker;
  SDL_UpperBlit (D.6294_16, 0B, D.6293_15, &pos);
  goto <bb 6>;
  # SUCC: 6 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  D.6296_17 = display_3(D)->screen;
  D.6297_18 = display_3(D)->bar_white_checker;
  SDL_UpperBlit (D.6297_18, 0B, D.6296_17, &pos);
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (fallthru) 5 (fallthru)
  i_19 = i_1 + 1;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 2 (fallthru) 6 (fallthru)
  # i_1 = PHI <i_6(2), i_19(6)>
  D.6298_8 = gameState_7(D)->zones[25].nb_checkers;
  if (D.6298_8 > i_1)
    goto <bb 3>;
  else
    goto <bb 8>;
  # SUCC: 3 (true) 8 (false)

  # BLOCK 8
  # PRED: 7 (false)
  D.6299_20 = display_3(D)->positions[27].x;
  pos.x = D.6299_20;
  D.6300_21 = display_3(D)->positions[27].y;
  pos.y = D.6300_21;
  i_22 = 0;
  goto <bb 13>;
  # SUCC: 13 (fallthru)

  # BLOCK 9
  # PRED: 13 (true)
  D.6301_24 = pos.y;
  D.6302_25 = (short unsigned int) D.6301_24;
  D.6303_26 = D.6302_25 + 65526;
  D.6304_27 = (Sint16) D.6303_26;
  pos.y = D.6304_27;
  D.6305_28 = game_13(D)->player2_checker;
  if (D.6305_28 == 0)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 (true) 11 (false)

  # BLOCK 10
  # PRED: 9 (true)
  D.6308_29 = display_3(D)->screen;
  D.6309_30 = display_3(D)->bar_green_checker;
  SDL_UpperBlit (D.6309_30, 0B, D.6308_29, &pos);
  goto <bb 12>;
  # SUCC: 12 (fallthru)

  # BLOCK 11
  # PRED: 9 (false)
  D.6311_31 = display_3(D)->screen;
  D.6312_32 = display_3(D)->bar_white_checker;
  SDL_UpperBlit (D.6312_32, 0B, D.6311_31, &pos);
  # SUCC: 12 (fallthru)

  # BLOCK 12
  # PRED: 10 (fallthru) 11 (fallthru)
  i_33 = i_2 + 1;
  # SUCC: 13 (fallthru)

  # BLOCK 13
  # PRED: 8 (fallthru) 12 (fallthru)
  # i_2 = PHI <i_22(8), i_33(12)>
  D.6313_23 = gameState_7(D)->zones[27].nb_checkers;
  if (D.6313_23 > i_2)
    goto <bb 9>;
  else
    goto <bb 14>;
  # SUCC: 9 (true) 14 (false)

  # BLOCK 14
  # PRED: 13 (false)
  return;
  # SUCC: EXIT

}


Partition 0: size 4 align 4
	i_1, offset 0
Partition 1: size 8 align 2
	pos, offset 0

;; Generating RTL for gimple basic block 2

;; D.6284_4 = display_3(D)->positions[25].x;

(insn 5 4 6 (set (reg/f:SI 83)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:390 -1
     (nil))

(insn 6 5 0 (set (reg:HI 59 [ D.6284 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 83)
                (const_int 332 [0x14c])) [0 display_3(D)->positions[25].x+0 S2 A32])) src/gui.c:390 -1
     (nil))

;; pos.x = D.6284_4;

(insn 7 6 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 pos.x+0 S2 A32])
        (reg:HI 59 [ D.6284 ])) src/gui.c:390 -1
     (nil))

;; D.6285_5 = display_3(D)->positions[25].y;

(insn 8 7 9 (set (reg/f:SI 84)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:391 -1
     (nil))

(insn 9 8 0 (set (reg:HI 60 [ D.6285 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 84)
                (const_int 334 [0x14e])) [0 display_3(D)->positions[25].y+0 S2 A16])) src/gui.c:391 -1
     (nil))

;; pos.y = D.6285_5;

(insn 10 9 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 60 [ D.6285 ])) src/gui.c:391 -1
     (nil))

;; i_6 = 0;

(insn 11 10 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:392 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; D.6286_9 = pos.y;

(insn 15 14 0 (set (reg:HI 62 [ D.6286 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])) src/gui.c:394 -1
     (nil))

;; D.6287_10 = (short unsigned int) D.6286_9;

(insn 16 15 0 (set (reg:HI 63 [ D.6287 ])
        (reg:HI 62 [ D.6286 ])) src/gui.c:394 -1
     (nil))

;; D.6288_11 = D.6287_10 + 10;

(insn 17 16 0 (parallel [
            (set (reg:HI 64 [ D.6288 ])
                (plus:HI (reg:HI 63 [ D.6287 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:394 -1
     (nil))

;; D.6289_12 = (Sint16) D.6288_11;

(insn 18 17 0 (set (reg:HI 65 [ D.6289 ])
        (reg:HI 64 [ D.6288 ])) src/gui.c:394 -1
     (nil))

;; pos.y = D.6289_12;

(insn 19 18 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 65 [ D.6289 ])) src/gui.c:394 -1
     (nil))

;; D.6290_14 = game_13(D)->player1_checker;

(insn 20 19 21 (set (reg/f:SI 85)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:395 -1
     (nil))

(insn 21 20 0 (set (reg:SI 66 [ D.6290 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 85)
                (const_int 8 [0x8])) [0 game_13(D)->player1_checker+0 S4 A32])) src/gui.c:395 -1
     (nil))

;; if (D.6290_14 == 0)

(insn 22 21 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 66 [ D.6290 ])
            (const_int 0 [0]))) src/gui.c:395 -1
     (nil))

(jump_insn 23 22 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:395 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; D.6293_15 = display_3(D)->screen;

(insn 25 24 26 (set (reg/f:SI 86)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:396 -1
     (nil))

(insn 26 25 0 (set (reg/f:SI 67 [ D.6293 ])
        (mem/s/f/j:SI (reg/f:SI 86) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:396 -1
     (nil))

;; D.6294_16 = display_3(D)->bar_green_checker;

(insn 27 26 28 (set (reg/f:SI 87)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:396 -1
     (nil))

(insn 28 27 0 (set (reg/f:SI 68 [ D.6294 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 87)
                (const_int 52 [0x34])) [0 display_3(D)->bar_green_checker+0 S4 A32])) src/gui.c:396 -1
     (nil))

;; SDL_UpperBlit (D.6294_16, 0B, D.6293_15, &pos);

(insn 29 28 30 (parallel [
            (set (reg:SI 88)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:396 -1
     (nil))

(insn 30 29 31 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 88)) src/gui.c:396 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 31 30 32 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 67 [ D.6293 ])) src/gui.c:396 -1
     (nil))

(insn 32 31 33 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:396 -1
     (nil))

(insn 33 32 34 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 68 [ D.6294 ])) src/gui.c:396 -1
     (nil))

(call_insn 34 33 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:396 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 37 36 38 43 "" [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; D.6296_17 = display_3(D)->screen;

(insn 39 38 40 (set (reg/f:SI 89)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:398 -1
     (nil))

(insn 40 39 0 (set (reg/f:SI 69 [ D.6296 ])
        (mem/s/f/j:SI (reg/f:SI 89) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:398 -1
     (nil))

;; D.6297_18 = display_3(D)->bar_white_checker;

(insn 41 40 42 (set (reg/f:SI 90)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:398 -1
     (nil))

(insn 42 41 0 (set (reg/f:SI 70 [ D.6297 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 90)
                (const_int 56 [0x38])) [0 display_3(D)->bar_white_checker+0 S4 A32])) src/gui.c:398 -1
     (nil))

;; SDL_UpperBlit (D.6297_18, 0B, D.6296_17, &pos);

(insn 43 42 44 (parallel [
            (set (reg:SI 91)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:398 -1
     (nil))

(insn 44 43 45 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 91)) src/gui.c:398 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 45 44 46 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 69 [ D.6296 ])) src/gui.c:398 -1
     (nil))

(insn 46 45 47 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:398 -1
     (nil))

(insn 47 46 48 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 70 [ D.6297 ])) src/gui.c:398 -1
     (nil))

(call_insn 48 47 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:398 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 49 48 50 44 "" [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; i_19 = i_1 + 1;

(insn 51 50 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:392 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 52 51 53 42 "" [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; D.6298_8 = gameState_7(D)->zones[25].nb_checkers;

(insn 54 53 55 (set (reg/f:SI 92)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:392 -1
     (nil))

(insn 55 54 0 (set (reg:SI 61 [ D.6298 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 92)
                (const_int 204 [0xcc])) [0 gameState_7(D)->zones[25].nb_checkers+0 S4 A32])) src/gui.c:392 -1
     (nil))

;; if (D.6298_8 > i_1)

(insn 57 55 58 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 61 [ D.6298 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) src/gui.c:392 -1
     (nil))

(jump_insn 58 57 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) src/gui.c:392 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; D.6299_20 = display_3(D)->positions[27].x;

(insn 60 59 61 (set (reg/f:SI 93)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:400 -1
     (nil))

(insn 61 60 0 (set (reg:HI 71 [ D.6299 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 93)
                (const_int 348 [0x15c])) [0 display_3(D)->positions[27].x+0 S2 A32])) src/gui.c:400 -1
     (nil))

;; pos.x = D.6299_20;

(insn 62 61 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 pos.x+0 S2 A32])
        (reg:HI 71 [ D.6299 ])) src/gui.c:400 -1
     (nil))

;; D.6300_21 = display_3(D)->positions[27].y;

(insn 63 62 64 (set (reg/f:SI 94)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:401 -1
     (nil))

(insn 64 63 0 (set (reg:HI 72 [ D.6300 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 94)
                (const_int 350 [0x15e])) [0 display_3(D)->positions[27].y+0 S2 A16])) src/gui.c:401 -1
     (nil))

;; pos.y = D.6300_21;

(insn 65 64 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 72 [ D.6300 ])) src/gui.c:401 -1
     (nil))

;; i_22 = 0;

(insn 66 65 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:402 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; D.6301_24 = pos.y;

(insn 70 69 0 (set (reg:HI 74 [ D.6301 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])) src/gui.c:404 -1
     (nil))

;; D.6302_25 = (short unsigned int) D.6301_24;

(insn 71 70 0 (set (reg:HI 75 [ D.6302 ])
        (reg:HI 74 [ D.6301 ])) src/gui.c:404 -1
     (nil))

;; D.6303_26 = D.6302_25 + 65526;

(insn 72 71 0 (parallel [
            (set (reg:HI 76 [ D.6303 ])
                (plus:HI (reg:HI 75 [ D.6302 ])
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:404 -1
     (nil))

;; D.6304_27 = (Sint16) D.6303_26;

(insn 73 72 0 (set (reg:HI 77 [ D.6304 ])
        (reg:HI 76 [ D.6303 ])) src/gui.c:404 -1
     (nil))

;; pos.y = D.6304_27;

(insn 74 73 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 77 [ D.6304 ])) src/gui.c:404 -1
     (nil))

;; D.6305_28 = game_13(D)->player2_checker;

(insn 75 74 76 (set (reg/f:SI 95)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:405 -1
     (nil))

(insn 76 75 0 (set (reg:SI 78 [ D.6305 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 95)
                (const_int 12 [0xc])) [0 game_13(D)->player2_checker+0 S4 A32])) src/gui.c:405 -1
     (nil))

;; if (D.6305_28 == 0)

(insn 77 76 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78 [ D.6305 ])
            (const_int 0 [0]))) src/gui.c:405 -1
     (nil))

(jump_insn 78 77 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:405 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; D.6308_29 = display_3(D)->screen;

(insn 80 79 81 (set (reg/f:SI 96)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:406 -1
     (nil))

(insn 81 80 0 (set (reg/f:SI 79 [ D.6308 ])
        (mem/s/f/j:SI (reg/f:SI 96) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:406 -1
     (nil))

;; D.6309_30 = display_3(D)->bar_green_checker;

(insn 82 81 83 (set (reg/f:SI 97)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:406 -1
     (nil))

(insn 83 82 0 (set (reg/f:SI 80 [ D.6309 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 97)
                (const_int 52 [0x34])) [0 display_3(D)->bar_green_checker+0 S4 A32])) src/gui.c:406 -1
     (nil))

;; SDL_UpperBlit (D.6309_30, 0B, D.6308_29, &pos);

(insn 84 83 85 (parallel [
            (set (reg:SI 98)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:406 -1
     (nil))

(insn 85 84 86 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 98)) src/gui.c:406 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 86 85 87 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 79 [ D.6308 ])) src/gui.c:406 -1
     (nil))

(insn 87 86 88 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:406 -1
     (nil))

(insn 88 87 89 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 80 [ D.6309 ])) src/gui.c:406 -1
     (nil))

(call_insn 89 88 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:406 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 92 91 93 47 "" [0 uses])

(note 93 92 0 NOTE_INSN_BASIC_BLOCK)

;; D.6311_31 = display_3(D)->screen;

(insn 94 93 95 (set (reg/f:SI 99)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:408 -1
     (nil))

(insn 95 94 0 (set (reg/f:SI 81 [ D.6311 ])
        (mem/s/f/j:SI (reg/f:SI 99) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:408 -1
     (nil))

;; D.6312_32 = display_3(D)->bar_white_checker;

(insn 96 95 97 (set (reg/f:SI 100)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:408 -1
     (nil))

(insn 97 96 0 (set (reg/f:SI 82 [ D.6312 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 100)
                (const_int 56 [0x38])) [0 display_3(D)->bar_white_checker+0 S4 A32])) src/gui.c:408 -1
     (nil))

;; SDL_UpperBlit (D.6312_32, 0B, D.6311_31, &pos);

(insn 98 97 99 (parallel [
            (set (reg:SI 101)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:408 -1
     (nil))

(insn 99 98 100 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 101)) src/gui.c:408 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 100 99 101 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 81 [ D.6311 ])) src/gui.c:408 -1
     (nil))

(insn 101 100 102 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:408 -1
     (nil))

(insn 102 101 103 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 82 [ D.6312 ])) src/gui.c:408 -1
     (nil))

(call_insn 103 102 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:408 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 104 103 105 48 "" [0 uses])

(note 105 104 0 NOTE_INSN_BASIC_BLOCK)

;; i_33 = i_2 + 1;

(insn 106 105 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:402 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 107 106 108 46 "" [0 uses])

(note 108 107 0 NOTE_INSN_BASIC_BLOCK)

;; D.6313_23 = gameState_7(D)->zones[27].nb_checkers;

(insn 109 108 110 (set (reg/f:SI 102)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:402 -1
     (nil))

(insn 110 109 0 (set (reg:SI 73 [ D.6313 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 102)
                (const_int 220 [0xdc])) [0 gameState_7(D)->zones[27].nb_checkers+0 S4 A32])) src/gui.c:402 -1
     (nil))

;; if (D.6313_23 > i_2)

(insn 112 110 113 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 73 [ D.6313 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) src/gui.c:402 -1
     (nil))

(jump_insn 113 112 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) src/gui.c:402 -1
     (nil))

;; Generating RTL for gimple basic block 14


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (reg/f:SI 83)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:390 -1
     (nil))

(insn 6 5 7 3 (set (reg:HI 59 [ D.6284 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 83)
                (const_int 332 [0x14c])) [0 display_3(D)->positions[25].x+0 S2 A32])) src/gui.c:390 -1
     (nil))

(insn 7 6 8 3 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 pos.x+0 S2 A32])
        (reg:HI 59 [ D.6284 ])) src/gui.c:390 -1
     (nil))

(insn 8 7 9 3 (set (reg/f:SI 84)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:391 -1
     (nil))

(insn 9 8 10 3 (set (reg:HI 60 [ D.6285 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 84)
                (const_int 334 [0x14e])) [0 display_3(D)->positions[25].y+0 S2 A16])) src/gui.c:391 -1
     (nil))

(insn 10 9 11 3 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 60 [ D.6285 ])) src/gui.c:391 -1
     (nil))

(insn 11 10 12 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:392 -1
     (nil))

(jump_insn 12 11 13 3 (set (pc)
        (label_ref 52)) src/gui.c:392 -1
     (nil)
 -> 52)
;; End of basic block 3 -> ( 8)

;; Succ edge  8

(barrier 13 12 56)

;; Start of basic block ( 8) -> 4
;; Pred edge  8
(code_label 56 13 14 4 45 "" [1 uses])

(note 14 56 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 (set (reg:HI 62 [ D.6286 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])) src/gui.c:394 -1
     (nil))

(insn 16 15 17 4 (set (reg:HI 63 [ D.6287 ])
        (reg:HI 62 [ D.6286 ])) src/gui.c:394 -1
     (nil))

(insn 17 16 18 4 (parallel [
            (set (reg:HI 64 [ D.6288 ])
                (plus:HI (reg:HI 63 [ D.6287 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:394 -1
     (nil))

(insn 18 17 19 4 (set (reg:HI 65 [ D.6289 ])
        (reg:HI 64 [ D.6288 ])) src/gui.c:394 -1
     (nil))

(insn 19 18 20 4 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 65 [ D.6289 ])) src/gui.c:394 -1
     (nil))

(insn 20 19 21 4 (set (reg/f:SI 85)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:395 -1
     (nil))

(insn 21 20 22 4 (set (reg:SI 66 [ D.6290 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 85)
                (const_int 8 [0x8])) [0 game_13(D)->player1_checker+0 S4 A32])) src/gui.c:395 -1
     (nil))

(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 66 [ D.6290 ])
            (const_int 0 [0]))) src/gui.c:395 -1
     (nil))

(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) src/gui.c:395 -1
     (nil)
 -> 37)
;; End of basic block 4 -> ( 5 6)

;; Succ edge  5 (fallthru)
;; Succ edge  6

;; Start of basic block ( 4) -> 5
;; Pred edge  4 (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 (set (reg/f:SI 86)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:396 -1
     (nil))

(insn 26 25 27 5 (set (reg/f:SI 67 [ D.6293 ])
        (mem/s/f/j:SI (reg/f:SI 86) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:396 -1
     (nil))

(insn 27 26 28 5 (set (reg/f:SI 87)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:396 -1
     (nil))

(insn 28 27 29 5 (set (reg/f:SI 68 [ D.6294 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 87)
                (const_int 52 [0x34])) [0 display_3(D)->bar_green_checker+0 S4 A32])) src/gui.c:396 -1
     (nil))

(insn 29 28 30 5 (parallel [
            (set (reg:SI 88)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:396 -1
     (nil))

(insn 30 29 31 5 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 88)) src/gui.c:396 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 31 30 32 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 67 [ D.6293 ])) src/gui.c:396 -1
     (nil))

(insn 32 31 33 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:396 -1
     (nil))

(insn 33 32 34 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 68 [ D.6294 ])) src/gui.c:396 -1
     (nil))

(call_insn 34 33 35 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:396 -1
     (nil)
    (nil))

(jump_insn 35 34 36 5 (set (pc)
        (label_ref 49)) src/gui.c:396 -1
     (nil)
 -> 49)
;; End of basic block 5 -> ( 7)

;; Succ edge  7

(barrier 36 35 37)

;; Start of basic block ( 4) -> 6
;; Pred edge  4
(code_label 37 36 38 6 43 "" [1 uses])

(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 6 (set (reg/f:SI 89)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:398 -1
     (nil))

(insn 40 39 41 6 (set (reg/f:SI 69 [ D.6296 ])
        (mem/s/f/j:SI (reg/f:SI 89) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:398 -1
     (nil))

(insn 41 40 42 6 (set (reg/f:SI 90)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:398 -1
     (nil))

(insn 42 41 43 6 (set (reg/f:SI 70 [ D.6297 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 90)
                (const_int 56 [0x38])) [0 display_3(D)->bar_white_checker+0 S4 A32])) src/gui.c:398 -1
     (nil))

(insn 43 42 44 6 (parallel [
            (set (reg:SI 91)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:398 -1
     (nil))

(insn 44 43 45 6 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 91)) src/gui.c:398 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 45 44 46 6 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 69 [ D.6296 ])) src/gui.c:398 -1
     (nil))

(insn 46 45 47 6 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:398 -1
     (nil))

(insn 47 46 48 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 70 [ D.6297 ])) src/gui.c:398 -1
     (nil))

(call_insn 48 47 49 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:398 -1
     (nil)
    (nil))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 5 6) -> 7
;; Pred edge  5
;; Pred edge  6 (fallthru)
(code_label 49 48 50 7 44 "" [1 uses])

(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 7 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:392 -1
     (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 3 7) -> 8
;; Pred edge  3
;; Pred edge  7 (fallthru)
(code_label 52 51 53 8 42 "" [1 uses])

(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 8 (set (reg/f:SI 92)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:392 -1
     (nil))

(insn 55 54 57 8 (set (reg:SI 61 [ D.6298 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 92)
                (const_int 204 [0xcc])) [0 gameState_7(D)->zones[25].nb_checkers+0 S4 A32])) src/gui.c:392 -1
     (nil))

(insn 57 55 58 8 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 61 [ D.6298 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) src/gui.c:392 -1
     (nil))

(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) src/gui.c:392 -1
     (nil)
 -> 56)
;; End of basic block 8 -> ( 4 9)

;; Succ edge  4
;; Succ edge  9 (fallthru)

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 9 (set (reg/f:SI 93)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:400 -1
     (nil))

(insn 61 60 62 9 (set (reg:HI 71 [ D.6299 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 93)
                (const_int 348 [0x15c])) [0 display_3(D)->positions[27].x+0 S2 A32])) src/gui.c:400 -1
     (nil))

(insn 62 61 63 9 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 pos.x+0 S2 A32])
        (reg:HI 71 [ D.6299 ])) src/gui.c:400 -1
     (nil))

(insn 63 62 64 9 (set (reg/f:SI 94)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:401 -1
     (nil))

(insn 64 63 65 9 (set (reg:HI 72 [ D.6300 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 94)
                (const_int 350 [0x15e])) [0 display_3(D)->positions[27].y+0 S2 A16])) src/gui.c:401 -1
     (nil))

(insn 65 64 66 9 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 72 [ D.6300 ])) src/gui.c:401 -1
     (nil))

(insn 66 65 67 9 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:402 -1
     (nil))

(jump_insn 67 66 68 9 (set (pc)
        (label_ref 107)) src/gui.c:402 -1
     (nil)
 -> 107)
;; End of basic block 9 -> ( 14)

;; Succ edge  14

(barrier 68 67 111)

;; Start of basic block ( 14) -> 10
;; Pred edge  14
(code_label 111 68 69 10 49 "" [1 uses])

(note 69 111 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 71 10 (set (reg:HI 74 [ D.6301 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])) src/gui.c:404 -1
     (nil))

(insn 71 70 72 10 (set (reg:HI 75 [ D.6302 ])
        (reg:HI 74 [ D.6301 ])) src/gui.c:404 -1
     (nil))

(insn 72 71 73 10 (parallel [
            (set (reg:HI 76 [ D.6303 ])
                (plus:HI (reg:HI 75 [ D.6302 ])
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:404 -1
     (nil))

(insn 73 72 74 10 (set (reg:HI 77 [ D.6304 ])
        (reg:HI 76 [ D.6303 ])) src/gui.c:404 -1
     (nil))

(insn 74 73 75 10 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 77 [ D.6304 ])) src/gui.c:404 -1
     (nil))

(insn 75 74 76 10 (set (reg/f:SI 95)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:405 -1
     (nil))

(insn 76 75 77 10 (set (reg:SI 78 [ D.6305 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 95)
                (const_int 12 [0xc])) [0 game_13(D)->player2_checker+0 S4 A32])) src/gui.c:405 -1
     (nil))

(insn 77 76 78 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78 [ D.6305 ])
            (const_int 0 [0]))) src/gui.c:405 -1
     (nil))

(jump_insn 78 77 79 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) src/gui.c:405 -1
     (nil)
 -> 92)
;; End of basic block 10 -> ( 11 12)

;; Succ edge  11 (fallthru)
;; Succ edge  12

;; Start of basic block ( 10) -> 11
;; Pred edge  10 (fallthru)
(note 79 78 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 11 (set (reg/f:SI 96)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:406 -1
     (nil))

(insn 81 80 82 11 (set (reg/f:SI 79 [ D.6308 ])
        (mem/s/f/j:SI (reg/f:SI 96) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:406 -1
     (nil))

(insn 82 81 83 11 (set (reg/f:SI 97)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:406 -1
     (nil))

(insn 83 82 84 11 (set (reg/f:SI 80 [ D.6309 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 97)
                (const_int 52 [0x34])) [0 display_3(D)->bar_green_checker+0 S4 A32])) src/gui.c:406 -1
     (nil))

(insn 84 83 85 11 (parallel [
            (set (reg:SI 98)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:406 -1
     (nil))

(insn 85 84 86 11 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 98)) src/gui.c:406 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 86 85 87 11 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 79 [ D.6308 ])) src/gui.c:406 -1
     (nil))

(insn 87 86 88 11 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:406 -1
     (nil))

(insn 88 87 89 11 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 80 [ D.6309 ])) src/gui.c:406 -1
     (nil))

(call_insn 89 88 90 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:406 -1
     (nil)
    (nil))

(jump_insn 90 89 91 11 (set (pc)
        (label_ref 104)) src/gui.c:406 -1
     (nil)
 -> 104)
;; End of basic block 11 -> ( 13)

;; Succ edge  13

(barrier 91 90 92)

;; Start of basic block ( 10) -> 12
;; Pred edge  10
(code_label 92 91 93 12 47 "" [1 uses])

(note 93 92 94 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 95 12 (set (reg/f:SI 99)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:408 -1
     (nil))

(insn 95 94 96 12 (set (reg/f:SI 81 [ D.6311 ])
        (mem/s/f/j:SI (reg/f:SI 99) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:408 -1
     (nil))

(insn 96 95 97 12 (set (reg/f:SI 100)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:408 -1
     (nil))

(insn 97 96 98 12 (set (reg/f:SI 82 [ D.6312 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 100)
                (const_int 56 [0x38])) [0 display_3(D)->bar_white_checker+0 S4 A32])) src/gui.c:408 -1
     (nil))

(insn 98 97 99 12 (parallel [
            (set (reg:SI 101)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:408 -1
     (nil))

(insn 99 98 100 12 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 101)) src/gui.c:408 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 100 99 101 12 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 81 [ D.6311 ])) src/gui.c:408 -1
     (nil))

(insn 101 100 102 12 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:408 -1
     (nil))

(insn 102 101 103 12 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 82 [ D.6312 ])) src/gui.c:408 -1
     (nil))

(call_insn 103 102 104 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:408 -1
     (nil)
    (nil))
;; End of basic block 12 -> ( 13)

;; Succ edge  13 (fallthru)

;; Start of basic block ( 11 12) -> 13
;; Pred edge  11
;; Pred edge  12 (fallthru)
(code_label 104 103 105 13 48 "" [1 uses])

(note 105 104 106 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 107 13 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:402 -1
     (nil))
;; End of basic block 13 -> ( 14)

;; Succ edge  14 (fallthru)

;; Start of basic block ( 9 13) -> 14
;; Pred edge  9
;; Pred edge  13 (fallthru)
(code_label 107 106 108 14 46 "" [1 uses])

(note 108 107 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 14 (set (reg/f:SI 102)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:402 -1
     (nil))

(insn 110 109 112 14 (set (reg:SI 73 [ D.6313 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 102)
                (const_int 220 [0xdc])) [0 gameState_7(D)->zones[27].nb_checkers+0 S4 A32])) src/gui.c:402 -1
     (nil))

(insn 112 110 113 14 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 73 [ D.6313 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) src/gui.c:402 -1
     (nil))

(jump_insn 113 112 114 14 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) src/gui.c:402 -1
     (nil)
 -> 111)
;; End of basic block 14 -> ( 10 15)

;; Succ edge  10
;; Succ edge  15 (fallthru)

;; Start of basic block ( 14) -> 15
;; Pred edge  14 (fallthru)
(note 114 113 115 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 15 -> ( 16)

;; Succ edge  16 (fallthru)

;; Start of basic block ( 15) -> 16
;; Pred edge  15 (fallthru)
(code_label 115 114 116 16 41 "" [0 uses])

(note 116 115 0 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 16 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Display_DrawBar (Display_DrawBar)

Display_DrawBar (struct SDisplay * display, struct SGameState * gameState, struct SGame * game)
{
  unsigned int i;
  struct SDL_Rect pos;
  unsigned int D.6283;
  struct SDL_Surface * D.6282;
  struct SDL_Surface * D.6281;
  struct SDL_Surface * D.6279;
  struct SDL_Surface * D.6278;
  int D.6275;
  Sint16 D.6274;
  short unsigned int D.6273;
  short unsigned int D.6272;
  Sint16 D.6271;
  Sint16 D.6270;
  Sint16 D.6269;
  unsigned int D.6268;
  struct SDL_Surface * D.6267;
  struct SDL_Surface * D.6266;
  struct SDL_Surface * D.6264;
  struct SDL_Surface * D.6263;
  int D.6260;
  Sint16 D.6259;
  short unsigned int D.6258;
  short unsigned int D.6257;
  Sint16 D.6256;
  Sint16 D.6255;
  Sint16 D.6254;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.6254_4 = display_3(D)->positions[24].x;
  pos.x = D.6254_4;
  D.6255_5 = display_3(D)->positions[24].y;
  pos.y = D.6255_5;
  i_6 = 0;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 3
  # PRED: 7 (true)
  D.6256_9 = pos.y;
  D.6257_10 = (short unsigned int) D.6256_9;
  D.6258_11 = D.6257_10 + 10;
  D.6259_12 = (Sint16) D.6258_11;
  pos.y = D.6259_12;
  D.6260_14 = game_13(D)->player1_checker;
  if (D.6260_14 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.6263_15 = display_3(D)->screen;
  D.6264_16 = display_3(D)->green_checker;
  SDL_UpperBlit (D.6264_16, 0B, D.6263_15, &pos);
  goto <bb 6>;
  # SUCC: 6 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  D.6266_17 = display_3(D)->screen;
  D.6267_18 = display_3(D)->white_checker;
  SDL_UpperBlit (D.6267_18, 0B, D.6266_17, &pos);
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (fallthru) 5 (fallthru)
  i_19 = i_1 + 1;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 2 (fallthru) 6 (fallthru)
  # i_1 = PHI <i_6(2), i_19(6)>
  D.6268_8 = gameState_7(D)->zones[24].nb_checkers;
  if (D.6268_8 > i_1)
    goto <bb 3>;
  else
    goto <bb 8>;
  # SUCC: 3 (true) 8 (false)

  # BLOCK 8
  # PRED: 7 (false)
  D.6269_20 = display_3(D)->positions[26].x;
  pos.x = D.6269_20;
  D.6270_21 = display_3(D)->positions[26].y;
  pos.y = D.6270_21;
  i_22 = 0;
  goto <bb 13>;
  # SUCC: 13 (fallthru)

  # BLOCK 9
  # PRED: 13 (true)
  D.6271_24 = pos.y;
  D.6272_25 = (short unsigned int) D.6271_24;
  D.6273_26 = D.6272_25 + 65526;
  D.6274_27 = (Sint16) D.6273_26;
  pos.y = D.6274_27;
  D.6275_28 = game_13(D)->player2_checker;
  if (D.6275_28 == 0)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 (true) 11 (false)

  # BLOCK 10
  # PRED: 9 (true)
  D.6278_29 = display_3(D)->screen;
  D.6279_30 = display_3(D)->green_checker;
  SDL_UpperBlit (D.6279_30, 0B, D.6278_29, &pos);
  goto <bb 12>;
  # SUCC: 12 (fallthru)

  # BLOCK 11
  # PRED: 9 (false)
  D.6281_31 = display_3(D)->screen;
  D.6282_32 = display_3(D)->white_checker;
  SDL_UpperBlit (D.6282_32, 0B, D.6281_31, &pos);
  # SUCC: 12 (fallthru)

  # BLOCK 12
  # PRED: 10 (fallthru) 11 (fallthru)
  i_33 = i_2 + 1;
  # SUCC: 13 (fallthru)

  # BLOCK 13
  # PRED: 8 (fallthru) 12 (fallthru)
  # i_2 = PHI <i_22(8), i_33(12)>
  D.6283_23 = gameState_7(D)->zones[26].nb_checkers;
  if (D.6283_23 > i_2)
    goto <bb 9>;
  else
    goto <bb 14>;
  # SUCC: 9 (true) 14 (false)

  # BLOCK 14
  # PRED: 13 (false)
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (display_3(D) - 3 )
Partition 4 (D.6254_4 - 4 )
Partition 5 (D.6255_5 - 5 )
Partition 6 (i_6 - 6 )
Partition 7 (gameState_7(D) - 7 )
Partition 8 (D.6268_8 - 8 )
Partition 9 (D.6256_9 - 9 )
Partition 10 (D.6257_10 - 10 )
Partition 11 (D.6258_11 - 11 )
Partition 12 (D.6259_12 - 12 )
Partition 13 (game_13(D) - 13 )
Partition 14 (D.6260_14 - 14 )
Partition 15 (D.6263_15 - 15 )
Partition 16 (D.6264_16 - 16 )
Partition 17 (D.6266_17 - 17 )
Partition 18 (D.6267_18 - 18 )
Partition 19 (i_19 - 19 )
Partition 20 (D.6269_20 - 20 )
Partition 21 (D.6270_21 - 21 )
Partition 22 (i_22 - 22 )
Partition 23 (D.6283_23 - 23 )
Partition 24 (D.6271_24 - 24 )
Partition 25 (D.6272_25 - 25 )
Partition 26 (D.6273_26 - 26 )
Partition 27 (D.6274_27 - 27 )
Partition 28 (D.6275_28 - 28 )
Partition 29 (D.6278_29 - 29 )
Partition 30 (D.6279_30 - 30 )
Partition 31 (D.6281_31 - 31 )
Partition 32 (D.6282_32 - 32 )
Partition 33 (i_33 - 33 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (display_3(D) - 3 )
Partition 3 (i_6 - 6 )
Partition 4 (gameState_7(D) - 7 )
Partition 5 (game_13(D) - 13 )
Partition 6 (i_19 - 19 )
Partition 7 (i_22 - 22 )
Partition 8 (i_33 - 33 )


Live on entry to BB2 : display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB3 : i_1  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB4 : i_1  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB5 : i_1  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB6 : i_1  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB7 : display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB8 : display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB9 : i_2  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB10 : i_2  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB11 : i_2  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB12 : i_2  display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB13 : display_3(D)  gameState_7(D)  game_13(D)  

Live on entry to BB14 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_2
(2147483646) i_1 <-> i_6
(2147483646) i_1 <-> i_19
(2147483646) i_1 <-> i_22
(2147483646) i_1 <-> i_33

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (display_3(D) - 3 )
Partition 3 (i_6 - 6 )
Partition 4 (gameState_7(D) - 7 )
Partition 5 (game_13(D) - 13 )
Partition 6 (i_19 - 19 )
Partition 7 (i_22 - 22 )
Partition 8 (i_33 - 33 )

Coalesce list: (1)i_1 & (2)i_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (6)i_6 [map: 0, 3] : Success -> 0
Coalesce list: (1)i_1 & (19)i_19 [map: 0, 6] : Success -> 0
Coalesce list: (1)i_1 & (22)i_22 [map: 0, 7] : Success -> 0
Coalesce list: (1)i_1 & (33)i_33 [map: 0, 8] : Success -> 0
Coalesce list: (2)i_1 & (33)i_1: Already Coalesced.
Coalesce list: (2)i_1 & (22)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (19)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (6)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 2 6 19 22 33 )
Partition 1 (display_3(D) - 3 )
Partition 2 (D.6254_4 - 4 )
Partition 3 (D.6255_5 - 5 )
Partition 4 (gameState_7(D) - 7 )
Partition 5 (D.6268_8 - 8 )
Partition 6 (D.6256_9 - 9 )
Partition 7 (D.6257_10 - 10 )
Partition 8 (D.6258_11 - 11 )
Partition 9 (D.6259_12 - 12 )
Partition 10 (game_13(D) - 13 )
Partition 11 (D.6260_14 - 14 )
Partition 12 (D.6263_15 - 15 )
Partition 13 (D.6264_16 - 16 )
Partition 14 (D.6266_17 - 17 )
Partition 15 (D.6267_18 - 18 )
Partition 16 (D.6269_20 - 20 )
Partition 17 (D.6270_21 - 21 )
Partition 18 (D.6283_23 - 23 )
Partition 19 (D.6271_24 - 24 )
Partition 20 (D.6272_25 - 25 )
Partition 21 (D.6273_26 - 26 )
Partition 22 (D.6274_27 - 27 )
Partition 23 (D.6275_28 - 28 )
Partition 24 (D.6278_29 - 29 )
Partition 25 (D.6279_30 - 30 )
Partition 26 (D.6281_31 - 31 )
Partition 27 (D.6282_32 - 32 )

Display_DrawBar (struct SDisplay * display, struct SGameState * gameState, struct SGame * game)
{
  unsigned int i;
  struct SDL_Rect pos;
  unsigned int D.6283;
  struct SDL_Surface * D.6282;
  struct SDL_Surface * D.6281;
  struct SDL_Surface * D.6279;
  struct SDL_Surface * D.6278;
  int D.6275;
  Sint16 D.6274;
  short unsigned int D.6273;
  short unsigned int D.6272;
  Sint16 D.6271;
  Sint16 D.6270;
  Sint16 D.6269;
  unsigned int D.6268;
  struct SDL_Surface * D.6267;
  struct SDL_Surface * D.6266;
  struct SDL_Surface * D.6264;
  struct SDL_Surface * D.6263;
  int D.6260;
  Sint16 D.6259;
  short unsigned int D.6258;
  short unsigned int D.6257;
  Sint16 D.6256;
  Sint16 D.6255;
  Sint16 D.6254;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.6254_4 = display_3(D)->positions[24].x;
  pos.x = D.6254_4;
  D.6255_5 = display_3(D)->positions[24].y;
  pos.y = D.6255_5;
  i_6 = 0;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 3
  # PRED: 7 (true)
  D.6256_9 = pos.y;
  D.6257_10 = (short unsigned int) D.6256_9;
  D.6258_11 = D.6257_10 + 10;
  D.6259_12 = (Sint16) D.6258_11;
  pos.y = D.6259_12;
  D.6260_14 = game_13(D)->player1_checker;
  if (D.6260_14 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.6263_15 = display_3(D)->screen;
  D.6264_16 = display_3(D)->green_checker;
  SDL_UpperBlit (D.6264_16, 0B, D.6263_15, &pos);
  goto <bb 6>;
  # SUCC: 6 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  D.6266_17 = display_3(D)->screen;
  D.6267_18 = display_3(D)->white_checker;
  SDL_UpperBlit (D.6267_18, 0B, D.6266_17, &pos);
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (fallthru) 5 (fallthru)
  i_19 = i_1 + 1;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 2 (fallthru) 6 (fallthru)
  # i_1 = PHI <i_6(2), i_19(6)>
  D.6268_8 = gameState_7(D)->zones[24].nb_checkers;
  if (D.6268_8 > i_1)
    goto <bb 3>;
  else
    goto <bb 8>;
  # SUCC: 3 (true) 8 (false)

  # BLOCK 8
  # PRED: 7 (false)
  D.6269_20 = display_3(D)->positions[26].x;
  pos.x = D.6269_20;
  D.6270_21 = display_3(D)->positions[26].y;
  pos.y = D.6270_21;
  i_22 = 0;
  goto <bb 13>;
  # SUCC: 13 (fallthru)

  # BLOCK 9
  # PRED: 13 (true)
  D.6271_24 = pos.y;
  D.6272_25 = (short unsigned int) D.6271_24;
  D.6273_26 = D.6272_25 + 65526;
  D.6274_27 = (Sint16) D.6273_26;
  pos.y = D.6274_27;
  D.6275_28 = game_13(D)->player2_checker;
  if (D.6275_28 == 0)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 (true) 11 (false)

  # BLOCK 10
  # PRED: 9 (true)
  D.6278_29 = display_3(D)->screen;
  D.6279_30 = display_3(D)->green_checker;
  SDL_UpperBlit (D.6279_30, 0B, D.6278_29, &pos);
  goto <bb 12>;
  # SUCC: 12 (fallthru)

  # BLOCK 11
  # PRED: 9 (false)
  D.6281_31 = display_3(D)->screen;
  D.6282_32 = display_3(D)->white_checker;
  SDL_UpperBlit (D.6282_32, 0B, D.6281_31, &pos);
  # SUCC: 12 (fallthru)

  # BLOCK 12
  # PRED: 10 (fallthru) 11 (fallthru)
  i_33 = i_2 + 1;
  # SUCC: 13 (fallthru)

  # BLOCK 13
  # PRED: 8 (fallthru) 12 (fallthru)
  # i_2 = PHI <i_22(8), i_33(12)>
  D.6283_23 = gameState_7(D)->zones[26].nb_checkers;
  if (D.6283_23 > i_2)
    goto <bb 9>;
  else
    goto <bb 14>;
  # SUCC: 9 (true) 14 (false)

  # BLOCK 14
  # PRED: 13 (false)
  return;
  # SUCC: EXIT

}


Partition 0: size 4 align 4
	i_1, offset 0
Partition 1: size 8 align 2
	pos, offset 0

;; Generating RTL for gimple basic block 2

;; D.6254_4 = display_3(D)->positions[24].x;

(insn 5 4 6 (set (reg/f:SI 83)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:416 -1
     (nil))

(insn 6 5 0 (set (reg:HI 59 [ D.6254 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 83)
                (const_int 324 [0x144])) [0 display_3(D)->positions[24].x+0 S2 A32])) src/gui.c:416 -1
     (nil))

;; pos.x = D.6254_4;

(insn 7 6 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 pos.x+0 S2 A32])
        (reg:HI 59 [ D.6254 ])) src/gui.c:416 -1
     (nil))

;; D.6255_5 = display_3(D)->positions[24].y;

(insn 8 7 9 (set (reg/f:SI 84)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:417 -1
     (nil))

(insn 9 8 0 (set (reg:HI 60 [ D.6255 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 84)
                (const_int 326 [0x146])) [0 display_3(D)->positions[24].y+0 S2 A16])) src/gui.c:417 -1
     (nil))

;; pos.y = D.6255_5;

(insn 10 9 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 60 [ D.6255 ])) src/gui.c:417 -1
     (nil))

;; i_6 = 0;

(insn 11 10 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:418 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; D.6256_9 = pos.y;

(insn 15 14 0 (set (reg:HI 62 [ D.6256 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])) src/gui.c:420 -1
     (nil))

;; D.6257_10 = (short unsigned int) D.6256_9;

(insn 16 15 0 (set (reg:HI 63 [ D.6257 ])
        (reg:HI 62 [ D.6256 ])) src/gui.c:420 -1
     (nil))

;; D.6258_11 = D.6257_10 + 10;

(insn 17 16 0 (parallel [
            (set (reg:HI 64 [ D.6258 ])
                (plus:HI (reg:HI 63 [ D.6257 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:420 -1
     (nil))

;; D.6259_12 = (Sint16) D.6258_11;

(insn 18 17 0 (set (reg:HI 65 [ D.6259 ])
        (reg:HI 64 [ D.6258 ])) src/gui.c:420 -1
     (nil))

;; pos.y = D.6259_12;

(insn 19 18 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 65 [ D.6259 ])) src/gui.c:420 -1
     (nil))

;; D.6260_14 = game_13(D)->player1_checker;

(insn 20 19 21 (set (reg/f:SI 85)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:421 -1
     (nil))

(insn 21 20 0 (set (reg:SI 66 [ D.6260 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 85)
                (const_int 8 [0x8])) [0 game_13(D)->player1_checker+0 S4 A32])) src/gui.c:421 -1
     (nil))

;; if (D.6260_14 == 0)

(insn 22 21 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 66 [ D.6260 ])
            (const_int 0 [0]))) src/gui.c:421 -1
     (nil))

(jump_insn 23 22 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:421 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; D.6263_15 = display_3(D)->screen;

(insn 25 24 26 (set (reg/f:SI 86)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:422 -1
     (nil))

(insn 26 25 0 (set (reg/f:SI 67 [ D.6263 ])
        (mem/s/f/j:SI (reg/f:SI 86) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:422 -1
     (nil))

;; D.6264_16 = display_3(D)->green_checker;

(insn 27 26 28 (set (reg/f:SI 87)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:422 -1
     (nil))

(insn 28 27 0 (set (reg/f:SI 68 [ D.6264 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 87)
                (const_int 44 [0x2c])) [0 display_3(D)->green_checker+0 S4 A32])) src/gui.c:422 -1
     (nil))

;; SDL_UpperBlit (D.6264_16, 0B, D.6263_15, &pos);

(insn 29 28 30 (parallel [
            (set (reg:SI 88)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:422 -1
     (nil))

(insn 30 29 31 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 88)) src/gui.c:422 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 31 30 32 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 67 [ D.6263 ])) src/gui.c:422 -1
     (nil))

(insn 32 31 33 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:422 -1
     (nil))

(insn 33 32 34 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 68 [ D.6264 ])) src/gui.c:422 -1
     (nil))

(call_insn 34 33 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:422 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 37 36 38 52 "" [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; D.6266_17 = display_3(D)->screen;

(insn 39 38 40 (set (reg/f:SI 89)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:424 -1
     (nil))

(insn 40 39 0 (set (reg/f:SI 69 [ D.6266 ])
        (mem/s/f/j:SI (reg/f:SI 89) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:424 -1
     (nil))

;; D.6267_18 = display_3(D)->white_checker;

(insn 41 40 42 (set (reg/f:SI 90)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:424 -1
     (nil))

(insn 42 41 0 (set (reg/f:SI 70 [ D.6267 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 90)
                (const_int 48 [0x30])) [0 display_3(D)->white_checker+0 S4 A32])) src/gui.c:424 -1
     (nil))

;; SDL_UpperBlit (D.6267_18, 0B, D.6266_17, &pos);

(insn 43 42 44 (parallel [
            (set (reg:SI 91)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:424 -1
     (nil))

(insn 44 43 45 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 91)) src/gui.c:424 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 45 44 46 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 69 [ D.6266 ])) src/gui.c:424 -1
     (nil))

(insn 46 45 47 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:424 -1
     (nil))

(insn 47 46 48 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 70 [ D.6267 ])) src/gui.c:424 -1
     (nil))

(call_insn 48 47 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:424 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 49 48 50 53 "" [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; i_19 = i_1 + 1;

(insn 51 50 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:418 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 52 51 53 51 "" [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; D.6268_8 = gameState_7(D)->zones[24].nb_checkers;

(insn 54 53 55 (set (reg/f:SI 92)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:418 -1
     (nil))

(insn 55 54 0 (set (reg:SI 61 [ D.6268 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 92)
                (const_int 196 [0xc4])) [0 gameState_7(D)->zones[24].nb_checkers+0 S4 A32])) src/gui.c:418 -1
     (nil))

;; if (D.6268_8 > i_1)

(insn 57 55 58 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 61 [ D.6268 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) src/gui.c:418 -1
     (nil))

(jump_insn 58 57 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) src/gui.c:418 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; D.6269_20 = display_3(D)->positions[26].x;

(insn 60 59 61 (set (reg/f:SI 93)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:426 -1
     (nil))

(insn 61 60 0 (set (reg:HI 71 [ D.6269 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 93)
                (const_int 340 [0x154])) [0 display_3(D)->positions[26].x+0 S2 A32])) src/gui.c:426 -1
     (nil))

;; pos.x = D.6269_20;

(insn 62 61 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 pos.x+0 S2 A32])
        (reg:HI 71 [ D.6269 ])) src/gui.c:426 -1
     (nil))

;; D.6270_21 = display_3(D)->positions[26].y;

(insn 63 62 64 (set (reg/f:SI 94)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:427 -1
     (nil))

(insn 64 63 0 (set (reg:HI 72 [ D.6270 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 94)
                (const_int 342 [0x156])) [0 display_3(D)->positions[26].y+0 S2 A16])) src/gui.c:427 -1
     (nil))

;; pos.y = D.6270_21;

(insn 65 64 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 72 [ D.6270 ])) src/gui.c:427 -1
     (nil))

;; i_22 = 0;

(insn 66 65 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:428 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; D.6271_24 = pos.y;

(insn 70 69 0 (set (reg:HI 74 [ D.6271 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])) src/gui.c:430 -1
     (nil))

;; D.6272_25 = (short unsigned int) D.6271_24;

(insn 71 70 0 (set (reg:HI 75 [ D.6272 ])
        (reg:HI 74 [ D.6271 ])) src/gui.c:430 -1
     (nil))

;; D.6273_26 = D.6272_25 + 65526;

(insn 72 71 0 (parallel [
            (set (reg:HI 76 [ D.6273 ])
                (plus:HI (reg:HI 75 [ D.6272 ])
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:430 -1
     (nil))

;; D.6274_27 = (Sint16) D.6273_26;

(insn 73 72 0 (set (reg:HI 77 [ D.6274 ])
        (reg:HI 76 [ D.6273 ])) src/gui.c:430 -1
     (nil))

;; pos.y = D.6274_27;

(insn 74 73 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 77 [ D.6274 ])) src/gui.c:430 -1
     (nil))

;; D.6275_28 = game_13(D)->player2_checker;

(insn 75 74 76 (set (reg/f:SI 95)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:431 -1
     (nil))

(insn 76 75 0 (set (reg:SI 78 [ D.6275 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 95)
                (const_int 12 [0xc])) [0 game_13(D)->player2_checker+0 S4 A32])) src/gui.c:431 -1
     (nil))

;; if (D.6275_28 == 0)

(insn 77 76 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78 [ D.6275 ])
            (const_int 0 [0]))) src/gui.c:431 -1
     (nil))

(jump_insn 78 77 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:431 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; D.6278_29 = display_3(D)->screen;

(insn 80 79 81 (set (reg/f:SI 96)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:432 -1
     (nil))

(insn 81 80 0 (set (reg/f:SI 79 [ D.6278 ])
        (mem/s/f/j:SI (reg/f:SI 96) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:432 -1
     (nil))

;; D.6279_30 = display_3(D)->green_checker;

(insn 82 81 83 (set (reg/f:SI 97)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:432 -1
     (nil))

(insn 83 82 0 (set (reg/f:SI 80 [ D.6279 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 97)
                (const_int 44 [0x2c])) [0 display_3(D)->green_checker+0 S4 A32])) src/gui.c:432 -1
     (nil))

;; SDL_UpperBlit (D.6279_30, 0B, D.6278_29, &pos);

(insn 84 83 85 (parallel [
            (set (reg:SI 98)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:432 -1
     (nil))

(insn 85 84 86 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 98)) src/gui.c:432 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 86 85 87 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 79 [ D.6278 ])) src/gui.c:432 -1
     (nil))

(insn 87 86 88 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:432 -1
     (nil))

(insn 88 87 89 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 80 [ D.6279 ])) src/gui.c:432 -1
     (nil))

(call_insn 89 88 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:432 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 92 91 93 56 "" [0 uses])

(note 93 92 0 NOTE_INSN_BASIC_BLOCK)

;; D.6281_31 = display_3(D)->screen;

(insn 94 93 95 (set (reg/f:SI 99)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:434 -1
     (nil))

(insn 95 94 0 (set (reg/f:SI 81 [ D.6281 ])
        (mem/s/f/j:SI (reg/f:SI 99) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:434 -1
     (nil))

;; D.6282_32 = display_3(D)->white_checker;

(insn 96 95 97 (set (reg/f:SI 100)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:434 -1
     (nil))

(insn 97 96 0 (set (reg/f:SI 82 [ D.6282 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 100)
                (const_int 48 [0x30])) [0 display_3(D)->white_checker+0 S4 A32])) src/gui.c:434 -1
     (nil))

;; SDL_UpperBlit (D.6282_32, 0B, D.6281_31, &pos);

(insn 98 97 99 (parallel [
            (set (reg:SI 101)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:434 -1
     (nil))

(insn 99 98 100 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 101)) src/gui.c:434 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 100 99 101 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 81 [ D.6281 ])) src/gui.c:434 -1
     (nil))

(insn 101 100 102 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:434 -1
     (nil))

(insn 102 101 103 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 82 [ D.6282 ])) src/gui.c:434 -1
     (nil))

(call_insn 103 102 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:434 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 104 103 105 57 "" [0 uses])

(note 105 104 0 NOTE_INSN_BASIC_BLOCK)

;; i_33 = i_2 + 1;

(insn 106 105 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:428 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 107 106 108 55 "" [0 uses])

(note 108 107 0 NOTE_INSN_BASIC_BLOCK)

;; D.6283_23 = gameState_7(D)->zones[26].nb_checkers;

(insn 109 108 110 (set (reg/f:SI 102)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:428 -1
     (nil))

(insn 110 109 0 (set (reg:SI 73 [ D.6283 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 102)
                (const_int 212 [0xd4])) [0 gameState_7(D)->zones[26].nb_checkers+0 S4 A32])) src/gui.c:428 -1
     (nil))

;; if (D.6283_23 > i_2)

(insn 112 110 113 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 73 [ D.6283 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) src/gui.c:428 -1
     (nil))

(jump_insn 113 112 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) src/gui.c:428 -1
     (nil))

;; Generating RTL for gimple basic block 14


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (reg/f:SI 83)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:416 -1
     (nil))

(insn 6 5 7 3 (set (reg:HI 59 [ D.6254 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 83)
                (const_int 324 [0x144])) [0 display_3(D)->positions[24].x+0 S2 A32])) src/gui.c:416 -1
     (nil))

(insn 7 6 8 3 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 pos.x+0 S2 A32])
        (reg:HI 59 [ D.6254 ])) src/gui.c:416 -1
     (nil))

(insn 8 7 9 3 (set (reg/f:SI 84)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:417 -1
     (nil))

(insn 9 8 10 3 (set (reg:HI 60 [ D.6255 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 84)
                (const_int 326 [0x146])) [0 display_3(D)->positions[24].y+0 S2 A16])) src/gui.c:417 -1
     (nil))

(insn 10 9 11 3 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 60 [ D.6255 ])) src/gui.c:417 -1
     (nil))

(insn 11 10 12 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:418 -1
     (nil))

(jump_insn 12 11 13 3 (set (pc)
        (label_ref 52)) src/gui.c:418 -1
     (nil)
 -> 52)
;; End of basic block 3 -> ( 8)

;; Succ edge  8

(barrier 13 12 56)

;; Start of basic block ( 8) -> 4
;; Pred edge  8
(code_label 56 13 14 4 54 "" [1 uses])

(note 14 56 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 (set (reg:HI 62 [ D.6256 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])) src/gui.c:420 -1
     (nil))

(insn 16 15 17 4 (set (reg:HI 63 [ D.6257 ])
        (reg:HI 62 [ D.6256 ])) src/gui.c:420 -1
     (nil))

(insn 17 16 18 4 (parallel [
            (set (reg:HI 64 [ D.6258 ])
                (plus:HI (reg:HI 63 [ D.6257 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:420 -1
     (nil))

(insn 18 17 19 4 (set (reg:HI 65 [ D.6259 ])
        (reg:HI 64 [ D.6258 ])) src/gui.c:420 -1
     (nil))

(insn 19 18 20 4 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 65 [ D.6259 ])) src/gui.c:420 -1
     (nil))

(insn 20 19 21 4 (set (reg/f:SI 85)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:421 -1
     (nil))

(insn 21 20 22 4 (set (reg:SI 66 [ D.6260 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 85)
                (const_int 8 [0x8])) [0 game_13(D)->player1_checker+0 S4 A32])) src/gui.c:421 -1
     (nil))

(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 66 [ D.6260 ])
            (const_int 0 [0]))) src/gui.c:421 -1
     (nil))

(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) src/gui.c:421 -1
     (nil)
 -> 37)
;; End of basic block 4 -> ( 5 6)

;; Succ edge  5 (fallthru)
;; Succ edge  6

;; Start of basic block ( 4) -> 5
;; Pred edge  4 (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 (set (reg/f:SI 86)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:422 -1
     (nil))

(insn 26 25 27 5 (set (reg/f:SI 67 [ D.6263 ])
        (mem/s/f/j:SI (reg/f:SI 86) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:422 -1
     (nil))

(insn 27 26 28 5 (set (reg/f:SI 87)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:422 -1
     (nil))

(insn 28 27 29 5 (set (reg/f:SI 68 [ D.6264 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 87)
                (const_int 44 [0x2c])) [0 display_3(D)->green_checker+0 S4 A32])) src/gui.c:422 -1
     (nil))

(insn 29 28 30 5 (parallel [
            (set (reg:SI 88)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:422 -1
     (nil))

(insn 30 29 31 5 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 88)) src/gui.c:422 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 31 30 32 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 67 [ D.6263 ])) src/gui.c:422 -1
     (nil))

(insn 32 31 33 5 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:422 -1
     (nil))

(insn 33 32 34 5 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 68 [ D.6264 ])) src/gui.c:422 -1
     (nil))

(call_insn 34 33 35 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:422 -1
     (nil)
    (nil))

(jump_insn 35 34 36 5 (set (pc)
        (label_ref 49)) src/gui.c:422 -1
     (nil)
 -> 49)
;; End of basic block 5 -> ( 7)

;; Succ edge  7

(barrier 36 35 37)

;; Start of basic block ( 4) -> 6
;; Pred edge  4
(code_label 37 36 38 6 52 "" [1 uses])

(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 6 (set (reg/f:SI 89)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:424 -1
     (nil))

(insn 40 39 41 6 (set (reg/f:SI 69 [ D.6266 ])
        (mem/s/f/j:SI (reg/f:SI 89) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:424 -1
     (nil))

(insn 41 40 42 6 (set (reg/f:SI 90)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:424 -1
     (nil))

(insn 42 41 43 6 (set (reg/f:SI 70 [ D.6267 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 90)
                (const_int 48 [0x30])) [0 display_3(D)->white_checker+0 S4 A32])) src/gui.c:424 -1
     (nil))

(insn 43 42 44 6 (parallel [
            (set (reg:SI 91)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:424 -1
     (nil))

(insn 44 43 45 6 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 91)) src/gui.c:424 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 45 44 46 6 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 69 [ D.6266 ])) src/gui.c:424 -1
     (nil))

(insn 46 45 47 6 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:424 -1
     (nil))

(insn 47 46 48 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 70 [ D.6267 ])) src/gui.c:424 -1
     (nil))

(call_insn 48 47 49 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:424 -1
     (nil)
    (nil))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 5 6) -> 7
;; Pred edge  5
;; Pred edge  6 (fallthru)
(code_label 49 48 50 7 53 "" [1 uses])

(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 7 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:418 -1
     (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 3 7) -> 8
;; Pred edge  3
;; Pred edge  7 (fallthru)
(code_label 52 51 53 8 51 "" [1 uses])

(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 8 (set (reg/f:SI 92)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:418 -1
     (nil))

(insn 55 54 57 8 (set (reg:SI 61 [ D.6268 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 92)
                (const_int 196 [0xc4])) [0 gameState_7(D)->zones[24].nb_checkers+0 S4 A32])) src/gui.c:418 -1
     (nil))

(insn 57 55 58 8 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 61 [ D.6268 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) src/gui.c:418 -1
     (nil))

(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) src/gui.c:418 -1
     (nil)
 -> 56)
;; End of basic block 8 -> ( 4 9)

;; Succ edge  4
;; Succ edge  9 (fallthru)

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 9 (set (reg/f:SI 93)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:426 -1
     (nil))

(insn 61 60 62 9 (set (reg:HI 71 [ D.6269 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 93)
                (const_int 340 [0x154])) [0 display_3(D)->positions[26].x+0 S2 A32])) src/gui.c:426 -1
     (nil))

(insn 62 61 63 9 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 pos.x+0 S2 A32])
        (reg:HI 71 [ D.6269 ])) src/gui.c:426 -1
     (nil))

(insn 63 62 64 9 (set (reg/f:SI 94)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:427 -1
     (nil))

(insn 64 63 65 9 (set (reg:HI 72 [ D.6270 ])
        (mem/s/j:HI (plus:SI (reg/f:SI 94)
                (const_int 342 [0x156])) [0 display_3(D)->positions[26].y+0 S2 A16])) src/gui.c:427 -1
     (nil))

(insn 65 64 66 9 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 72 [ D.6270 ])) src/gui.c:427 -1
     (nil))

(insn 66 65 67 9 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:428 -1
     (nil))

(jump_insn 67 66 68 9 (set (pc)
        (label_ref 107)) src/gui.c:428 -1
     (nil)
 -> 107)
;; End of basic block 9 -> ( 14)

;; Succ edge  14

(barrier 68 67 111)

;; Start of basic block ( 14) -> 10
;; Pred edge  14
(code_label 111 68 69 10 58 "" [1 uses])

(note 69 111 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 71 10 (set (reg:HI 74 [ D.6271 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])) src/gui.c:430 -1
     (nil))

(insn 71 70 72 10 (set (reg:HI 75 [ D.6272 ])
        (reg:HI 74 [ D.6271 ])) src/gui.c:430 -1
     (nil))

(insn 72 71 73 10 (parallel [
            (set (reg:HI 76 [ D.6273 ])
                (plus:HI (reg:HI 75 [ D.6272 ])
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:430 -1
     (nil))

(insn 73 72 74 10 (set (reg:HI 77 [ D.6274 ])
        (reg:HI 76 [ D.6273 ])) src/gui.c:430 -1
     (nil))

(insn 74 73 75 10 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 pos.y+0 S2 A16])
        (reg:HI 77 [ D.6274 ])) src/gui.c:430 -1
     (nil))

(insn 75 74 76 10 (set (reg/f:SI 95)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:431 -1
     (nil))

(insn 76 75 77 10 (set (reg:SI 78 [ D.6275 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 95)
                (const_int 12 [0xc])) [0 game_13(D)->player2_checker+0 S4 A32])) src/gui.c:431 -1
     (nil))

(insn 77 76 78 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78 [ D.6275 ])
            (const_int 0 [0]))) src/gui.c:431 -1
     (nil))

(jump_insn 78 77 79 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) src/gui.c:431 -1
     (nil)
 -> 92)
;; End of basic block 10 -> ( 11 12)

;; Succ edge  11 (fallthru)
;; Succ edge  12

;; Start of basic block ( 10) -> 11
;; Pred edge  10 (fallthru)
(note 79 78 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 11 (set (reg/f:SI 96)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:432 -1
     (nil))

(insn 81 80 82 11 (set (reg/f:SI 79 [ D.6278 ])
        (mem/s/f/j:SI (reg/f:SI 96) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:432 -1
     (nil))

(insn 82 81 83 11 (set (reg/f:SI 97)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:432 -1
     (nil))

(insn 83 82 84 11 (set (reg/f:SI 80 [ D.6279 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 97)
                (const_int 44 [0x2c])) [0 display_3(D)->green_checker+0 S4 A32])) src/gui.c:432 -1
     (nil))

(insn 84 83 85 11 (parallel [
            (set (reg:SI 98)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:432 -1
     (nil))

(insn 85 84 86 11 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 98)) src/gui.c:432 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 86 85 87 11 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 79 [ D.6278 ])) src/gui.c:432 -1
     (nil))

(insn 87 86 88 11 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:432 -1
     (nil))

(insn 88 87 89 11 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 80 [ D.6279 ])) src/gui.c:432 -1
     (nil))

(call_insn 89 88 90 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:432 -1
     (nil)
    (nil))

(jump_insn 90 89 91 11 (set (pc)
        (label_ref 104)) src/gui.c:432 -1
     (nil)
 -> 104)
;; End of basic block 11 -> ( 13)

;; Succ edge  13

(barrier 91 90 92)

;; Start of basic block ( 10) -> 12
;; Pred edge  10
(code_label 92 91 93 12 56 "" [1 uses])

(note 93 92 94 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 95 12 (set (reg/f:SI 99)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:434 -1
     (nil))

(insn 95 94 96 12 (set (reg/f:SI 81 [ D.6281 ])
        (mem/s/f/j:SI (reg/f:SI 99) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:434 -1
     (nil))

(insn 96 95 97 12 (set (reg/f:SI 100)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:434 -1
     (nil))

(insn 97 96 98 12 (set (reg/f:SI 82 [ D.6282 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 100)
                (const_int 48 [0x30])) [0 display_3(D)->white_checker+0 S4 A32])) src/gui.c:434 -1
     (nil))

(insn 98 97 99 12 (parallel [
            (set (reg:SI 101)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:434 -1
     (nil))

(insn 99 98 100 12 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 101)) src/gui.c:434 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 100 99 101 12 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 81 [ D.6281 ])) src/gui.c:434 -1
     (nil))

(insn 101 100 102 12 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:434 -1
     (nil))

(insn 102 101 103 12 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 82 [ D.6282 ])) src/gui.c:434 -1
     (nil))

(call_insn 103 102 104 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:434 -1
     (nil)
    (nil))
;; End of basic block 12 -> ( 13)

;; Succ edge  13 (fallthru)

;; Start of basic block ( 11 12) -> 13
;; Pred edge  11
;; Pred edge  12 (fallthru)
(code_label 104 103 105 13 57 "" [1 uses])

(note 105 104 106 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 107 13 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:428 -1
     (nil))
;; End of basic block 13 -> ( 14)

;; Succ edge  14 (fallthru)

;; Start of basic block ( 9 13) -> 14
;; Pred edge  9
;; Pred edge  13 (fallthru)
(code_label 107 106 108 14 55 "" [1 uses])

(note 108 107 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 14 (set (reg/f:SI 102)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:428 -1
     (nil))

(insn 110 109 112 14 (set (reg:SI 73 [ D.6283 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 102)
                (const_int 212 [0xd4])) [0 gameState_7(D)->zones[26].nb_checkers+0 S4 A32])) src/gui.c:428 -1
     (nil))

(insn 112 110 113 14 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 73 [ D.6283 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) src/gui.c:428 -1
     (nil))

(jump_insn 113 112 114 14 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) src/gui.c:428 -1
     (nil)
 -> 111)
;; End of basic block 14 -> ( 10 15)

;; Succ edge  10
;; Succ edge  15 (fallthru)

;; Start of basic block ( 14) -> 15
;; Pred edge  14 (fallthru)
(note 114 113 115 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 15 -> ( 16)

;; Succ edge  16 (fallthru)

;; Start of basic block ( 15) -> 16
;; Pred edge  15 (fallthru)
(code_label 115 114 116 16 50 "" [0 uses])

(note 116 115 0 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 16 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Display_Checkers (Display_Checkers)

Display_Checkers (struct SDisplay * display, struct SGameState * gameState, struct SGame * game)
{
  struct SDL_Color color;
  char * tmp;
  struct SDL_Surface * num;
  struct SDL_Rect new_pos;
  unsigned int j;
  unsigned int i;
  unsigned int D.6253;
  int D.6252;
  EPlayer D.6251;
  Sint16 D.6250;
  short unsigned int D.6249;
  short unsigned int D.6248;
  short unsigned int D.6247;
  short unsigned int D.6246;
  Sint16 D.6245;
  Sint16 D.6243;
  short unsigned int D.6242;
  short unsigned int D.6241;
  short unsigned int D.6240;
  short unsigned int D.6239;
  Sint16 D.6238;
  Sint16 D.6235;
  struct SDL_Surface * D.6234;
  struct TTF_Font * D.6233;
  const char * restrict D.6232;
  unsigned int D.6231;
  Sint16 D.6230;
  short unsigned int D.6229;
  short unsigned int D.6228;
  Sint16 D.6227;
  Sint16 D.6225;
  short unsigned int D.6224;
  short unsigned int D.6223;
  Sint16 D.6222;
  unsigned int D.6219;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  tmp_3 = malloc (2);
  color.r = 0;
  color.g = 0;
  color.b = 0;
  color.unused = 0;
  i_4 = 0;
  goto <bb 15>;
  # SUCC: 15 (fallthru)

  # BLOCK 3
  # PRED: 15 (true)
  j_5 = 0;
  goto <bb 13>;
  # SUCC: 13 (fallthru)

  # BLOCK 4
  # PRED: 13 (true)
  if (j_2 > 5)
    goto <bb 5>;
  else
    goto <bb 9>;
  # SUCC: 5 (true) 9 (false)

  # BLOCK 5
  # PRED: 4 (true)
  D.6219_8 = gameState_6(D)->zones[i_1].nb_checkers;
  if (D.6219_8 > 9)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 (true) 7 (false)

  # BLOCK 6
  # PRED: 5 (true)
  D.6222_9 = new_pos.x;
  D.6223_10 = (short unsigned int) D.6222_9;
  D.6224_11 = D.6223_10 + 5;
  D.6225_12 = (Sint16) D.6224_11;
  new_pos.x = D.6225_12;
  goto <bb 8>;
  # SUCC: 8 (fallthru)

  # BLOCK 7
  # PRED: 5 (false)
  D.6227_13 = new_pos.x;
  D.6228_14 = (short unsigned int) D.6227_13;
  D.6229_15 = D.6228_14 + 8;
  D.6230_16 = (Sint16) D.6229_15;
  new_pos.x = D.6230_16;
  # SUCC: 8 (fallthru)

  # BLOCK 8
  # PRED: 6 (fallthru) 7 (fallthru)
  D.6231_17 = gameState_6(D)->zones[i_1].nb_checkers;
  D.6232_18 = (const char * restrict) &"%d"[0];
  sprintf (tmp_3, D.6232_18, D.6231_17);
  D.6233_20 = display_19(D)->font;
  num_21 = TTF_RenderText_Blended (D.6233_20, tmp_3, color);
  D.6234_22 = display_19(D)->screen;
  SDL_UpperBlit (num_21, 0B, D.6234_22, &new_pos);
  SDL_FreeSurface (num_21);
  goto <bb 14>;
  # SUCC: 14 (fallthru)

  # BLOCK 9
  # PRED: 4 (false)
  D.6235_23 = display_19(D)->positions[i_1].x;
  new_pos.x = D.6235_23;
  if (i_1 <= 11)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 (true) 11 (false)

  # BLOCK 10
  # PRED: 9 (true)
  D.6238_24 = display_19(D)->positions[i_1].y;
  D.6239_25 = (short unsigned int) D.6238_24;
  D.6240_26 = (short unsigned int) j_2;
  D.6241_27 = D.6240_26 * 20;
  D.6242_28 = D.6239_25 - D.6241_27;
  D.6243_29 = (Sint16) D.6242_28;
  new_pos.y = D.6243_29;
  goto <bb 12>;
  # SUCC: 12 (fallthru)

  # BLOCK 11
  # PRED: 9 (false)
  D.6245_30 = display_19(D)->positions[i_1].y;
  D.6246_31 = (short unsigned int) D.6245_30;
  D.6247_32 = (short unsigned int) j_2;
  D.6248_33 = D.6247_32 * 20;
  D.6249_34 = D.6246_31 + D.6248_33;
  D.6250_35 = (Sint16) D.6249_34;
  new_pos.y = D.6250_35;
  # SUCC: 12 (fallthru)

  # BLOCK 12
  # PRED: 10 (fallthru) 11 (fallthru)
  D.6251_36 = gameState_6(D)->zones[i_1].player;
  D.6252_37 = (int) D.6251_36;
  Checker_Draw (display_19(D), new_pos, D.6252_37, game_38(D));
  j_39 = j_2 + 1;
  # SUCC: 13 (fallthru)

  # BLOCK 13
  # PRED: 3 (fallthru) 12 (fallthru)
  # j_2 = PHI <j_5(3), j_39(12)>
  D.6253_7 = gameState_6(D)->zones[i_1].nb_checkers;
  if (D.6253_7 > j_2)
    goto <bb 4>;
  else
    goto <bb 14>;
  # SUCC: 4 (true) 14 (false)

  # BLOCK 14
  # PRED: 8 (fallthru) 13 (false)
  i_40 = i_1 + 1;
  # SUCC: 15 (fallthru)

  # BLOCK 15
  # PRED: 2 (fallthru) 14 (fallthru)
  # i_1 = PHI <i_4(2), i_40(14)>
  if (i_1 <= 23)
    goto <bb 3>;
  else
    goto <bb 16>;
  # SUCC: 3 (true) 16 (false)

  # BLOCK 16
  # PRED: 15 (false)
  free (tmp_3);
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (j_2 - 2 )
Partition 3 (tmp_3 - 3 )
Partition 4 (i_4 - 4 )
Partition 5 (j_5 - 5 )
Partition 6 (gameState_6(D) - 6 )
Partition 7 (D.6253_7 - 7 )
Partition 8 (D.6219_8 - 8 )
Partition 9 (D.6222_9 - 9 )
Partition 10 (D.6223_10 - 10 )
Partition 11 (D.6224_11 - 11 )
Partition 12 (D.6225_12 - 12 )
Partition 13 (D.6227_13 - 13 )
Partition 14 (D.6228_14 - 14 )
Partition 15 (D.6229_15 - 15 )
Partition 16 (D.6230_16 - 16 )
Partition 17 (D.6231_17 - 17 )
Partition 18 (D.6232_18 - 18 )
Partition 19 (display_19(D) - 19 )
Partition 20 (D.6233_20 - 20 )
Partition 21 (num_21 - 21 )
Partition 22 (D.6234_22 - 22 )
Partition 23 (D.6235_23 - 23 )
Partition 24 (D.6238_24 - 24 )
Partition 25 (D.6239_25 - 25 )
Partition 26 (D.6240_26 - 26 )
Partition 27 (D.6241_27 - 27 )
Partition 28 (D.6242_28 - 28 )
Partition 29 (D.6243_29 - 29 )
Partition 30 (D.6245_30 - 30 )
Partition 31 (D.6246_31 - 31 )
Partition 32 (D.6247_32 - 32 )
Partition 33 (D.6248_33 - 33 )
Partition 34 (D.6249_34 - 34 )
Partition 35 (D.6250_35 - 35 )
Partition 36 (D.6251_36 - 36 )
Partition 37 (D.6252_37 - 37 )
Partition 38 (game_38(D) - 38 )
Partition 39 (j_39 - 39 )
Partition 40 (i_40 - 40 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (i_4 - 4 )
Partition 3 (j_5 - 5 )
Partition 4 (gameState_6(D) - 6 )
Partition 5 (display_19(D) - 19 )
Partition 6 (game_38(D) - 38 )
Partition 7 (j_39 - 39 )
Partition 8 (i_40 - 40 )


Live on entry to BB2 : gameState_6(D)  display_19(D)  game_38(D)  

Live on entry to BB3 : i_1  gameState_6(D)  display_19(D)  game_38(D)  

Live on entry to BB4 : i_1  j_2  gameState_6(D)  display_19(D)  game_38(D)  

Live on entry to BB5 : i_1  gameState_6(D)  display_19(D)  game_38(D)  

Live on entry to BB6 : i_1  gameState_6(D)  display_19(D)  game_38(D)  

Live on entry to BB7 : i_1  gameState_6(D)  display_19(D)  game_38(D)  

Live on entry to BB8 : i_1  gameState_6(D)  display_19(D)  game_38(D)  

Live on entry to BB9 : i_1  j_2  gameState_6(D)  display_19(D)  game_38(D)  

Live on entry to BB10 : i_1  j_2  gameState_6(D)  display_19(D)  game_38(D)  

Live on entry to BB11 : i_1  j_2  gameState_6(D)  display_19(D)  game_38(D)  

Live on entry to BB12 : i_1  j_2  gameState_6(D)  display_19(D)  game_38(D)  

Live on entry to BB13 : i_1  gameState_6(D)  display_19(D)  game_38(D)  

Live on entry to BB14 : i_1  gameState_6(D)  display_19(D)  game_38(D)  

Live on entry to BB15 : gameState_6(D)  display_19(D)  game_38(D)  

Live on entry to BB16 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_4
(2147483646) i_1 <-> i_40
(2147483646) j_2 <-> j_5
(2147483646) j_2 <-> j_39

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (i_4 - 4 )
Partition 3 (j_5 - 5 )
Partition 4 (gameState_6(D) - 6 )
Partition 5 (display_19(D) - 19 )
Partition 6 (game_38(D) - 38 )
Partition 7 (j_39 - 39 )
Partition 8 (i_40 - 40 )

Coalesce list: (1)i_1 & (4)i_4 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (40)i_40 [map: 0, 8] : Success -> 0
Coalesce list: (2)j_2 & (5)j_5 [map: 1, 3] : Success -> 1
Coalesce list: (2)j_2 & (39)j_39 [map: 1, 7] : Success -> 1
Coalesce list: (1)i_1 & (40)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (4)i_1: Already Coalesced.
Coalesce list: (2)j_2 & (39)j_2: Already Coalesced.
Coalesce list: (2)j_2 & (5)j_2: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 4 40 )
Partition 1 (j_2 - 2 5 39 )
Partition 2 (tmp_3 - 3 )
Partition 3 (gameState_6(D) - 6 )
Partition 4 (D.6253_7 - 7 )
Partition 5 (D.6219_8 - 8 )
Partition 6 (D.6222_9 - 9 )
Partition 7 (D.6223_10 - 10 )
Partition 8 (D.6224_11 - 11 )
Partition 9 (D.6225_12 - 12 )
Partition 10 (D.6227_13 - 13 )
Partition 11 (D.6228_14 - 14 )
Partition 12 (D.6229_15 - 15 )
Partition 13 (D.6230_16 - 16 )
Partition 14 (D.6231_17 - 17 )
Partition 15 (D.6232_18 - 18 )
Partition 16 (display_19(D) - 19 )
Partition 17 (D.6233_20 - 20 )
Partition 18 (num_21 - 21 )
Partition 19 (D.6234_22 - 22 )
Partition 20 (D.6235_23 - 23 )
Partition 21 (D.6238_24 - 24 )
Partition 22 (D.6239_25 - 25 )
Partition 23 (D.6240_26 - 26 )
Partition 24 (D.6241_27 - 27 )
Partition 25 (D.6242_28 - 28 )
Partition 26 (D.6243_29 - 29 )
Partition 27 (D.6245_30 - 30 )
Partition 28 (D.6246_31 - 31 )
Partition 29 (D.6247_32 - 32 )
Partition 30 (D.6248_33 - 33 )
Partition 31 (D.6249_34 - 34 )
Partition 32 (D.6250_35 - 35 )
Partition 33 (D.6251_36 - 36 )
Partition 34 (D.6252_37 - 37 )
Partition 35 (game_38(D) - 38 )

Display_Checkers (struct SDisplay * display, struct SGameState * gameState, struct SGame * game)
{
  struct SDL_Color color;
  char * tmp;
  struct SDL_Surface * num;
  struct SDL_Rect new_pos;
  unsigned int j;
  unsigned int i;
  unsigned int D.6253;
  int D.6252;
  EPlayer D.6251;
  Sint16 D.6250;
  short unsigned int D.6249;
  short unsigned int D.6248;
  short unsigned int D.6247;
  short unsigned int D.6246;
  Sint16 D.6245;
  Sint16 D.6243;
  short unsigned int D.6242;
  short unsigned int D.6241;
  short unsigned int D.6240;
  short unsigned int D.6239;
  Sint16 D.6238;
  Sint16 D.6235;
  struct SDL_Surface * D.6234;
  struct TTF_Font * D.6233;
  const char * restrict D.6232;
  unsigned int D.6231;
  Sint16 D.6230;
  short unsigned int D.6229;
  short unsigned int D.6228;
  Sint16 D.6227;
  Sint16 D.6225;
  short unsigned int D.6224;
  short unsigned int D.6223;
  Sint16 D.6222;
  unsigned int D.6219;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  tmp_3 = malloc (2);
  color.r = 0;
  color.g = 0;
  color.b = 0;
  color.unused = 0;
  i_4 = 0;
  goto <bb 15>;
  # SUCC: 15 (fallthru)

  # BLOCK 3
  # PRED: 15 (true)
  j_5 = 0;
  goto <bb 13>;
  # SUCC: 13 (fallthru)

  # BLOCK 4
  # PRED: 13 (true)
  if (j_2 > 5)
    goto <bb 5>;
  else
    goto <bb 9>;
  # SUCC: 5 (true) 9 (false)

  # BLOCK 5
  # PRED: 4 (true)
  D.6219_8 = gameState_6(D)->zones[i_1].nb_checkers;
  if (D.6219_8 > 9)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 (true) 7 (false)

  # BLOCK 6
  # PRED: 5 (true)
  D.6222_9 = new_pos.x;
  D.6223_10 = (short unsigned int) D.6222_9;
  D.6224_11 = D.6223_10 + 5;
  D.6225_12 = (Sint16) D.6224_11;
  new_pos.x = D.6225_12;
  goto <bb 8>;
  # SUCC: 8 (fallthru)

  # BLOCK 7
  # PRED: 5 (false)
  D.6227_13 = new_pos.x;
  D.6228_14 = (short unsigned int) D.6227_13;
  D.6229_15 = D.6228_14 + 8;
  D.6230_16 = (Sint16) D.6229_15;
  new_pos.x = D.6230_16;
  # SUCC: 8 (fallthru)

  # BLOCK 8
  # PRED: 6 (fallthru) 7 (fallthru)
  D.6231_17 = gameState_6(D)->zones[i_1].nb_checkers;
  D.6232_18 = (const char * restrict) &"%d"[0];
  sprintf (tmp_3, D.6232_18, D.6231_17);
  D.6233_20 = display_19(D)->font;
  num_21 = TTF_RenderText_Blended (D.6233_20, tmp_3, color);
  D.6234_22 = display_19(D)->screen;
  SDL_UpperBlit (num_21, 0B, D.6234_22, &new_pos);
  SDL_FreeSurface (num_21);
  goto <bb 14>;
  # SUCC: 14 (fallthru)

  # BLOCK 9
  # PRED: 4 (false)
  D.6235_23 = display_19(D)->positions[i_1].x;
  new_pos.x = D.6235_23;
  if (i_1 <= 11)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 (true) 11 (false)

  # BLOCK 10
  # PRED: 9 (true)
  D.6238_24 = display_19(D)->positions[i_1].y;
  D.6239_25 = (short unsigned int) D.6238_24;
  D.6240_26 = (short unsigned int) j_2;
  D.6241_27 = D.6240_26 * 20;
  D.6242_28 = D.6239_25 - D.6241_27;
  D.6243_29 = (Sint16) D.6242_28;
  new_pos.y = D.6243_29;
  goto <bb 12>;
  # SUCC: 12 (fallthru)

  # BLOCK 11
  # PRED: 9 (false)
  D.6245_30 = display_19(D)->positions[i_1].y;
  D.6246_31 = (short unsigned int) D.6245_30;
  D.6247_32 = (short unsigned int) j_2;
  D.6248_33 = D.6247_32 * 20;
  D.6249_34 = D.6246_31 + D.6248_33;
  D.6250_35 = (Sint16) D.6249_34;
  new_pos.y = D.6250_35;
  # SUCC: 12 (fallthru)

  # BLOCK 12
  # PRED: 10 (fallthru) 11 (fallthru)
  D.6251_36 = gameState_6(D)->zones[i_1].player;
  D.6252_37 = (int) D.6251_36;
  Checker_Draw (display_19(D), new_pos, D.6252_37, game_38(D));
  j_39 = j_2 + 1;
  # SUCC: 13 (fallthru)

  # BLOCK 13
  # PRED: 3 (fallthru) 12 (fallthru)
  # j_2 = PHI <j_5(3), j_39(12)>
  D.6253_7 = gameState_6(D)->zones[i_1].nb_checkers;
  if (D.6253_7 > j_2)
    goto <bb 4>;
  else
    goto <bb 14>;
  # SUCC: 4 (true) 14 (false)

  # BLOCK 14
  # PRED: 8 (fallthru) 13 (false)
  i_40 = i_1 + 1;
  # SUCC: 15 (fallthru)

  # BLOCK 15
  # PRED: 2 (fallthru) 14 (fallthru)
  # i_1 = PHI <i_4(2), i_40(14)>
  if (i_1 <= 23)
    goto <bb 3>;
  else
    goto <bb 16>;
  # SUCC: 3 (true) 16 (false)

  # BLOCK 16
  # PRED: 15 (false)
  free (tmp_3);
  return;
  # SUCC: EXIT

}


Partition 5: size 4 align 1
	color, offset 0
Partition 3: size 4 align 4
	num_21, offset 0
Partition 2: size 4 align 4
	tmp_3, offset 0
Partition 1: size 4 align 4
	j_2, offset 0
Partition 0: size 4 align 4
	i_1, offset 0
Partition 4: size 8 align 2
	new_pos, offset 0

;; Generating RTL for gimple basic block 2

;; tmp_3 = malloc (2);

(insn 5 4 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 2 [0x2])) src/gui.c:442 -1
     (nil))

(call_insn 6 5 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:442 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 7 6 8 (set (reg/f:SI 88)
        (reg:SI 0 ax)) src/gui.c:442 -1
     (expr_list:REG_NOALIAS (reg/f:SI 88)
        (nil)))

(insn 8 7 0 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 tmp+0 S4 A32])
        (reg/f:SI 88)) src/gui.c:442 -1
     (nil))

;; color.r = 0;

(insn 9 8 0 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 color.r+0 S1 A32])
        (const_int 0 [0])) src/gui.c:443 -1
     (nil))

;; color.g = 0;

(insn 10 9 0 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -3 [0xfffffffffffffffd])) [0 color.g+0 S1 A8])
        (const_int 0 [0])) src/gui.c:443 -1
     (nil))

;; color.b = 0;

(insn 11 10 0 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 color.b+0 S1 A16])
        (const_int 0 [0])) src/gui.c:443 -1
     (nil))

;; color.unused = 0;

(insn 12 11 0 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 color.unused+0 S1 A8])
        (const_int 0 [0])) src/gui.c:443 -1
     (nil))

;; i_4 = 0;

(insn 13 12 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:445 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; j_5 = 0;

(insn 17 16 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
        (const_int 0 [0])) src/gui.c:447 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; if (j_2 > 5)

(insn 21 20 22 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
            (const_int 5 [0x5]))) src/gui.c:449 -1
     (nil))

(jump_insn 22 21 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:449 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; D.6219_8 = gameState_6(D)->zones[i_1].nb_checkers;

(insn 24 23 25 (set (reg/f:SI 89)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:452 -1
     (nil))

(insn 25 24 26 (set (reg:SI 90)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:452 -1
     (nil))

(insn 26 25 0 (set (reg:SI 60 [ D.6219 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 90)
                        (const_int 8 [0x8]))
                    (reg/f:SI 89))
                (const_int 4 [0x4])) [0 gameState_6(D)->zones[i_1].nb_checkers+0 S4 A32])) src/gui.c:452 -1
     (nil))

;; if (D.6219_8 > 9)

(insn 27 26 28 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 60 [ D.6219 ])
            (const_int 9 [0x9]))) src/gui.c:452 -1
     (nil))

(jump_insn 28 27 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:452 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; D.6222_9 = new_pos.x;

(insn 30 29 0 (set (reg:HI 61 [ D.6222 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 new_pos.x+0 S2 A32])) src/gui.c:454 -1
     (nil))

;; D.6223_10 = (short unsigned int) D.6222_9;

(insn 31 30 0 (set (reg:HI 62 [ D.6223 ])
        (reg:HI 61 [ D.6222 ])) src/gui.c:454 -1
     (nil))

;; D.6224_11 = D.6223_10 + 5;

(insn 32 31 0 (parallel [
            (set (reg:HI 63 [ D.6224 ])
                (plus:HI (reg:HI 62 [ D.6223 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:454 -1
     (nil))

;; D.6225_12 = (Sint16) D.6224_11;

(insn 33 32 0 (set (reg:HI 64 [ D.6225 ])
        (reg:HI 63 [ D.6224 ])) src/gui.c:454 -1
     (nil))

;; new_pos.x = D.6225_12;

(insn 34 33 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 new_pos.x+0 S2 A32])
        (reg:HI 64 [ D.6225 ])) src/gui.c:454 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 37 36 38 63 "" [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; D.6227_13 = new_pos.x;

(insn 39 38 0 (set (reg:HI 65 [ D.6227 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 new_pos.x+0 S2 A32])) src/gui.c:457 -1
     (nil))

;; D.6228_14 = (short unsigned int) D.6227_13;

(insn 40 39 0 (set (reg:HI 66 [ D.6228 ])
        (reg:HI 65 [ D.6227 ])) src/gui.c:457 -1
     (nil))

;; D.6229_15 = D.6228_14 + 8;

(insn 41 40 0 (parallel [
            (set (reg:HI 67 [ D.6229 ])
                (plus:HI (reg:HI 66 [ D.6228 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:457 -1
     (nil))

;; D.6230_16 = (Sint16) D.6229_15;

(insn 42 41 0 (set (reg:HI 68 [ D.6230 ])
        (reg:HI 67 [ D.6229 ])) src/gui.c:457 -1
     (nil))

;; new_pos.x = D.6230_16;

(insn 43 42 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 new_pos.x+0 S2 A32])
        (reg:HI 68 [ D.6230 ])) src/gui.c:457 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 44 43 45 64 "" [0 uses])

(note 45 44 0 NOTE_INSN_BASIC_BLOCK)

;; D.6231_17 = gameState_6(D)->zones[i_1].nb_checkers;

(insn 46 45 47 (set (reg/f:SI 91)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:459 -1
     (nil))

(insn 47 46 48 (set (reg:SI 92)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:459 -1
     (nil))

(insn 48 47 0 (set (reg:SI 69 [ D.6231 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 92)
                        (const_int 8 [0x8]))
                    (reg/f:SI 91))
                (const_int 4 [0x4])) [0 gameState_6(D)->zones[i_1].nb_checkers+0 S4 A32])) src/gui.c:459 -1
     (nil))

;; D.6232_18 = (const char * restrict) &"%d"[0];

(insn 49 48 0 (set (reg/f:SI 70 [ D.6232 ])
        (symbol_ref/f:SI ("*.LC20") [flags 0x2]  <var_decl 0x408fdea0 *.LC20>)) src/gui.c:459 -1
     (nil))

;; sprintf (tmp_3, D.6232_18, D.6231_17);

(insn 50 49 51 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 69 [ D.6231 ])) src/gui.c:459 -1
     (nil))

(insn 51 50 52 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 70 [ D.6232 ])) src/gui.c:459 -1
     (nil))

(insn 52 51 53 (set (reg/f:SI 93)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 tmp+0 S4 A32])) src/gui.c:459 -1
     (nil))

(insn 53 52 54 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 93)) src/gui.c:459 -1
     (nil))

(call_insn 54 53 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 0x406b4200 sprintf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:459 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; D.6233_20 = display_19(D)->font;

(insn 55 54 56 (set (reg/f:SI 94)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:460 -1
     (nil))

(insn 56 55 0 (set (reg/f:SI 71 [ D.6233 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 94)
                (const_int 36 [0x24])) [0 display_19(D)->font+0 S4 A32])) src/gui.c:460 -1
     (nil))

;; num_21 = TTF_RenderText_Blended (D.6233_20, tmp_3, color);

(insn 57 56 58 (set (reg:SI 95)
        (mem/s/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 color+0 S4 A32])) src/gui.c:460 -1
     (nil))

(insn 58 57 59 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 95)) src/gui.c:460 -1
     (nil))

(insn 59 58 60 (set (reg/f:SI 96)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 tmp+0 S4 A32])) src/gui.c:460 -1
     (nil))

(insn 60 59 61 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 96)) src/gui.c:460 -1
     (nil))

(insn 61 60 62 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 71 [ D.6233 ])) src/gui.c:460 -1
     (nil))

(call_insn 62 61 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("TTF_RenderText_Blended") [flags 0x41]  <function_decl 0x40801980 TTF_RenderText_Blended>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:460 -1
     (nil)
    (nil))

(insn 63 62 64 (set (reg:SI 97)
        (reg:SI 0 ax)) src/gui.c:460 -1
     (nil))

(insn 64 63 0 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 num+0 S4 A32])
        (reg:SI 97)) src/gui.c:460 -1
     (nil))

;; D.6234_22 = display_19(D)->screen;

(insn 65 64 66 (set (reg/f:SI 98)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:461 -1
     (nil))

(insn 66 65 0 (set (reg/f:SI 72 [ D.6234 ])
        (mem/s/f/j:SI (reg/f:SI 98) [0 display_19(D)->screen+0 S4 A32])) src/gui.c:461 -1
     (nil))

;; SDL_UpperBlit (num_21, 0B, D.6234_22, &new_pos);

(insn 67 66 68 (parallel [
            (set (reg:SI 99)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:461 -1
     (nil))

(insn 68 67 69 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 99)) src/gui.c:461 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -28 [0xffffffffffffffe4]))
        (nil)))

(insn 69 68 70 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 72 [ D.6234 ])) src/gui.c:461 -1
     (nil))

(insn 70 69 71 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:461 -1
     (nil))

(insn 71 70 72 (set (reg/f:SI 100)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 num+0 S4 A32])) src/gui.c:461 -1
     (nil))

(insn 72 71 73 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 100)) src/gui.c:461 -1
     (nil))

(call_insn 73 72 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:461 -1
     (nil)
    (nil))

;; SDL_FreeSurface (num_21);

(insn 74 73 75 (set (reg/f:SI 101)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 num+0 S4 A32])) src/gui.c:462 -1
     (nil))

(insn 75 74 76 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 101)) src/gui.c:462 -1
     (nil))

(call_insn 76 75 0 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:462 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 79 78 80 62 "" [0 uses])

(note 80 79 0 NOTE_INSN_BASIC_BLOCK)

;; D.6235_23 = display_19(D)->positions[i_1].x;

(insn 81 80 82 (set (reg/f:SI 102)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:467 -1
     (nil))

(insn 82 81 83 (set (reg:SI 104)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:467 -1
     (nil))

(insn 83 82 84 (parallel [
            (set (reg:SI 103)
                (plus:SI (reg:SI 104)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:467 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 84 83 0 (set (reg:HI 73 [ D.6235 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 103)
                        (const_int 8 [0x8]))
                    (reg/f:SI 102))
                (const_int 4 [0x4])) [0 display_19(D)->positions[i_1].x+0 S2 A32])) src/gui.c:467 -1
     (nil))

;; new_pos.x = D.6235_23;

(insn 85 84 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 new_pos.x+0 S2 A32])
        (reg:HI 73 [ D.6235 ])) src/gui.c:467 -1
     (nil))

;; if (i_1 <= 11)

(insn 86 85 87 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 11 [0xb]))) src/gui.c:468 -1
     (nil))

(jump_insn 87 86 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:468 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; D.6238_24 = display_19(D)->positions[i_1].y;

(insn 89 88 90 (set (reg/f:SI 105)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:469 -1
     (nil))

(insn 90 89 91 (set (reg:SI 107)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:469 -1
     (nil))

(insn 91 90 92 (parallel [
            (set (reg:SI 106)
                (plus:SI (reg:SI 107)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:469 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 92 91 0 (set (reg:HI 74 [ D.6238 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 106)
                        (const_int 8 [0x8]))
                    (reg/f:SI 105))
                (const_int 6 [0x6])) [0 display_19(D)->positions[i_1].y+0 S2 A16])) src/gui.c:469 -1
     (nil))

;; D.6239_25 = (short unsigned int) D.6238_24;

(insn 93 92 0 (set (reg:HI 75 [ D.6239 ])
        (reg:HI 74 [ D.6238 ])) src/gui.c:469 -1
     (nil))

;; D.6240_26 = (short unsigned int) j_2;

(insn 94 93 95 (set (reg:SI 108)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) src/gui.c:469 -1
     (nil))

(insn 95 94 0 (set (reg:HI 76 [ D.6240 ])
        (subreg:HI (reg:SI 108) 0)) src/gui.c:469 -1
     (nil))

;; D.6241_27 = D.6240_26 * 20;

(insn 96 95 97 (set (reg:HI 109)
        (reg:HI 76 [ D.6240 ])) src/gui.c:469 -1
     (nil))

(insn 97 96 98 (parallel [
            (set (reg:HI 109)
                (ashift:HI (reg:HI 109)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:469 -1
     (nil))

(insn 98 97 99 (parallel [
            (set (reg:HI 109)
                (plus:HI (reg:HI 109)
                    (reg:HI 76 [ D.6240 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:469 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 76 [ D.6240 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 99 98 100 (parallel [
            (set (reg:HI 110)
                (ashift:HI (reg:HI 109)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:469 -1
     (nil))

(insn 100 99 101 (set (reg:HI 109)
        (reg:HI 110)) src/gui.c:469 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 76 [ D.6240 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 101 100 0 (set (reg:HI 77 [ D.6241 ])
        (reg:HI 109)) src/gui.c:469 -1
     (nil))

;; D.6242_28 = D.6239_25 - D.6241_27;

(insn 102 101 0 (parallel [
            (set (reg:HI 78 [ D.6242 ])
                (minus:HI (reg:HI 75 [ D.6239 ])
                    (reg:HI 77 [ D.6241 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:469 -1
     (nil))

;; D.6243_29 = (Sint16) D.6242_28;

(insn 103 102 0 (set (reg:HI 79 [ D.6243 ])
        (reg:HI 78 [ D.6242 ])) src/gui.c:469 -1
     (nil))

;; new_pos.y = D.6243_29;

(insn 104 103 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -26 [0xffffffffffffffe6])) [0 new_pos.y+0 S2 A16])
        (reg:HI 79 [ D.6243 ])) src/gui.c:469 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 107 106 108 66 "" [0 uses])

(note 108 107 0 NOTE_INSN_BASIC_BLOCK)

;; D.6245_30 = display_19(D)->positions[i_1].y;

(insn 109 108 110 (set (reg/f:SI 111)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:471 -1
     (nil))

(insn 110 109 111 (set (reg:SI 113)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:471 -1
     (nil))

(insn 111 110 112 (parallel [
            (set (reg:SI 112)
                (plus:SI (reg:SI 113)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:471 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 112 111 0 (set (reg:HI 80 [ D.6245 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 112)
                        (const_int 8 [0x8]))
                    (reg/f:SI 111))
                (const_int 6 [0x6])) [0 display_19(D)->positions[i_1].y+0 S2 A16])) src/gui.c:471 -1
     (nil))

;; D.6246_31 = (short unsigned int) D.6245_30;

(insn 113 112 0 (set (reg:HI 81 [ D.6246 ])
        (reg:HI 80 [ D.6245 ])) src/gui.c:471 -1
     (nil))

;; D.6247_32 = (short unsigned int) j_2;

(insn 114 113 115 (set (reg:SI 114)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) src/gui.c:471 -1
     (nil))

(insn 115 114 0 (set (reg:HI 82 [ D.6247 ])
        (subreg:HI (reg:SI 114) 0)) src/gui.c:471 -1
     (nil))

;; D.6248_33 = D.6247_32 * 20;

(insn 116 115 117 (set (reg:HI 115)
        (reg:HI 82 [ D.6247 ])) src/gui.c:471 -1
     (nil))

(insn 117 116 118 (parallel [
            (set (reg:HI 115)
                (ashift:HI (reg:HI 115)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:471 -1
     (nil))

(insn 118 117 119 (parallel [
            (set (reg:HI 115)
                (plus:HI (reg:HI 115)
                    (reg:HI 82 [ D.6247 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:471 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 82 [ D.6247 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 119 118 120 (parallel [
            (set (reg:HI 116)
                (ashift:HI (reg:HI 115)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:471 -1
     (nil))

(insn 120 119 121 (set (reg:HI 115)
        (reg:HI 116)) src/gui.c:471 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 82 [ D.6247 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 121 120 0 (set (reg:HI 83 [ D.6248 ])
        (reg:HI 115)) src/gui.c:471 -1
     (nil))

;; D.6249_34 = D.6246_31 + D.6248_33;

(insn 122 121 0 (parallel [
            (set (reg:HI 84 [ D.6249 ])
                (plus:HI (reg:HI 81 [ D.6246 ])
                    (reg:HI 83 [ D.6248 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:471 -1
     (nil))

;; D.6250_35 = (Sint16) D.6249_34;

(insn 123 122 0 (set (reg:HI 85 [ D.6250 ])
        (reg:HI 84 [ D.6249 ])) src/gui.c:471 -1
     (nil))

;; new_pos.y = D.6250_35;

(insn 124 123 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -26 [0xffffffffffffffe6])) [0 new_pos.y+0 S2 A16])
        (reg:HI 85 [ D.6250 ])) src/gui.c:471 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 125 124 126 67 "" [0 uses])

(note 126 125 0 NOTE_INSN_BASIC_BLOCK)

;; D.6251_36 = gameState_6(D)->zones[i_1].player;

(insn 127 126 128 (set (reg/f:SI 117)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:472 -1
     (nil))

(insn 128 127 129 (set (reg:SI 118)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:472 -1
     (nil))

(insn 129 128 0 (set (reg:SI 86 [ D.6251 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 118)
                    (const_int 8 [0x8]))
                (reg/f:SI 117)) [0 gameState_6(D)->zones[i_1].player+0 S4 A32])) src/gui.c:472 -1
     (nil))

;; D.6252_37 = (int) D.6251_36;

(insn 130 129 0 (set (reg:SI 87 [ D.6252 ])
        (reg:SI 86 [ D.6251 ])) src/gui.c:472 -1
     (nil))

;; Checker_Draw (display_19(D), new_pos, D.6252_37, game_38(D));

(insn 131 130 132 (set (reg/f:SI 119)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:472 -1
     (nil))

(insn 132 131 133 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg/f:SI 119)) src/gui.c:472 -1
     (nil))

(insn 133 132 134 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 87 [ D.6252 ])) src/gui.c:472 -1
     (nil))

(insn 134 133 135 (set (reg:DI 120)
        (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 new_pos+0 S8 A32])) src/gui.c:472 -1
     (nil))

(insn 135 134 136 (set (mem:DI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DI 120)) src/gui.c:472 -1
     (nil))

(insn 136 135 137 (set (reg/f:SI 121)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:472 -1
     (nil))

(insn 137 136 138 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 121)) src/gui.c:472 -1
     (nil))

(call_insn 138 137 0 (call (mem:QI (symbol_ref:SI ("Checker_Draw") [flags 0x3]  <function_decl 0x4081a200 Checker_Draw>) [0 S1 A8])
        (const_int 20 [0x14])) src/gui.c:472 -1
     (nil)
    (nil))

;; j_39 = j_2 + 1;

(insn 139 138 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:447 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 140 139 141 61 "" [0 uses])

(note 141 140 0 NOTE_INSN_BASIC_BLOCK)

;; D.6253_7 = gameState_6(D)->zones[i_1].nb_checkers;

(insn 142 141 143 (set (reg/f:SI 122)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:447 -1
     (nil))

(insn 143 142 144 (set (reg:SI 123)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:447 -1
     (nil))

(insn 144 143 0 (set (reg:SI 59 [ D.6253 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 123)
                        (const_int 8 [0x8]))
                    (reg/f:SI 122))
                (const_int 4 [0x4])) [0 gameState_6(D)->zones[i_1].nb_checkers+0 S4 A32])) src/gui.c:447 -1
     (nil))

;; if (D.6253_7 > j_2)

(insn 146 144 147 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 59 [ D.6253 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32]))) src/gui.c:447 -1
     (nil))

(jump_insn 147 146 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) src/gui.c:447 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 148 147 149 65 "" [0 uses])

(note 149 148 0 NOTE_INSN_BASIC_BLOCK)

;; i_40 = i_1 + 1;

(insn 150 149 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:445 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 151 150 152 60 "" [0 uses])

(note 152 151 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 <= 23)

(insn 154 152 155 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 23 [0x17]))) src/gui.c:445 -1
     (nil))

(jump_insn 155 154 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) src/gui.c:445 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; free (tmp_3);

(insn 157 156 158 (set (reg/f:SI 124)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 tmp+0 S4 A32])) src/gui.c:477 -1
     (nil))

(insn 158 157 159 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 124)) src/gui.c:477 -1
     (nil))

(call_insn 159 158 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:477 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 2 [0x2])) src/gui.c:442 -1
     (nil))

(call_insn 6 5 7 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:442 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 7 6 8 3 (set (reg/f:SI 88)
        (reg:SI 0 ax)) src/gui.c:442 -1
     (expr_list:REG_NOALIAS (reg/f:SI 88)
        (nil)))

(insn 8 7 9 3 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 tmp+0 S4 A32])
        (reg/f:SI 88)) src/gui.c:442 -1
     (nil))

(insn 9 8 10 3 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 color.r+0 S1 A32])
        (const_int 0 [0])) src/gui.c:443 -1
     (nil))

(insn 10 9 11 3 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -3 [0xfffffffffffffffd])) [0 color.g+0 S1 A8])
        (const_int 0 [0])) src/gui.c:443 -1
     (nil))

(insn 11 10 12 3 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 color.b+0 S1 A16])
        (const_int 0 [0])) src/gui.c:443 -1
     (nil))

(insn 12 11 13 3 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 color.unused+0 S1 A8])
        (const_int 0 [0])) src/gui.c:443 -1
     (nil))

(insn 13 12 14 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:445 -1
     (nil))

(jump_insn 14 13 15 3 (set (pc)
        (label_ref 151)) src/gui.c:445 -1
     (nil)
 -> 151)
;; End of basic block 3 -> ( 16)

;; Succ edge  16

(barrier 15 14 153)

;; Start of basic block ( 16) -> 4
;; Pred edge  16
(code_label 153 15 16 4 69 "" [1 uses])

(note 16 153 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
        (const_int 0 [0])) src/gui.c:447 -1
     (nil))

(jump_insn 18 17 19 4 (set (pc)
        (label_ref 140)) src/gui.c:447 -1
     (nil)
 -> 140)
;; End of basic block 4 -> ( 14)

;; Succ edge  14

(barrier 19 18 145)

;; Start of basic block ( 14) -> 5
;; Pred edge  14
(code_label 145 19 20 5 68 "" [1 uses])

(note 20 145 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 5 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
            (const_int 5 [0x5]))) src/gui.c:449 -1
     (nil))

(jump_insn 22 21 23 5 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) src/gui.c:449 -1
     (nil)
 -> 79)
;; End of basic block 5 -> ( 6 10)

;; Succ edge  6 (fallthru)
;; Succ edge  10

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 6 (set (reg/f:SI 89)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:452 -1
     (nil))

(insn 25 24 26 6 (set (reg:SI 90)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:452 -1
     (nil))

(insn 26 25 27 6 (set (reg:SI 60 [ D.6219 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 90)
                        (const_int 8 [0x8]))
                    (reg/f:SI 89))
                (const_int 4 [0x4])) [0 gameState_6(D)->zones[i_1].nb_checkers+0 S4 A32])) src/gui.c:452 -1
     (nil))

(insn 27 26 28 6 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 60 [ D.6219 ])
            (const_int 9 [0x9]))) src/gui.c:452 -1
     (nil))

(jump_insn 28 27 29 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) src/gui.c:452 -1
     (nil)
 -> 37)
;; End of basic block 6 -> ( 7 8)

;; Succ edge  7 (fallthru)
;; Succ edge  8

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(note 29 28 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 7 (set (reg:HI 61 [ D.6222 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 new_pos.x+0 S2 A32])) src/gui.c:454 -1
     (nil))

(insn 31 30 32 7 (set (reg:HI 62 [ D.6223 ])
        (reg:HI 61 [ D.6222 ])) src/gui.c:454 -1
     (nil))

(insn 32 31 33 7 (parallel [
            (set (reg:HI 63 [ D.6224 ])
                (plus:HI (reg:HI 62 [ D.6223 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:454 -1
     (nil))

(insn 33 32 34 7 (set (reg:HI 64 [ D.6225 ])
        (reg:HI 63 [ D.6224 ])) src/gui.c:454 -1
     (nil))

(insn 34 33 35 7 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 new_pos.x+0 S2 A32])
        (reg:HI 64 [ D.6225 ])) src/gui.c:454 -1
     (nil))

(jump_insn 35 34 36 7 (set (pc)
        (label_ref 44)) src/gui.c:454 -1
     (nil)
 -> 44)
;; End of basic block 7 -> ( 9)

;; Succ edge  9

(barrier 36 35 37)

;; Start of basic block ( 6) -> 8
;; Pred edge  6
(code_label 37 36 38 8 63 "" [1 uses])

(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 8 (set (reg:HI 65 [ D.6227 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 new_pos.x+0 S2 A32])) src/gui.c:457 -1
     (nil))

(insn 40 39 41 8 (set (reg:HI 66 [ D.6228 ])
        (reg:HI 65 [ D.6227 ])) src/gui.c:457 -1
     (nil))

(insn 41 40 42 8 (parallel [
            (set (reg:HI 67 [ D.6229 ])
                (plus:HI (reg:HI 66 [ D.6228 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:457 -1
     (nil))

(insn 42 41 43 8 (set (reg:HI 68 [ D.6230 ])
        (reg:HI 67 [ D.6229 ])) src/gui.c:457 -1
     (nil))

(insn 43 42 44 8 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 new_pos.x+0 S2 A32])
        (reg:HI 68 [ D.6230 ])) src/gui.c:457 -1
     (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 (fallthru)

;; Start of basic block ( 7 8) -> 9
;; Pred edge  7
;; Pred edge  8 (fallthru)
(code_label 44 43 45 9 64 "" [1 uses])

(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 9 (set (reg/f:SI 91)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:459 -1
     (nil))

(insn 47 46 48 9 (set (reg:SI 92)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:459 -1
     (nil))

(insn 48 47 49 9 (set (reg:SI 69 [ D.6231 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 92)
                        (const_int 8 [0x8]))
                    (reg/f:SI 91))
                (const_int 4 [0x4])) [0 gameState_6(D)->zones[i_1].nb_checkers+0 S4 A32])) src/gui.c:459 -1
     (nil))

(insn 49 48 50 9 (set (reg/f:SI 70 [ D.6232 ])
        (symbol_ref/f:SI ("*.LC20") [flags 0x2]  <var_decl 0x408fdea0 *.LC20>)) src/gui.c:459 -1
     (nil))

(insn 50 49 51 9 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 69 [ D.6231 ])) src/gui.c:459 -1
     (nil))

(insn 51 50 52 9 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 70 [ D.6232 ])) src/gui.c:459 -1
     (nil))

(insn 52 51 53 9 (set (reg/f:SI 93)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 tmp+0 S4 A32])) src/gui.c:459 -1
     (nil))

(insn 53 52 54 9 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 93)) src/gui.c:459 -1
     (nil))

(call_insn 54 53 55 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 0x406b4200 sprintf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:459 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 55 54 56 9 (set (reg/f:SI 94)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:460 -1
     (nil))

(insn 56 55 57 9 (set (reg/f:SI 71 [ D.6233 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 94)
                (const_int 36 [0x24])) [0 display_19(D)->font+0 S4 A32])) src/gui.c:460 -1
     (nil))

(insn 57 56 58 9 (set (reg:SI 95)
        (mem/s/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 color+0 S4 A32])) src/gui.c:460 -1
     (nil))

(insn 58 57 59 9 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 95)) src/gui.c:460 -1
     (nil))

(insn 59 58 60 9 (set (reg/f:SI 96)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 tmp+0 S4 A32])) src/gui.c:460 -1
     (nil))

(insn 60 59 61 9 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 96)) src/gui.c:460 -1
     (nil))

(insn 61 60 62 9 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 71 [ D.6233 ])) src/gui.c:460 -1
     (nil))

(call_insn 62 61 63 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("TTF_RenderText_Blended") [flags 0x41]  <function_decl 0x40801980 TTF_RenderText_Blended>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:460 -1
     (nil)
    (nil))

(insn 63 62 64 9 (set (reg:SI 97)
        (reg:SI 0 ax)) src/gui.c:460 -1
     (nil))

(insn 64 63 65 9 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 num+0 S4 A32])
        (reg:SI 97)) src/gui.c:460 -1
     (nil))

(insn 65 64 66 9 (set (reg/f:SI 98)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:461 -1
     (nil))

(insn 66 65 67 9 (set (reg/f:SI 72 [ D.6234 ])
        (mem/s/f/j:SI (reg/f:SI 98) [0 display_19(D)->screen+0 S4 A32])) src/gui.c:461 -1
     (nil))

(insn 67 66 68 9 (parallel [
            (set (reg:SI 99)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:461 -1
     (nil))

(insn 68 67 69 9 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 99)) src/gui.c:461 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -28 [0xffffffffffffffe4]))
        (nil)))

(insn 69 68 70 9 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 72 [ D.6234 ])) src/gui.c:461 -1
     (nil))

(insn 70 69 71 9 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:461 -1
     (nil))

(insn 71 70 72 9 (set (reg/f:SI 100)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 num+0 S4 A32])) src/gui.c:461 -1
     (nil))

(insn 72 71 73 9 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 100)) src/gui.c:461 -1
     (nil))

(call_insn 73 72 74 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:461 -1
     (nil)
    (nil))

(insn 74 73 75 9 (set (reg/f:SI 101)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 num+0 S4 A32])) src/gui.c:462 -1
     (nil))

(insn 75 74 76 9 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 101)) src/gui.c:462 -1
     (nil))

(call_insn 76 75 77 9 (call (mem:QI (symbol_ref:SI ("SDL_FreeSurface") [flags 0x41]  <function_decl 0x407d1000 SDL_FreeSurface>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:462 -1
     (nil)
    (nil))

(jump_insn 77 76 78 9 (set (pc)
        (label_ref 148)) src/gui.c:463 -1
     (nil)
 -> 148)
;; End of basic block 9 -> ( 15)

;; Succ edge  15

(barrier 78 77 79)

;; Start of basic block ( 5) -> 10
;; Pred edge  5
(code_label 79 78 80 10 62 "" [1 uses])

(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 10 (set (reg/f:SI 102)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:467 -1
     (nil))

(insn 82 81 83 10 (set (reg:SI 104)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:467 -1
     (nil))

(insn 83 82 84 10 (parallel [
            (set (reg:SI 103)
                (plus:SI (reg:SI 104)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:467 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 84 83 85 10 (set (reg:HI 73 [ D.6235 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 103)
                        (const_int 8 [0x8]))
                    (reg/f:SI 102))
                (const_int 4 [0x4])) [0 display_19(D)->positions[i_1].x+0 S2 A32])) src/gui.c:467 -1
     (nil))

(insn 85 84 86 10 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 new_pos.x+0 S2 A32])
        (reg:HI 73 [ D.6235 ])) src/gui.c:467 -1
     (nil))

(insn 86 85 87 10 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 11 [0xb]))) src/gui.c:468 -1
     (nil))

(jump_insn 87 86 88 10 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) src/gui.c:468 -1
     (nil)
 -> 107)
;; End of basic block 10 -> ( 11 12)

;; Succ edge  11 (fallthru)
;; Succ edge  12

;; Start of basic block ( 10) -> 11
;; Pred edge  10 (fallthru)
(note 88 87 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 11 (set (reg/f:SI 105)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:469 -1
     (nil))

(insn 90 89 91 11 (set (reg:SI 107)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:469 -1
     (nil))

(insn 91 90 92 11 (parallel [
            (set (reg:SI 106)
                (plus:SI (reg:SI 107)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:469 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 92 91 93 11 (set (reg:HI 74 [ D.6238 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 106)
                        (const_int 8 [0x8]))
                    (reg/f:SI 105))
                (const_int 6 [0x6])) [0 display_19(D)->positions[i_1].y+0 S2 A16])) src/gui.c:469 -1
     (nil))

(insn 93 92 94 11 (set (reg:HI 75 [ D.6239 ])
        (reg:HI 74 [ D.6238 ])) src/gui.c:469 -1
     (nil))

(insn 94 93 95 11 (set (reg:SI 108)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) src/gui.c:469 -1
     (nil))

(insn 95 94 96 11 (set (reg:HI 76 [ D.6240 ])
        (subreg:HI (reg:SI 108) 0)) src/gui.c:469 -1
     (nil))

(insn 96 95 97 11 (set (reg:HI 109)
        (reg:HI 76 [ D.6240 ])) src/gui.c:469 -1
     (nil))

(insn 97 96 98 11 (parallel [
            (set (reg:HI 109)
                (ashift:HI (reg:HI 109)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:469 -1
     (nil))

(insn 98 97 99 11 (parallel [
            (set (reg:HI 109)
                (plus:HI (reg:HI 109)
                    (reg:HI 76 [ D.6240 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:469 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 76 [ D.6240 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 99 98 100 11 (parallel [
            (set (reg:HI 110)
                (ashift:HI (reg:HI 109)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:469 -1
     (nil))

(insn 100 99 101 11 (set (reg:HI 109)
        (reg:HI 110)) src/gui.c:469 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 76 [ D.6240 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 101 100 102 11 (set (reg:HI 77 [ D.6241 ])
        (reg:HI 109)) src/gui.c:469 -1
     (nil))

(insn 102 101 103 11 (parallel [
            (set (reg:HI 78 [ D.6242 ])
                (minus:HI (reg:HI 75 [ D.6239 ])
                    (reg:HI 77 [ D.6241 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:469 -1
     (nil))

(insn 103 102 104 11 (set (reg:HI 79 [ D.6243 ])
        (reg:HI 78 [ D.6242 ])) src/gui.c:469 -1
     (nil))

(insn 104 103 105 11 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -26 [0xffffffffffffffe6])) [0 new_pos.y+0 S2 A16])
        (reg:HI 79 [ D.6243 ])) src/gui.c:469 -1
     (nil))

(jump_insn 105 104 106 11 (set (pc)
        (label_ref 125)) src/gui.c:469 -1
     (nil)
 -> 125)
;; End of basic block 11 -> ( 13)

;; Succ edge  13

(barrier 106 105 107)

;; Start of basic block ( 10) -> 12
;; Pred edge  10
(code_label 107 106 108 12 66 "" [1 uses])

(note 108 107 109 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 12 (set (reg/f:SI 111)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:471 -1
     (nil))

(insn 110 109 111 12 (set (reg:SI 113)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:471 -1
     (nil))

(insn 111 110 112 12 (parallel [
            (set (reg:SI 112)
                (plus:SI (reg:SI 113)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:471 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 112 111 113 12 (set (reg:HI 80 [ D.6245 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 112)
                        (const_int 8 [0x8]))
                    (reg/f:SI 111))
                (const_int 6 [0x6])) [0 display_19(D)->positions[i_1].y+0 S2 A16])) src/gui.c:471 -1
     (nil))

(insn 113 112 114 12 (set (reg:HI 81 [ D.6246 ])
        (reg:HI 80 [ D.6245 ])) src/gui.c:471 -1
     (nil))

(insn 114 113 115 12 (set (reg:SI 114)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) src/gui.c:471 -1
     (nil))

(insn 115 114 116 12 (set (reg:HI 82 [ D.6247 ])
        (subreg:HI (reg:SI 114) 0)) src/gui.c:471 -1
     (nil))

(insn 116 115 117 12 (set (reg:HI 115)
        (reg:HI 82 [ D.6247 ])) src/gui.c:471 -1
     (nil))

(insn 117 116 118 12 (parallel [
            (set (reg:HI 115)
                (ashift:HI (reg:HI 115)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:471 -1
     (nil))

(insn 118 117 119 12 (parallel [
            (set (reg:HI 115)
                (plus:HI (reg:HI 115)
                    (reg:HI 82 [ D.6247 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:471 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 82 [ D.6247 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 119 118 120 12 (parallel [
            (set (reg:HI 116)
                (ashift:HI (reg:HI 115)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:471 -1
     (nil))

(insn 120 119 121 12 (set (reg:HI 115)
        (reg:HI 116)) src/gui.c:471 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 82 [ D.6247 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 121 120 122 12 (set (reg:HI 83 [ D.6248 ])
        (reg:HI 115)) src/gui.c:471 -1
     (nil))

(insn 122 121 123 12 (parallel [
            (set (reg:HI 84 [ D.6249 ])
                (plus:HI (reg:HI 81 [ D.6246 ])
                    (reg:HI 83 [ D.6248 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:471 -1
     (nil))

(insn 123 122 124 12 (set (reg:HI 85 [ D.6250 ])
        (reg:HI 84 [ D.6249 ])) src/gui.c:471 -1
     (nil))

(insn 124 123 125 12 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -26 [0xffffffffffffffe6])) [0 new_pos.y+0 S2 A16])
        (reg:HI 85 [ D.6250 ])) src/gui.c:471 -1
     (nil))
;; End of basic block 12 -> ( 13)

;; Succ edge  13 (fallthru)

;; Start of basic block ( 11 12) -> 13
;; Pred edge  11
;; Pred edge  12 (fallthru)
(code_label 125 124 126 13 67 "" [1 uses])

(note 126 125 127 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 127 126 128 13 (set (reg/f:SI 117)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:472 -1
     (nil))

(insn 128 127 129 13 (set (reg:SI 118)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:472 -1
     (nil))

(insn 129 128 130 13 (set (reg:SI 86 [ D.6251 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 118)
                    (const_int 8 [0x8]))
                (reg/f:SI 117)) [0 gameState_6(D)->zones[i_1].player+0 S4 A32])) src/gui.c:472 -1
     (nil))

(insn 130 129 131 13 (set (reg:SI 87 [ D.6252 ])
        (reg:SI 86 [ D.6251 ])) src/gui.c:472 -1
     (nil))

(insn 131 130 132 13 (set (reg/f:SI 119)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 game+0 S4 A32])) src/gui.c:472 -1
     (nil))

(insn 132 131 133 13 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg/f:SI 119)) src/gui.c:472 -1
     (nil))

(insn 133 132 134 13 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 87 [ D.6252 ])) src/gui.c:472 -1
     (nil))

(insn 134 133 135 13 (set (reg:DI 120)
        (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 new_pos+0 S8 A32])) src/gui.c:472 -1
     (nil))

(insn 135 134 136 13 (set (mem:DI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DI 120)) src/gui.c:472 -1
     (nil))

(insn 136 135 137 13 (set (reg/f:SI 121)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:472 -1
     (nil))

(insn 137 136 138 13 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 121)) src/gui.c:472 -1
     (nil))

(call_insn 138 137 139 13 (call (mem:QI (symbol_ref:SI ("Checker_Draw") [flags 0x3]  <function_decl 0x4081a200 Checker_Draw>) [0 S1 A8])
        (const_int 20 [0x14])) src/gui.c:472 -1
     (nil)
    (nil))

(insn 139 138 140 13 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:447 -1
     (nil))
;; End of basic block 13 -> ( 14)

;; Succ edge  14 (fallthru)

;; Start of basic block ( 4 13) -> 14
;; Pred edge  4
;; Pred edge  13 (fallthru)
(code_label 140 139 141 14 61 "" [1 uses])

(note 141 140 142 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 142 141 143 14 (set (reg/f:SI 122)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:447 -1
     (nil))

(insn 143 142 144 14 (set (reg:SI 123)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:447 -1
     (nil))

(insn 144 143 146 14 (set (reg:SI 59 [ D.6253 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 123)
                        (const_int 8 [0x8]))
                    (reg/f:SI 122))
                (const_int 4 [0x4])) [0 gameState_6(D)->zones[i_1].nb_checkers+0 S4 A32])) src/gui.c:447 -1
     (nil))

(insn 146 144 147 14 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 59 [ D.6253 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32]))) src/gui.c:447 -1
     (nil))

(jump_insn 147 146 148 14 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) src/gui.c:447 -1
     (nil)
 -> 145)
;; End of basic block 14 -> ( 5 15)

;; Succ edge  5
;; Succ edge  15 (fallthru)

;; Start of basic block ( 9 14) -> 15
;; Pred edge  9
;; Pred edge  14 (fallthru)
(code_label 148 147 149 15 65 "" [1 uses])

(note 149 148 150 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 151 15 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:445 -1
     (nil))
;; End of basic block 15 -> ( 16)

;; Succ edge  16 (fallthru)

;; Start of basic block ( 3 15) -> 16
;; Pred edge  3
;; Pred edge  15 (fallthru)
(code_label 151 150 152 16 60 "" [1 uses])

(note 152 151 154 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 154 152 155 16 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 23 [0x17]))) src/gui.c:445 -1
     (nil))

(jump_insn 155 154 156 16 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) src/gui.c:445 -1
     (nil)
 -> 153)
;; End of basic block 16 -> ( 4 17)

;; Succ edge  4
;; Succ edge  17 (fallthru)

;; Start of basic block ( 16) -> 17
;; Pred edge  16 (fallthru)
(note 156 155 157 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 157 156 158 17 (set (reg/f:SI 124)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 tmp+0 S4 A32])) src/gui.c:477 -1
     (nil))

(insn 158 157 159 17 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 124)) src/gui.c:477 -1
     (nil))

(call_insn 159 158 160 17 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:477 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;; End of basic block 17 -> ( 18)

;; Succ edge  18 (fallthru)

;; Start of basic block ( 17) -> 18
;; Pred edge  17 (fallthru)
(code_label 160 159 161 18 59 "" [0 uses])

(note 161 160 0 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 18 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Checker_Move (Checker_Move)

Checker_Move (struct SDisplay * display, struct SGameState * gameState, struct SMove * move, struct SGame * game)
{
  int depassement;
  struct SDL_Rect new_pos;
  int numCas;
  int pas;
  double b;
  double a;
  int pos_dest_y;
  int pos_dest_x;
  int pos_src_y;
  int pos_src_x;
  EPlayer D.6216;
  unsigned int D.6215;
  EPosition D.6214;
  unsigned int D.6213;
  EPosition D.6212;
  unsigned int D.6211;
  unsigned int D.6210;
  unsigned int D.6209;
  EPosition D.6208;
  EPlayer D.6207;
  unsigned int D.6206;
  EPosition D.6205;
  unsigned int D.6204;
  EPosition D.6203;
  unsigned int D.6202;
  unsigned int D.6201;
  EPosition D.6200;
  EPlayer D.6199;
  unsigned int D.6198;
  EPosition D.6197;
  unsigned int D.6196;
  unsigned int D.6195;
  EPlayer D.6194;
  unsigned int D.6193;
  EPosition D.6192;
  unsigned int D.6191;
  EPosition D.6190;
  unsigned int D.6189;
  unsigned int D.6188;
  EPosition D.6187;
  EPlayer D.6186;
  unsigned int D.6185;
  EPosition D.6184;
  unsigned int D.6183;
  unsigned int D.6182;
  EPlayer D.6180;
  EPosition D.6179;
  EPlayer D.6177;
  EPosition D.6176;
  EPlayer D.6172;
  unsigned int D.6171;
  EPosition D.6170;
  EPlayer D.6169;
  unsigned int D.6168;
  EPosition D.6167;
  unsigned int D.6165;
  unsigned int D.6164;
  EPosition D.6163;
  int D.6158;
  int D.6157;
  int D.6156;
  Sint16 D.6155;
  int D.6152;
  int D.6151;
  int D.6150;
  Sint16 D.6149;
  int D.6146;
  int D.6145;
  int D.6144;
  Sint16 D.6143;
  int D.6140;
  int D.6139;
  int D.6138;
  Sint16 D.6137;
  int D.6134;
  int D.6133;
  int D.6132;
  Sint16 D.6131;
  int D.6128;
  int D.6127;
  int D.6126;
  Sint16 D.6125;
  int D.6122;
  int D.6121;
  int D.6120;
  Sint16 D.6119;
  int D.6116;
  int D.6115;
  int D.6114;
  Sint16 D.6113;
  struct SDL_Surface * D.6112;
  int D.6111;
  EPlayer D.6110;
  unsigned int D.6109;
  EPosition D.6108;
  Sint16 D.6107;
  int D.6106;
  long double D.6105;
  long double D.6104;
  long double D.6103;
  long double D.6102;
  double D.6101;
  Sint16 D.6100;
  long double D.6099;
  Sint16 D.6098;
  short unsigned int D.6097;
  short unsigned int D.6096;
  short unsigned int D.6095;
  Sint16 D.6094;
  unsigned int D.6093;
  unsigned int D.6092;
  unsigned int D.6091;
  EPosition D.6090;
  Sint16 D.6089;
  Sint16 D.6088;
  const char * restrict D.6087;
  unsigned int D.6085;
  EPosition D.6084;
  unsigned int D.6083;
  EPosition D.6082;
  _Bool D.6080;
  unsigned int D.6076;
  EPosition D.6075;
  unsigned int D.6074;
  EPosition D.6073;
  _Bool D.6071;
  unsigned int D.6067;
  EPosition D.6066;
  unsigned int D.6065;
  EPosition D.6064;
  _Bool D.6062;
  unsigned int D.6056;
  EPosition D.6055;
  unsigned int D.6054;
  EPosition D.6053;
  EPosition D.6051;
  EPosition D.6049;
  unsigned int D.6043;
  EPosition D.6042;
  unsigned int D.6041;
  EPosition D.6040;
  EPosition D.6038;
  EPosition D.6036;
  long double D.6033;
  long double D.6032;
  long double D.6031;
  double D.6030;
  long double D.6029;
  long double D.6028;
  double D.6027;
  long double D.6026;
  long double D.6025;
  double D.6024;
  int D.6023;
  long double D.6022;
  double D.6021;
  int D.6020;
  unsigned int D.6019;
  unsigned int D.6018;
  unsigned int D.6017;
  unsigned int D.6016;
  EPosition D.6015;
  unsigned int D.6014;
  Sint16 D.6013;
  unsigned int D.6012;
  EPosition D.6011;
  int D.6009;
  Sint16 D.6008;
  unsigned int D.6007;
  EPosition D.6006;
  unsigned int D.6003;
  unsigned int D.6002;
  EPosition D.6001;
  unsigned int D.5999;
  unsigned int D.5998;
  unsigned int D.5997;
  unsigned int D.5996;
  EPosition D.5995;
  unsigned int D.5994;
  Sint16 D.5993;
  unsigned int D.5992;
  EPosition D.5991;
  int D.5989;
  Sint16 D.5988;
  unsigned int D.5987;
  EPosition D.5986;
  unsigned int D.5983;
  unsigned int D.5982;
  EPosition D.5981;
  EPosition D.5978;
  Sint16 D.5977;
  unsigned int D.5976;
  EPosition D.5975;
  unsigned int D.5974;
  unsigned int D.5973;
  unsigned int D.5972;
  unsigned int D.5971;
  EPosition D.5970;
  unsigned int D.5969;
  Sint16 D.5968;
  unsigned int D.5967;
  EPosition D.5966;
  int D.5964;
  Sint16 D.5963;
  unsigned int D.5962;
  EPosition D.5961;
  unsigned int D.5958;
  unsigned int D.5957;
  EPosition D.5956;
  unsigned int D.5954;
  unsigned int D.5953;
  unsigned int D.5952;
  unsigned int D.5951;
  EPosition D.5950;
  unsigned int D.5949;
  Sint16 D.5948;
  unsigned int D.5947;
  EPosition D.5946;
  int D.5944;
  Sint16 D.5943;
  unsigned int D.5942;
  EPosition D.5941;
  unsigned int D.5938;
  unsigned int D.5937;
  EPosition D.5936;
  EPosition D.5933;
  Sint16 D.5932;
  unsigned int D.5931;
  EPosition D.5930;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.5930_19 = move_18(D)->src_point;
  D.5931_20 = D.5930_19 + 4294967295;
  D.5932_22 = display_21(D)->positions[D.5931_20].x;
  pos_src_x_23 = (int) D.5932_22;
  D.5933_24 = move_18(D)->src_point;
  if (D.5933_24 > 12)
    goto <bb 3>;
  else
    goto <bb 6>;
  # SUCC: 3 (true) 6 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.5936_25 = move_18(D)->src_point;
  D.5937_26 = D.5936_25 + 4294967295;
  D.5938_28 = gameState_27(D)->zones[D.5937_26].nb_checkers;
  if (D.5938_28 > 6)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.5941_29 = move_18(D)->src_point;
  D.5942_30 = D.5941_29 + 4294967295;
  D.5943_31 = display_21(D)->positions[D.5942_30].y;
  D.5944_32 = (int) D.5943_31;
  pos_src_y_33 = D.5944_32 + 120;
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  D.5946_34 = move_18(D)->src_point;
  D.5947_35 = D.5946_34 + 4294967295;
  D.5948_36 = display_21(D)->positions[D.5947_35].y;
  D.5949_37 = (unsigned int) D.5948_36;
  D.5950_38 = move_18(D)->src_point;
  D.5951_39 = D.5950_38 + 4294967295;
  D.5952_40 = gameState_27(D)->zones[D.5951_39].nb_checkers;
  D.5953_41 = D.5952_40 * 20;
  D.5954_42 = D.5949_37 + D.5953_41;
  pos_src_y_43 = (int) D.5954_42;
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 6
  # PRED: 2 (false)
  D.5956_44 = move_18(D)->src_point;
  D.5957_45 = D.5956_44 + 4294967295;
  D.5958_46 = gameState_27(D)->zones[D.5957_45].nb_checkers;
  if (D.5958_46 > 6)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 (true) 8 (false)

  # BLOCK 7
  # PRED: 6 (true)
  D.5961_47 = move_18(D)->src_point;
  D.5962_48 = D.5961_47 + 4294967295;
  D.5963_49 = display_21(D)->positions[D.5962_48].y;
  D.5964_50 = (int) D.5963_49;
  pos_src_y_51 = D.5964_50 + -120;
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 8
  # PRED: 6 (false)
  D.5966_52 = move_18(D)->src_point;
  D.5967_53 = D.5966_52 + 4294967295;
  D.5968_54 = display_21(D)->positions[D.5967_53].y;
  D.5969_55 = (unsigned int) D.5968_54;
  D.5970_56 = move_18(D)->src_point;
  D.5971_57 = D.5970_56 + 4294967295;
  D.5972_58 = gameState_27(D)->zones[D.5971_57].nb_checkers;
  D.5973_59 = D.5972_58 * 20;
  D.5974_60 = D.5969_55 - D.5973_59;
  pos_src_y_61 = (int) D.5974_60;
  # SUCC: 9 (fallthru)

  # BLOCK 9
  # PRED: 5 (fallthru) 7 (fallthru) 8 (fallthru) 4 (fallthru)
  # pos_src_y_1 = PHI <pos_src_y_43(5), pos_src_y_51(7), pos_src_y_61(8), pos_src_y_33(4)>
  D.5975_62 = move_18(D)->dest_point;
  D.5976_63 = D.5975_62 + 4294967295;
  D.5977_64 = display_21(D)->positions[D.5976_63].x;
  pos_dest_x_65 = (int) D.5977_64;
  D.5978_66 = move_18(D)->dest_point;
  if (D.5978_66 > 12)
    goto <bb 10>;
  else
    goto <bb 13>;
  # SUCC: 10 (true) 13 (false)

  # BLOCK 10
  # PRED: 9 (true)
  D.5981_67 = move_18(D)->dest_point;
  D.5982_68 = D.5981_67 + 4294967295;
  D.5983_69 = gameState_27(D)->zones[D.5982_68].nb_checkers;
  if (D.5983_69 > 6)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 (true) 12 (false)

  # BLOCK 11
  # PRED: 10 (true)
  D.5986_70 = move_18(D)->dest_point;
  D.5987_71 = D.5986_70 + 4294967295;
  D.5988_72 = display_21(D)->positions[D.5987_71].y;
  D.5989_73 = (int) D.5988_72;
  pos_dest_y_74 = D.5989_73 + 120;
  goto <bb 16>;
  # SUCC: 16 (fallthru)

  # BLOCK 12
  # PRED: 10 (false)
  D.5991_75 = move_18(D)->dest_point;
  D.5992_76 = D.5991_75 + 4294967295;
  D.5993_77 = display_21(D)->positions[D.5992_76].y;
  D.5994_78 = (unsigned int) D.5993_77;
  D.5995_79 = move_18(D)->dest_point;
  D.5996_80 = D.5995_79 + 4294967295;
  D.5997_81 = gameState_27(D)->zones[D.5996_80].nb_checkers;
  D.5998_82 = D.5997_81 * 20;
  D.5999_83 = D.5994_78 + D.5998_82;
  pos_dest_y_84 = (int) D.5999_83;
  goto <bb 16>;
  # SUCC: 16 (fallthru)

  # BLOCK 13
  # PRED: 9 (false)
  D.6001_85 = move_18(D)->dest_point;
  D.6002_86 = D.6001_85 + 4294967295;
  D.6003_87 = gameState_27(D)->zones[D.6002_86].nb_checkers;
  if (D.6003_87 > 6)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 (true) 15 (false)

  # BLOCK 14
  # PRED: 13 (true)
  D.6006_88 = move_18(D)->dest_point;
  D.6007_89 = D.6006_88 + 4294967295;
  D.6008_90 = display_21(D)->positions[D.6007_89].y;
  D.6009_91 = (int) D.6008_90;
  pos_dest_y_92 = D.6009_91 + -120;
  goto <bb 16>;
  # SUCC: 16 (fallthru)

  # BLOCK 15
  # PRED: 13 (false)
  D.6011_93 = move_18(D)->dest_point;
  D.6012_94 = D.6011_93 + 4294967295;
  D.6013_95 = display_21(D)->positions[D.6012_94].y;
  D.6014_96 = (unsigned int) D.6013_95;
  D.6015_97 = move_18(D)->dest_point;
  D.6016_98 = D.6015_97 + 4294967295;
  D.6017_99 = gameState_27(D)->zones[D.6016_98].nb_checkers;
  D.6018_100 = D.6017_99 * 20;
  D.6019_101 = D.6014_96 - D.6018_100;
  pos_dest_y_102 = (int) D.6019_101;
  # SUCC: 16 (fallthru)

  # BLOCK 16
  # PRED: 12 (fallthru) 14 (fallthru) 15 (fallthru) 11 (fallthru)
  # pos_dest_y_2 = PHI <pos_dest_y_84(12), pos_dest_y_92(14), pos_dest_y_102(15), pos_dest_y_74(11)>
  D.6020_103 = pos_src_y_1 - pos_dest_y_2;
  D.6021_104 = (double) D.6020_103;
  D.6022_105 = (long double) D.6021_104;
  D.6023_106 = pos_src_x_23 - pos_dest_x_65;
  D.6024_107 = (double) D.6023_106;
  D.6025_108 = (long double) D.6024_107;
  D.6026_109 = D.6022_105 / D.6025_108;
  a_110 = (double) D.6026_109;
  D.6027_111 = (double) pos_dest_y_2;
  D.6028_112 = (long double) D.6027_111;
  D.6029_113 = (long double) a_110;
  D.6030_114 = (double) pos_dest_x_65;
  D.6031_115 = (long double) D.6030_114;
  D.6032_116 = D.6029_113 * D.6031_115;
  D.6033_117 = D.6028_112 - D.6032_116;
  b_118 = (double) D.6033_117;
  pas_119 = 8;
  D.6036_120 = move_18(D)->dest_point;
  if (D.6036_120 <= 12)
    goto <bb 17>;
  else
    goto <bb 22>;
  # SUCC: 17 (true) 22 (false)

  # BLOCK 17
  # PRED: 16 (true)
  D.6038_121 = move_18(D)->src_point;
  if (D.6038_121 <= 12)
    goto <bb 18>;
  else
    goto <bb 22>;
  # SUCC: 18 (true) 22 (false)

  # BLOCK 18
  # PRED: 17 (true)
  D.6040_122 = move_18(D)->dest_point;
  D.6041_123 = D.6040_122 + 4294967295;
  D.6042_124 = move_18(D)->src_point;
  D.6043_125 = D.6042_124 + 4294967295;
  if (D.6041_123 <= D.6043_125)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 (true) 20 (false)

  # BLOCK 19
  # PRED: 18 (true)
  numCas_126 = 1;
  goto <bb 21>;
  # SUCC: 21 (fallthru)

  # BLOCK 20
  # PRED: 18 (false)
  numCas_127 = 2;
  pas_128 = -pas_119;
  # SUCC: 21 (fallthru)

  # BLOCK 21
  # PRED: 19 (fallthru) 20 (fallthru)
  # pas_3 = PHI <pas_119(19), pas_128(20)>
  # numCas_6 = PHI <numCas_126(19), numCas_127(20)>
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 22
  # PRED: 16 (false) 17 (false)
  D.6049_129 = move_18(D)->dest_point;
  if (D.6049_129 > 12)
    goto <bb 23>;
  else
    goto <bb 28>;
  # SUCC: 23 (true) 28 (false)

  # BLOCK 23
  # PRED: 22 (true)
  D.6051_130 = move_18(D)->src_point;
  if (D.6051_130 > 12)
    goto <bb 24>;
  else
    goto <bb 28>;
  # SUCC: 24 (true) 28 (false)

  # BLOCK 24
  # PRED: 23 (true)
  D.6053_131 = move_18(D)->dest_point;
  D.6054_132 = D.6053_131 + 4294967295;
  D.6055_133 = move_18(D)->src_point;
  D.6056_134 = D.6055_133 + 4294967295;
  if (D.6054_132 >= D.6056_134)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 (true) 26 (false)

  # BLOCK 25
  # PRED: 24 (true)
  numCas_135 = 3;
  goto <bb 27>;
  # SUCC: 27 (fallthru)

  # BLOCK 26
  # PRED: 24 (false)
  numCas_136 = 4;
  pas_137 = -pas_119;
  # SUCC: 27 (fallthru)

  # BLOCK 27
  # PRED: 25 (fallthru) 26 (fallthru)
  # pas_4 = PHI <pas_119(25), pas_137(26)>
  # numCas_7 = PHI <numCas_135(25), numCas_136(26)>
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 28
  # PRED: 22 (false) 23 (false)
  D.6062_138 = a_110 >= 0.0;
  if (D.6062_138 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;
  # SUCC: 29 (true) 31 (false)

  # BLOCK 29
  # PRED: 28 (true)
  D.6064_139 = move_18(D)->dest_point;
  D.6065_140 = D.6064_139 + 4294967295;
  D.6066_141 = move_18(D)->src_point;
  D.6067_142 = D.6066_141 + 4294967295;
  if (D.6065_140 <= D.6067_142)
    goto <bb 30>;
  else
    goto <bb 31>;
  # SUCC: 30 (true) 31 (false)

  # BLOCK 30
  # PRED: 29 (true)
  numCas_143 = 5;
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 31
  # PRED: 28 (false) 29 (false)
  D.6071_144 = a_110 <= 0.0;
  if (D.6071_144 != 0)
    goto <bb 32>;
  else
    goto <bb 34>;
  # SUCC: 32 (true) 34 (false)

  # BLOCK 32
  # PRED: 31 (true)
  D.6073_145 = move_18(D)->dest_point;
  D.6074_146 = D.6073_145 + 4294967295;
  D.6075_147 = move_18(D)->src_point;
  D.6076_148 = D.6075_147 + 4294967295;
  if (D.6074_146 >= D.6076_148)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 (true) 34 (false)

  # BLOCK 33
  # PRED: 32 (true)
  numCas_149 = 6;
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 34
  # PRED: 31 (false) 32 (false)
  D.6080_150 = a_110 >= 0.0;
  if (D.6080_150 != 0)
    goto <bb 35>;
  else
    goto <bb 37>;
  # SUCC: 35 (true) 37 (false)

  # BLOCK 35
  # PRED: 34 (true)
  D.6082_151 = move_18(D)->dest_point;
  D.6083_152 = D.6082_151 + 4294967295;
  D.6084_153 = move_18(D)->src_point;
  D.6085_154 = D.6084_153 + 4294967295;
  if (D.6083_152 >= D.6085_154)
    goto <bb 36>;
  else
    goto <bb 37>;
  # SUCC: 36 (true) 37 (false)

  # BLOCK 36
  # PRED: 35 (true)
  numCas_155 = 7;
  pas_156 = -pas_119;
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 37
  # PRED: 34 (false) 35 (false)
  numCas_157 = 8;
  pas_158 = -pas_119;
  # SUCC: 38 (fallthru)

  # BLOCK 38
  # PRED: 21 (fallthru) 27 (fallthru) 30 (fallthru) 33 (fallthru) 36 (fallthru) 37 (fallthru)
  # pas_5 = PHI <pas_3(21), pas_4(27), pas_119(30), pas_119(33), pas_156(36), pas_158(37)>
  # numCas_8 = PHI <numCas_6(21), numCas_7(27), numCas_143(30), numCas_149(33), numCas_155(36), numCas_157(37)>
  D.6087_159 = (const char * restrict) &"Cas n°%d\n"[0];
  printf (D.6087_159, numCas_8);
  D.6088_160 = (Sint16) pos_src_x_23;
  new_pos.x = D.6088_160;
  D.6089_161 = (Sint16) pos_src_y_1;
  new_pos.y = D.6089_161;
  depassement_162 = 0;
  D.6090_163 = move_18(D)->src_point;
  D.6091_164 = D.6090_163 + 4294967295;
  D.6092_165 = gameState_27(D)->zones[D.6091_164].nb_checkers;
  D.6093_166 = D.6092_165 - 1;
  gameState_27(D)->zones[D.6091_164].nb_checkers = D.6093_166;
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 39
  # PRED: 65 (true)
  D.6094_167 = new_pos.x;
  D.6095_168 = (short unsigned int) D.6094_167;
  D.6096_169 = (short unsigned int) pas_5;
  D.6097_170 = D.6095_168 + D.6096_169;
  D.6098_171 = (Sint16) D.6097_170;
  new_pos.x = D.6098_171;
  D.6099_172 = (long double) a_110;
  D.6100_173 = new_pos.x;
  D.6101_174 = (double) D.6100_173;
  D.6102_175 = (long double) D.6101_174;
  D.6103_176 = D.6099_172 * D.6102_175;
  D.6104_177 = (long double) b_118;
  D.6105_178 = D.6103_176 + D.6104_177;
  D.6106_179 = (int) D.6105_178;
  D.6107_180 = (Sint16) D.6106_179;
  new_pos.y = D.6107_180;
  Display_RefreshGameBoard (display_21(D), gameState_27(D), game_181(D));
  D.6108_182 = move_18(D)->src_point;
  D.6109_183 = D.6108_182 + 4294967295;
  D.6110_184 = gameState_27(D)->zones[D.6109_183].player;
  D.6111_185 = (int) D.6110_184;
  Checker_Draw (display_21(D), new_pos, D.6111_185, game_181(D));
  D.6112_186 = display_21(D)->screen;
  SDL_Flip (D.6112_186);
  switch (numCas_8) <default: <L69>, case 1: <L45>, case 2: <L48>, case 3: <L51>, case 4: <L54>, case 5: <L57>, case 6: <L60>, case 7: <L63>, case 8: <L66>>
  # SUCC: 64 40 43 46 49 52 55 58 61

  # BLOCK 40
  # PRED: 39
<L45>:
  D.6113_187 = new_pos.x;
  D.6114_188 = (int) D.6113_187;
  D.6115_189 = pas_5 * -2;
  D.6116_190 = D.6115_189 + pos_dest_x_65;
  if (D.6114_188 > D.6116_190)
    goto <bb 41>;
  else
    goto <bb 42>;
  # SUCC: 41 (true) 42 (false)

  # BLOCK 41
  # PRED: 40 (true)
  depassement_191 = 1;
  # SUCC: 42 (fallthru)

  # BLOCK 42
  # PRED: 40 (false) 41 (fallthru)
  # depassement_9 = PHI <depassement_17(40), depassement_191(41)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 43
  # PRED: 39
<L48>:
  D.6119_192 = new_pos.x;
  D.6120_193 = (int) D.6119_192;
  D.6121_194 = pas_5 * -2;
  D.6122_195 = D.6121_194 + pos_dest_x_65;
  if (D.6120_193 < D.6122_195)
    goto <bb 44>;
  else
    goto <bb 45>;
  # SUCC: 44 (true) 45 (false)

  # BLOCK 44
  # PRED: 43 (true)
  depassement_196 = 1;
  # SUCC: 45 (fallthru)

  # BLOCK 45
  # PRED: 43 (false) 44 (fallthru)
  # depassement_10 = PHI <depassement_17(43), depassement_196(44)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 46
  # PRED: 39
<L51>:
  D.6125_197 = new_pos.x;
  D.6126_198 = (int) D.6125_197;
  D.6127_199 = pas_5 * -2;
  D.6128_200 = D.6127_199 + pos_dest_x_65;
  if (D.6126_198 > D.6128_200)
    goto <bb 47>;
  else
    goto <bb 48>;
  # SUCC: 47 (true) 48 (false)

  # BLOCK 47
  # PRED: 46 (true)
  depassement_201 = 1;
  # SUCC: 48 (fallthru)

  # BLOCK 48
  # PRED: 46 (false) 47 (fallthru)
  # depassement_11 = PHI <depassement_17(46), depassement_201(47)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 49
  # PRED: 39
<L54>:
  D.6131_202 = new_pos.x;
  D.6132_203 = (int) D.6131_202;
  D.6133_204 = pas_5 * -2;
  D.6134_205 = D.6133_204 + pos_dest_x_65;
  if (D.6132_203 < D.6134_205)
    goto <bb 50>;
  else
    goto <bb 51>;
  # SUCC: 50 (true) 51 (false)

  # BLOCK 50
  # PRED: 49 (true)
  depassement_206 = 1;
  # SUCC: 51 (fallthru)

  # BLOCK 51
  # PRED: 49 (false) 50 (fallthru)
  # depassement_12 = PHI <depassement_17(49), depassement_206(50)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 52
  # PRED: 39
<L57>:
  D.6137_207 = new_pos.x;
  D.6138_208 = (int) D.6137_207;
  D.6139_209 = pas_5 * -2;
  D.6140_210 = D.6139_209 + pos_dest_x_65;
  if (D.6138_208 > D.6140_210)
    goto <bb 53>;
  else
    goto <bb 54>;
  # SUCC: 53 (true) 54 (false)

  # BLOCK 53
  # PRED: 52 (true)
  depassement_211 = 1;
  # SUCC: 54 (fallthru)

  # BLOCK 54
  # PRED: 52 (false) 53 (fallthru)
  # depassement_13 = PHI <depassement_17(52), depassement_211(53)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 55
  # PRED: 39
<L60>:
  D.6143_212 = new_pos.x;
  D.6144_213 = (int) D.6143_212;
  D.6145_214 = pas_5 * -2;
  D.6146_215 = D.6145_214 + pos_dest_x_65;
  if (D.6144_213 > D.6146_215)
    goto <bb 56>;
  else
    goto <bb 57>;
  # SUCC: 56 (true) 57 (false)

  # BLOCK 56
  # PRED: 55 (true)
  depassement_216 = 1;
  # SUCC: 57 (fallthru)

  # BLOCK 57
  # PRED: 55 (false) 56 (fallthru)
  # depassement_14 = PHI <depassement_17(55), depassement_216(56)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 58
  # PRED: 39
<L63>:
  D.6149_217 = new_pos.x;
  D.6150_218 = (int) D.6149_217;
  D.6151_219 = pas_5 * -2;
  D.6152_220 = D.6151_219 + pos_dest_x_65;
  if (D.6150_218 < D.6152_220)
    goto <bb 59>;
  else
    goto <bb 60>;
  # SUCC: 59 (true) 60 (false)

  # BLOCK 59
  # PRED: 58 (true)
  depassement_221 = 1;
  # SUCC: 60 (fallthru)

  # BLOCK 60
  # PRED: 58 (false) 59 (fallthru)
  # depassement_15 = PHI <depassement_17(58), depassement_221(59)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 61
  # PRED: 39
<L66>:
  D.6155_222 = new_pos.x;
  D.6156_223 = (int) D.6155_222;
  D.6157_224 = pas_5 * -2;
  D.6158_225 = D.6157_224 + pos_dest_x_65;
  if (D.6156_223 < D.6158_225)
    goto <bb 62>;
  else
    goto <bb 63>;
  # SUCC: 62 (true) 63 (false)

  # BLOCK 62
  # PRED: 61 (true)
  depassement_226 = 1;
  # SUCC: 63 (fallthru)

  # BLOCK 63
  # PRED: 61 (false) 62 (fallthru)
  # depassement_16 = PHI <depassement_17(61), depassement_226(62)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 64
  # PRED: 39
<L69>:
  depassement_227 = 1;
  # SUCC: 65 (fallthru)

  # BLOCK 65
  # PRED: 38 (fallthru) 42 (fallthru) 45 (fallthru) 48 (fallthru) 51 (fallthru) 54 (fallthru) 57 (fallthru) 60 (fallthru) 63 (fallthru) 64 (fallthru)
  # depassement_17 = PHI <depassement_162(38), depassement_9(42), depassement_10(45), depassement_11(48), depassement_12(51), depassement_13(54), depassement_14(57), depassement_15(60), depassement_16(63), depassement_227(64)>
  if (depassement_17 == 0)
    goto <bb 39>;
  else
    goto <bb 66>;
  # SUCC: 39 (true) 66 (false)

  # BLOCK 66
  # PRED: 65 (false)
  D.6163_228 = move_18(D)->dest_point;
  D.6164_229 = D.6163_228 + 4294967295;
  D.6165_230 = gameState_27(D)->zones[D.6164_229].nb_checkers;
  if (D.6165_230 == 1)
    goto <bb 67>;
  else
    goto <bb 73>;
  # SUCC: 67 (true) 73 (false)

  # BLOCK 67
  # PRED: 66 (true)
  D.6167_231 = move_18(D)->src_point;
  D.6168_232 = D.6167_231 + 4294967295;
  D.6169_233 = gameState_27(D)->zones[D.6168_232].player;
  D.6170_234 = move_18(D)->dest_point;
  D.6171_235 = D.6170_234 + 4294967295;
  D.6172_236 = gameState_27(D)->zones[D.6171_235].player;
  if (D.6169_233 != D.6172_236)
    goto <bb 68>;
  else
    goto <bb 73>;
  # SUCC: 68 (true) 73 (false)

  # BLOCK 68
  # PRED: 67 (true)
  D.6176_237 = move_18(D)->src_point;
  D.6177_238 = gameState_27(D)->zones[D.6176_237].player;
  if (D.6177_238 == 0)
    goto <bb 69>;
  else
    goto <bb 71>;
  # SUCC: 69 (true) 71 (false)

  # BLOCK 69
  # PRED: 68 (true)
  D.6179_239 = move_18(D)->dest_point;
  D.6180_240 = gameState_27(D)->zones[D.6179_239].player;
  if (D.6180_240 == 1)
    goto <bb 70>;
  else
    goto <bb 71>;
  # SUCC: 70 (true) 71 (false)

  # BLOCK 70
  # PRED: 69 (true)
  D.6182_241 = gameState_27(D)->zones[26].nb_checkers;
  D.6183_242 = D.6182_241 + 1;
  gameState_27(D)->zones[26].nb_checkers = D.6183_242;
  D.6184_243 = move_18(D)->dest_point;
  D.6185_244 = D.6184_243 + 4294967295;
  D.6186_245 = gameState_27(D)->zones[D.6185_244].player;
  gameState_27(D)->zones[26].player = D.6186_245;
  D.6187_246 = move_18(D)->dest_point;
  D.6188_247 = D.6187_246 + 4294967295;
  D.6189_248 = gameState_27(D)->zones[D.6188_247].nb_checkers;
  D.6190_249 = move_18(D)->dest_point;
  D.6191_250 = D.6190_249 + 4294967295;
  D.6192_251 = move_18(D)->src_point;
  D.6193_252 = D.6192_251 + 4294967295;
  D.6194_253 = gameState_27(D)->zones[D.6193_252].player;
  gameState_27(D)->zones[D.6191_250].player = D.6194_253;
  goto <bb 72>;
  # SUCC: 72 (fallthru)

  # BLOCK 71
  # PRED: 68 (false) 69 (false)
  D.6195_254 = gameState_27(D)->zones[24].nb_checkers;
  D.6196_255 = D.6195_254 + 1;
  gameState_27(D)->zones[24].nb_checkers = D.6196_255;
  D.6197_256 = move_18(D)->dest_point;
  D.6198_257 = D.6197_256 + 4294967295;
  D.6199_258 = gameState_27(D)->zones[D.6198_257].player;
  gameState_27(D)->zones[24].player = D.6199_258;
  D.6200_259 = move_18(D)->dest_point;
  D.6201_260 = D.6200_259 + 4294967295;
  D.6202_261 = gameState_27(D)->zones[D.6201_260].nb_checkers;
  D.6203_262 = move_18(D)->dest_point;
  D.6204_263 = D.6203_262 + 4294967295;
  D.6205_264 = move_18(D)->src_point;
  D.6206_265 = D.6205_264 + 4294967295;
  D.6207_266 = gameState_27(D)->zones[D.6206_265].player;
  gameState_27(D)->zones[D.6204_263].player = D.6207_266;
  # SUCC: 72 (fallthru)

  # BLOCK 72
  # PRED: 70 (fallthru) 71 (fallthru)
  goto <bb 74>;
  # SUCC: 74 (fallthru)

  # BLOCK 73
  # PRED: 66 (false) 67 (false)
  D.6208_267 = move_18(D)->dest_point;
  D.6209_268 = D.6208_267 + 4294967295;
  D.6210_269 = gameState_27(D)->zones[D.6209_268].nb_checkers;
  D.6211_270 = D.6210_269 + 1;
  gameState_27(D)->zones[D.6209_268].nb_checkers = D.6211_270;
  D.6212_271 = move_18(D)->dest_point;
  D.6213_272 = D.6212_271 + 4294967295;
  D.6214_273 = move_18(D)->src_point;
  D.6215_274 = D.6214_273 + 4294967295;
  D.6216_275 = gameState_27(D)->zones[D.6215_274].player;
  gameState_27(D)->zones[D.6213_272].player = D.6216_275;
  # SUCC: 74 (fallthru)

  # BLOCK 74
  # PRED: 72 (fallthru) 73 (fallthru)
  Display_RefreshGameBoard (display_21(D), gameState_27(D), game_181(D));
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (pos_src_y_1 - 1 )
Partition 2 (pos_dest_y_2 - 2 )
Partition 3 (pas_3 - 3 )
Partition 4 (pas_4 - 4 )
Partition 5 (pas_5 - 5 )
Partition 6 (numCas_6 - 6 )
Partition 7 (numCas_7 - 7 )
Partition 8 (numCas_8 - 8 )
Partition 9 (depassement_9 - 9 )
Partition 10 (depassement_10 - 10 )
Partition 11 (depassement_11 - 11 )
Partition 12 (depassement_12 - 12 )
Partition 13 (depassement_13 - 13 )
Partition 14 (depassement_14 - 14 )
Partition 15 (depassement_15 - 15 )
Partition 16 (depassement_16 - 16 )
Partition 17 (depassement_17 - 17 )
Partition 18 (move_18(D) - 18 )
Partition 19 (D.5930_19 - 19 )
Partition 20 (D.5931_20 - 20 )
Partition 21 (display_21(D) - 21 )
Partition 22 (D.5932_22 - 22 )
Partition 23 (pos_src_x_23 - 23 )
Partition 24 (D.5933_24 - 24 )
Partition 25 (D.5936_25 - 25 )
Partition 26 (D.5937_26 - 26 )
Partition 27 (gameState_27(D) - 27 )
Partition 28 (D.5938_28 - 28 )
Partition 29 (D.5941_29 - 29 )
Partition 30 (D.5942_30 - 30 )
Partition 31 (D.5943_31 - 31 )
Partition 32 (D.5944_32 - 32 )
Partition 33 (pos_src_y_33 - 33 )
Partition 34 (D.5946_34 - 34 )
Partition 35 (D.5947_35 - 35 )
Partition 36 (D.5948_36 - 36 )
Partition 37 (D.5949_37 - 37 )
Partition 38 (D.5950_38 - 38 )
Partition 39 (D.5951_39 - 39 )
Partition 40 (D.5952_40 - 40 )
Partition 41 (D.5953_41 - 41 )
Partition 42 (D.5954_42 - 42 )
Partition 43 (pos_src_y_43 - 43 )
Partition 44 (D.5956_44 - 44 )
Partition 45 (D.5957_45 - 45 )
Partition 46 (D.5958_46 - 46 )
Partition 47 (D.5961_47 - 47 )
Partition 48 (D.5962_48 - 48 )
Partition 49 (D.5963_49 - 49 )
Partition 50 (D.5964_50 - 50 )
Partition 51 (pos_src_y_51 - 51 )
Partition 52 (D.5966_52 - 52 )
Partition 53 (D.5967_53 - 53 )
Partition 54 (D.5968_54 - 54 )
Partition 55 (D.5969_55 - 55 )
Partition 56 (D.5970_56 - 56 )
Partition 57 (D.5971_57 - 57 )
Partition 58 (D.5972_58 - 58 )
Partition 59 (D.5973_59 - 59 )
Partition 60 (D.5974_60 - 60 )
Partition 61 (pos_src_y_61 - 61 )
Partition 62 (D.5975_62 - 62 )
Partition 63 (D.5976_63 - 63 )
Partition 64 (D.5977_64 - 64 )
Partition 65 (pos_dest_x_65 - 65 )
Partition 66 (D.5978_66 - 66 )
Partition 67 (D.5981_67 - 67 )
Partition 68 (D.5982_68 - 68 )
Partition 69 (D.5983_69 - 69 )
Partition 70 (D.5986_70 - 70 )
Partition 71 (D.5987_71 - 71 )
Partition 72 (D.5988_72 - 72 )
Partition 73 (D.5989_73 - 73 )
Partition 74 (pos_dest_y_74 - 74 )
Partition 75 (D.5991_75 - 75 )
Partition 76 (D.5992_76 - 76 )
Partition 77 (D.5993_77 - 77 )
Partition 78 (D.5994_78 - 78 )
Partition 79 (D.5995_79 - 79 )
Partition 80 (D.5996_80 - 80 )
Partition 81 (D.5997_81 - 81 )
Partition 82 (D.5998_82 - 82 )
Partition 83 (D.5999_83 - 83 )
Partition 84 (pos_dest_y_84 - 84 )
Partition 85 (D.6001_85 - 85 )
Partition 86 (D.6002_86 - 86 )
Partition 87 (D.6003_87 - 87 )
Partition 88 (D.6006_88 - 88 )
Partition 89 (D.6007_89 - 89 )
Partition 90 (D.6008_90 - 90 )
Partition 91 (D.6009_91 - 91 )
Partition 92 (pos_dest_y_92 - 92 )
Partition 93 (D.6011_93 - 93 )
Partition 94 (D.6012_94 - 94 )
Partition 95 (D.6013_95 - 95 )
Partition 96 (D.6014_96 - 96 )
Partition 97 (D.6015_97 - 97 )
Partition 98 (D.6016_98 - 98 )
Partition 99 (D.6017_99 - 99 )
Partition 100 (D.6018_100 - 100 )
Partition 101 (D.6019_101 - 101 )
Partition 102 (pos_dest_y_102 - 102 )
Partition 103 (D.6020_103 - 103 )
Partition 104 (D.6021_104 - 104 )
Partition 105 (D.6022_105 - 105 )
Partition 106 (D.6023_106 - 106 )
Partition 107 (D.6024_107 - 107 )
Partition 108 (D.6025_108 - 108 )
Partition 109 (D.6026_109 - 109 )
Partition 110 (a_110 - 110 )
Partition 111 (D.6027_111 - 111 )
Partition 112 (D.6028_112 - 112 )
Partition 113 (D.6029_113 - 113 )
Partition 114 (D.6030_114 - 114 )
Partition 115 (D.6031_115 - 115 )
Partition 116 (D.6032_116 - 116 )
Partition 117 (D.6033_117 - 117 )
Partition 118 (b_118 - 118 )
Partition 119 (pas_119 - 119 )
Partition 120 (D.6036_120 - 120 )
Partition 121 (D.6038_121 - 121 )
Partition 122 (D.6040_122 - 122 )
Partition 123 (D.6041_123 - 123 )
Partition 124 (D.6042_124 - 124 )
Partition 125 (D.6043_125 - 125 )
Partition 126 (numCas_126 - 126 )
Partition 127 (numCas_127 - 127 )
Partition 128 (pas_128 - 128 )
Partition 129 (D.6049_129 - 129 )
Partition 130 (D.6051_130 - 130 )
Partition 131 (D.6053_131 - 131 )
Partition 132 (D.6054_132 - 132 )
Partition 133 (D.6055_133 - 133 )
Partition 134 (D.6056_134 - 134 )
Partition 135 (numCas_135 - 135 )
Partition 136 (numCas_136 - 136 )
Partition 137 (pas_137 - 137 )
Partition 138 (D.6062_138 - 138 )
Partition 139 (D.6064_139 - 139 )
Partition 140 (D.6065_140 - 140 )
Partition 141 (D.6066_141 - 141 )
Partition 142 (D.6067_142 - 142 )
Partition 143 (numCas_143 - 143 )
Partition 144 (D.6071_144 - 144 )
Partition 145 (D.6073_145 - 145 )
Partition 146 (D.6074_146 - 146 )
Partition 147 (D.6075_147 - 147 )
Partition 148 (D.6076_148 - 148 )
Partition 149 (numCas_149 - 149 )
Partition 150 (D.6080_150 - 150 )
Partition 151 (D.6082_151 - 151 )
Partition 152 (D.6083_152 - 152 )
Partition 153 (D.6084_153 - 153 )
Partition 154 (D.6085_154 - 154 )
Partition 155 (numCas_155 - 155 )
Partition 156 (pas_156 - 156 )
Partition 157 (numCas_157 - 157 )
Partition 158 (pas_158 - 158 )
Partition 159 (D.6087_159 - 159 )
Partition 160 (D.6088_160 - 160 )
Partition 161 (D.6089_161 - 161 )
Partition 162 (depassement_162 - 162 )
Partition 163 (D.6090_163 - 163 )
Partition 164 (D.6091_164 - 164 )
Partition 165 (D.6092_165 - 165 )
Partition 166 (D.6093_166 - 166 )
Partition 167 (D.6094_167 - 167 )
Partition 168 (D.6095_168 - 168 )
Partition 169 (D.6096_169 - 169 )
Partition 170 (D.6097_170 - 170 )
Partition 171 (D.6098_171 - 171 )
Partition 172 (D.6099_172 - 172 )
Partition 173 (D.6100_173 - 173 )
Partition 174 (D.6101_174 - 174 )
Partition 175 (D.6102_175 - 175 )
Partition 176 (D.6103_176 - 176 )
Partition 177 (D.6104_177 - 177 )
Partition 178 (D.6105_178 - 178 )
Partition 179 (D.6106_179 - 179 )
Partition 180 (D.6107_180 - 180 )
Partition 181 (game_181(D) - 181 )
Partition 182 (D.6108_182 - 182 )
Partition 183 (D.6109_183 - 183 )
Partition 184 (D.6110_184 - 184 )
Partition 185 (D.6111_185 - 185 )
Partition 186 (D.6112_186 - 186 )
Partition 187 (D.6113_187 - 187 )
Partition 188 (D.6114_188 - 188 )
Partition 189 (D.6115_189 - 189 )
Partition 190 (D.6116_190 - 190 )
Partition 191 (depassement_191 - 191 )
Partition 192 (D.6119_192 - 192 )
Partition 193 (D.6120_193 - 193 )
Partition 194 (D.6121_194 - 194 )
Partition 195 (D.6122_195 - 195 )
Partition 196 (depassement_196 - 196 )
Partition 197 (D.6125_197 - 197 )
Partition 198 (D.6126_198 - 198 )
Partition 199 (D.6127_199 - 199 )
Partition 200 (D.6128_200 - 200 )
Partition 201 (depassement_201 - 201 )
Partition 202 (D.6131_202 - 202 )
Partition 203 (D.6132_203 - 203 )
Partition 204 (D.6133_204 - 204 )
Partition 205 (D.6134_205 - 205 )
Partition 206 (depassement_206 - 206 )
Partition 207 (D.6137_207 - 207 )
Partition 208 (D.6138_208 - 208 )
Partition 209 (D.6139_209 - 209 )
Partition 210 (D.6140_210 - 210 )
Partition 211 (depassement_211 - 211 )
Partition 212 (D.6143_212 - 212 )
Partition 213 (D.6144_213 - 213 )
Partition 214 (D.6145_214 - 214 )
Partition 215 (D.6146_215 - 215 )
Partition 216 (depassement_216 - 216 )
Partition 217 (D.6149_217 - 217 )
Partition 218 (D.6150_218 - 218 )
Partition 219 (D.6151_219 - 219 )
Partition 220 (D.6152_220 - 220 )
Partition 221 (depassement_221 - 221 )
Partition 222 (D.6155_222 - 222 )
Partition 223 (D.6156_223 - 223 )
Partition 224 (D.6157_224 - 224 )
Partition 225 (D.6158_225 - 225 )
Partition 226 (depassement_226 - 226 )
Partition 227 (depassement_227 - 227 )
Partition 228 (D.6163_228 - 228 )
Partition 229 (D.6164_229 - 229 )
Partition 230 (D.6165_230 - 230 )
Partition 231 (D.6167_231 - 231 )
Partition 232 (D.6168_232 - 232 )
Partition 233 (D.6169_233 - 233 )
Partition 234 (D.6170_234 - 234 )
Partition 235 (D.6171_235 - 235 )
Partition 236 (D.6172_236 - 236 )
Partition 237 (D.6176_237 - 237 )
Partition 238 (D.6177_238 - 238 )
Partition 239 (D.6179_239 - 239 )
Partition 240 (D.6180_240 - 240 )
Partition 241 (D.6182_241 - 241 )
Partition 242 (D.6183_242 - 242 )
Partition 243 (D.6184_243 - 243 )
Partition 244 (D.6185_244 - 244 )
Partition 245 (D.6186_245 - 245 )
Partition 246 (D.6187_246 - 246 )
Partition 247 (D.6188_247 - 247 )
Partition 248 (D.6189_248 - 248 )
Partition 249 (D.6190_249 - 249 )
Partition 250 (D.6191_250 - 250 )
Partition 251 (D.6192_251 - 251 )
Partition 252 (D.6193_252 - 252 )
Partition 253 (D.6194_253 - 253 )
Partition 254 (D.6195_254 - 254 )
Partition 255 (D.6196_255 - 255 )
Partition 256 (D.6197_256 - 256 )
Partition 257 (D.6198_257 - 257 )
Partition 258 (D.6199_258 - 258 )
Partition 259 (D.6200_259 - 259 )
Partition 260 (D.6201_260 - 260 )
Partition 261 (D.6202_261 - 261 )
Partition 262 (D.6203_262 - 262 )
Partition 263 (D.6204_263 - 263 )
Partition 264 (D.6205_264 - 264 )
Partition 265 (D.6206_265 - 265 )
Partition 266 (D.6207_266 - 266 )
Partition 267 (D.6208_267 - 267 )
Partition 268 (D.6209_268 - 268 )
Partition 269 (D.6210_269 - 269 )
Partition 270 (D.6211_270 - 270 )
Partition 271 (D.6212_271 - 271 )
Partition 272 (D.6213_272 - 272 )
Partition 273 (D.6214_273 - 273 )
Partition 274 (D.6215_274 - 274 )
Partition 275 (D.6216_275 - 275 )


Partition map 

Partition 0 (pos_src_y_1 - 1 )
Partition 1 (pos_dest_y_2 - 2 )
Partition 2 (pas_3 - 3 )
Partition 3 (pas_4 - 4 )
Partition 4 (pas_5 - 5 )
Partition 5 (numCas_6 - 6 )
Partition 6 (numCas_7 - 7 )
Partition 7 (numCas_8 - 8 )
Partition 8 (depassement_9 - 9 )
Partition 9 (depassement_10 - 10 )
Partition 10 (depassement_11 - 11 )
Partition 11 (depassement_12 - 12 )
Partition 12 (depassement_13 - 13 )
Partition 13 (depassement_14 - 14 )
Partition 14 (depassement_15 - 15 )
Partition 15 (depassement_16 - 16 )
Partition 16 (depassement_17 - 17 )
Partition 17 (move_18(D) - 18 )
Partition 18 (display_21(D) - 21 )
Partition 19 (gameState_27(D) - 27 )
Partition 20 (pos_src_y_33 - 33 )
Partition 21 (pos_src_y_43 - 43 )
Partition 22 (pos_src_y_51 - 51 )
Partition 23 (pos_src_y_61 - 61 )
Partition 24 (pos_dest_y_74 - 74 )
Partition 25 (pos_dest_y_84 - 84 )
Partition 26 (pos_dest_y_92 - 92 )
Partition 27 (pos_dest_y_102 - 102 )
Partition 28 (pas_119 - 119 )
Partition 29 (numCas_126 - 126 )
Partition 30 (numCas_127 - 127 )
Partition 31 (pas_128 - 128 )
Partition 32 (numCas_135 - 135 )
Partition 33 (numCas_136 - 136 )
Partition 34 (pas_137 - 137 )
Partition 35 (numCas_143 - 143 )
Partition 36 (numCas_149 - 149 )
Partition 37 (numCas_155 - 155 )
Partition 38 (pas_156 - 156 )
Partition 39 (numCas_157 - 157 )
Partition 40 (pas_158 - 158 )
Partition 41 (depassement_162 - 162 )
Partition 42 (game_181(D) - 181 )
Partition 43 (depassement_191 - 191 )
Partition 44 (depassement_196 - 196 )
Partition 45 (depassement_201 - 201 )
Partition 46 (depassement_206 - 206 )
Partition 47 (depassement_211 - 211 )
Partition 48 (depassement_216 - 216 )
Partition 49 (depassement_221 - 221 )
Partition 50 (depassement_226 - 226 )
Partition 51 (depassement_227 - 227 )


Live on entry to BB2 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB3 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB4 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB5 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB6 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB7 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB8 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB9 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB10 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB11 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB12 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB13 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB14 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB15 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB16 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB17 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB18 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB19 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB20 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB21 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB22 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB23 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB24 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB25 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB26 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB27 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB28 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB29 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB30 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB31 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB32 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB33 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB34 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB35 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB36 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB37 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  pas_119  game_181(D)  

Live on entry to BB38 : pos_src_y_1  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB39 : pas_5  numCas_8  depassement_17  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB40 : pas_5  numCas_8  depassement_17  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB41 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB42 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB43 : pas_5  numCas_8  depassement_17  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB44 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB45 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB46 : pas_5  numCas_8  depassement_17  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB47 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB48 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB49 : pas_5  numCas_8  depassement_17  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB50 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB51 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB52 : pas_5  numCas_8  depassement_17  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB53 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB54 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB55 : pas_5  numCas_8  depassement_17  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB56 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB57 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB58 : pas_5  numCas_8  depassement_17  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB59 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB60 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB61 : pas_5  numCas_8  depassement_17  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB62 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB63 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB64 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB65 : pas_5  numCas_8  move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB66 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB67 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB68 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB69 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB70 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB71 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB72 : display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB73 : move_18(D)  display_21(D)  gameState_27(D)  game_181(D)  

Live on entry to BB74 : display_21(D)  gameState_27(D)  game_181(D)  

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) pos_src_y_1 <-> pos_src_y_33
(2147483646) pos_src_y_1 <-> pos_src_y_43
(2147483646) pos_src_y_1 <-> pos_src_y_51
(2147483646) pos_src_y_1 <-> pos_src_y_61
(2147483646) pos_dest_y_2 <-> pos_dest_y_74
(2147483646) pos_dest_y_2 <-> pos_dest_y_84
(2147483646) pos_dest_y_2 <-> pos_dest_y_92
(2147483646) pos_dest_y_2 <-> pos_dest_y_102
(2147483646) pas_3 <-> pas_4
(2147483646) pas_3 <-> pas_5
(2147483646) pas_3 <-> pas_119
(2147483646) pas_3 <-> pas_128
(2147483646) pas_3 <-> pas_137
(2147483646) pas_3 <-> pas_156
(2147483646) pas_3 <-> pas_158
(2147483646) numCas_6 <-> numCas_7
(2147483646) numCas_6 <-> numCas_8
(2147483646) numCas_6 <-> numCas_126
(2147483646) numCas_6 <-> numCas_127
(2147483646) numCas_6 <-> numCas_135
(2147483646) numCas_6 <-> numCas_136
(2147483646) numCas_6 <-> numCas_143
(2147483646) numCas_6 <-> numCas_149
(2147483646) numCas_6 <-> numCas_155
(2147483646) numCas_6 <-> numCas_157
(2147483646) depassement_9 <-> depassement_10
(2147483646) depassement_9 <-> depassement_11
(2147483646) depassement_9 <-> depassement_12
(2147483646) depassement_9 <-> depassement_13
(2147483646) depassement_9 <-> depassement_14
(2147483646) depassement_9 <-> depassement_15
(2147483646) depassement_9 <-> depassement_16
(2147483646) depassement_9 <-> depassement_17
(2147483646) depassement_9 <-> depassement_162
(2147483646) depassement_9 <-> depassement_191
(2147483646) depassement_9 <-> depassement_196
(2147483646) depassement_9 <-> depassement_201
(2147483646) depassement_9 <-> depassement_206
(2147483646) depassement_9 <-> depassement_211
(2147483646) depassement_9 <-> depassement_216
(2147483646) depassement_9 <-> depassement_221
(2147483646) depassement_9 <-> depassement_226
(2147483646) depassement_9 <-> depassement_227
(2) pas_5 <-> pas_119
(2) depassement_10 <-> depassement_17
(2) depassement_11 <-> depassement_17
(2) depassement_12 <-> depassement_17
(2) depassement_13 <-> depassement_17
(2) depassement_14 <-> depassement_17
(2) depassement_15 <-> depassement_17
(2) depassement_16 <-> depassement_17
(1) pas_4 <-> pas_119

Partition map 

Partition 0 (pos_src_y_1 - 1 )
Partition 1 (pos_dest_y_2 - 2 )
Partition 2 (pas_3 - 3 )
Partition 3 (pas_4 - 4 )
Partition 4 (pas_5 - 5 )
Partition 5 (numCas_6 - 6 )
Partition 6 (numCas_7 - 7 )
Partition 7 (numCas_8 - 8 )
Partition 8 (depassement_9 - 9 )
Partition 9 (depassement_10 - 10 )
Partition 10 (depassement_11 - 11 )
Partition 11 (depassement_12 - 12 )
Partition 12 (depassement_13 - 13 )
Partition 13 (depassement_14 - 14 )
Partition 14 (depassement_15 - 15 )
Partition 15 (depassement_16 - 16 )
Partition 16 (depassement_17 - 17 )
Partition 17 (move_18(D) - 18 )
Partition 18 (display_21(D) - 21 )
Partition 19 (gameState_27(D) - 27 )
Partition 20 (pos_src_y_33 - 33 )
Partition 21 (pos_src_y_43 - 43 )
Partition 22 (pos_src_y_51 - 51 )
Partition 23 (pos_src_y_61 - 61 )
Partition 24 (pos_dest_y_74 - 74 )
Partition 25 (pos_dest_y_84 - 84 )
Partition 26 (pos_dest_y_92 - 92 )
Partition 27 (pos_dest_y_102 - 102 )
Partition 28 (pas_119 - 119 )
Partition 29 (numCas_126 - 126 )
Partition 30 (numCas_127 - 127 )
Partition 31 (pas_128 - 128 )
Partition 32 (numCas_135 - 135 )
Partition 33 (numCas_136 - 136 )
Partition 34 (pas_137 - 137 )
Partition 35 (numCas_143 - 143 )
Partition 36 (numCas_149 - 149 )
Partition 37 (numCas_155 - 155 )
Partition 38 (pas_156 - 156 )
Partition 39 (numCas_157 - 157 )
Partition 40 (pas_158 - 158 )
Partition 41 (depassement_162 - 162 )
Partition 42 (game_181(D) - 181 )
Partition 43 (depassement_191 - 191 )
Partition 44 (depassement_196 - 196 )
Partition 45 (depassement_201 - 201 )
Partition 46 (depassement_206 - 206 )
Partition 47 (depassement_211 - 211 )
Partition 48 (depassement_216 - 216 )
Partition 49 (depassement_221 - 221 )
Partition 50 (depassement_226 - 226 )
Partition 51 (depassement_227 - 227 )

Coalesce list: (1)pos_src_y_1 & (33)pos_src_y_33 [map: 0, 20] : Success -> 0
Coalesce list: (1)pos_src_y_1 & (43)pos_src_y_43 [map: 0, 21] : Success -> 0
Coalesce list: (1)pos_src_y_1 & (51)pos_src_y_51 [map: 0, 22] : Success -> 0
Coalesce list: (1)pos_src_y_1 & (61)pos_src_y_61 [map: 0, 23] : Success -> 0
Coalesce list: (2)pos_dest_y_2 & (74)pos_dest_y_74 [map: 1, 24] : Success -> 1
Coalesce list: (2)pos_dest_y_2 & (84)pos_dest_y_84 [map: 1, 25] : Success -> 1
Coalesce list: (2)pos_dest_y_2 & (92)pos_dest_y_92 [map: 1, 26] : Success -> 1
Coalesce list: (2)pos_dest_y_2 & (102)pos_dest_y_102 [map: 1, 27] : Success -> 1
Coalesce list: (3)pas_3 & (4)pas_4 [map: 2, 3] : Success -> 2
Coalesce list: (3)pas_3 & (5)pas_5 [map: 2, 4] : Success -> 2
Coalesce list: (3)pas_3 & (119)pas_119 [map: 2, 28] : Success -> 2
Coalesce list: (3)pas_3 & (128)pas_128 [map: 2, 31] : Success -> 2
Coalesce list: (3)pas_3 & (137)pas_137 [map: 2, 34] : Success -> 2
Coalesce list: (3)pas_3 & (156)pas_156 [map: 2, 38] : Success -> 2
Coalesce list: (3)pas_3 & (158)pas_158 [map: 2, 40] : Success -> 2
Coalesce list: (6)numCas_6 & (7)numCas_7 [map: 5, 6] : Success -> 5
Coalesce list: (6)numCas_6 & (8)numCas_8 [map: 5, 7] : Success -> 5
Coalesce list: (6)numCas_6 & (126)numCas_126 [map: 5, 29] : Success -> 5
Coalesce list: (6)numCas_6 & (127)numCas_127 [map: 5, 30] : Success -> 5
Coalesce list: (6)numCas_6 & (135)numCas_135 [map: 5, 32] : Success -> 5
Coalesce list: (6)numCas_6 & (136)numCas_136 [map: 5, 33] : Success -> 5
Coalesce list: (6)numCas_6 & (143)numCas_143 [map: 5, 35] : Success -> 5
Coalesce list: (6)numCas_6 & (149)numCas_149 [map: 5, 36] : Success -> 5
Coalesce list: (6)numCas_6 & (155)numCas_155 [map: 5, 37] : Success -> 5
Coalesce list: (6)numCas_6 & (157)numCas_157 [map: 5, 39] : Success -> 5
Coalesce list: (9)depassement_9 & (10)depassement_10 [map: 8, 9] : Success -> 8
Coalesce list: (9)depassement_9 & (11)depassement_11 [map: 8, 10] : Success -> 8
Coalesce list: (9)depassement_9 & (12)depassement_12 [map: 8, 11] : Success -> 8
Coalesce list: (9)depassement_9 & (13)depassement_13 [map: 8, 12] : Success -> 8
Coalesce list: (9)depassement_9 & (14)depassement_14 [map: 8, 13] : Success -> 8
Coalesce list: (9)depassement_9 & (15)depassement_15 [map: 8, 14] : Success -> 8
Coalesce list: (9)depassement_9 & (16)depassement_16 [map: 8, 15] : Success -> 8
Coalesce list: (9)depassement_9 & (17)depassement_17 [map: 8, 16] : Success -> 8
Coalesce list: (9)depassement_9 & (162)depassement_162 [map: 8, 41] : Success -> 8
Coalesce list: (9)depassement_9 & (191)depassement_191 [map: 8, 43] : Success -> 8
Coalesce list: (9)depassement_9 & (196)depassement_196 [map: 8, 44] : Success -> 8
Coalesce list: (9)depassement_9 & (201)depassement_201 [map: 8, 45] : Success -> 8
Coalesce list: (9)depassement_9 & (206)depassement_206 [map: 8, 46] : Success -> 8
Coalesce list: (9)depassement_9 & (211)depassement_211 [map: 8, 47] : Success -> 8
Coalesce list: (9)depassement_9 & (216)depassement_216 [map: 8, 48] : Success -> 8
Coalesce list: (9)depassement_9 & (221)depassement_221 [map: 8, 49] : Success -> 8
Coalesce list: (9)depassement_9 & (226)depassement_226 [map: 8, 50] : Success -> 8
Coalesce list: (9)depassement_9 & (227)depassement_227 [map: 8, 51] : Success -> 8
Coalesce list: (5)pas_3 & (119)pas_3: Already Coalesced.
Coalesce list: (10)depassement_9 & (17)depassement_9: Already Coalesced.
Coalesce list: (11)depassement_9 & (17)depassement_9: Already Coalesced.
Coalesce list: (12)depassement_9 & (17)depassement_9: Already Coalesced.
Coalesce list: (13)depassement_9 & (17)depassement_9: Already Coalesced.
Coalesce list: (14)depassement_9 & (17)depassement_9: Already Coalesced.
Coalesce list: (15)depassement_9 & (17)depassement_9: Already Coalesced.
Coalesce list: (16)depassement_9 & (17)depassement_9: Already Coalesced.
Coalesce list: (4)pas_3 & (119)pas_3: Already Coalesced.
Coalesce list: (17)depassement_9 & (227)depassement_9: Already Coalesced.
Coalesce list: (17)depassement_9 & (16)depassement_9: Already Coalesced.
Coalesce list: (17)depassement_9 & (15)depassement_9: Already Coalesced.
Coalesce list: (17)depassement_9 & (14)depassement_9: Already Coalesced.
Coalesce list: (17)depassement_9 & (13)depassement_9: Already Coalesced.
Coalesce list: (17)depassement_9 & (12)depassement_9: Already Coalesced.
Coalesce list: (17)depassement_9 & (11)depassement_9: Already Coalesced.
Coalesce list: (17)depassement_9 & (10)depassement_9: Already Coalesced.
Coalesce list: (17)depassement_9 & (9)depassement_9: Already Coalesced.
Coalesce list: (17)depassement_9 & (162)depassement_9: Already Coalesced.
Coalesce list: (16)depassement_9 & (226)depassement_9: Already Coalesced.
Coalesce list: (15)depassement_9 & (221)depassement_9: Already Coalesced.
Coalesce list: (14)depassement_9 & (216)depassement_9: Already Coalesced.
Coalesce list: (13)depassement_9 & (211)depassement_9: Already Coalesced.
Coalesce list: (12)depassement_9 & (206)depassement_9: Already Coalesced.
Coalesce list: (11)depassement_9 & (201)depassement_9: Already Coalesced.
Coalesce list: (10)depassement_9 & (196)depassement_9: Already Coalesced.
Coalesce list: (9)depassement_9 & (191)depassement_9: Already Coalesced.
Coalesce list: (8)numCas_6 & (157)numCas_6: Already Coalesced.
Coalesce list: (8)numCas_6 & (155)numCas_6: Already Coalesced.
Coalesce list: (8)numCas_6 & (149)numCas_6: Already Coalesced.
Coalesce list: (8)numCas_6 & (143)numCas_6: Already Coalesced.
Coalesce list: (8)numCas_6 & (7)numCas_6: Already Coalesced.
Coalesce list: (8)numCas_6 & (6)numCas_6: Already Coalesced.
Coalesce list: (5)pas_3 & (158)pas_3: Already Coalesced.
Coalesce list: (5)pas_3 & (156)pas_3: Already Coalesced.
Coalesce list: (5)pas_3 & (4)pas_3: Already Coalesced.
Coalesce list: (5)pas_3 & (3)pas_3: Already Coalesced.
Coalesce list: (7)numCas_6 & (136)numCas_6: Already Coalesced.
Coalesce list: (7)numCas_6 & (135)numCas_6: Already Coalesced.
Coalesce list: (4)pas_3 & (137)pas_3: Already Coalesced.
Coalesce list: (6)numCas_6 & (127)numCas_6: Already Coalesced.
Coalesce list: (6)numCas_6 & (126)numCas_6: Already Coalesced.
Coalesce list: (3)pas_3 & (128)pas_3: Already Coalesced.
Coalesce list: (2)pos_dest_y_2 & (74)pos_dest_y_2: Already Coalesced.
Coalesce list: (2)pos_dest_y_2 & (102)pos_dest_y_2: Already Coalesced.
Coalesce list: (2)pos_dest_y_2 & (92)pos_dest_y_2: Already Coalesced.
Coalesce list: (2)pos_dest_y_2 & (84)pos_dest_y_2: Already Coalesced.
Coalesce list: (1)pos_src_y_1 & (33)pos_src_y_1: Already Coalesced.
Coalesce list: (1)pos_src_y_1 & (61)pos_src_y_1: Already Coalesced.
Coalesce list: (1)pos_src_y_1 & (51)pos_src_y_1: Already Coalesced.
Coalesce list: (1)pos_src_y_1 & (43)pos_src_y_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (pos_src_y_1 - 1 33 43 51 61 )
Partition 1 (pos_dest_y_2 - 2 74 84 92 102 )
Partition 2 (pas_3 - 3 4 5 119 128 137 156 158 )
Partition 3 (numCas_6 - 6 7 8 126 127 135 136 143 149 155 157 )
Partition 4 (depassement_9 - 9 10 11 12 13 14 15 16 17 162 191 196 201 206 211 216 221 226 227 )
Partition 5 (move_18(D) - 18 )
Partition 6 (D.5930_19 - 19 )
Partition 7 (D.5931_20 - 20 )
Partition 8 (display_21(D) - 21 )
Partition 9 (D.5932_22 - 22 )
Partition 10 (pos_src_x_23 - 23 )
Partition 11 (D.5933_24 - 24 )
Partition 12 (D.5936_25 - 25 )
Partition 13 (D.5937_26 - 26 )
Partition 14 (gameState_27(D) - 27 )
Partition 15 (D.5938_28 - 28 )
Partition 16 (D.5941_29 - 29 )
Partition 17 (D.5942_30 - 30 )
Partition 18 (D.5943_31 - 31 )
Partition 19 (D.5944_32 - 32 )
Partition 20 (D.5946_34 - 34 )
Partition 21 (D.5947_35 - 35 )
Partition 22 (D.5948_36 - 36 )
Partition 23 (D.5949_37 - 37 )
Partition 24 (D.5950_38 - 38 )
Partition 25 (D.5951_39 - 39 )
Partition 26 (D.5952_40 - 40 )
Partition 27 (D.5953_41 - 41 )
Partition 28 (D.5954_42 - 42 )
Partition 29 (D.5956_44 - 44 )
Partition 30 (D.5957_45 - 45 )
Partition 31 (D.5958_46 - 46 )
Partition 32 (D.5961_47 - 47 )
Partition 33 (D.5962_48 - 48 )
Partition 34 (D.5963_49 - 49 )
Partition 35 (D.5964_50 - 50 )
Partition 36 (D.5966_52 - 52 )
Partition 37 (D.5967_53 - 53 )
Partition 38 (D.5968_54 - 54 )
Partition 39 (D.5969_55 - 55 )
Partition 40 (D.5970_56 - 56 )
Partition 41 (D.5971_57 - 57 )
Partition 42 (D.5972_58 - 58 )
Partition 43 (D.5973_59 - 59 )
Partition 44 (D.5974_60 - 60 )
Partition 45 (D.5975_62 - 62 )
Partition 46 (D.5976_63 - 63 )
Partition 47 (D.5977_64 - 64 )
Partition 48 (pos_dest_x_65 - 65 )
Partition 49 (D.5978_66 - 66 )
Partition 50 (D.5981_67 - 67 )
Partition 51 (D.5982_68 - 68 )
Partition 52 (D.5983_69 - 69 )
Partition 53 (D.5986_70 - 70 )
Partition 54 (D.5987_71 - 71 )
Partition 55 (D.5988_72 - 72 )
Partition 56 (D.5989_73 - 73 )
Partition 57 (D.5991_75 - 75 )
Partition 58 (D.5992_76 - 76 )
Partition 59 (D.5993_77 - 77 )
Partition 60 (D.5994_78 - 78 )
Partition 61 (D.5995_79 - 79 )
Partition 62 (D.5996_80 - 80 )
Partition 63 (D.5997_81 - 81 )
Partition 64 (D.5998_82 - 82 )
Partition 65 (D.5999_83 - 83 )
Partition 66 (D.6001_85 - 85 )
Partition 67 (D.6002_86 - 86 )
Partition 68 (D.6003_87 - 87 )
Partition 69 (D.6006_88 - 88 )
Partition 70 (D.6007_89 - 89 )
Partition 71 (D.6008_90 - 90 )
Partition 72 (D.6009_91 - 91 )
Partition 73 (D.6011_93 - 93 )
Partition 74 (D.6012_94 - 94 )
Partition 75 (D.6013_95 - 95 )
Partition 76 (D.6014_96 - 96 )
Partition 77 (D.6015_97 - 97 )
Partition 78 (D.6016_98 - 98 )
Partition 79 (D.6017_99 - 99 )
Partition 80 (D.6018_100 - 100 )
Partition 81 (D.6019_101 - 101 )
Partition 82 (D.6020_103 - 103 )
Partition 83 (D.6021_104 - 104 )
Partition 84 (D.6022_105 - 105 )
Partition 85 (D.6023_106 - 106 )
Partition 86 (D.6024_107 - 107 )
Partition 87 (D.6025_108 - 108 )
Partition 88 (D.6026_109 - 109 )
Partition 89 (a_110 - 110 )
Partition 90 (D.6027_111 - 111 )
Partition 91 (D.6028_112 - 112 )
Partition 92 (D.6029_113 - 113 )
Partition 93 (D.6030_114 - 114 )
Partition 94 (D.6031_115 - 115 )
Partition 95 (D.6032_116 - 116 )
Partition 96 (D.6033_117 - 117 )
Partition 97 (b_118 - 118 )
Partition 98 (D.6036_120 - 120 )
Partition 99 (D.6038_121 - 121 )
Partition 100 (D.6040_122 - 122 )
Partition 101 (D.6041_123 - 123 )
Partition 102 (D.6042_124 - 124 )
Partition 103 (D.6043_125 - 125 )
Partition 104 (D.6049_129 - 129 )
Partition 105 (D.6051_130 - 130 )
Partition 106 (D.6053_131 - 131 )
Partition 107 (D.6054_132 - 132 )
Partition 108 (D.6055_133 - 133 )
Partition 109 (D.6056_134 - 134 )
Partition 110 (D.6062_138 - 138 )
Partition 111 (D.6064_139 - 139 )
Partition 112 (D.6065_140 - 140 )
Partition 113 (D.6066_141 - 141 )
Partition 114 (D.6067_142 - 142 )
Partition 115 (D.6071_144 - 144 )
Partition 116 (D.6073_145 - 145 )
Partition 117 (D.6074_146 - 146 )
Partition 118 (D.6075_147 - 147 )
Partition 119 (D.6076_148 - 148 )
Partition 120 (D.6080_150 - 150 )
Partition 121 (D.6082_151 - 151 )
Partition 122 (D.6083_152 - 152 )
Partition 123 (D.6084_153 - 153 )
Partition 124 (D.6085_154 - 154 )
Partition 125 (D.6087_159 - 159 )
Partition 126 (D.6088_160 - 160 )
Partition 127 (D.6089_161 - 161 )
Partition 128 (D.6090_163 - 163 )
Partition 129 (D.6091_164 - 164 )
Partition 130 (D.6092_165 - 165 )
Partition 131 (D.6093_166 - 166 )
Partition 132 (D.6094_167 - 167 )
Partition 133 (D.6095_168 - 168 )
Partition 134 (D.6096_169 - 169 )
Partition 135 (D.6097_170 - 170 )
Partition 136 (D.6098_171 - 171 )
Partition 137 (D.6099_172 - 172 )
Partition 138 (D.6100_173 - 173 )
Partition 139 (D.6101_174 - 174 )
Partition 140 (D.6102_175 - 175 )
Partition 141 (D.6103_176 - 176 )
Partition 142 (D.6104_177 - 177 )
Partition 143 (D.6105_178 - 178 )
Partition 144 (D.6106_179 - 179 )
Partition 145 (D.6107_180 - 180 )
Partition 146 (game_181(D) - 181 )
Partition 147 (D.6108_182 - 182 )
Partition 148 (D.6109_183 - 183 )
Partition 149 (D.6110_184 - 184 )
Partition 150 (D.6111_185 - 185 )
Partition 151 (D.6112_186 - 186 )
Partition 152 (D.6113_187 - 187 )
Partition 153 (D.6114_188 - 188 )
Partition 154 (D.6115_189 - 189 )
Partition 155 (D.6116_190 - 190 )
Partition 156 (D.6119_192 - 192 )
Partition 157 (D.6120_193 - 193 )
Partition 158 (D.6121_194 - 194 )
Partition 159 (D.6122_195 - 195 )
Partition 160 (D.6125_197 - 197 )
Partition 161 (D.6126_198 - 198 )
Partition 162 (D.6127_199 - 199 )
Partition 163 (D.6128_200 - 200 )
Partition 164 (D.6131_202 - 202 )
Partition 165 (D.6132_203 - 203 )
Partition 166 (D.6133_204 - 204 )
Partition 167 (D.6134_205 - 205 )
Partition 168 (D.6137_207 - 207 )
Partition 169 (D.6138_208 - 208 )
Partition 170 (D.6139_209 - 209 )
Partition 171 (D.6140_210 - 210 )
Partition 172 (D.6143_212 - 212 )
Partition 173 (D.6144_213 - 213 )
Partition 174 (D.6145_214 - 214 )
Partition 175 (D.6146_215 - 215 )
Partition 176 (D.6149_217 - 217 )
Partition 177 (D.6150_218 - 218 )
Partition 178 (D.6151_219 - 219 )
Partition 179 (D.6152_220 - 220 )
Partition 180 (D.6155_222 - 222 )
Partition 181 (D.6156_223 - 223 )
Partition 182 (D.6157_224 - 224 )
Partition 183 (D.6158_225 - 225 )
Partition 184 (D.6163_228 - 228 )
Partition 185 (D.6164_229 - 229 )
Partition 186 (D.6165_230 - 230 )
Partition 187 (D.6167_231 - 231 )
Partition 188 (D.6168_232 - 232 )
Partition 189 (D.6169_233 - 233 )
Partition 190 (D.6170_234 - 234 )
Partition 191 (D.6171_235 - 235 )
Partition 192 (D.6172_236 - 236 )
Partition 193 (D.6176_237 - 237 )
Partition 194 (D.6177_238 - 238 )
Partition 195 (D.6179_239 - 239 )
Partition 196 (D.6180_240 - 240 )
Partition 197 (D.6182_241 - 241 )
Partition 198 (D.6183_242 - 242 )
Partition 199 (D.6184_243 - 243 )
Partition 200 (D.6185_244 - 244 )
Partition 201 (D.6186_245 - 245 )
Partition 202 (D.6187_246 - 246 )
Partition 203 (D.6188_247 - 247 )
Partition 204 (D.6189_248 - 248 )
Partition 205 (D.6190_249 - 249 )
Partition 206 (D.6191_250 - 250 )
Partition 207 (D.6192_251 - 251 )
Partition 208 (D.6193_252 - 252 )
Partition 209 (D.6194_253 - 253 )
Partition 210 (D.6195_254 - 254 )
Partition 211 (D.6196_255 - 255 )
Partition 212 (D.6197_256 - 256 )
Partition 213 (D.6198_257 - 257 )
Partition 214 (D.6199_258 - 258 )
Partition 215 (D.6200_259 - 259 )
Partition 216 (D.6201_260 - 260 )
Partition 217 (D.6202_261 - 261 )
Partition 218 (D.6203_262 - 262 )
Partition 219 (D.6204_263 - 263 )
Partition 220 (D.6205_264 - 264 )
Partition 221 (D.6206_265 - 265 )
Partition 222 (D.6207_266 - 266 )
Partition 223 (D.6208_267 - 267 )
Partition 224 (D.6209_268 - 268 )
Partition 225 (D.6210_269 - 269 )
Partition 226 (D.6211_270 - 270 )
Partition 227 (D.6212_271 - 271 )
Partition 228 (D.6213_272 - 272 )
Partition 229 (D.6214_273 - 273 )
Partition 230 (D.6215_274 - 274 )
Partition 231 (D.6216_275 - 275 )

Checker_Move (struct SDisplay * display, struct SGameState * gameState, struct SMove * move, struct SGame * game)
{
  int depassement;
  struct SDL_Rect new_pos;
  int numCas;
  int pas;
  double b;
  double a;
  int pos_dest_y;
  int pos_dest_x;
  int pos_src_y;
  int pos_src_x;
  EPlayer D.6216;
  unsigned int D.6215;
  EPosition D.6214;
  unsigned int D.6213;
  EPosition D.6212;
  unsigned int D.6211;
  unsigned int D.6210;
  unsigned int D.6209;
  EPosition D.6208;
  EPlayer D.6207;
  unsigned int D.6206;
  EPosition D.6205;
  unsigned int D.6204;
  EPosition D.6203;
  unsigned int D.6202;
  unsigned int D.6201;
  EPosition D.6200;
  EPlayer D.6199;
  unsigned int D.6198;
  EPosition D.6197;
  unsigned int D.6196;
  unsigned int D.6195;
  EPlayer D.6194;
  unsigned int D.6193;
  EPosition D.6192;
  unsigned int D.6191;
  EPosition D.6190;
  unsigned int D.6189;
  unsigned int D.6188;
  EPosition D.6187;
  EPlayer D.6186;
  unsigned int D.6185;
  EPosition D.6184;
  unsigned int D.6183;
  unsigned int D.6182;
  EPlayer D.6180;
  EPosition D.6179;
  EPlayer D.6177;
  EPosition D.6176;
  EPlayer D.6172;
  unsigned int D.6171;
  EPosition D.6170;
  EPlayer D.6169;
  unsigned int D.6168;
  EPosition D.6167;
  unsigned int D.6165;
  unsigned int D.6164;
  EPosition D.6163;
  int D.6158;
  int D.6157;
  int D.6156;
  Sint16 D.6155;
  int D.6152;
  int D.6151;
  int D.6150;
  Sint16 D.6149;
  int D.6146;
  int D.6145;
  int D.6144;
  Sint16 D.6143;
  int D.6140;
  int D.6139;
  int D.6138;
  Sint16 D.6137;
  int D.6134;
  int D.6133;
  int D.6132;
  Sint16 D.6131;
  int D.6128;
  int D.6127;
  int D.6126;
  Sint16 D.6125;
  int D.6122;
  int D.6121;
  int D.6120;
  Sint16 D.6119;
  int D.6116;
  int D.6115;
  int D.6114;
  Sint16 D.6113;
  struct SDL_Surface * D.6112;
  int D.6111;
  EPlayer D.6110;
  unsigned int D.6109;
  EPosition D.6108;
  Sint16 D.6107;
  int D.6106;
  long double D.6105;
  long double D.6104;
  long double D.6103;
  long double D.6102;
  double D.6101;
  Sint16 D.6100;
  long double D.6099;
  Sint16 D.6098;
  short unsigned int D.6097;
  short unsigned int D.6096;
  short unsigned int D.6095;
  Sint16 D.6094;
  unsigned int D.6093;
  unsigned int D.6092;
  unsigned int D.6091;
  EPosition D.6090;
  Sint16 D.6089;
  Sint16 D.6088;
  const char * restrict D.6087;
  unsigned int D.6085;
  EPosition D.6084;
  unsigned int D.6083;
  EPosition D.6082;
  _Bool D.6080;
  unsigned int D.6076;
  EPosition D.6075;
  unsigned int D.6074;
  EPosition D.6073;
  _Bool D.6071;
  unsigned int D.6067;
  EPosition D.6066;
  unsigned int D.6065;
  EPosition D.6064;
  _Bool D.6062;
  unsigned int D.6056;
  EPosition D.6055;
  unsigned int D.6054;
  EPosition D.6053;
  EPosition D.6051;
  EPosition D.6049;
  unsigned int D.6043;
  EPosition D.6042;
  unsigned int D.6041;
  EPosition D.6040;
  EPosition D.6038;
  EPosition D.6036;
  long double D.6033;
  long double D.6032;
  long double D.6031;
  double D.6030;
  long double D.6029;
  long double D.6028;
  double D.6027;
  long double D.6026;
  long double D.6025;
  double D.6024;
  int D.6023;
  long double D.6022;
  double D.6021;
  int D.6020;
  unsigned int D.6019;
  unsigned int D.6018;
  unsigned int D.6017;
  unsigned int D.6016;
  EPosition D.6015;
  unsigned int D.6014;
  Sint16 D.6013;
  unsigned int D.6012;
  EPosition D.6011;
  int D.6009;
  Sint16 D.6008;
  unsigned int D.6007;
  EPosition D.6006;
  unsigned int D.6003;
  unsigned int D.6002;
  EPosition D.6001;
  unsigned int D.5999;
  unsigned int D.5998;
  unsigned int D.5997;
  unsigned int D.5996;
  EPosition D.5995;
  unsigned int D.5994;
  Sint16 D.5993;
  unsigned int D.5992;
  EPosition D.5991;
  int D.5989;
  Sint16 D.5988;
  unsigned int D.5987;
  EPosition D.5986;
  unsigned int D.5983;
  unsigned int D.5982;
  EPosition D.5981;
  EPosition D.5978;
  Sint16 D.5977;
  unsigned int D.5976;
  EPosition D.5975;
  unsigned int D.5974;
  unsigned int D.5973;
  unsigned int D.5972;
  unsigned int D.5971;
  EPosition D.5970;
  unsigned int D.5969;
  Sint16 D.5968;
  unsigned int D.5967;
  EPosition D.5966;
  int D.5964;
  Sint16 D.5963;
  unsigned int D.5962;
  EPosition D.5961;
  unsigned int D.5958;
  unsigned int D.5957;
  EPosition D.5956;
  unsigned int D.5954;
  unsigned int D.5953;
  unsigned int D.5952;
  unsigned int D.5951;
  EPosition D.5950;
  unsigned int D.5949;
  Sint16 D.5948;
  unsigned int D.5947;
  EPosition D.5946;
  int D.5944;
  Sint16 D.5943;
  unsigned int D.5942;
  EPosition D.5941;
  unsigned int D.5938;
  unsigned int D.5937;
  EPosition D.5936;
  EPosition D.5933;
  Sint16 D.5932;
  unsigned int D.5931;
  EPosition D.5930;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.5930_19 = move_18(D)->src_point;
  D.5931_20 = D.5930_19 + 4294967295;
  D.5932_22 = display_21(D)->positions[D.5931_20].x;
  pos_src_x_23 = (int) D.5932_22;
  D.5933_24 = move_18(D)->src_point;
  if (D.5933_24 > 12)
    goto <bb 3>;
  else
    goto <bb 6>;
  # SUCC: 3 (true) 6 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.5936_25 = move_18(D)->src_point;
  D.5937_26 = D.5936_25 + 4294967295;
  D.5938_28 = gameState_27(D)->zones[D.5937_26].nb_checkers;
  if (D.5938_28 > 6)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.5941_29 = move_18(D)->src_point;
  D.5942_30 = D.5941_29 + 4294967295;
  D.5943_31 = display_21(D)->positions[D.5942_30].y;
  D.5944_32 = (int) D.5943_31;
  pos_src_y_33 = D.5944_32 + 120;
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  D.5946_34 = move_18(D)->src_point;
  D.5947_35 = D.5946_34 + 4294967295;
  D.5948_36 = display_21(D)->positions[D.5947_35].y;
  D.5949_37 = (unsigned int) D.5948_36;
  D.5950_38 = move_18(D)->src_point;
  D.5951_39 = D.5950_38 + 4294967295;
  D.5952_40 = gameState_27(D)->zones[D.5951_39].nb_checkers;
  D.5953_41 = D.5952_40 * 20;
  D.5954_42 = D.5949_37 + D.5953_41;
  pos_src_y_43 = (int) D.5954_42;
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 6
  # PRED: 2 (false)
  D.5956_44 = move_18(D)->src_point;
  D.5957_45 = D.5956_44 + 4294967295;
  D.5958_46 = gameState_27(D)->zones[D.5957_45].nb_checkers;
  if (D.5958_46 > 6)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 (true) 8 (false)

  # BLOCK 7
  # PRED: 6 (true)
  D.5961_47 = move_18(D)->src_point;
  D.5962_48 = D.5961_47 + 4294967295;
  D.5963_49 = display_21(D)->positions[D.5962_48].y;
  D.5964_50 = (int) D.5963_49;
  pos_src_y_51 = D.5964_50 + -120;
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 8
  # PRED: 6 (false)
  D.5966_52 = move_18(D)->src_point;
  D.5967_53 = D.5966_52 + 4294967295;
  D.5968_54 = display_21(D)->positions[D.5967_53].y;
  D.5969_55 = (unsigned int) D.5968_54;
  D.5970_56 = move_18(D)->src_point;
  D.5971_57 = D.5970_56 + 4294967295;
  D.5972_58 = gameState_27(D)->zones[D.5971_57].nb_checkers;
  D.5973_59 = D.5972_58 * 20;
  D.5974_60 = D.5969_55 - D.5973_59;
  pos_src_y_61 = (int) D.5974_60;
  # SUCC: 9 (fallthru)

  # BLOCK 9
  # PRED: 5 (fallthru) 7 (fallthru) 8 (fallthru) 4 (fallthru)
  # pos_src_y_1 = PHI <pos_src_y_43(5), pos_src_y_51(7), pos_src_y_61(8), pos_src_y_33(4)>
  D.5975_62 = move_18(D)->dest_point;
  D.5976_63 = D.5975_62 + 4294967295;
  D.5977_64 = display_21(D)->positions[D.5976_63].x;
  pos_dest_x_65 = (int) D.5977_64;
  D.5978_66 = move_18(D)->dest_point;
  if (D.5978_66 > 12)
    goto <bb 10>;
  else
    goto <bb 13>;
  # SUCC: 10 (true) 13 (false)

  # BLOCK 10
  # PRED: 9 (true)
  D.5981_67 = move_18(D)->dest_point;
  D.5982_68 = D.5981_67 + 4294967295;
  D.5983_69 = gameState_27(D)->zones[D.5982_68].nb_checkers;
  if (D.5983_69 > 6)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 (true) 12 (false)

  # BLOCK 11
  # PRED: 10 (true)
  D.5986_70 = move_18(D)->dest_point;
  D.5987_71 = D.5986_70 + 4294967295;
  D.5988_72 = display_21(D)->positions[D.5987_71].y;
  D.5989_73 = (int) D.5988_72;
  pos_dest_y_74 = D.5989_73 + 120;
  goto <bb 16>;
  # SUCC: 16 (fallthru)

  # BLOCK 12
  # PRED: 10 (false)
  D.5991_75 = move_18(D)->dest_point;
  D.5992_76 = D.5991_75 + 4294967295;
  D.5993_77 = display_21(D)->positions[D.5992_76].y;
  D.5994_78 = (unsigned int) D.5993_77;
  D.5995_79 = move_18(D)->dest_point;
  D.5996_80 = D.5995_79 + 4294967295;
  D.5997_81 = gameState_27(D)->zones[D.5996_80].nb_checkers;
  D.5998_82 = D.5997_81 * 20;
  D.5999_83 = D.5994_78 + D.5998_82;
  pos_dest_y_84 = (int) D.5999_83;
  goto <bb 16>;
  # SUCC: 16 (fallthru)

  # BLOCK 13
  # PRED: 9 (false)
  D.6001_85 = move_18(D)->dest_point;
  D.6002_86 = D.6001_85 + 4294967295;
  D.6003_87 = gameState_27(D)->zones[D.6002_86].nb_checkers;
  if (D.6003_87 > 6)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 (true) 15 (false)

  # BLOCK 14
  # PRED: 13 (true)
  D.6006_88 = move_18(D)->dest_point;
  D.6007_89 = D.6006_88 + 4294967295;
  D.6008_90 = display_21(D)->positions[D.6007_89].y;
  D.6009_91 = (int) D.6008_90;
  pos_dest_y_92 = D.6009_91 + -120;
  goto <bb 16>;
  # SUCC: 16 (fallthru)

  # BLOCK 15
  # PRED: 13 (false)
  D.6011_93 = move_18(D)->dest_point;
  D.6012_94 = D.6011_93 + 4294967295;
  D.6013_95 = display_21(D)->positions[D.6012_94].y;
  D.6014_96 = (unsigned int) D.6013_95;
  D.6015_97 = move_18(D)->dest_point;
  D.6016_98 = D.6015_97 + 4294967295;
  D.6017_99 = gameState_27(D)->zones[D.6016_98].nb_checkers;
  D.6018_100 = D.6017_99 * 20;
  D.6019_101 = D.6014_96 - D.6018_100;
  pos_dest_y_102 = (int) D.6019_101;
  # SUCC: 16 (fallthru)

  # BLOCK 16
  # PRED: 12 (fallthru) 14 (fallthru) 15 (fallthru) 11 (fallthru)
  # pos_dest_y_2 = PHI <pos_dest_y_84(12), pos_dest_y_92(14), pos_dest_y_102(15), pos_dest_y_74(11)>
  D.6020_103 = pos_src_y_1 - pos_dest_y_2;
  D.6021_104 = (double) D.6020_103;
  D.6022_105 = (long double) D.6021_104;
  D.6023_106 = pos_src_x_23 - pos_dest_x_65;
  D.6024_107 = (double) D.6023_106;
  D.6025_108 = (long double) D.6024_107;
  D.6026_109 = D.6022_105 / D.6025_108;
  a_110 = (double) D.6026_109;
  D.6027_111 = (double) pos_dest_y_2;
  D.6028_112 = (long double) D.6027_111;
  D.6029_113 = (long double) a_110;
  D.6030_114 = (double) pos_dest_x_65;
  D.6031_115 = (long double) D.6030_114;
  D.6032_116 = D.6029_113 * D.6031_115;
  D.6033_117 = D.6028_112 - D.6032_116;
  b_118 = (double) D.6033_117;
  pas_119 = 8;
  D.6036_120 = move_18(D)->dest_point;
  if (D.6036_120 <= 12)
    goto <bb 17>;
  else
    goto <bb 22>;
  # SUCC: 17 (true) 22 (false)

  # BLOCK 17
  # PRED: 16 (true)
  D.6038_121 = move_18(D)->src_point;
  if (D.6038_121 <= 12)
    goto <bb 18>;
  else
    goto <bb 22>;
  # SUCC: 18 (true) 22 (false)

  # BLOCK 18
  # PRED: 17 (true)
  D.6040_122 = move_18(D)->dest_point;
  D.6041_123 = D.6040_122 + 4294967295;
  D.6042_124 = move_18(D)->src_point;
  D.6043_125 = D.6042_124 + 4294967295;
  if (D.6041_123 <= D.6043_125)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 (true) 20 (false)

  # BLOCK 19
  # PRED: 18 (true)
  numCas_126 = 1;
  goto <bb 21>;
  # SUCC: 21 (fallthru)

  # BLOCK 20
  # PRED: 18 (false)
  numCas_127 = 2;
  pas_128 = -pas_119;
  # SUCC: 21 (fallthru)

  # BLOCK 21
  # PRED: 19 (fallthru) 20 (fallthru)
  # pas_3 = PHI <pas_119(19), pas_128(20)>
  # numCas_6 = PHI <numCas_126(19), numCas_127(20)>
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 22
  # PRED: 16 (false) 17 (false)
  D.6049_129 = move_18(D)->dest_point;
  if (D.6049_129 > 12)
    goto <bb 23>;
  else
    goto <bb 28>;
  # SUCC: 23 (true) 28 (false)

  # BLOCK 23
  # PRED: 22 (true)
  D.6051_130 = move_18(D)->src_point;
  if (D.6051_130 > 12)
    goto <bb 24>;
  else
    goto <bb 28>;
  # SUCC: 24 (true) 28 (false)

  # BLOCK 24
  # PRED: 23 (true)
  D.6053_131 = move_18(D)->dest_point;
  D.6054_132 = D.6053_131 + 4294967295;
  D.6055_133 = move_18(D)->src_point;
  D.6056_134 = D.6055_133 + 4294967295;
  if (D.6054_132 >= D.6056_134)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 (true) 26 (false)

  # BLOCK 25
  # PRED: 24 (true)
  numCas_135 = 3;
  goto <bb 27>;
  # SUCC: 27 (fallthru)

  # BLOCK 26
  # PRED: 24 (false)
  numCas_136 = 4;
  pas_137 = -pas_119;
  # SUCC: 27 (fallthru)

  # BLOCK 27
  # PRED: 25 (fallthru) 26 (fallthru)
  # pas_4 = PHI <pas_119(25), pas_137(26)>
  # numCas_7 = PHI <numCas_135(25), numCas_136(26)>
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 28
  # PRED: 22 (false) 23 (false)
  D.6062_138 = a_110 >= 0.0;
  if (D.6062_138 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;
  # SUCC: 29 (true) 31 (false)

  # BLOCK 29
  # PRED: 28 (true)
  D.6064_139 = move_18(D)->dest_point;
  D.6065_140 = D.6064_139 + 4294967295;
  D.6066_141 = move_18(D)->src_point;
  D.6067_142 = D.6066_141 + 4294967295;
  if (D.6065_140 <= D.6067_142)
    goto <bb 30>;
  else
    goto <bb 31>;
  # SUCC: 30 (true) 31 (false)

  # BLOCK 30
  # PRED: 29 (true)
  numCas_143 = 5;
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 31
  # PRED: 28 (false) 29 (false)
  D.6071_144 = a_110 <= 0.0;
  if (D.6071_144 != 0)
    goto <bb 32>;
  else
    goto <bb 34>;
  # SUCC: 32 (true) 34 (false)

  # BLOCK 32
  # PRED: 31 (true)
  D.6073_145 = move_18(D)->dest_point;
  D.6074_146 = D.6073_145 + 4294967295;
  D.6075_147 = move_18(D)->src_point;
  D.6076_148 = D.6075_147 + 4294967295;
  if (D.6074_146 >= D.6076_148)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 (true) 34 (false)

  # BLOCK 33
  # PRED: 32 (true)
  numCas_149 = 6;
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 34
  # PRED: 31 (false) 32 (false)
  D.6080_150 = a_110 >= 0.0;
  if (D.6080_150 != 0)
    goto <bb 35>;
  else
    goto <bb 37>;
  # SUCC: 35 (true) 37 (false)

  # BLOCK 35
  # PRED: 34 (true)
  D.6082_151 = move_18(D)->dest_point;
  D.6083_152 = D.6082_151 + 4294967295;
  D.6084_153 = move_18(D)->src_point;
  D.6085_154 = D.6084_153 + 4294967295;
  if (D.6083_152 >= D.6085_154)
    goto <bb 36>;
  else
    goto <bb 37>;
  # SUCC: 36 (true) 37 (false)

  # BLOCK 36
  # PRED: 35 (true)
  numCas_155 = 7;
  pas_156 = -pas_119;
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 37
  # PRED: 34 (false) 35 (false)
  numCas_157 = 8;
  pas_158 = -pas_119;
  # SUCC: 38 (fallthru)

  # BLOCK 38
  # PRED: 21 (fallthru) 27 (fallthru) 30 (fallthru) 33 (fallthru) 36 (fallthru) 37 (fallthru)
  # pas_5 = PHI <pas_3(21), pas_4(27), pas_119(30), pas_119(33), pas_156(36), pas_158(37)>
  # numCas_8 = PHI <numCas_6(21), numCas_7(27), numCas_143(30), numCas_149(33), numCas_155(36), numCas_157(37)>
  D.6087_159 = (const char * restrict) &"Cas n°%d\n"[0];
  printf (D.6087_159, numCas_8);
  D.6088_160 = (Sint16) pos_src_x_23;
  new_pos.x = D.6088_160;
  D.6089_161 = (Sint16) pos_src_y_1;
  new_pos.y = D.6089_161;
  depassement_162 = 0;
  D.6090_163 = move_18(D)->src_point;
  D.6091_164 = D.6090_163 + 4294967295;
  D.6092_165 = gameState_27(D)->zones[D.6091_164].nb_checkers;
  D.6093_166 = D.6092_165 - 1;
  gameState_27(D)->zones[D.6091_164].nb_checkers = D.6093_166;
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 39
  # PRED: 65 (true)
  D.6094_167 = new_pos.x;
  D.6095_168 = (short unsigned int) D.6094_167;
  D.6096_169 = (short unsigned int) pas_5;
  D.6097_170 = D.6095_168 + D.6096_169;
  D.6098_171 = (Sint16) D.6097_170;
  new_pos.x = D.6098_171;
  D.6099_172 = (long double) a_110;
  D.6100_173 = new_pos.x;
  D.6101_174 = (double) D.6100_173;
  D.6102_175 = (long double) D.6101_174;
  D.6103_176 = D.6099_172 * D.6102_175;
  D.6104_177 = (long double) b_118;
  D.6105_178 = D.6103_176 + D.6104_177;
  D.6106_179 = (int) D.6105_178;
  D.6107_180 = (Sint16) D.6106_179;
  new_pos.y = D.6107_180;
  Display_RefreshGameBoard (display_21(D), gameState_27(D), game_181(D));
  D.6108_182 = move_18(D)->src_point;
  D.6109_183 = D.6108_182 + 4294967295;
  D.6110_184 = gameState_27(D)->zones[D.6109_183].player;
  D.6111_185 = (int) D.6110_184;
  Checker_Draw (display_21(D), new_pos, D.6111_185, game_181(D));
  D.6112_186 = display_21(D)->screen;
  SDL_Flip (D.6112_186);
  switch (numCas_8) <default: <L69>, case 1: <L45>, case 2: <L48>, case 3: <L51>, case 4: <L54>, case 5: <L57>, case 6: <L60>, case 7: <L63>, case 8: <L66>>
  # SUCC: 64 40 43 46 49 52 55 58 61

  # BLOCK 40
  # PRED: 39
<L45>:
  D.6113_187 = new_pos.x;
  D.6114_188 = (int) D.6113_187;
  D.6115_189 = pas_5 * -2;
  D.6116_190 = D.6115_189 + pos_dest_x_65;
  if (D.6114_188 > D.6116_190)
    goto <bb 41>;
  else
    goto <bb 42>;
  # SUCC: 41 (true) 42 (false)

  # BLOCK 41
  # PRED: 40 (true)
  depassement_191 = 1;
  # SUCC: 42 (fallthru)

  # BLOCK 42
  # PRED: 40 (false) 41 (fallthru)
  # depassement_9 = PHI <depassement_17(40), depassement_191(41)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 43
  # PRED: 39
<L48>:
  D.6119_192 = new_pos.x;
  D.6120_193 = (int) D.6119_192;
  D.6121_194 = pas_5 * -2;
  D.6122_195 = D.6121_194 + pos_dest_x_65;
  if (D.6120_193 < D.6122_195)
    goto <bb 44>;
  else
    goto <bb 45>;
  # SUCC: 44 (true) 45 (false)

  # BLOCK 44
  # PRED: 43 (true)
  depassement_196 = 1;
  # SUCC: 45 (fallthru)

  # BLOCK 45
  # PRED: 43 (false) 44 (fallthru)
  # depassement_10 = PHI <depassement_17(43), depassement_196(44)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 46
  # PRED: 39
<L51>:
  D.6125_197 = new_pos.x;
  D.6126_198 = (int) D.6125_197;
  D.6127_199 = pas_5 * -2;
  D.6128_200 = D.6127_199 + pos_dest_x_65;
  if (D.6126_198 > D.6128_200)
    goto <bb 47>;
  else
    goto <bb 48>;
  # SUCC: 47 (true) 48 (false)

  # BLOCK 47
  # PRED: 46 (true)
  depassement_201 = 1;
  # SUCC: 48 (fallthru)

  # BLOCK 48
  # PRED: 46 (false) 47 (fallthru)
  # depassement_11 = PHI <depassement_17(46), depassement_201(47)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 49
  # PRED: 39
<L54>:
  D.6131_202 = new_pos.x;
  D.6132_203 = (int) D.6131_202;
  D.6133_204 = pas_5 * -2;
  D.6134_205 = D.6133_204 + pos_dest_x_65;
  if (D.6132_203 < D.6134_205)
    goto <bb 50>;
  else
    goto <bb 51>;
  # SUCC: 50 (true) 51 (false)

  # BLOCK 50
  # PRED: 49 (true)
  depassement_206 = 1;
  # SUCC: 51 (fallthru)

  # BLOCK 51
  # PRED: 49 (false) 50 (fallthru)
  # depassement_12 = PHI <depassement_17(49), depassement_206(50)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 52
  # PRED: 39
<L57>:
  D.6137_207 = new_pos.x;
  D.6138_208 = (int) D.6137_207;
  D.6139_209 = pas_5 * -2;
  D.6140_210 = D.6139_209 + pos_dest_x_65;
  if (D.6138_208 > D.6140_210)
    goto <bb 53>;
  else
    goto <bb 54>;
  # SUCC: 53 (true) 54 (false)

  # BLOCK 53
  # PRED: 52 (true)
  depassement_211 = 1;
  # SUCC: 54 (fallthru)

  # BLOCK 54
  # PRED: 52 (false) 53 (fallthru)
  # depassement_13 = PHI <depassement_17(52), depassement_211(53)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 55
  # PRED: 39
<L60>:
  D.6143_212 = new_pos.x;
  D.6144_213 = (int) D.6143_212;
  D.6145_214 = pas_5 * -2;
  D.6146_215 = D.6145_214 + pos_dest_x_65;
  if (D.6144_213 > D.6146_215)
    goto <bb 56>;
  else
    goto <bb 57>;
  # SUCC: 56 (true) 57 (false)

  # BLOCK 56
  # PRED: 55 (true)
  depassement_216 = 1;
  # SUCC: 57 (fallthru)

  # BLOCK 57
  # PRED: 55 (false) 56 (fallthru)
  # depassement_14 = PHI <depassement_17(55), depassement_216(56)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 58
  # PRED: 39
<L63>:
  D.6149_217 = new_pos.x;
  D.6150_218 = (int) D.6149_217;
  D.6151_219 = pas_5 * -2;
  D.6152_220 = D.6151_219 + pos_dest_x_65;
  if (D.6150_218 < D.6152_220)
    goto <bb 59>;
  else
    goto <bb 60>;
  # SUCC: 59 (true) 60 (false)

  # BLOCK 59
  # PRED: 58 (true)
  depassement_221 = 1;
  # SUCC: 60 (fallthru)

  # BLOCK 60
  # PRED: 58 (false) 59 (fallthru)
  # depassement_15 = PHI <depassement_17(58), depassement_221(59)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 61
  # PRED: 39
<L66>:
  D.6155_222 = new_pos.x;
  D.6156_223 = (int) D.6155_222;
  D.6157_224 = pas_5 * -2;
  D.6158_225 = D.6157_224 + pos_dest_x_65;
  if (D.6156_223 < D.6158_225)
    goto <bb 62>;
  else
    goto <bb 63>;
  # SUCC: 62 (true) 63 (false)

  # BLOCK 62
  # PRED: 61 (true)
  depassement_226 = 1;
  # SUCC: 63 (fallthru)

  # BLOCK 63
  # PRED: 61 (false) 62 (fallthru)
  # depassement_16 = PHI <depassement_17(61), depassement_226(62)>
  goto <bb 65>;
  # SUCC: 65 (fallthru)

  # BLOCK 64
  # PRED: 39
<L69>:
  depassement_227 = 1;
  # SUCC: 65 (fallthru)

  # BLOCK 65
  # PRED: 38 (fallthru) 42 (fallthru) 45 (fallthru) 48 (fallthru) 51 (fallthru) 54 (fallthru) 57 (fallthru) 60 (fallthru) 63 (fallthru) 64 (fallthru)
  # depassement_17 = PHI <depassement_162(38), depassement_9(42), depassement_10(45), depassement_11(48), depassement_12(51), depassement_13(54), depassement_14(57), depassement_15(60), depassement_16(63), depassement_227(64)>
  if (depassement_17 == 0)
    goto <bb 39>;
  else
    goto <bb 66>;
  # SUCC: 39 (true) 66 (false)

  # BLOCK 66
  # PRED: 65 (false)
  D.6163_228 = move_18(D)->dest_point;
  D.6164_229 = D.6163_228 + 4294967295;
  D.6165_230 = gameState_27(D)->zones[D.6164_229].nb_checkers;
  if (D.6165_230 == 1)
    goto <bb 67>;
  else
    goto <bb 73>;
  # SUCC: 67 (true) 73 (false)

  # BLOCK 67
  # PRED: 66 (true)
  D.6167_231 = move_18(D)->src_point;
  D.6168_232 = D.6167_231 + 4294967295;
  D.6169_233 = gameState_27(D)->zones[D.6168_232].player;
  D.6170_234 = move_18(D)->dest_point;
  D.6171_235 = D.6170_234 + 4294967295;
  D.6172_236 = gameState_27(D)->zones[D.6171_235].player;
  if (D.6169_233 != D.6172_236)
    goto <bb 68>;
  else
    goto <bb 73>;
  # SUCC: 68 (true) 73 (false)

  # BLOCK 68
  # PRED: 67 (true)
  D.6176_237 = move_18(D)->src_point;
  D.6177_238 = gameState_27(D)->zones[D.6176_237].player;
  if (D.6177_238 == 0)
    goto <bb 69>;
  else
    goto <bb 71>;
  # SUCC: 69 (true) 71 (false)

  # BLOCK 69
  # PRED: 68 (true)
  D.6179_239 = move_18(D)->dest_point;
  D.6180_240 = gameState_27(D)->zones[D.6179_239].player;
  if (D.6180_240 == 1)
    goto <bb 70>;
  else
    goto <bb 71>;
  # SUCC: 70 (true) 71 (false)

  # BLOCK 70
  # PRED: 69 (true)
  D.6182_241 = gameState_27(D)->zones[26].nb_checkers;
  D.6183_242 = D.6182_241 + 1;
  gameState_27(D)->zones[26].nb_checkers = D.6183_242;
  D.6184_243 = move_18(D)->dest_point;
  D.6185_244 = D.6184_243 + 4294967295;
  D.6186_245 = gameState_27(D)->zones[D.6185_244].player;
  gameState_27(D)->zones[26].player = D.6186_245;
  D.6187_246 = move_18(D)->dest_point;
  D.6188_247 = D.6187_246 + 4294967295;
  D.6189_248 = gameState_27(D)->zones[D.6188_247].nb_checkers;
  D.6190_249 = move_18(D)->dest_point;
  D.6191_250 = D.6190_249 + 4294967295;
  D.6192_251 = move_18(D)->src_point;
  D.6193_252 = D.6192_251 + 4294967295;
  D.6194_253 = gameState_27(D)->zones[D.6193_252].player;
  gameState_27(D)->zones[D.6191_250].player = D.6194_253;
  goto <bb 72>;
  # SUCC: 72 (fallthru)

  # BLOCK 71
  # PRED: 68 (false) 69 (false)
  D.6195_254 = gameState_27(D)->zones[24].nb_checkers;
  D.6196_255 = D.6195_254 + 1;
  gameState_27(D)->zones[24].nb_checkers = D.6196_255;
  D.6197_256 = move_18(D)->dest_point;
  D.6198_257 = D.6197_256 + 4294967295;
  D.6199_258 = gameState_27(D)->zones[D.6198_257].player;
  gameState_27(D)->zones[24].player = D.6199_258;
  D.6200_259 = move_18(D)->dest_point;
  D.6201_260 = D.6200_259 + 4294967295;
  D.6202_261 = gameState_27(D)->zones[D.6201_260].nb_checkers;
  D.6203_262 = move_18(D)->dest_point;
  D.6204_263 = D.6203_262 + 4294967295;
  D.6205_264 = move_18(D)->src_point;
  D.6206_265 = D.6205_264 + 4294967295;
  D.6207_266 = gameState_27(D)->zones[D.6206_265].player;
  gameState_27(D)->zones[D.6204_263].player = D.6207_266;
  # SUCC: 72 (fallthru)

  # BLOCK 72
  # PRED: 70 (fallthru) 71 (fallthru)
  goto <bb 74>;
  # SUCC: 74 (fallthru)

  # BLOCK 73
  # PRED: 66 (false) 67 (false)
  D.6208_267 = move_18(D)->dest_point;
  D.6209_268 = D.6208_267 + 4294967295;
  D.6210_269 = gameState_27(D)->zones[D.6209_268].nb_checkers;
  D.6211_270 = D.6210_269 + 1;
  gameState_27(D)->zones[D.6209_268].nb_checkers = D.6211_270;
  D.6212_271 = move_18(D)->dest_point;
  D.6213_272 = D.6212_271 + 4294967295;
  D.6214_273 = move_18(D)->src_point;
  D.6215_274 = D.6214_273 + 4294967295;
  D.6216_275 = gameState_27(D)->zones[D.6215_274].player;
  gameState_27(D)->zones[D.6213_272].player = D.6216_275;
  # SUCC: 74 (fallthru)

  # BLOCK 74
  # PRED: 72 (fallthru) 73 (fallthru)
  Display_RefreshGameBoard (display_21(D), gameState_27(D), game_181(D));
  return;
  # SUCC: EXIT

}


Partition 6: size 4 align 4
	pos_dest_x_65, offset 0
Partition 5: size 4 align 4
	pos_src_x_23, offset 0
Partition 4: size 4 align 4
	depassement_9, offset 0
Partition 3: size 4 align 4
	numCas_6, offset 0
Partition 2: size 4 align 4
	pas_3, offset 0
Partition 1: size 4 align 4
	pos_dest_y_2, offset 0
Partition 0: size 4 align 4
	pos_src_y_1, offset 0
Partition 9: size 8 align 2
	new_pos, offset 0
Partition 8: size 8 align 8
	b_118, offset 0
Partition 7: size 8 align 8
	a_110, offset 0

;; Generating RTL for gimple basic block 2

;; D.5930_19 = move_18(D)->src_point;

(insn 5 4 6 (set (reg/f:SI 278)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:490 -1
     (nil))

(insn 6 5 0 (set (reg:SI 59 [ D.5930 ])
        (mem/s/j:SI (reg/f:SI 278) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:490 -1
     (nil))

;; D.5931_20 = D.5930_19 + 4294967295;

(insn 7 6 0 (parallel [
            (set (reg:SI 60 [ D.5931 ])
                (plus:SI (reg:SI 59 [ D.5930 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:490 -1
     (nil))

;; D.5932_22 = display_21(D)->positions[D.5931_20].x;

(insn 8 7 9 (set (reg/f:SI 279)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:490 -1
     (nil))

(insn 9 8 10 (parallel [
            (set (reg:SI 280)
                (plus:SI (reg:SI 60 [ D.5931 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:490 -1
     (nil))

(insn 10 9 0 (set (reg:HI 61 [ D.5932 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 280)
                        (const_int 8 [0x8]))
                    (reg/f:SI 279))
                (const_int 4 [0x4])) [0 display_21(D)->positions[D.5931_20].x+0 S2 A32])) src/gui.c:490 -1
     (nil))

;; pos_src_x_23 = (int) D.5932_22;

(insn 11 10 12 (set (reg:SI 281)
        (sign_extend:SI (reg:HI 61 [ D.5932 ]))) src/gui.c:490 -1
     (nil))

(insn 12 11 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pos_src_x+0 S4 A32])
        (reg:SI 281)) src/gui.c:490 -1
     (nil))

;; D.5933_24 = move_18(D)->src_point;

(insn 13 12 14 (set (reg/f:SI 282)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:492 -1
     (nil))

(insn 14 13 0 (set (reg:SI 62 [ D.5933 ])
        (mem/s/j:SI (reg/f:SI 282) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:492 -1
     (nil))

;; if (D.5933_24 > 12)

(insn 15 14 16 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 62 [ D.5933 ])
            (const_int 12 [0xc]))) src/gui.c:492 -1
     (nil))

(jump_insn 16 15 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:492 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; D.5936_25 = move_18(D)->src_point;

(insn 18 17 19 (set (reg/f:SI 283)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:494 -1
     (nil))

(insn 19 18 0 (set (reg:SI 63 [ D.5936 ])
        (mem/s/j:SI (reg/f:SI 283) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:494 -1
     (nil))

;; D.5937_26 = D.5936_25 + 4294967295;

(insn 20 19 0 (parallel [
            (set (reg:SI 64 [ D.5937 ])
                (plus:SI (reg:SI 63 [ D.5936 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:494 -1
     (nil))

;; D.5938_28 = gameState_27(D)->zones[D.5937_26].nb_checkers;

(insn 21 20 22 (set (reg/f:SI 284)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:494 -1
     (nil))

(insn 22 21 0 (set (reg:SI 65 [ D.5938 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 64 [ D.5937 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 284))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.5937_26].nb_checkers+0 S4 A32])) src/gui.c:494 -1
     (nil))

;; if (D.5938_28 > 6)

(insn 23 22 24 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 65 [ D.5938 ])
            (const_int 6 [0x6]))) src/gui.c:494 -1
     (nil))

(jump_insn 24 23 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:494 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; D.5941_29 = move_18(D)->src_point;

(insn 26 25 27 (set (reg/f:SI 285)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:495 -1
     (nil))

(insn 27 26 0 (set (reg:SI 66 [ D.5941 ])
        (mem/s/j:SI (reg/f:SI 285) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:495 -1
     (nil))

;; D.5942_30 = D.5941_29 + 4294967295;

(insn 28 27 0 (parallel [
            (set (reg:SI 67 [ D.5942 ])
                (plus:SI (reg:SI 66 [ D.5941 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:495 -1
     (nil))

;; D.5943_31 = display_21(D)->positions[D.5942_30].y;

(insn 29 28 30 (set (reg/f:SI 286)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:495 -1
     (nil))

(insn 30 29 31 (parallel [
            (set (reg:SI 287)
                (plus:SI (reg:SI 67 [ D.5942 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:495 -1
     (nil))

(insn 31 30 0 (set (reg:HI 68 [ D.5943 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 287)
                        (const_int 8 [0x8]))
                    (reg/f:SI 286))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.5942_30].y+0 S2 A16])) src/gui.c:495 -1
     (nil))

;; D.5944_32 = (int) D.5943_31;

(insn 32 31 0 (set (reg:SI 69 [ D.5944 ])
        (sign_extend:SI (reg:HI 68 [ D.5943 ]))) src/gui.c:495 -1
     (nil))

;; pos_src_y_33 = D.5944_32 + 120;

(insn 33 32 34 (parallel [
            (set (reg:SI 288)
                (plus:SI (reg:SI 69 [ D.5944 ])
                    (const_int 120 [0x78])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:495 -1
     (nil))

(insn 34 33 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 pos_src_y+0 S4 A32])
        (reg:SI 288)) src/gui.c:495 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 69 [ D.5944 ])
            (const_int 120 [0x78]))
        (nil)))

;; Generating RTL for gimple basic block 5

;; 

(code_label 37 36 38 72 "" [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; D.5946_34 = move_18(D)->src_point;

(insn 39 38 40 (set (reg/f:SI 289)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:497 -1
     (nil))

(insn 40 39 0 (set (reg:SI 70 [ D.5946 ])
        (mem/s/j:SI (reg/f:SI 289) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:497 -1
     (nil))

;; D.5947_35 = D.5946_34 + 4294967295;

(insn 41 40 0 (parallel [
            (set (reg:SI 71 [ D.5947 ])
                (plus:SI (reg:SI 70 [ D.5946 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:497 -1
     (nil))

;; D.5948_36 = display_21(D)->positions[D.5947_35].y;

(insn 42 41 43 (set (reg/f:SI 290)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:497 -1
     (nil))

(insn 43 42 44 (parallel [
            (set (reg:SI 291)
                (plus:SI (reg:SI 71 [ D.5947 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:497 -1
     (nil))

(insn 44 43 0 (set (reg:HI 72 [ D.5948 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 291)
                        (const_int 8 [0x8]))
                    (reg/f:SI 290))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.5947_35].y+0 S2 A16])) src/gui.c:497 -1
     (nil))

;; D.5949_37 = (unsigned int) D.5948_36;

(insn 45 44 0 (set (reg:SI 73 [ D.5949 ])
        (sign_extend:SI (reg:HI 72 [ D.5948 ]))) src/gui.c:497 -1
     (nil))

;; D.5950_38 = move_18(D)->src_point;

(insn 46 45 47 (set (reg/f:SI 292)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:497 -1
     (nil))

(insn 47 46 0 (set (reg:SI 74 [ D.5950 ])
        (mem/s/j:SI (reg/f:SI 292) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:497 -1
     (nil))

;; D.5951_39 = D.5950_38 + 4294967295;

(insn 48 47 0 (parallel [
            (set (reg:SI 75 [ D.5951 ])
                (plus:SI (reg:SI 74 [ D.5950 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:497 -1
     (nil))

;; D.5952_40 = gameState_27(D)->zones[D.5951_39].nb_checkers;

(insn 49 48 50 (set (reg/f:SI 293)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:497 -1
     (nil))

(insn 50 49 0 (set (reg:SI 76 [ D.5952 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 75 [ D.5951 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 293))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.5951_39].nb_checkers+0 S4 A32])) src/gui.c:497 -1
     (nil))

;; D.5953_41 = D.5952_40 * 20;

(insn 51 50 52 (set (reg:SI 294)
        (reg:SI 76 [ D.5952 ])) src/gui.c:497 -1
     (nil))

(insn 52 51 53 (parallel [
            (set (reg:SI 294)
                (ashift:SI (reg:SI 294)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:497 -1
     (nil))

(insn 53 52 54 (parallel [
            (set (reg:SI 294)
                (plus:SI (reg:SI 294)
                    (reg:SI 76 [ D.5952 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:497 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 76 [ D.5952 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 54 53 55 (parallel [
            (set (reg:SI 295)
                (ashift:SI (reg:SI 294)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:497 -1
     (nil))

(insn 55 54 56 (set (reg:SI 294)
        (reg:SI 295)) src/gui.c:497 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 76 [ D.5952 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 56 55 0 (set (reg:SI 77 [ D.5953 ])
        (reg:SI 294)) src/gui.c:497 -1
     (nil))

;; D.5954_42 = D.5949_37 + D.5953_41;

(insn 57 56 0 (parallel [
            (set (reg:SI 78 [ D.5954 ])
                (plus:SI (reg:SI 73 [ D.5949 ])
                    (reg:SI 77 [ D.5953 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:497 -1
     (nil))

;; pos_src_y_43 = (int) D.5954_42;

(insn 58 57 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 pos_src_y+0 S4 A32])
        (reg:SI 78 [ D.5954 ])) src/gui.c:497 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 61 60 62 71 "" [0 uses])

(note 62 61 0 NOTE_INSN_BASIC_BLOCK)

;; D.5956_44 = move_18(D)->src_point;

(insn 63 62 64 (set (reg/f:SI 296)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:501 -1
     (nil))

(insn 64 63 0 (set (reg:SI 79 [ D.5956 ])
        (mem/s/j:SI (reg/f:SI 296) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:501 -1
     (nil))

;; D.5957_45 = D.5956_44 + 4294967295;

(insn 65 64 0 (parallel [
            (set (reg:SI 80 [ D.5957 ])
                (plus:SI (reg:SI 79 [ D.5956 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:501 -1
     (nil))

;; D.5958_46 = gameState_27(D)->zones[D.5957_45].nb_checkers;

(insn 66 65 67 (set (reg/f:SI 297)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:501 -1
     (nil))

(insn 67 66 0 (set (reg:SI 81 [ D.5958 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 80 [ D.5957 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 297))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.5957_45].nb_checkers+0 S4 A32])) src/gui.c:501 -1
     (nil))

;; if (D.5958_46 > 6)

(insn 68 67 69 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 81 [ D.5958 ])
            (const_int 6 [0x6]))) src/gui.c:501 -1
     (nil))

(jump_insn 69 68 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:501 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; D.5961_47 = move_18(D)->src_point;

(insn 71 70 72 (set (reg/f:SI 298)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:502 -1
     (nil))

(insn 72 71 0 (set (reg:SI 82 [ D.5961 ])
        (mem/s/j:SI (reg/f:SI 298) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:502 -1
     (nil))

;; D.5962_48 = D.5961_47 + 4294967295;

(insn 73 72 0 (parallel [
            (set (reg:SI 83 [ D.5962 ])
                (plus:SI (reg:SI 82 [ D.5961 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:502 -1
     (nil))

;; D.5963_49 = display_21(D)->positions[D.5962_48].y;

(insn 74 73 75 (set (reg/f:SI 299)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:502 -1
     (nil))

(insn 75 74 76 (parallel [
            (set (reg:SI 300)
                (plus:SI (reg:SI 83 [ D.5962 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:502 -1
     (nil))

(insn 76 75 0 (set (reg:HI 84 [ D.5963 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 300)
                        (const_int 8 [0x8]))
                    (reg/f:SI 299))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.5962_48].y+0 S2 A16])) src/gui.c:502 -1
     (nil))

;; D.5964_50 = (int) D.5963_49;

(insn 77 76 0 (set (reg:SI 85 [ D.5964 ])
        (sign_extend:SI (reg:HI 84 [ D.5963 ]))) src/gui.c:502 -1
     (nil))

;; pos_src_y_51 = D.5964_50 + -120;

(insn 78 77 79 (parallel [
            (set (reg:SI 301)
                (plus:SI (reg:SI 85 [ D.5964 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:502 -1
     (nil))

(insn 79 78 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 pos_src_y+0 S4 A32])
        (reg:SI 301)) src/gui.c:502 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 85 [ D.5964 ])
            (const_int -120 [0xffffffffffffff88]))
        (nil)))

;; Generating RTL for gimple basic block 8

;; 

(code_label 82 81 83 74 "" [0 uses])

(note 83 82 0 NOTE_INSN_BASIC_BLOCK)

;; D.5966_52 = move_18(D)->src_point;

(insn 84 83 85 (set (reg/f:SI 302)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:504 -1
     (nil))

(insn 85 84 0 (set (reg:SI 86 [ D.5966 ])
        (mem/s/j:SI (reg/f:SI 302) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:504 -1
     (nil))

;; D.5967_53 = D.5966_52 + 4294967295;

(insn 86 85 0 (parallel [
            (set (reg:SI 87 [ D.5967 ])
                (plus:SI (reg:SI 86 [ D.5966 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:504 -1
     (nil))

;; D.5968_54 = display_21(D)->positions[D.5967_53].y;

(insn 87 86 88 (set (reg/f:SI 303)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:504 -1
     (nil))

(insn 88 87 89 (parallel [
            (set (reg:SI 304)
                (plus:SI (reg:SI 87 [ D.5967 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:504 -1
     (nil))

(insn 89 88 0 (set (reg:HI 88 [ D.5968 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 304)
                        (const_int 8 [0x8]))
                    (reg/f:SI 303))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.5967_53].y+0 S2 A16])) src/gui.c:504 -1
     (nil))

;; D.5969_55 = (unsigned int) D.5968_54;

(insn 90 89 0 (set (reg:SI 89 [ D.5969 ])
        (sign_extend:SI (reg:HI 88 [ D.5968 ]))) src/gui.c:504 -1
     (nil))

;; D.5970_56 = move_18(D)->src_point;

(insn 91 90 92 (set (reg/f:SI 305)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:504 -1
     (nil))

(insn 92 91 0 (set (reg:SI 90 [ D.5970 ])
        (mem/s/j:SI (reg/f:SI 305) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:504 -1
     (nil))

;; D.5971_57 = D.5970_56 + 4294967295;

(insn 93 92 0 (parallel [
            (set (reg:SI 91 [ D.5971 ])
                (plus:SI (reg:SI 90 [ D.5970 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:504 -1
     (nil))

;; D.5972_58 = gameState_27(D)->zones[D.5971_57].nb_checkers;

(insn 94 93 95 (set (reg/f:SI 306)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:504 -1
     (nil))

(insn 95 94 0 (set (reg:SI 92 [ D.5972 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 91 [ D.5971 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 306))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.5971_57].nb_checkers+0 S4 A32])) src/gui.c:504 -1
     (nil))

;; D.5973_59 = D.5972_58 * 20;

(insn 96 95 97 (set (reg:SI 307)
        (reg:SI 92 [ D.5972 ])) src/gui.c:504 -1
     (nil))

(insn 97 96 98 (parallel [
            (set (reg:SI 307)
                (ashift:SI (reg:SI 307)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:504 -1
     (nil))

(insn 98 97 99 (parallel [
            (set (reg:SI 307)
                (plus:SI (reg:SI 307)
                    (reg:SI 92 [ D.5972 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:504 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 92 [ D.5972 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 99 98 100 (parallel [
            (set (reg:SI 308)
                (ashift:SI (reg:SI 307)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:504 -1
     (nil))

(insn 100 99 101 (set (reg:SI 307)
        (reg:SI 308)) src/gui.c:504 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 92 [ D.5972 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 101 100 0 (set (reg:SI 93 [ D.5973 ])
        (reg:SI 307)) src/gui.c:504 -1
     (nil))

;; D.5974_60 = D.5969_55 - D.5973_59;

(insn 102 101 0 (parallel [
            (set (reg:SI 94 [ D.5974 ])
                (minus:SI (reg:SI 89 [ D.5969 ])
                    (reg:SI 93 [ D.5973 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:504 -1
     (nil))

;; pos_src_y_61 = (int) D.5974_60;

(insn 103 102 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 pos_src_y+0 S4 A32])
        (reg:SI 94 [ D.5974 ])) src/gui.c:504 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 104 103 105 73 "" [0 uses])

(note 105 104 0 NOTE_INSN_BASIC_BLOCK)

;; D.5975_62 = move_18(D)->dest_point;

(insn 106 105 107 (set (reg/f:SI 309)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:507 -1
     (nil))

(insn 107 106 0 (set (reg:SI 95 [ D.5975 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 309)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:507 -1
     (nil))

;; D.5976_63 = D.5975_62 + 4294967295;

(insn 108 107 0 (parallel [
            (set (reg:SI 96 [ D.5976 ])
                (plus:SI (reg:SI 95 [ D.5975 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:507 -1
     (nil))

;; D.5977_64 = display_21(D)->positions[D.5976_63].x;

(insn 109 108 110 (set (reg/f:SI 310)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:507 -1
     (nil))

(insn 110 109 111 (parallel [
            (set (reg:SI 311)
                (plus:SI (reg:SI 96 [ D.5976 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:507 -1
     (nil))

(insn 111 110 0 (set (reg:HI 97 [ D.5977 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 311)
                        (const_int 8 [0x8]))
                    (reg/f:SI 310))
                (const_int 4 [0x4])) [0 display_21(D)->positions[D.5976_63].x+0 S2 A32])) src/gui.c:507 -1
     (nil))

;; pos_dest_x_65 = (int) D.5977_64;

(insn 112 111 113 (set (reg:SI 312)
        (sign_extend:SI (reg:HI 97 [ D.5977 ]))) src/gui.c:507 -1
     (nil))

(insn 113 112 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])
        (reg:SI 312)) src/gui.c:507 -1
     (nil))

;; D.5978_66 = move_18(D)->dest_point;

(insn 114 113 115 (set (reg/f:SI 313)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:509 -1
     (nil))

(insn 115 114 0 (set (reg:SI 98 [ D.5978 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 313)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:509 -1
     (nil))

;; if (D.5978_66 > 12)

(insn 116 115 117 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 98 [ D.5978 ])
            (const_int 12 [0xc]))) src/gui.c:509 -1
     (nil))

(jump_insn 117 116 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:509 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; D.5981_67 = move_18(D)->dest_point;

(insn 119 118 120 (set (reg/f:SI 314)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:511 -1
     (nil))

(insn 120 119 0 (set (reg:SI 99 [ D.5981 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 314)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:511 -1
     (nil))

;; D.5982_68 = D.5981_67 + 4294967295;

(insn 121 120 0 (parallel [
            (set (reg:SI 100 [ D.5982 ])
                (plus:SI (reg:SI 99 [ D.5981 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:511 -1
     (nil))

;; D.5983_69 = gameState_27(D)->zones[D.5982_68].nb_checkers;

(insn 122 121 123 (set (reg/f:SI 315)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:511 -1
     (nil))

(insn 123 122 0 (set (reg:SI 101 [ D.5983 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 100 [ D.5982 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 315))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.5982_68].nb_checkers+0 S4 A32])) src/gui.c:511 -1
     (nil))

;; if (D.5983_69 > 6)

(insn 124 123 125 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 101 [ D.5983 ])
            (const_int 6 [0x6]))) src/gui.c:511 -1
     (nil))

(jump_insn 125 124 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:511 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; D.5986_70 = move_18(D)->dest_point;

(insn 127 126 128 (set (reg/f:SI 316)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:512 -1
     (nil))

(insn 128 127 0 (set (reg:SI 102 [ D.5986 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 316)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:512 -1
     (nil))

;; D.5987_71 = D.5986_70 + 4294967295;

(insn 129 128 0 (parallel [
            (set (reg:SI 103 [ D.5987 ])
                (plus:SI (reg:SI 102 [ D.5986 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:512 -1
     (nil))

;; D.5988_72 = display_21(D)->positions[D.5987_71].y;

(insn 130 129 131 (set (reg/f:SI 317)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:512 -1
     (nil))

(insn 131 130 132 (parallel [
            (set (reg:SI 318)
                (plus:SI (reg:SI 103 [ D.5987 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:512 -1
     (nil))

(insn 132 131 0 (set (reg:HI 104 [ D.5988 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 318)
                        (const_int 8 [0x8]))
                    (reg/f:SI 317))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.5987_71].y+0 S2 A16])) src/gui.c:512 -1
     (nil))

;; D.5989_73 = (int) D.5988_72;

(insn 133 132 0 (set (reg:SI 105 [ D.5989 ])
        (sign_extend:SI (reg:HI 104 [ D.5988 ]))) src/gui.c:512 -1
     (nil))

;; pos_dest_y_74 = D.5989_73 + 120;

(insn 134 133 135 (parallel [
            (set (reg:SI 319)
                (plus:SI (reg:SI 105 [ D.5989 ])
                    (const_int 120 [0x78])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:512 -1
     (nil))

(insn 135 134 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pos_dest_y+0 S4 A32])
        (reg:SI 319)) src/gui.c:512 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 105 [ D.5989 ])
            (const_int 120 [0x78]))
        (nil)))

;; Generating RTL for gimple basic block 12

;; 

(code_label 138 137 139 76 "" [0 uses])

(note 139 138 0 NOTE_INSN_BASIC_BLOCK)

;; D.5991_75 = move_18(D)->dest_point;

(insn 140 139 141 (set (reg/f:SI 320)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:514 -1
     (nil))

(insn 141 140 0 (set (reg:SI 106 [ D.5991 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 320)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:514 -1
     (nil))

;; D.5992_76 = D.5991_75 + 4294967295;

(insn 142 141 0 (parallel [
            (set (reg:SI 107 [ D.5992 ])
                (plus:SI (reg:SI 106 [ D.5991 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:514 -1
     (nil))

;; D.5993_77 = display_21(D)->positions[D.5992_76].y;

(insn 143 142 144 (set (reg/f:SI 321)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:514 -1
     (nil))

(insn 144 143 145 (parallel [
            (set (reg:SI 322)
                (plus:SI (reg:SI 107 [ D.5992 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:514 -1
     (nil))

(insn 145 144 0 (set (reg:HI 108 [ D.5993 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 322)
                        (const_int 8 [0x8]))
                    (reg/f:SI 321))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.5992_76].y+0 S2 A16])) src/gui.c:514 -1
     (nil))

;; D.5994_78 = (unsigned int) D.5993_77;

(insn 146 145 0 (set (reg:SI 109 [ D.5994 ])
        (sign_extend:SI (reg:HI 108 [ D.5993 ]))) src/gui.c:514 -1
     (nil))

;; D.5995_79 = move_18(D)->dest_point;

(insn 147 146 148 (set (reg/f:SI 323)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:514 -1
     (nil))

(insn 148 147 0 (set (reg:SI 110 [ D.5995 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 323)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:514 -1
     (nil))

;; D.5996_80 = D.5995_79 + 4294967295;

(insn 149 148 0 (parallel [
            (set (reg:SI 111 [ D.5996 ])
                (plus:SI (reg:SI 110 [ D.5995 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:514 -1
     (nil))

;; D.5997_81 = gameState_27(D)->zones[D.5996_80].nb_checkers;

(insn 150 149 151 (set (reg/f:SI 324)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:514 -1
     (nil))

(insn 151 150 0 (set (reg:SI 112 [ D.5997 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 111 [ D.5996 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 324))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.5996_80].nb_checkers+0 S4 A32])) src/gui.c:514 -1
     (nil))

;; D.5998_82 = D.5997_81 * 20;

(insn 152 151 153 (set (reg:SI 325)
        (reg:SI 112 [ D.5997 ])) src/gui.c:514 -1
     (nil))

(insn 153 152 154 (parallel [
            (set (reg:SI 325)
                (ashift:SI (reg:SI 325)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:514 -1
     (nil))

(insn 154 153 155 (parallel [
            (set (reg:SI 325)
                (plus:SI (reg:SI 325)
                    (reg:SI 112 [ D.5997 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:514 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 112 [ D.5997 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 155 154 156 (parallel [
            (set (reg:SI 326)
                (ashift:SI (reg:SI 325)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:514 -1
     (nil))

(insn 156 155 157 (set (reg:SI 325)
        (reg:SI 326)) src/gui.c:514 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 112 [ D.5997 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 157 156 0 (set (reg:SI 113 [ D.5998 ])
        (reg:SI 325)) src/gui.c:514 -1
     (nil))

;; D.5999_83 = D.5994_78 + D.5998_82;

(insn 158 157 0 (parallel [
            (set (reg:SI 114 [ D.5999 ])
                (plus:SI (reg:SI 109 [ D.5994 ])
                    (reg:SI 113 [ D.5998 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:514 -1
     (nil))

;; pos_dest_y_84 = (int) D.5999_83;

(insn 159 158 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pos_dest_y+0 S4 A32])
        (reg:SI 114 [ D.5999 ])) src/gui.c:514 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 162 161 163 75 "" [0 uses])

(note 163 162 0 NOTE_INSN_BASIC_BLOCK)

;; D.6001_85 = move_18(D)->dest_point;

(insn 164 163 165 (set (reg/f:SI 327)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:518 -1
     (nil))

(insn 165 164 0 (set (reg:SI 115 [ D.6001 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 327)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:518 -1
     (nil))

;; D.6002_86 = D.6001_85 + 4294967295;

(insn 166 165 0 (parallel [
            (set (reg:SI 116 [ D.6002 ])
                (plus:SI (reg:SI 115 [ D.6001 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:518 -1
     (nil))

;; D.6003_87 = gameState_27(D)->zones[D.6002_86].nb_checkers;

(insn 167 166 168 (set (reg/f:SI 328)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:518 -1
     (nil))

(insn 168 167 0 (set (reg:SI 117 [ D.6003 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 116 [ D.6002 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 328))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6002_86].nb_checkers+0 S4 A32])) src/gui.c:518 -1
     (nil))

;; if (D.6003_87 > 6)

(insn 169 168 170 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 117 [ D.6003 ])
            (const_int 6 [0x6]))) src/gui.c:518 -1
     (nil))

(jump_insn 170 169 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:518 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; D.6006_88 = move_18(D)->dest_point;

(insn 172 171 173 (set (reg/f:SI 329)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:519 -1
     (nil))

(insn 173 172 0 (set (reg:SI 118 [ D.6006 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 329)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:519 -1
     (nil))

;; D.6007_89 = D.6006_88 + 4294967295;

(insn 174 173 0 (parallel [
            (set (reg:SI 119 [ D.6007 ])
                (plus:SI (reg:SI 118 [ D.6006 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:519 -1
     (nil))

;; D.6008_90 = display_21(D)->positions[D.6007_89].y;

(insn 175 174 176 (set (reg/f:SI 330)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:519 -1
     (nil))

(insn 176 175 177 (parallel [
            (set (reg:SI 331)
                (plus:SI (reg:SI 119 [ D.6007 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:519 -1
     (nil))

(insn 177 176 0 (set (reg:HI 120 [ D.6008 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 331)
                        (const_int 8 [0x8]))
                    (reg/f:SI 330))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.6007_89].y+0 S2 A16])) src/gui.c:519 -1
     (nil))

;; D.6009_91 = (int) D.6008_90;

(insn 178 177 0 (set (reg:SI 121 [ D.6009 ])
        (sign_extend:SI (reg:HI 120 [ D.6008 ]))) src/gui.c:519 -1
     (nil))

;; pos_dest_y_92 = D.6009_91 + -120;

(insn 179 178 180 (parallel [
            (set (reg:SI 332)
                (plus:SI (reg:SI 121 [ D.6009 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:519 -1
     (nil))

(insn 180 179 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pos_dest_y+0 S4 A32])
        (reg:SI 332)) src/gui.c:519 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 121 [ D.6009 ])
            (const_int -120 [0xffffffffffffff88]))
        (nil)))

;; Generating RTL for gimple basic block 15

;; 

(code_label 183 182 184 78 "" [0 uses])

(note 184 183 0 NOTE_INSN_BASIC_BLOCK)

;; D.6011_93 = move_18(D)->dest_point;

(insn 185 184 186 (set (reg/f:SI 333)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:521 -1
     (nil))

(insn 186 185 0 (set (reg:SI 122 [ D.6011 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 333)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:521 -1
     (nil))

;; D.6012_94 = D.6011_93 + 4294967295;

(insn 187 186 0 (parallel [
            (set (reg:SI 123 [ D.6012 ])
                (plus:SI (reg:SI 122 [ D.6011 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:521 -1
     (nil))

;; D.6013_95 = display_21(D)->positions[D.6012_94].y;

(insn 188 187 189 (set (reg/f:SI 334)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:521 -1
     (nil))

(insn 189 188 190 (parallel [
            (set (reg:SI 335)
                (plus:SI (reg:SI 123 [ D.6012 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:521 -1
     (nil))

(insn 190 189 0 (set (reg:HI 124 [ D.6013 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 335)
                        (const_int 8 [0x8]))
                    (reg/f:SI 334))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.6012_94].y+0 S2 A16])) src/gui.c:521 -1
     (nil))

;; D.6014_96 = (unsigned int) D.6013_95;

(insn 191 190 0 (set (reg:SI 125 [ D.6014 ])
        (sign_extend:SI (reg:HI 124 [ D.6013 ]))) src/gui.c:521 -1
     (nil))

;; D.6015_97 = move_18(D)->dest_point;

(insn 192 191 193 (set (reg/f:SI 336)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:521 -1
     (nil))

(insn 193 192 0 (set (reg:SI 126 [ D.6015 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 336)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:521 -1
     (nil))

;; D.6016_98 = D.6015_97 + 4294967295;

(insn 194 193 0 (parallel [
            (set (reg:SI 127 [ D.6016 ])
                (plus:SI (reg:SI 126 [ D.6015 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:521 -1
     (nil))

;; D.6017_99 = gameState_27(D)->zones[D.6016_98].nb_checkers;

(insn 195 194 196 (set (reg/f:SI 337)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:521 -1
     (nil))

(insn 196 195 0 (set (reg:SI 128 [ D.6017 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 127 [ D.6016 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 337))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6016_98].nb_checkers+0 S4 A32])) src/gui.c:521 -1
     (nil))

;; D.6018_100 = D.6017_99 * 20;

(insn 197 196 198 (set (reg:SI 338)
        (reg:SI 128 [ D.6017 ])) src/gui.c:521 -1
     (nil))

(insn 198 197 199 (parallel [
            (set (reg:SI 338)
                (ashift:SI (reg:SI 338)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:521 -1
     (nil))

(insn 199 198 200 (parallel [
            (set (reg:SI 338)
                (plus:SI (reg:SI 338)
                    (reg:SI 128 [ D.6017 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:521 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 128 [ D.6017 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 200 199 201 (parallel [
            (set (reg:SI 339)
                (ashift:SI (reg:SI 338)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:521 -1
     (nil))

(insn 201 200 202 (set (reg:SI 338)
        (reg:SI 339)) src/gui.c:521 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 128 [ D.6017 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 202 201 0 (set (reg:SI 129 [ D.6018 ])
        (reg:SI 338)) src/gui.c:521 -1
     (nil))

;; D.6019_101 = D.6014_96 - D.6018_100;

(insn 203 202 0 (parallel [
            (set (reg:SI 130 [ D.6019 ])
                (minus:SI (reg:SI 125 [ D.6014 ])
                    (reg:SI 129 [ D.6018 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:521 -1
     (nil))

;; pos_dest_y_102 = (int) D.6019_101;

(insn 204 203 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pos_dest_y+0 S4 A32])
        (reg:SI 130 [ D.6019 ])) src/gui.c:521 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 205 204 206 77 "" [0 uses])

(note 206 205 0 NOTE_INSN_BASIC_BLOCK)

;; D.6020_103 = pos_src_y_1 - pos_dest_y_2;

(insn 207 206 208 (set (reg:SI 340)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pos_dest_y+0 S4 A32])) src/gui.c:524 -1
     (nil))

(insn 208 207 209 (set (reg:SI 341)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 pos_src_y+0 S4 A32])) src/gui.c:524 -1
     (nil))

(insn 209 208 0 (parallel [
            (set (reg:SI 131 [ D.6020 ])
                (minus:SI (reg:SI 341)
                    (reg:SI 340)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:524 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 pos_src_y+0 S4 A32])
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 pos_dest_y+0 S4 A32]))
        (nil)))

;; D.6021_104 = (double) D.6020_103;

(insn 210 209 0 (set (reg:DF 132 [ D.6021 ])
        (float:DF (reg:SI 131 [ D.6020 ]))) src/gui.c:524 -1
     (nil))

;; D.6022_105 = (long double) D.6021_104;

(insn 211 210 0 (set (reg:XF 133 [ D.6022 ])
        (float_extend:XF (reg:DF 132 [ D.6021 ]))) src/gui.c:524 -1
     (nil))

;; D.6023_106 = pos_src_x_23 - pos_dest_x_65;

(insn 212 211 213 (set (reg:SI 342)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])) src/gui.c:524 -1
     (nil))

(insn 213 212 214 (set (reg:SI 343)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pos_src_x+0 S4 A32])) src/gui.c:524 -1
     (nil))

(insn 214 213 0 (parallel [
            (set (reg:SI 134 [ D.6023 ])
                (minus:SI (reg:SI 343)
                    (reg:SI 342)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:524 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 pos_src_x+0 S4 A32])
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32]))
        (nil)))

;; D.6024_107 = (double) D.6023_106;

(insn 215 214 0 (set (reg:DF 135 [ D.6024 ])
        (float:DF (reg:SI 134 [ D.6023 ]))) src/gui.c:524 -1
     (nil))

;; D.6025_108 = (long double) D.6024_107;

(insn 216 215 0 (set (reg:XF 136 [ D.6025 ])
        (float_extend:XF (reg:DF 135 [ D.6024 ]))) src/gui.c:524 -1
     (nil))

;; D.6026_109 = D.6022_105 / D.6025_108;

(insn 217 216 0 (set (reg:XF 137 [ D.6026 ])
        (div:XF (reg:XF 133 [ D.6022 ])
            (reg:XF 136 [ D.6025 ]))) src/gui.c:524 -1
     (nil))

;; a_110 = (double) D.6026_109;

(insn 218 217 0 (parallel [
            (set (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -56 [0xffffffffffffffc8])) [0 a+0 S8 A64])
                (float_truncate:DF (reg:XF 137 [ D.6026 ])))
            (clobber (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -72 [0xffffffffffffffb8])) [0 S8 A64]))
        ]) src/gui.c:524 -1
     (nil))

;; D.6027_111 = (double) pos_dest_y_2;

(insn 219 218 0 (set (reg:DF 138 [ D.6027 ])
        (float:DF (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 pos_dest_y+0 S4 A32]))) src/gui.c:525 -1
     (nil))

;; D.6028_112 = (long double) D.6027_111;

(insn 220 219 0 (set (reg:XF 139 [ D.6028 ])
        (float_extend:XF (reg:DF 138 [ D.6027 ]))) src/gui.c:525 -1
     (nil))

;; D.6029_113 = (long double) a_110;

(insn 221 220 0 (set (reg:XF 140 [ D.6029 ])
        (float_extend:XF (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 a+0 S8 A64]))) src/gui.c:525 -1
     (nil))

;; D.6030_114 = (double) pos_dest_x_65;

(insn 222 221 0 (set (reg:DF 141 [ D.6030 ])
        (float:DF (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32]))) src/gui.c:525 -1
     (nil))

;; D.6031_115 = (long double) D.6030_114;

(insn 223 222 0 (set (reg:XF 142 [ D.6031 ])
        (float_extend:XF (reg:DF 141 [ D.6030 ]))) src/gui.c:525 -1
     (nil))

;; D.6032_116 = D.6029_113 * D.6031_115;

(insn 224 223 0 (set (reg:XF 143 [ D.6032 ])
        (mult:XF (reg:XF 140 [ D.6029 ])
            (reg:XF 142 [ D.6031 ]))) src/gui.c:525 -1
     (nil))

;; D.6033_117 = D.6028_112 - D.6032_116;

(insn 225 224 0 (set (reg:XF 144 [ D.6033 ])
        (minus:XF (reg:XF 139 [ D.6028 ])
            (reg:XF 143 [ D.6032 ]))) src/gui.c:525 -1
     (nil))

;; b_118 = (double) D.6033_117;

(insn 226 225 0 (parallel [
            (set (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -48 [0xffffffffffffffd0])) [0 b+0 S8 A64])
                (float_truncate:DF (reg:XF 144 [ D.6033 ])))
            (clobber (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -72 [0xffffffffffffffb8])) [0 S8 A64]))
        ]) src/gui.c:525 -1
     (nil))

;; pas_119 = 8;

(insn 227 226 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])
        (const_int 8 [0x8])) src/gui.c:531 -1
     (nil))

;; D.6036_120 = move_18(D)->dest_point;

(insn 228 227 229 (set (reg/f:SI 344)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:534 -1
     (nil))

(insn 229 228 0 (set (reg:SI 145 [ D.6036 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 344)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:534 -1
     (nil))

;; if (D.6036_120 <= 12)

(insn 230 229 231 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 145 [ D.6036 ])
            (const_int 12 [0xc]))) src/gui.c:534 -1
     (nil))

(jump_insn 231 230 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:534 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; D.6038_121 = move_18(D)->src_point;

(insn 233 232 234 (set (reg/f:SI 345)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:534 -1
     (nil))

(insn 234 233 0 (set (reg:SI 146 [ D.6038 ])
        (mem/s/j:SI (reg/f:SI 345) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:534 -1
     (nil))

;; if (D.6038_121 <= 12)

(insn 235 234 236 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 146 [ D.6038 ])
            (const_int 12 [0xc]))) src/gui.c:534 -1
     (nil))

(jump_insn 236 235 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:534 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; D.6040_122 = move_18(D)->dest_point;

(insn 238 237 239 (set (reg/f:SI 346)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:536 -1
     (nil))

(insn 239 238 0 (set (reg:SI 147 [ D.6040 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 346)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:536 -1
     (nil))

;; D.6041_123 = D.6040_122 + 4294967295;

(insn 240 239 0 (parallel [
            (set (reg:SI 148 [ D.6041 ])
                (plus:SI (reg:SI 147 [ D.6040 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:536 -1
     (nil))

;; D.6042_124 = move_18(D)->src_point;

(insn 241 240 242 (set (reg/f:SI 347)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:536 -1
     (nil))

(insn 242 241 0 (set (reg:SI 149 [ D.6042 ])
        (mem/s/j:SI (reg/f:SI 347) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:536 -1
     (nil))

;; D.6043_125 = D.6042_124 + 4294967295;

(insn 243 242 0 (parallel [
            (set (reg:SI 150 [ D.6043 ])
                (plus:SI (reg:SI 149 [ D.6042 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:536 -1
     (nil))

;; if (D.6041_123 <= D.6043_125)

(insn 244 243 245 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 148 [ D.6041 ])
            (reg:SI 150 [ D.6043 ]))) src/gui.c:536 -1
     (nil))

(jump_insn 245 244 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:536 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; numCas_126 = 1;

(insn 247 246 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:537 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; 

(code_label 250 249 251 80 "" [0 uses])

(note 251 250 0 NOTE_INSN_BASIC_BLOCK)

;; numCas_127 = 2;

(insn 252 251 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 2 [0x2])) src/gui.c:540 -1
     (nil))

;; pas_128 = -pas_119;

(insn 253 252 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])
                (neg:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:541 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; 

(code_label 254 253 255 81 "" [0 uses])

(note 255 254 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 22

;; 

(code_label 258 257 259 79 "" [0 uses])

(note 259 258 0 NOTE_INSN_BASIC_BLOCK)

;; D.6049_129 = move_18(D)->dest_point;

(insn 260 259 261 (set (reg/f:SI 348)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:544 -1
     (nil))

(insn 261 260 0 (set (reg:SI 151 [ D.6049 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 348)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:544 -1
     (nil))

;; if (D.6049_129 > 12)

(insn 262 261 263 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 151 [ D.6049 ])
            (const_int 12 [0xc]))) src/gui.c:544 -1
     (nil))

(jump_insn 263 262 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:544 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; D.6051_130 = move_18(D)->src_point;

(insn 265 264 266 (set (reg/f:SI 349)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:544 -1
     (nil))

(insn 266 265 0 (set (reg:SI 152 [ D.6051 ])
        (mem/s/j:SI (reg/f:SI 349) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:544 -1
     (nil))

;; if (D.6051_130 > 12)

(insn 267 266 268 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 152 [ D.6051 ])
            (const_int 12 [0xc]))) src/gui.c:544 -1
     (nil))

(jump_insn 268 267 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:544 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; D.6053_131 = move_18(D)->dest_point;

(insn 270 269 271 (set (reg/f:SI 350)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:546 -1
     (nil))

(insn 271 270 0 (set (reg:SI 153 [ D.6053 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 350)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:546 -1
     (nil))

;; D.6054_132 = D.6053_131 + 4294967295;

(insn 272 271 0 (parallel [
            (set (reg:SI 154 [ D.6054 ])
                (plus:SI (reg:SI 153 [ D.6053 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:546 -1
     (nil))

;; D.6055_133 = move_18(D)->src_point;

(insn 273 272 274 (set (reg/f:SI 351)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:546 -1
     (nil))

(insn 274 273 0 (set (reg:SI 155 [ D.6055 ])
        (mem/s/j:SI (reg/f:SI 351) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:546 -1
     (nil))

;; D.6056_134 = D.6055_133 + 4294967295;

(insn 275 274 0 (parallel [
            (set (reg:SI 156 [ D.6056 ])
                (plus:SI (reg:SI 155 [ D.6055 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:546 -1
     (nil))

;; if (D.6054_132 >= D.6056_134)

(insn 276 275 277 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 154 [ D.6054 ])
            (reg:SI 156 [ D.6056 ]))) src/gui.c:546 -1
     (nil))

(jump_insn 277 276 0 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:546 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; numCas_135 = 3;

(insn 279 278 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 3 [0x3])) src/gui.c:547 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; 

(code_label 282 281 283 84 "" [0 uses])

(note 283 282 0 NOTE_INSN_BASIC_BLOCK)

;; numCas_136 = 4;

(insn 284 283 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 4 [0x4])) src/gui.c:550 -1
     (nil))

;; pas_137 = -pas_119;

(insn 285 284 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])
                (neg:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:551 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; 

(code_label 286 285 287 85 "" [0 uses])

(note 287 286 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 28

;; 

(code_label 290 289 291 83 "" [0 uses])

(note 291 290 0 NOTE_INSN_BASIC_BLOCK)

;; D.6062_138 = a_110 >= 0.0;

(insn 292 291 293 (set (reg:DF 352)
        (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 a+0 S8 A64])) src/gui.c:554 -1
     (nil))

(insn 293 292 294 (set (reg:DF 353)
        (mem/u/c/i:DF (symbol_ref/u:SI ("*.LC21") [flags 0x2]) [0 S8 A64])) src/gui.c:554 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(insn 294 293 295 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 352)
            (reg:DF 353))) src/gui.c:554 -1
     (nil))

(insn 295 294 0 (set (reg:QI 157 [ D.6062 ])
        (ge:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) src/gui.c:554 -1
     (nil))

;; if (D.6062_138 != 0)

(insn 296 295 297 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 157 [ D.6062 ])
            (const_int 0 [0]))) src/gui.c:554 -1
     (nil))

(jump_insn 297 296 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:554 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; D.6064_139 = move_18(D)->dest_point;

(insn 299 298 300 (set (reg/f:SI 354)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:554 -1
     (nil))

(insn 300 299 0 (set (reg:SI 158 [ D.6064 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 354)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:554 -1
     (nil))

;; D.6065_140 = D.6064_139 + 4294967295;

(insn 301 300 0 (parallel [
            (set (reg:SI 159 [ D.6065 ])
                (plus:SI (reg:SI 158 [ D.6064 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:554 -1
     (nil))

;; D.6066_141 = move_18(D)->src_point;

(insn 302 301 303 (set (reg/f:SI 355)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:554 -1
     (nil))

(insn 303 302 0 (set (reg:SI 160 [ D.6066 ])
        (mem/s/j:SI (reg/f:SI 355) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:554 -1
     (nil))

;; D.6067_142 = D.6066_141 + 4294967295;

(insn 304 303 0 (parallel [
            (set (reg:SI 161 [ D.6067 ])
                (plus:SI (reg:SI 160 [ D.6066 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:554 -1
     (nil))

;; if (D.6065_140 <= D.6067_142)

(insn 305 304 306 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 159 [ D.6065 ])
            (reg:SI 161 [ D.6067 ]))) src/gui.c:554 -1
     (nil))

(jump_insn 306 305 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:554 -1
     (nil))

;; Generating RTL for gimple basic block 30

;; numCas_143 = 5;

(insn 308 307 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 5 [0x5])) src/gui.c:556 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; 

(code_label 311 310 312 86 "" [0 uses])

(note 312 311 0 NOTE_INSN_BASIC_BLOCK)

;; D.6071_144 = a_110 <= 0.0;

(insn 313 312 314 (set (reg:DF 356)
        (mem/u/c/i:DF (symbol_ref/u:SI ("*.LC21") [flags 0x2]) [0 S8 A64])) src/gui.c:557 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(insn 314 313 315 (set (reg:DF 357)
        (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 a+0 S8 A64])) src/gui.c:557 -1
     (nil))

(insn 315 314 316 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 356)
            (reg:DF 357))) src/gui.c:557 -1
     (nil))

(insn 316 315 0 (set (reg:QI 162 [ D.6071 ])
        (ge:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) src/gui.c:557 -1
     (nil))

;; if (D.6071_144 != 0)

(insn 317 316 318 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 162 [ D.6071 ])
            (const_int 0 [0]))) src/gui.c:557 -1
     (nil))

(jump_insn 318 317 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:557 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; D.6073_145 = move_18(D)->dest_point;

(insn 320 319 321 (set (reg/f:SI 358)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:557 -1
     (nil))

(insn 321 320 0 (set (reg:SI 163 [ D.6073 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 358)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:557 -1
     (nil))

;; D.6074_146 = D.6073_145 + 4294967295;

(insn 322 321 0 (parallel [
            (set (reg:SI 164 [ D.6074 ])
                (plus:SI (reg:SI 163 [ D.6073 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:557 -1
     (nil))

;; D.6075_147 = move_18(D)->src_point;

(insn 323 322 324 (set (reg/f:SI 359)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:557 -1
     (nil))

(insn 324 323 0 (set (reg:SI 165 [ D.6075 ])
        (mem/s/j:SI (reg/f:SI 359) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:557 -1
     (nil))

;; D.6076_148 = D.6075_147 + 4294967295;

(insn 325 324 0 (parallel [
            (set (reg:SI 166 [ D.6076 ])
                (plus:SI (reg:SI 165 [ D.6075 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:557 -1
     (nil))

;; if (D.6074_146 >= D.6076_148)

(insn 326 325 327 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 164 [ D.6074 ])
            (reg:SI 166 [ D.6076 ]))) src/gui.c:557 -1
     (nil))

(jump_insn 327 326 0 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:557 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; numCas_149 = 6;

(insn 329 328 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 6 [0x6])) src/gui.c:559 -1
     (nil))

;; Generating RTL for gimple basic block 34

;; 

(code_label 332 331 333 87 "" [0 uses])

(note 333 332 0 NOTE_INSN_BASIC_BLOCK)

;; D.6080_150 = a_110 >= 0.0;

(insn 334 333 335 (set (reg:DF 360)
        (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 a+0 S8 A64])) src/gui.c:561 -1
     (nil))

(insn 335 334 336 (set (reg:DF 361)
        (mem/u/c/i:DF (symbol_ref/u:SI ("*.LC21") [flags 0x2]) [0 S8 A64])) src/gui.c:561 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(insn 336 335 337 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 360)
            (reg:DF 361))) src/gui.c:561 -1
     (nil))

(insn 337 336 0 (set (reg:QI 167 [ D.6080 ])
        (ge:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) src/gui.c:561 -1
     (nil))

;; if (D.6080_150 != 0)

(insn 338 337 339 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 167 [ D.6080 ])
            (const_int 0 [0]))) src/gui.c:561 -1
     (nil))

(jump_insn 339 338 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:561 -1
     (nil))

;; Generating RTL for gimple basic block 35

;; D.6082_151 = move_18(D)->dest_point;

(insn 341 340 342 (set (reg/f:SI 362)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:561 -1
     (nil))

(insn 342 341 0 (set (reg:SI 168 [ D.6082 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 362)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:561 -1
     (nil))

;; D.6083_152 = D.6082_151 + 4294967295;

(insn 343 342 0 (parallel [
            (set (reg:SI 169 [ D.6083 ])
                (plus:SI (reg:SI 168 [ D.6082 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:561 -1
     (nil))

;; D.6084_153 = move_18(D)->src_point;

(insn 344 343 345 (set (reg/f:SI 363)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:561 -1
     (nil))

(insn 345 344 0 (set (reg:SI 170 [ D.6084 ])
        (mem/s/j:SI (reg/f:SI 363) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:561 -1
     (nil))

;; D.6085_154 = D.6084_153 + 4294967295;

(insn 346 345 0 (parallel [
            (set (reg:SI 171 [ D.6085 ])
                (plus:SI (reg:SI 170 [ D.6084 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:561 -1
     (nil))

;; if (D.6083_152 >= D.6085_154)

(insn 347 346 348 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 169 [ D.6083 ])
            (reg:SI 171 [ D.6085 ]))) src/gui.c:561 -1
     (nil))

(jump_insn 348 347 0 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:561 -1
     (nil))

;; Generating RTL for gimple basic block 36

;; numCas_155 = 7;

(insn 350 349 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 7 [0x7])) src/gui.c:563 -1
     (nil))

;; pas_156 = -pas_119;

(insn 351 350 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])
                (neg:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:564 -1
     (nil))

;; Generating RTL for gimple basic block 37

;; 

(code_label 354 353 355 88 "" [0 uses])

(note 355 354 0 NOTE_INSN_BASIC_BLOCK)

;; numCas_157 = 8;

(insn 356 355 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 8 [0x8])) src/gui.c:568 -1
     (nil))

;; pas_158 = -pas_119;

(insn 357 356 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])
                (neg:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:569 -1
     (nil))

;; Generating RTL for gimple basic block 38

;; 

(code_label 358 357 359 82 "" [0 uses])

(note 359 358 0 NOTE_INSN_BASIC_BLOCK)

;; D.6087_159 = (const char * restrict) &"Cas n°%d\n"[0];

(insn 360 359 0 (set (reg/f:SI 172 [ D.6087 ])
        (symbol_ref/f:SI ("*.LC22") [flags 0x2]  <var_decl 0x408fdf00 *.LC22>)) src/gui.c:571 -1
     (nil))

;; printf (D.6087_159, numCas_8);

(insn 361 360 362 (set (reg:SI 364)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])) src/gui.c:571 -1
     (nil))

(insn 362 361 363 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 364)) src/gui.c:571 -1
     (nil))

(insn 363 362 364 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 172 [ D.6087 ])) src/gui.c:571 -1
     (nil))

(call_insn 364 363 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x406b1b80 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:571 -1
     (nil)
    (nil))

;; D.6088_160 = (Sint16) pos_src_x_23;

(insn 365 364 366 (set (reg:SI 365)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pos_src_x+0 S4 A32])) src/gui.c:574 -1
     (nil))

(insn 366 365 0 (set (reg:HI 173 [ D.6088 ])
        (subreg:HI (reg:SI 365) 0)) src/gui.c:574 -1
     (nil))

;; new_pos.x = D.6088_160;

(insn 367 366 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])
        (reg:HI 173 [ D.6088 ])) src/gui.c:574 -1
     (nil))

;; D.6089_161 = (Sint16) pos_src_y_1;

(insn 368 367 369 (set (reg:SI 366)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 pos_src_y+0 S4 A32])) src/gui.c:575 -1
     (nil))

(insn 369 368 0 (set (reg:HI 174 [ D.6089 ])
        (subreg:HI (reg:SI 366) 0)) src/gui.c:575 -1
     (nil))

;; new_pos.y = D.6089_161;

(insn 370 369 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -34 [0xffffffffffffffde])) [0 new_pos.y+0 S2 A16])
        (reg:HI 174 [ D.6089 ])) src/gui.c:575 -1
     (nil))

;; depassement_162 = 0;

(insn 371 370 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 0 [0])) src/gui.c:576 -1
     (nil))

;; D.6090_163 = move_18(D)->src_point;

(insn 372 371 373 (set (reg/f:SI 367)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:577 -1
     (nil))

(insn 373 372 0 (set (reg:SI 175 [ D.6090 ])
        (mem/s/j:SI (reg/f:SI 367) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:577 -1
     (nil))

;; D.6091_164 = D.6090_163 + 4294967295;

(insn 374 373 0 (parallel [
            (set (reg:SI 176 [ D.6091 ])
                (plus:SI (reg:SI 175 [ D.6090 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:577 -1
     (nil))

;; D.6092_165 = gameState_27(D)->zones[D.6091_164].nb_checkers;

(insn 375 374 376 (set (reg/f:SI 368)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:577 -1
     (nil))

(insn 376 375 0 (set (reg:SI 177 [ D.6092 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 176 [ D.6091 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 368))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6091_164].nb_checkers+0 S4 A32])) src/gui.c:577 -1
     (nil))

;; D.6093_166 = D.6092_165 - 1;

(insn 377 376 0 (parallel [
            (set (reg:SI 178 [ D.6093 ])
                (plus:SI (reg:SI 177 [ D.6092 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:577 -1
     (nil))

;; gameState_27(D)->zones[D.6091_164].nb_checkers = D.6093_166;

(insn 378 377 379 (set (reg/f:SI 369)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:577 -1
     (nil))

(insn 379 378 0 (set (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 176 [ D.6091 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 369))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6091_164].nb_checkers+0 S4 A32])
        (reg:SI 178 [ D.6093 ])) src/gui.c:577 -1
     (nil))

;; Generating RTL for gimple basic block 39

;; D.6094_167 = new_pos.x;

(insn 383 382 0 (set (reg:HI 179 [ D.6094 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:580 -1
     (nil))

;; D.6095_168 = (short unsigned int) D.6094_167;

(insn 384 383 0 (set (reg:HI 180 [ D.6095 ])
        (reg:HI 179 [ D.6094 ])) src/gui.c:580 -1
     (nil))

;; D.6096_169 = (short unsigned int) pas_5;

(insn 385 384 386 (set (reg:SI 370)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:580 -1
     (nil))

(insn 386 385 0 (set (reg:HI 181 [ D.6096 ])
        (subreg:HI (reg:SI 370) 0)) src/gui.c:580 -1
     (nil))

;; D.6097_170 = D.6095_168 + D.6096_169;

(insn 387 386 0 (parallel [
            (set (reg:HI 182 [ D.6097 ])
                (plus:HI (reg:HI 180 [ D.6095 ])
                    (reg:HI 181 [ D.6096 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:580 -1
     (nil))

;; D.6098_171 = (Sint16) D.6097_170;

(insn 388 387 0 (set (reg:HI 183 [ D.6098 ])
        (reg:HI 182 [ D.6097 ])) src/gui.c:580 -1
     (nil))

;; new_pos.x = D.6098_171;

(insn 389 388 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])
        (reg:HI 183 [ D.6098 ])) src/gui.c:580 -1
     (nil))

;; D.6099_172 = (long double) a_110;

(insn 390 389 0 (set (reg:XF 184 [ D.6099 ])
        (float_extend:XF (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 a+0 S8 A64]))) src/gui.c:581 -1
     (nil))

;; D.6100_173 = new_pos.x;

(insn 391 390 0 (set (reg:HI 185 [ D.6100 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:581 -1
     (nil))

;; D.6101_174 = (double) D.6100_173;

(insn 392 391 0 (set (reg:DF 186 [ D.6101 ])
        (float:DF (reg:HI 185 [ D.6100 ]))) src/gui.c:581 -1
     (nil))

;; D.6102_175 = (long double) D.6101_174;

(insn 393 392 0 (set (reg:XF 187 [ D.6102 ])
        (float_extend:XF (reg:DF 186 [ D.6101 ]))) src/gui.c:581 -1
     (nil))

;; D.6103_176 = D.6099_172 * D.6102_175;

(insn 394 393 0 (set (reg:XF 188 [ D.6103 ])
        (mult:XF (reg:XF 184 [ D.6099 ])
            (reg:XF 187 [ D.6102 ]))) src/gui.c:581 -1
     (nil))

;; D.6104_177 = (long double) b_118;

(insn 395 394 0 (set (reg:XF 189 [ D.6104 ])
        (float_extend:XF (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 b+0 S8 A64]))) src/gui.c:581 -1
     (nil))

;; D.6105_178 = D.6103_176 + D.6104_177;

(insn 396 395 0 (set (reg:XF 190 [ D.6105 ])
        (plus:XF (reg:XF 188 [ D.6103 ])
            (reg:XF 189 [ D.6104 ]))) src/gui.c:581 -1
     (nil))

;; D.6106_179 = (int) D.6105_178;

(insn 397 396 0 (parallel [
            (set (reg:SI 191 [ D.6106 ])
                (fix:SI (reg:XF 190 [ D.6105 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:581 -1
     (nil))

;; D.6107_180 = (Sint16) D.6106_179;

(insn 398 397 0 (set (reg:HI 192 [ D.6107 ])
        (subreg:HI (reg:SI 191 [ D.6106 ]) 0)) src/gui.c:581 -1
     (nil))

;; new_pos.y = D.6107_180;

(insn 399 398 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -34 [0xffffffffffffffde])) [0 new_pos.y+0 S2 A16])
        (reg:HI 192 [ D.6107 ])) src/gui.c:581 -1
     (nil))

;; Display_RefreshGameBoard (display_21(D), gameState_27(D), game_181(D));

(insn 400 399 401 (set (reg/f:SI 371)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 game+0 S4 A32])) src/gui.c:582 -1
     (nil))

(insn 401 400 402 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 371)) src/gui.c:582 -1
     (nil))

(insn 402 401 403 (set (reg/f:SI 372)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:582 -1
     (nil))

(insn 403 402 404 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 372)) src/gui.c:582 -1
     (nil))

(insn 404 403 405 (set (reg/f:SI 373)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:582 -1
     (nil))

(insn 405 404 406 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 373)) src/gui.c:582 -1
     (nil))

(call_insn 406 405 0 (call (mem:QI (symbol_ref:SI ("Display_RefreshGameBoard") [flags 0x3]  <function_decl 0x4081a780 Display_RefreshGameBoard>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:582 -1
     (nil)
    (nil))

;; D.6108_182 = move_18(D)->src_point;

(insn 407 406 408 (set (reg/f:SI 374)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:583 -1
     (nil))

(insn 408 407 0 (set (reg:SI 193 [ D.6108 ])
        (mem/s/j:SI (reg/f:SI 374) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:583 -1
     (nil))

;; D.6109_183 = D.6108_182 + 4294967295;

(insn 409 408 0 (parallel [
            (set (reg:SI 194 [ D.6109 ])
                (plus:SI (reg:SI 193 [ D.6108 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:583 -1
     (nil))

;; D.6110_184 = gameState_27(D)->zones[D.6109_183].player;

(insn 410 409 411 (set (reg/f:SI 375)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:583 -1
     (nil))

(insn 411 410 0 (set (reg:SI 195 [ D.6110 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 194 [ D.6109 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 375)) [0 gameState_27(D)->zones[D.6109_183].player+0 S4 A32])) src/gui.c:583 -1
     (nil))

;; D.6111_185 = (int) D.6110_184;

(insn 412 411 0 (set (reg:SI 196 [ D.6111 ])
        (reg:SI 195 [ D.6110 ])) src/gui.c:583 -1
     (nil))

;; Checker_Draw (display_21(D), new_pos, D.6111_185, game_181(D));

(insn 413 412 414 (set (reg/f:SI 376)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 game+0 S4 A32])) src/gui.c:583 -1
     (nil))

(insn 414 413 415 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg/f:SI 376)) src/gui.c:583 -1
     (nil))

(insn 415 414 416 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 196 [ D.6111 ])) src/gui.c:583 -1
     (nil))

(insn 416 415 417 (set (reg:DI 377)
        (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos+0 S8 A32])) src/gui.c:583 -1
     (nil))

(insn 417 416 418 (set (mem:DI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DI 377)) src/gui.c:583 -1
     (nil))

(insn 418 417 419 (set (reg/f:SI 378)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:583 -1
     (nil))

(insn 419 418 420 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 378)) src/gui.c:583 -1
     (nil))

(call_insn 420 419 0 (call (mem:QI (symbol_ref:SI ("Checker_Draw") [flags 0x3]  <function_decl 0x4081a200 Checker_Draw>) [0 S1 A8])
        (const_int 20 [0x14])) src/gui.c:583 -1
     (nil)
    (nil))

;; D.6112_186 = display_21(D)->screen;

(insn 421 420 422 (set (reg/f:SI 379)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:584 -1
     (nil))

(insn 422 421 0 (set (reg/f:SI 197 [ D.6112 ])
        (mem/s/f/j:SI (reg/f:SI 379) [0 display_21(D)->screen+0 S4 A32])) src/gui.c:584 -1
     (nil))

;; SDL_Flip (D.6112_186);

(insn 423 422 424 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 197 [ D.6112 ])) src/gui.c:584 -1
     (nil))

(call_insn 424 423 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_Flip") [flags 0x41]  <function_decl 0x4079fa00 SDL_Flip>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:584 -1
     (nil)
    (nil))

;; switch (numCas_8) <default: <L69>, case 1: <L45>, case 2: <L48>, case 3: <L51>, case 4: <L54>, case 5: <L57>, case 6: <L60>, case 7: <L63>, case 8: <L66>>

(insn 425 424 426 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
            (const_int 8 [0x8]))) src/gui.c:585 -1
     (nil))

(jump_insn 426 425 427 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:585 -1
     (nil))

(insn 427 426 428 (set (reg:SI 381)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])) src/gui.c:585 -1
     (nil))

(insn 428 427 429 (parallel [
            (set (reg:SI 380)
                (ashift:SI (reg:SI 381)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:585 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))

(insn 429 428 430 (parallel [
            (set (reg/f:SI 382)
                (plus:SI (reg:SI 380)
                    (label_ref:SI 433)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:585 -1
     (nil))

(insn 430 429 431 (set (reg:SI 383)
        (mem/u/c:SI (reg/f:SI 382) [0 S4 A8])) src/gui.c:585 -1
     (nil))

(jump_insn 431 430 432 (parallel [
            (set (pc)
                (reg:SI 383))
            (use (label_ref 433))
        ]) src/gui.c:585 -1
     (nil))

(barrier 432 431 433)

(code_label 433 432 434 99 "" [0 uses])

(jump_insn 434 433 435 (addr_vec:SI [
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
            (label_ref:SI 0)
        ]) src/gui.c:585 -1
     (nil))

(barrier 435 434 0)

;; Generating RTL for gimple basic block 40

;; <L45>:

(code_label 436 435 437 91 "" [0 uses])

(note 437 436 0 NOTE_INSN_BASIC_BLOCK)

;; D.6113_187 = new_pos.x;

(insn 438 437 0 (set (reg:HI 198 [ D.6113 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:588 -1
     (nil))

;; D.6114_188 = (int) D.6113_187;

(insn 439 438 0 (set (reg:SI 199 [ D.6114 ])
        (sign_extend:SI (reg:HI 198 [ D.6113 ]))) src/gui.c:588 -1
     (nil))

;; D.6115_189 = pas_5 * -2;

(insn 440 439 441 (set (reg:SI 384)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:588 -1
     (nil))

(insn 441 440 442 (set (reg:SI 385)
        (const_int 0 [0])) src/gui.c:588 -1
     (nil))

(insn 442 441 443 (parallel [
            (set (reg:SI 385)
                (minus:SI (reg:SI 385)
                    (reg:SI 384)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:588 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 384)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 443 442 444 (parallel [
            (set (reg:SI 386)
                (ashift:SI (reg:SI 385)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:588 -1
     (nil))

(insn 444 443 445 (set (reg:SI 385)
        (reg:SI 386)) src/gui.c:588 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 384)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 445 444 0 (set (reg:SI 200 [ D.6115 ])
        (reg:SI 385)) src/gui.c:588 -1
     (nil))

;; D.6116_190 = D.6115_189 + pos_dest_x_65;

(insn 446 445 0 (parallel [
            (set (reg:SI 201 [ D.6116 ])
                (plus:SI (reg:SI 200 [ D.6115 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:588 -1
     (nil))

;; if (D.6114_188 > D.6116_190)

(insn 447 446 448 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 199 [ D.6114 ])
            (reg:SI 201 [ D.6116 ]))) src/gui.c:588 -1
     (nil))

(jump_insn 448 447 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:588 -1
     (nil))

;; Generating RTL for gimple basic block 41

;; depassement_191 = 1;

(insn 450 449 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:589 -1
     (nil))

;; Generating RTL for gimple basic block 42

;; 

(code_label 451 450 452 100 "" [0 uses])

(note 452 451 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 43

;; <L48>:

(code_label 455 454 456 92 "" [0 uses])

(note 456 455 0 NOTE_INSN_BASIC_BLOCK)

;; D.6119_192 = new_pos.x;

(insn 457 456 0 (set (reg:HI 202 [ D.6119 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:592 -1
     (nil))

;; D.6120_193 = (int) D.6119_192;

(insn 458 457 0 (set (reg:SI 203 [ D.6120 ])
        (sign_extend:SI (reg:HI 202 [ D.6119 ]))) src/gui.c:592 -1
     (nil))

;; D.6121_194 = pas_5 * -2;

(insn 459 458 460 (set (reg:SI 387)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:592 -1
     (nil))

(insn 460 459 461 (set (reg:SI 388)
        (const_int 0 [0])) src/gui.c:592 -1
     (nil))

(insn 461 460 462 (parallel [
            (set (reg:SI 388)
                (minus:SI (reg:SI 388)
                    (reg:SI 387)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:592 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 387)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 462 461 463 (parallel [
            (set (reg:SI 389)
                (ashift:SI (reg:SI 388)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:592 -1
     (nil))

(insn 463 462 464 (set (reg:SI 388)
        (reg:SI 389)) src/gui.c:592 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 387)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 464 463 0 (set (reg:SI 204 [ D.6121 ])
        (reg:SI 388)) src/gui.c:592 -1
     (nil))

;; D.6122_195 = D.6121_194 + pos_dest_x_65;

(insn 465 464 0 (parallel [
            (set (reg:SI 205 [ D.6122 ])
                (plus:SI (reg:SI 204 [ D.6121 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:592 -1
     (nil))

;; if (D.6120_193 < D.6122_195)

(insn 466 465 467 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 203 [ D.6120 ])
            (reg:SI 205 [ D.6122 ]))) src/gui.c:592 -1
     (nil))

(jump_insn 467 466 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:592 -1
     (nil))

;; Generating RTL for gimple basic block 44

;; depassement_196 = 1;

(insn 469 468 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:593 -1
     (nil))

;; Generating RTL for gimple basic block 45

;; 

(code_label 470 469 471 101 "" [0 uses])

(note 471 470 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 46

;; <L51>:

(code_label 474 473 475 93 "" [0 uses])

(note 475 474 0 NOTE_INSN_BASIC_BLOCK)

;; D.6125_197 = new_pos.x;

(insn 476 475 0 (set (reg:HI 206 [ D.6125 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:596 -1
     (nil))

;; D.6126_198 = (int) D.6125_197;

(insn 477 476 0 (set (reg:SI 207 [ D.6126 ])
        (sign_extend:SI (reg:HI 206 [ D.6125 ]))) src/gui.c:596 -1
     (nil))

;; D.6127_199 = pas_5 * -2;

(insn 478 477 479 (set (reg:SI 390)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:596 -1
     (nil))

(insn 479 478 480 (set (reg:SI 391)
        (const_int 0 [0])) src/gui.c:596 -1
     (nil))

(insn 480 479 481 (parallel [
            (set (reg:SI 391)
                (minus:SI (reg:SI 391)
                    (reg:SI 390)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:596 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 390)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 481 480 482 (parallel [
            (set (reg:SI 392)
                (ashift:SI (reg:SI 391)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:596 -1
     (nil))

(insn 482 481 483 (set (reg:SI 391)
        (reg:SI 392)) src/gui.c:596 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 390)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 483 482 0 (set (reg:SI 208 [ D.6127 ])
        (reg:SI 391)) src/gui.c:596 -1
     (nil))

;; D.6128_200 = D.6127_199 + pos_dest_x_65;

(insn 484 483 0 (parallel [
            (set (reg:SI 209 [ D.6128 ])
                (plus:SI (reg:SI 208 [ D.6127 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:596 -1
     (nil))

;; if (D.6126_198 > D.6128_200)

(insn 485 484 486 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 207 [ D.6126 ])
            (reg:SI 209 [ D.6128 ]))) src/gui.c:596 -1
     (nil))

(jump_insn 486 485 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:596 -1
     (nil))

;; Generating RTL for gimple basic block 47

;; depassement_201 = 1;

(insn 488 487 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:597 -1
     (nil))

;; Generating RTL for gimple basic block 48

;; 

(code_label 489 488 490 102 "" [0 uses])

(note 490 489 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 49

;; <L54>:

(code_label 493 492 494 94 "" [0 uses])

(note 494 493 0 NOTE_INSN_BASIC_BLOCK)

;; D.6131_202 = new_pos.x;

(insn 495 494 0 (set (reg:HI 210 [ D.6131 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:600 -1
     (nil))

;; D.6132_203 = (int) D.6131_202;

(insn 496 495 0 (set (reg:SI 211 [ D.6132 ])
        (sign_extend:SI (reg:HI 210 [ D.6131 ]))) src/gui.c:600 -1
     (nil))

;; D.6133_204 = pas_5 * -2;

(insn 497 496 498 (set (reg:SI 393)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:600 -1
     (nil))

(insn 498 497 499 (set (reg:SI 394)
        (const_int 0 [0])) src/gui.c:600 -1
     (nil))

(insn 499 498 500 (parallel [
            (set (reg:SI 394)
                (minus:SI (reg:SI 394)
                    (reg:SI 393)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:600 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 393)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 500 499 501 (parallel [
            (set (reg:SI 395)
                (ashift:SI (reg:SI 394)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:600 -1
     (nil))

(insn 501 500 502 (set (reg:SI 394)
        (reg:SI 395)) src/gui.c:600 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 393)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 502 501 0 (set (reg:SI 212 [ D.6133 ])
        (reg:SI 394)) src/gui.c:600 -1
     (nil))

;; D.6134_205 = D.6133_204 + pos_dest_x_65;

(insn 503 502 0 (parallel [
            (set (reg:SI 213 [ D.6134 ])
                (plus:SI (reg:SI 212 [ D.6133 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:600 -1
     (nil))

;; if (D.6132_203 < D.6134_205)

(insn 504 503 505 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 211 [ D.6132 ])
            (reg:SI 213 [ D.6134 ]))) src/gui.c:600 -1
     (nil))

(jump_insn 505 504 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:600 -1
     (nil))

;; Generating RTL for gimple basic block 50

;; depassement_206 = 1;

(insn 507 506 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:601 -1
     (nil))

;; Generating RTL for gimple basic block 51

;; 

(code_label 508 507 509 103 "" [0 uses])

(note 509 508 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 52

;; <L57>:

(code_label 512 511 513 95 "" [0 uses])

(note 513 512 0 NOTE_INSN_BASIC_BLOCK)

;; D.6137_207 = new_pos.x;

(insn 514 513 0 (set (reg:HI 214 [ D.6137 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:604 -1
     (nil))

;; D.6138_208 = (int) D.6137_207;

(insn 515 514 0 (set (reg:SI 215 [ D.6138 ])
        (sign_extend:SI (reg:HI 214 [ D.6137 ]))) src/gui.c:604 -1
     (nil))

;; D.6139_209 = pas_5 * -2;

(insn 516 515 517 (set (reg:SI 396)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:604 -1
     (nil))

(insn 517 516 518 (set (reg:SI 397)
        (const_int 0 [0])) src/gui.c:604 -1
     (nil))

(insn 518 517 519 (parallel [
            (set (reg:SI 397)
                (minus:SI (reg:SI 397)
                    (reg:SI 396)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:604 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 396)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 519 518 520 (parallel [
            (set (reg:SI 398)
                (ashift:SI (reg:SI 397)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:604 -1
     (nil))

(insn 520 519 521 (set (reg:SI 397)
        (reg:SI 398)) src/gui.c:604 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 396)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 521 520 0 (set (reg:SI 216 [ D.6139 ])
        (reg:SI 397)) src/gui.c:604 -1
     (nil))

;; D.6140_210 = D.6139_209 + pos_dest_x_65;

(insn 522 521 0 (parallel [
            (set (reg:SI 217 [ D.6140 ])
                (plus:SI (reg:SI 216 [ D.6139 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:604 -1
     (nil))

;; if (D.6138_208 > D.6140_210)

(insn 523 522 524 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 215 [ D.6138 ])
            (reg:SI 217 [ D.6140 ]))) src/gui.c:604 -1
     (nil))

(jump_insn 524 523 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:604 -1
     (nil))

;; Generating RTL for gimple basic block 53

;; depassement_211 = 1;

(insn 526 525 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:605 -1
     (nil))

;; Generating RTL for gimple basic block 54

;; 

(code_label 527 526 528 104 "" [0 uses])

(note 528 527 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 55

;; <L60>:

(code_label 531 530 532 96 "" [0 uses])

(note 532 531 0 NOTE_INSN_BASIC_BLOCK)

;; D.6143_212 = new_pos.x;

(insn 533 532 0 (set (reg:HI 218 [ D.6143 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:608 -1
     (nil))

;; D.6144_213 = (int) D.6143_212;

(insn 534 533 0 (set (reg:SI 219 [ D.6144 ])
        (sign_extend:SI (reg:HI 218 [ D.6143 ]))) src/gui.c:608 -1
     (nil))

;; D.6145_214 = pas_5 * -2;

(insn 535 534 536 (set (reg:SI 399)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:608 -1
     (nil))

(insn 536 535 537 (set (reg:SI 400)
        (const_int 0 [0])) src/gui.c:608 -1
     (nil))

(insn 537 536 538 (parallel [
            (set (reg:SI 400)
                (minus:SI (reg:SI 400)
                    (reg:SI 399)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:608 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 399)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 538 537 539 (parallel [
            (set (reg:SI 401)
                (ashift:SI (reg:SI 400)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:608 -1
     (nil))

(insn 539 538 540 (set (reg:SI 400)
        (reg:SI 401)) src/gui.c:608 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 399)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 540 539 0 (set (reg:SI 220 [ D.6145 ])
        (reg:SI 400)) src/gui.c:608 -1
     (nil))

;; D.6146_215 = D.6145_214 + pos_dest_x_65;

(insn 541 540 0 (parallel [
            (set (reg:SI 221 [ D.6146 ])
                (plus:SI (reg:SI 220 [ D.6145 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:608 -1
     (nil))

;; if (D.6144_213 > D.6146_215)

(insn 542 541 543 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 219 [ D.6144 ])
            (reg:SI 221 [ D.6146 ]))) src/gui.c:608 -1
     (nil))

(jump_insn 543 542 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:608 -1
     (nil))

;; Generating RTL for gimple basic block 56

;; depassement_216 = 1;

(insn 545 544 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:609 -1
     (nil))

;; Generating RTL for gimple basic block 57

;; 

(code_label 546 545 547 105 "" [0 uses])

(note 547 546 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 58

;; <L63>:

(code_label 550 549 551 97 "" [0 uses])

(note 551 550 0 NOTE_INSN_BASIC_BLOCK)

;; D.6149_217 = new_pos.x;

(insn 552 551 0 (set (reg:HI 222 [ D.6149 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:612 -1
     (nil))

;; D.6150_218 = (int) D.6149_217;

(insn 553 552 0 (set (reg:SI 223 [ D.6150 ])
        (sign_extend:SI (reg:HI 222 [ D.6149 ]))) src/gui.c:612 -1
     (nil))

;; D.6151_219 = pas_5 * -2;

(insn 554 553 555 (set (reg:SI 402)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:612 -1
     (nil))

(insn 555 554 556 (set (reg:SI 403)
        (const_int 0 [0])) src/gui.c:612 -1
     (nil))

(insn 556 555 557 (parallel [
            (set (reg:SI 403)
                (minus:SI (reg:SI 403)
                    (reg:SI 402)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:612 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 402)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 557 556 558 (parallel [
            (set (reg:SI 404)
                (ashift:SI (reg:SI 403)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:612 -1
     (nil))

(insn 558 557 559 (set (reg:SI 403)
        (reg:SI 404)) src/gui.c:612 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 402)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 559 558 0 (set (reg:SI 224 [ D.6151 ])
        (reg:SI 403)) src/gui.c:612 -1
     (nil))

;; D.6152_220 = D.6151_219 + pos_dest_x_65;

(insn 560 559 0 (parallel [
            (set (reg:SI 225 [ D.6152 ])
                (plus:SI (reg:SI 224 [ D.6151 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:612 -1
     (nil))

;; if (D.6150_218 < D.6152_220)

(insn 561 560 562 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 223 [ D.6150 ])
            (reg:SI 225 [ D.6152 ]))) src/gui.c:612 -1
     (nil))

(jump_insn 562 561 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:612 -1
     (nil))

;; Generating RTL for gimple basic block 59

;; depassement_221 = 1;

(insn 564 563 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:613 -1
     (nil))

;; Generating RTL for gimple basic block 60

;; 

(code_label 565 564 566 106 "" [0 uses])

(note 566 565 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 61

;; <L66>:

(code_label 569 568 570 98 "" [0 uses])

(note 570 569 0 NOTE_INSN_BASIC_BLOCK)

;; D.6155_222 = new_pos.x;

(insn 571 570 0 (set (reg:HI 226 [ D.6155 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:616 -1
     (nil))

;; D.6156_223 = (int) D.6155_222;

(insn 572 571 0 (set (reg:SI 227 [ D.6156 ])
        (sign_extend:SI (reg:HI 226 [ D.6155 ]))) src/gui.c:616 -1
     (nil))

;; D.6157_224 = pas_5 * -2;

(insn 573 572 574 (set (reg:SI 405)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:616 -1
     (nil))

(insn 574 573 575 (set (reg:SI 406)
        (const_int 0 [0])) src/gui.c:616 -1
     (nil))

(insn 575 574 576 (parallel [
            (set (reg:SI 406)
                (minus:SI (reg:SI 406)
                    (reg:SI 405)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:616 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 405)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 576 575 577 (parallel [
            (set (reg:SI 407)
                (ashift:SI (reg:SI 406)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:616 -1
     (nil))

(insn 577 576 578 (set (reg:SI 406)
        (reg:SI 407)) src/gui.c:616 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 405)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 578 577 0 (set (reg:SI 228 [ D.6157 ])
        (reg:SI 406)) src/gui.c:616 -1
     (nil))

;; D.6158_225 = D.6157_224 + pos_dest_x_65;

(insn 579 578 0 (parallel [
            (set (reg:SI 229 [ D.6158 ])
                (plus:SI (reg:SI 228 [ D.6157 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:616 -1
     (nil))

;; if (D.6156_223 < D.6158_225)

(insn 580 579 581 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 227 [ D.6156 ])
            (reg:SI 229 [ D.6158 ]))) src/gui.c:616 -1
     (nil))

(jump_insn 581 580 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:616 -1
     (nil))

;; Generating RTL for gimple basic block 62

;; depassement_226 = 1;

(insn 583 582 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:617 -1
     (nil))

;; Generating RTL for gimple basic block 63

;; 

(code_label 584 583 585 107 "" [0 uses])

(note 585 584 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 64

;; <L69>:

(code_label 588 587 589 90 "" [0 uses])

(note 589 588 0 NOTE_INSN_BASIC_BLOCK)

;; depassement_227 = 1;

(insn 590 589 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:620 -1
     (nil))

;; Generating RTL for gimple basic block 65

;; 

(code_label 591 590 592 89 "" [0 uses])

(note 592 591 0 NOTE_INSN_BASIC_BLOCK)

;; if (depassement_17 == 0)

(insn 594 592 595 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:578 -1
     (nil))

(jump_insn 595 594 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 593)
            (pc))) src/gui.c:578 -1
     (nil))

;; Generating RTL for gimple basic block 66

;; D.6163_228 = move_18(D)->dest_point;

(insn 597 596 598 (set (reg/f:SI 408)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 598 597 0 (set (reg:SI 230 [ D.6163 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 408)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:624 -1
     (nil))

;; D.6164_229 = D.6163_228 + 4294967295;

(insn 599 598 0 (parallel [
            (set (reg:SI 231 [ D.6164 ])
                (plus:SI (reg:SI 230 [ D.6163 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:624 -1
     (nil))

;; D.6165_230 = gameState_27(D)->zones[D.6164_229].nb_checkers;

(insn 600 599 601 (set (reg/f:SI 409)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 601 600 0 (set (reg:SI 232 [ D.6165 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 231 [ D.6164 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 409))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6164_229].nb_checkers+0 S4 A32])) src/gui.c:624 -1
     (nil))

;; if (D.6165_230 == 1)

(insn 602 601 603 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 232 [ D.6165 ])
            (const_int 1 [0x1]))) src/gui.c:624 -1
     (nil))

(jump_insn 603 602 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:624 -1
     (nil))

;; Generating RTL for gimple basic block 67

;; D.6167_231 = move_18(D)->src_point;

(insn 605 604 606 (set (reg/f:SI 410)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 606 605 0 (set (reg:SI 233 [ D.6167 ])
        (mem/s/j:SI (reg/f:SI 410) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:624 -1
     (nil))

;; D.6168_232 = D.6167_231 + 4294967295;

(insn 607 606 0 (parallel [
            (set (reg:SI 234 [ D.6168 ])
                (plus:SI (reg:SI 233 [ D.6167 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:624 -1
     (nil))

;; D.6169_233 = gameState_27(D)->zones[D.6168_232].player;

(insn 608 607 609 (set (reg/f:SI 411)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 609 608 0 (set (reg:SI 235 [ D.6169 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 234 [ D.6168 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 411)) [0 gameState_27(D)->zones[D.6168_232].player+0 S4 A32])) src/gui.c:624 -1
     (nil))

;; D.6170_234 = move_18(D)->dest_point;

(insn 610 609 611 (set (reg/f:SI 412)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 611 610 0 (set (reg:SI 236 [ D.6170 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 412)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:624 -1
     (nil))

;; D.6171_235 = D.6170_234 + 4294967295;

(insn 612 611 0 (parallel [
            (set (reg:SI 237 [ D.6171 ])
                (plus:SI (reg:SI 236 [ D.6170 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:624 -1
     (nil))

;; D.6172_236 = gameState_27(D)->zones[D.6171_235].player;

(insn 613 612 614 (set (reg/f:SI 413)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 614 613 0 (set (reg:SI 238 [ D.6172 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 237 [ D.6171 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 413)) [0 gameState_27(D)->zones[D.6171_235].player+0 S4 A32])) src/gui.c:624 -1
     (nil))

;; if (D.6169_233 != D.6172_236)

(insn 615 614 616 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 235 [ D.6169 ])
            (reg:SI 238 [ D.6172 ]))) src/gui.c:624 -1
     (nil))

(jump_insn 616 615 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:624 -1
     (nil))

;; Generating RTL for gimple basic block 68

;; D.6176_237 = move_18(D)->src_point;

(insn 618 617 619 (set (reg/f:SI 414)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:626 -1
     (nil))

(insn 619 618 0 (set (reg:SI 239 [ D.6176 ])
        (mem/s/j:SI (reg/f:SI 414) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:626 -1
     (nil))

;; D.6177_238 = gameState_27(D)->zones[D.6176_237].player;

(insn 620 619 621 (set (reg/f:SI 415)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:626 -1
     (nil))

(insn 621 620 0 (set (reg:SI 240 [ D.6177 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 239 [ D.6176 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 415)) [0 gameState_27(D)->zones[D.6176_237].player+0 S4 A32])) src/gui.c:626 -1
     (nil))

;; if (D.6177_238 == 0)

(insn 622 621 623 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 240 [ D.6177 ])
            (const_int 0 [0]))) src/gui.c:626 -1
     (nil))

(jump_insn 623 622 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:626 -1
     (nil))

;; Generating RTL for gimple basic block 69

;; D.6179_239 = move_18(D)->dest_point;

(insn 625 624 626 (set (reg/f:SI 416)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:626 -1
     (nil))

(insn 626 625 0 (set (reg:SI 241 [ D.6179 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 416)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:626 -1
     (nil))

;; D.6180_240 = gameState_27(D)->zones[D.6179_239].player;

(insn 627 626 628 (set (reg/f:SI 417)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:626 -1
     (nil))

(insn 628 627 0 (set (reg:SI 242 [ D.6180 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 241 [ D.6179 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 417)) [0 gameState_27(D)->zones[D.6179_239].player+0 S4 A32])) src/gui.c:626 -1
     (nil))

;; if (D.6180_240 == 1)

(insn 629 628 630 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 242 [ D.6180 ])
            (const_int 1 [0x1]))) src/gui.c:626 -1
     (nil))

(jump_insn 630 629 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:626 -1
     (nil))

;; Generating RTL for gimple basic block 70

;; D.6182_241 = gameState_27(D)->zones[26].nb_checkers;

(insn 632 631 633 (set (reg/f:SI 418)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:628 -1
     (nil))

(insn 633 632 0 (set (reg:SI 243 [ D.6182 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 418)
                (const_int 212 [0xd4])) [0 gameState_27(D)->zones[26].nb_checkers+0 S4 A32])) src/gui.c:628 -1
     (nil))

;; D.6183_242 = D.6182_241 + 1;

(insn 634 633 0 (parallel [
            (set (reg:SI 244 [ D.6183 ])
                (plus:SI (reg:SI 243 [ D.6182 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:628 -1
     (nil))

;; gameState_27(D)->zones[26].nb_checkers = D.6183_242;

(insn 635 634 636 (set (reg/f:SI 419)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:628 -1
     (nil))

(insn 636 635 0 (set (mem/s/j:SI (plus:SI (reg/f:SI 419)
                (const_int 212 [0xd4])) [0 gameState_27(D)->zones[26].nb_checkers+0 S4 A32])
        (reg:SI 244 [ D.6183 ])) src/gui.c:628 -1
     (nil))

;; D.6184_243 = move_18(D)->dest_point;

(insn 637 636 638 (set (reg/f:SI 420)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:629 -1
     (nil))

(insn 638 637 0 (set (reg:SI 245 [ D.6184 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 420)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:629 -1
     (nil))

;; D.6185_244 = D.6184_243 + 4294967295;

(insn 639 638 0 (parallel [
            (set (reg:SI 246 [ D.6185 ])
                (plus:SI (reg:SI 245 [ D.6184 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:629 -1
     (nil))

;; D.6186_245 = gameState_27(D)->zones[D.6185_244].player;

(insn 640 639 641 (set (reg/f:SI 421)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:629 -1
     (nil))

(insn 641 640 0 (set (reg:SI 247 [ D.6186 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 246 [ D.6185 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 421)) [0 gameState_27(D)->zones[D.6185_244].player+0 S4 A32])) src/gui.c:629 -1
     (nil))

;; gameState_27(D)->zones[26].player = D.6186_245;

(insn 642 641 643 (set (reg/f:SI 422)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:629 -1
     (nil))

(insn 643 642 0 (set (mem/s/j:SI (plus:SI (reg/f:SI 422)
                (const_int 208 [0xd0])) [0 gameState_27(D)->zones[26].player+0 S4 A32])
        (reg:SI 247 [ D.6186 ])) src/gui.c:629 -1
     (nil))

;; D.6187_246 = move_18(D)->dest_point;

(insn 644 643 645 (set (reg/f:SI 423)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:630 -1
     (nil))

(insn 645 644 0 (set (reg:SI 248 [ D.6187 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 423)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:630 -1
     (nil))

;; D.6188_247 = D.6187_246 + 4294967295;

(insn 646 645 0 (parallel [
            (set (reg:SI 249 [ D.6188 ])
                (plus:SI (reg:SI 248 [ D.6187 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:630 -1
     (nil))

;; D.6189_248 = gameState_27(D)->zones[D.6188_247].nb_checkers;

(insn 647 646 648 (set (reg/f:SI 424)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:630 -1
     (nil))

(insn 648 647 0 (set (reg:SI 250 [ D.6189 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 249 [ D.6188 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 424))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6188_247].nb_checkers+0 S4 A32])) src/gui.c:630 -1
     (nil))

;; D.6190_249 = move_18(D)->dest_point;

(insn 649 648 650 (set (reg/f:SI 425)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:631 -1
     (nil))

(insn 650 649 0 (set (reg:SI 251 [ D.6190 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 425)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:631 -1
     (nil))

;; D.6191_250 = D.6190_249 + 4294967295;

(insn 651 650 0 (parallel [
            (set (reg:SI 252 [ D.6191 ])
                (plus:SI (reg:SI 251 [ D.6190 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:631 -1
     (nil))

;; D.6192_251 = move_18(D)->src_point;

(insn 652 651 653 (set (reg/f:SI 426)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:631 -1
     (nil))

(insn 653 652 0 (set (reg:SI 253 [ D.6192 ])
        (mem/s/j:SI (reg/f:SI 426) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:631 -1
     (nil))

;; D.6193_252 = D.6192_251 + 4294967295;

(insn 654 653 0 (parallel [
            (set (reg:SI 254 [ D.6193 ])
                (plus:SI (reg:SI 253 [ D.6192 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:631 -1
     (nil))

;; D.6194_253 = gameState_27(D)->zones[D.6193_252].player;

(insn 655 654 656 (set (reg/f:SI 427)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:631 -1
     (nil))

(insn 656 655 0 (set (reg:SI 255 [ D.6194 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 254 [ D.6193 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 427)) [0 gameState_27(D)->zones[D.6193_252].player+0 S4 A32])) src/gui.c:631 -1
     (nil))

;; gameState_27(D)->zones[D.6191_250].player = D.6194_253;

(insn 657 656 658 (set (reg/f:SI 428)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:631 -1
     (nil))

(insn 658 657 0 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 252 [ D.6191 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 428)) [0 gameState_27(D)->zones[D.6191_250].player+0 S4 A32])
        (reg:SI 255 [ D.6194 ])) src/gui.c:631 -1
     (nil))

;; Generating RTL for gimple basic block 71

;; 

(code_label 661 660 662 110 "" [0 uses])

(note 662 661 0 NOTE_INSN_BASIC_BLOCK)

;; D.6195_254 = gameState_27(D)->zones[24].nb_checkers;

(insn 663 662 664 (set (reg/f:SI 429)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:635 -1
     (nil))

(insn 664 663 0 (set (reg:SI 256 [ D.6195 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 429)
                (const_int 196 [0xc4])) [0 gameState_27(D)->zones[24].nb_checkers+0 S4 A32])) src/gui.c:635 -1
     (nil))

;; D.6196_255 = D.6195_254 + 1;

(insn 665 664 0 (parallel [
            (set (reg:SI 257 [ D.6196 ])
                (plus:SI (reg:SI 256 [ D.6195 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:635 -1
     (nil))

;; gameState_27(D)->zones[24].nb_checkers = D.6196_255;

(insn 666 665 667 (set (reg/f:SI 430)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:635 -1
     (nil))

(insn 667 666 0 (set (mem/s/j:SI (plus:SI (reg/f:SI 430)
                (const_int 196 [0xc4])) [0 gameState_27(D)->zones[24].nb_checkers+0 S4 A32])
        (reg:SI 257 [ D.6196 ])) src/gui.c:635 -1
     (nil))

;; D.6197_256 = move_18(D)->dest_point;

(insn 668 667 669 (set (reg/f:SI 431)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:636 -1
     (nil))

(insn 669 668 0 (set (reg:SI 258 [ D.6197 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 431)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:636 -1
     (nil))

;; D.6198_257 = D.6197_256 + 4294967295;

(insn 670 669 0 (parallel [
            (set (reg:SI 259 [ D.6198 ])
                (plus:SI (reg:SI 258 [ D.6197 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:636 -1
     (nil))

;; D.6199_258 = gameState_27(D)->zones[D.6198_257].player;

(insn 671 670 672 (set (reg/f:SI 432)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:636 -1
     (nil))

(insn 672 671 0 (set (reg:SI 260 [ D.6199 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 259 [ D.6198 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 432)) [0 gameState_27(D)->zones[D.6198_257].player+0 S4 A32])) src/gui.c:636 -1
     (nil))

;; gameState_27(D)->zones[24].player = D.6199_258;

(insn 673 672 674 (set (reg/f:SI 433)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:636 -1
     (nil))

(insn 674 673 0 (set (mem/s/j:SI (plus:SI (reg/f:SI 433)
                (const_int 192 [0xc0])) [0 gameState_27(D)->zones[24].player+0 S4 A32])
        (reg:SI 260 [ D.6199 ])) src/gui.c:636 -1
     (nil))

;; D.6200_259 = move_18(D)->dest_point;

(insn 675 674 676 (set (reg/f:SI 434)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:637 -1
     (nil))

(insn 676 675 0 (set (reg:SI 261 [ D.6200 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 434)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:637 -1
     (nil))

;; D.6201_260 = D.6200_259 + 4294967295;

(insn 677 676 0 (parallel [
            (set (reg:SI 262 [ D.6201 ])
                (plus:SI (reg:SI 261 [ D.6200 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:637 -1
     (nil))

;; D.6202_261 = gameState_27(D)->zones[D.6201_260].nb_checkers;

(insn 678 677 679 (set (reg/f:SI 435)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:637 -1
     (nil))

(insn 679 678 0 (set (reg:SI 263 [ D.6202 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 262 [ D.6201 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 435))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6201_260].nb_checkers+0 S4 A32])) src/gui.c:637 -1
     (nil))

;; D.6203_262 = move_18(D)->dest_point;

(insn 680 679 681 (set (reg/f:SI 436)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:638 -1
     (nil))

(insn 681 680 0 (set (reg:SI 264 [ D.6203 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 436)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:638 -1
     (nil))

;; D.6204_263 = D.6203_262 + 4294967295;

(insn 682 681 0 (parallel [
            (set (reg:SI 265 [ D.6204 ])
                (plus:SI (reg:SI 264 [ D.6203 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:638 -1
     (nil))

;; D.6205_264 = move_18(D)->src_point;

(insn 683 682 684 (set (reg/f:SI 437)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:638 -1
     (nil))

(insn 684 683 0 (set (reg:SI 266 [ D.6205 ])
        (mem/s/j:SI (reg/f:SI 437) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:638 -1
     (nil))

;; D.6206_265 = D.6205_264 + 4294967295;

(insn 685 684 0 (parallel [
            (set (reg:SI 267 [ D.6206 ])
                (plus:SI (reg:SI 266 [ D.6205 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:638 -1
     (nil))

;; D.6207_266 = gameState_27(D)->zones[D.6206_265].player;

(insn 686 685 687 (set (reg/f:SI 438)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:638 -1
     (nil))

(insn 687 686 0 (set (reg:SI 268 [ D.6207 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 267 [ D.6206 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 438)) [0 gameState_27(D)->zones[D.6206_265].player+0 S4 A32])) src/gui.c:638 -1
     (nil))

;; gameState_27(D)->zones[D.6204_263].player = D.6207_266;

(insn 688 687 689 (set (reg/f:SI 439)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:638 -1
     (nil))

(insn 689 688 0 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 265 [ D.6204 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 439)) [0 gameState_27(D)->zones[D.6204_263].player+0 S4 A32])
        (reg:SI 268 [ D.6207 ])) src/gui.c:638 -1
     (nil))

;; Generating RTL for gimple basic block 72

;; 

(code_label 690 689 691 111 "" [0 uses])

(note 691 690 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 73

;; 

(code_label 694 693 695 109 "" [0 uses])

(note 695 694 0 NOTE_INSN_BASIC_BLOCK)

;; D.6208_267 = move_18(D)->dest_point;

(insn 696 695 697 (set (reg/f:SI 440)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:643 -1
     (nil))

(insn 697 696 0 (set (reg:SI 269 [ D.6208 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 440)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:643 -1
     (nil))

;; D.6209_268 = D.6208_267 + 4294967295;

(insn 698 697 0 (parallel [
            (set (reg:SI 270 [ D.6209 ])
                (plus:SI (reg:SI 269 [ D.6208 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:643 -1
     (nil))

;; D.6210_269 = gameState_27(D)->zones[D.6209_268].nb_checkers;

(insn 699 698 700 (set (reg/f:SI 441)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:643 -1
     (nil))

(insn 700 699 0 (set (reg:SI 271 [ D.6210 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 270 [ D.6209 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 441))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6209_268].nb_checkers+0 S4 A32])) src/gui.c:643 -1
     (nil))

;; D.6211_270 = D.6210_269 + 1;

(insn 701 700 0 (parallel [
            (set (reg:SI 272 [ D.6211 ])
                (plus:SI (reg:SI 271 [ D.6210 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:643 -1
     (nil))

;; gameState_27(D)->zones[D.6209_268].nb_checkers = D.6211_270;

(insn 702 701 703 (set (reg/f:SI 442)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:643 -1
     (nil))

(insn 703 702 0 (set (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 270 [ D.6209 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 442))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6209_268].nb_checkers+0 S4 A32])
        (reg:SI 272 [ D.6211 ])) src/gui.c:643 -1
     (nil))

;; D.6212_271 = move_18(D)->dest_point;

(insn 704 703 705 (set (reg/f:SI 443)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:644 -1
     (nil))

(insn 705 704 0 (set (reg:SI 273 [ D.6212 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 443)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:644 -1
     (nil))

;; D.6213_272 = D.6212_271 + 4294967295;

(insn 706 705 0 (parallel [
            (set (reg:SI 274 [ D.6213 ])
                (plus:SI (reg:SI 273 [ D.6212 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:644 -1
     (nil))

;; D.6214_273 = move_18(D)->src_point;

(insn 707 706 708 (set (reg/f:SI 444)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:644 -1
     (nil))

(insn 708 707 0 (set (reg:SI 275 [ D.6214 ])
        (mem/s/j:SI (reg/f:SI 444) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:644 -1
     (nil))

;; D.6215_274 = D.6214_273 + 4294967295;

(insn 709 708 0 (parallel [
            (set (reg:SI 276 [ D.6215 ])
                (plus:SI (reg:SI 275 [ D.6214 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:644 -1
     (nil))

;; D.6216_275 = gameState_27(D)->zones[D.6215_274].player;

(insn 710 709 711 (set (reg/f:SI 445)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:644 -1
     (nil))

(insn 711 710 0 (set (reg:SI 277 [ D.6216 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 276 [ D.6215 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 445)) [0 gameState_27(D)->zones[D.6215_274].player+0 S4 A32])) src/gui.c:644 -1
     (nil))

;; gameState_27(D)->zones[D.6213_272].player = D.6216_275;

(insn 712 711 713 (set (reg/f:SI 446)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:644 -1
     (nil))

(insn 713 712 0 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 274 [ D.6213 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 446)) [0 gameState_27(D)->zones[D.6213_272].player+0 S4 A32])
        (reg:SI 277 [ D.6216 ])) src/gui.c:644 -1
     (nil))

;; Generating RTL for gimple basic block 74

;; 

(code_label 714 713 715 112 "" [0 uses])

(note 715 714 0 NOTE_INSN_BASIC_BLOCK)

;; Display_RefreshGameBoard (display_21(D), gameState_27(D), game_181(D));

(insn 716 715 717 (set (reg/f:SI 447)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 game+0 S4 A32])) src/gui.c:646 -1
     (nil))

(insn 717 716 718 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 447)) src/gui.c:646 -1
     (nil))

(insn 718 717 719 (set (reg/f:SI 448)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:646 -1
     (nil))

(insn 719 718 720 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 448)) src/gui.c:646 -1
     (nil))

(insn 720 719 721 (set (reg/f:SI 449)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:646 -1
     (nil))

(insn 721 720 722 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 449)) src/gui.c:646 -1
     (nil))

(call_insn 722 721 0 (call (mem:QI (symbol_ref:SI ("Display_RefreshGameBoard") [flags 0x3]  <function_decl 0x4081a780 Display_RefreshGameBoard>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:646 -1
     (nil)
    (nil))


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (reg/f:SI 278)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:490 -1
     (nil))

(insn 6 5 7 3 (set (reg:SI 59 [ D.5930 ])
        (mem/s/j:SI (reg/f:SI 278) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:490 -1
     (nil))

(insn 7 6 8 3 (parallel [
            (set (reg:SI 60 [ D.5931 ])
                (plus:SI (reg:SI 59 [ D.5930 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:490 -1
     (nil))

(insn 8 7 9 3 (set (reg/f:SI 279)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:490 -1
     (nil))

(insn 9 8 10 3 (parallel [
            (set (reg:SI 280)
                (plus:SI (reg:SI 60 [ D.5931 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:490 -1
     (nil))

(insn 10 9 11 3 (set (reg:HI 61 [ D.5932 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 280)
                        (const_int 8 [0x8]))
                    (reg/f:SI 279))
                (const_int 4 [0x4])) [0 display_21(D)->positions[D.5931_20].x+0 S2 A32])) src/gui.c:490 -1
     (nil))

(insn 11 10 12 3 (set (reg:SI 281)
        (sign_extend:SI (reg:HI 61 [ D.5932 ]))) src/gui.c:490 -1
     (nil))

(insn 12 11 13 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pos_src_x+0 S4 A32])
        (reg:SI 281)) src/gui.c:490 -1
     (nil))

(insn 13 12 14 3 (set (reg/f:SI 282)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:492 -1
     (nil))

(insn 14 13 15 3 (set (reg:SI 62 [ D.5933 ])
        (mem/s/j:SI (reg/f:SI 282) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:492 -1
     (nil))

(insn 15 14 16 3 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 62 [ D.5933 ])
            (const_int 12 [0xc]))) src/gui.c:492 -1
     (nil))

(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) src/gui.c:492 -1
     (nil)
 -> 61)
;; End of basic block 3 -> ( 4 7)

;; Succ edge  4 (fallthru)
;; Succ edge  7

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 (set (reg/f:SI 283)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:494 -1
     (nil))

(insn 19 18 20 4 (set (reg:SI 63 [ D.5936 ])
        (mem/s/j:SI (reg/f:SI 283) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:494 -1
     (nil))

(insn 20 19 21 4 (parallel [
            (set (reg:SI 64 [ D.5937 ])
                (plus:SI (reg:SI 63 [ D.5936 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:494 -1
     (nil))

(insn 21 20 22 4 (set (reg/f:SI 284)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:494 -1
     (nil))

(insn 22 21 23 4 (set (reg:SI 65 [ D.5938 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 64 [ D.5937 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 284))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.5937_26].nb_checkers+0 S4 A32])) src/gui.c:494 -1
     (nil))

(insn 23 22 24 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 65 [ D.5938 ])
            (const_int 6 [0x6]))) src/gui.c:494 -1
     (nil))

(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) src/gui.c:494 -1
     (nil)
 -> 37)
;; End of basic block 4 -> ( 5 6)

;; Succ edge  5 (fallthru)
;; Succ edge  6

;; Start of basic block ( 4) -> 5
;; Pred edge  4 (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 (set (reg/f:SI 285)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:495 -1
     (nil))

(insn 27 26 28 5 (set (reg:SI 66 [ D.5941 ])
        (mem/s/j:SI (reg/f:SI 285) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:495 -1
     (nil))

(insn 28 27 29 5 (parallel [
            (set (reg:SI 67 [ D.5942 ])
                (plus:SI (reg:SI 66 [ D.5941 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:495 -1
     (nil))

(insn 29 28 30 5 (set (reg/f:SI 286)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:495 -1
     (nil))

(insn 30 29 31 5 (parallel [
            (set (reg:SI 287)
                (plus:SI (reg:SI 67 [ D.5942 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:495 -1
     (nil))

(insn 31 30 32 5 (set (reg:HI 68 [ D.5943 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 287)
                        (const_int 8 [0x8]))
                    (reg/f:SI 286))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.5942_30].y+0 S2 A16])) src/gui.c:495 -1
     (nil))

(insn 32 31 33 5 (set (reg:SI 69 [ D.5944 ])
        (sign_extend:SI (reg:HI 68 [ D.5943 ]))) src/gui.c:495 -1
     (nil))

(insn 33 32 34 5 (parallel [
            (set (reg:SI 288)
                (plus:SI (reg:SI 69 [ D.5944 ])
                    (const_int 120 [0x78])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:495 -1
     (nil))

(insn 34 33 35 5 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 pos_src_y+0 S4 A32])
        (reg:SI 288)) src/gui.c:495 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 69 [ D.5944 ])
            (const_int 120 [0x78]))
        (nil)))

(jump_insn 35 34 36 5 (set (pc)
        (label_ref 104)) src/gui.c:495 -1
     (nil)
 -> 104)
;; End of basic block 5 -> ( 10)

;; Succ edge  10

(barrier 36 35 37)

;; Start of basic block ( 4) -> 6
;; Pred edge  4
(code_label 37 36 38 6 72 "" [1 uses])

(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 6 (set (reg/f:SI 289)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:497 -1
     (nil))

(insn 40 39 41 6 (set (reg:SI 70 [ D.5946 ])
        (mem/s/j:SI (reg/f:SI 289) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:497 -1
     (nil))

(insn 41 40 42 6 (parallel [
            (set (reg:SI 71 [ D.5947 ])
                (plus:SI (reg:SI 70 [ D.5946 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:497 -1
     (nil))

(insn 42 41 43 6 (set (reg/f:SI 290)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:497 -1
     (nil))

(insn 43 42 44 6 (parallel [
            (set (reg:SI 291)
                (plus:SI (reg:SI 71 [ D.5947 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:497 -1
     (nil))

(insn 44 43 45 6 (set (reg:HI 72 [ D.5948 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 291)
                        (const_int 8 [0x8]))
                    (reg/f:SI 290))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.5947_35].y+0 S2 A16])) src/gui.c:497 -1
     (nil))

(insn 45 44 46 6 (set (reg:SI 73 [ D.5949 ])
        (sign_extend:SI (reg:HI 72 [ D.5948 ]))) src/gui.c:497 -1
     (nil))

(insn 46 45 47 6 (set (reg/f:SI 292)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:497 -1
     (nil))

(insn 47 46 48 6 (set (reg:SI 74 [ D.5950 ])
        (mem/s/j:SI (reg/f:SI 292) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:497 -1
     (nil))

(insn 48 47 49 6 (parallel [
            (set (reg:SI 75 [ D.5951 ])
                (plus:SI (reg:SI 74 [ D.5950 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:497 -1
     (nil))

(insn 49 48 50 6 (set (reg/f:SI 293)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:497 -1
     (nil))

(insn 50 49 51 6 (set (reg:SI 76 [ D.5952 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 75 [ D.5951 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 293))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.5951_39].nb_checkers+0 S4 A32])) src/gui.c:497 -1
     (nil))

(insn 51 50 52 6 (set (reg:SI 294)
        (reg:SI 76 [ D.5952 ])) src/gui.c:497 -1
     (nil))

(insn 52 51 53 6 (parallel [
            (set (reg:SI 294)
                (ashift:SI (reg:SI 294)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:497 -1
     (nil))

(insn 53 52 54 6 (parallel [
            (set (reg:SI 294)
                (plus:SI (reg:SI 294)
                    (reg:SI 76 [ D.5952 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:497 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 76 [ D.5952 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 54 53 55 6 (parallel [
            (set (reg:SI 295)
                (ashift:SI (reg:SI 294)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:497 -1
     (nil))

(insn 55 54 56 6 (set (reg:SI 294)
        (reg:SI 295)) src/gui.c:497 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 76 [ D.5952 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 56 55 57 6 (set (reg:SI 77 [ D.5953 ])
        (reg:SI 294)) src/gui.c:497 -1
     (nil))

(insn 57 56 58 6 (parallel [
            (set (reg:SI 78 [ D.5954 ])
                (plus:SI (reg:SI 73 [ D.5949 ])
                    (reg:SI 77 [ D.5953 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:497 -1
     (nil))

(insn 58 57 59 6 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 pos_src_y+0 S4 A32])
        (reg:SI 78 [ D.5954 ])) src/gui.c:497 -1
     (nil))

(jump_insn 59 58 60 6 (set (pc)
        (label_ref 104)) src/gui.c:497 -1
     (nil)
 -> 104)
;; End of basic block 6 -> ( 10)

;; Succ edge  10

(barrier 60 59 61)

;; Start of basic block ( 3) -> 7
;; Pred edge  3
(code_label 61 60 62 7 71 "" [1 uses])

(note 62 61 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 64 7 (set (reg/f:SI 296)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:501 -1
     (nil))

(insn 64 63 65 7 (set (reg:SI 79 [ D.5956 ])
        (mem/s/j:SI (reg/f:SI 296) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:501 -1
     (nil))

(insn 65 64 66 7 (parallel [
            (set (reg:SI 80 [ D.5957 ])
                (plus:SI (reg:SI 79 [ D.5956 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:501 -1
     (nil))

(insn 66 65 67 7 (set (reg/f:SI 297)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:501 -1
     (nil))

(insn 67 66 68 7 (set (reg:SI 81 [ D.5958 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 80 [ D.5957 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 297))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.5957_45].nb_checkers+0 S4 A32])) src/gui.c:501 -1
     (nil))

(insn 68 67 69 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 81 [ D.5958 ])
            (const_int 6 [0x6]))) src/gui.c:501 -1
     (nil))

(jump_insn 69 68 70 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) src/gui.c:501 -1
     (nil)
 -> 82)
;; End of basic block 7 -> ( 8 9)

;; Succ edge  8 (fallthru)
;; Succ edge  9

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(note 70 69 71 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 8 (set (reg/f:SI 298)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:502 -1
     (nil))

(insn 72 71 73 8 (set (reg:SI 82 [ D.5961 ])
        (mem/s/j:SI (reg/f:SI 298) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:502 -1
     (nil))

(insn 73 72 74 8 (parallel [
            (set (reg:SI 83 [ D.5962 ])
                (plus:SI (reg:SI 82 [ D.5961 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:502 -1
     (nil))

(insn 74 73 75 8 (set (reg/f:SI 299)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:502 -1
     (nil))

(insn 75 74 76 8 (parallel [
            (set (reg:SI 300)
                (plus:SI (reg:SI 83 [ D.5962 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:502 -1
     (nil))

(insn 76 75 77 8 (set (reg:HI 84 [ D.5963 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 300)
                        (const_int 8 [0x8]))
                    (reg/f:SI 299))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.5962_48].y+0 S2 A16])) src/gui.c:502 -1
     (nil))

(insn 77 76 78 8 (set (reg:SI 85 [ D.5964 ])
        (sign_extend:SI (reg:HI 84 [ D.5963 ]))) src/gui.c:502 -1
     (nil))

(insn 78 77 79 8 (parallel [
            (set (reg:SI 301)
                (plus:SI (reg:SI 85 [ D.5964 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:502 -1
     (nil))

(insn 79 78 80 8 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 pos_src_y+0 S4 A32])
        (reg:SI 301)) src/gui.c:502 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 85 [ D.5964 ])
            (const_int -120 [0xffffffffffffff88]))
        (nil)))

(jump_insn 80 79 81 8 (set (pc)
        (label_ref 104)) src/gui.c:502 -1
     (nil)
 -> 104)
;; End of basic block 8 -> ( 10)

;; Succ edge  10

(barrier 81 80 82)

;; Start of basic block ( 7) -> 9
;; Pred edge  7
(code_label 82 81 83 9 74 "" [1 uses])

(note 83 82 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 85 9 (set (reg/f:SI 302)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:504 -1
     (nil))

(insn 85 84 86 9 (set (reg:SI 86 [ D.5966 ])
        (mem/s/j:SI (reg/f:SI 302) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:504 -1
     (nil))

(insn 86 85 87 9 (parallel [
            (set (reg:SI 87 [ D.5967 ])
                (plus:SI (reg:SI 86 [ D.5966 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:504 -1
     (nil))

(insn 87 86 88 9 (set (reg/f:SI 303)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:504 -1
     (nil))

(insn 88 87 89 9 (parallel [
            (set (reg:SI 304)
                (plus:SI (reg:SI 87 [ D.5967 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:504 -1
     (nil))

(insn 89 88 90 9 (set (reg:HI 88 [ D.5968 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 304)
                        (const_int 8 [0x8]))
                    (reg/f:SI 303))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.5967_53].y+0 S2 A16])) src/gui.c:504 -1
     (nil))

(insn 90 89 91 9 (set (reg:SI 89 [ D.5969 ])
        (sign_extend:SI (reg:HI 88 [ D.5968 ]))) src/gui.c:504 -1
     (nil))

(insn 91 90 92 9 (set (reg/f:SI 305)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:504 -1
     (nil))

(insn 92 91 93 9 (set (reg:SI 90 [ D.5970 ])
        (mem/s/j:SI (reg/f:SI 305) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:504 -1
     (nil))

(insn 93 92 94 9 (parallel [
            (set (reg:SI 91 [ D.5971 ])
                (plus:SI (reg:SI 90 [ D.5970 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:504 -1
     (nil))

(insn 94 93 95 9 (set (reg/f:SI 306)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:504 -1
     (nil))

(insn 95 94 96 9 (set (reg:SI 92 [ D.5972 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 91 [ D.5971 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 306))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.5971_57].nb_checkers+0 S4 A32])) src/gui.c:504 -1
     (nil))

(insn 96 95 97 9 (set (reg:SI 307)
        (reg:SI 92 [ D.5972 ])) src/gui.c:504 -1
     (nil))

(insn 97 96 98 9 (parallel [
            (set (reg:SI 307)
                (ashift:SI (reg:SI 307)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:504 -1
     (nil))

(insn 98 97 99 9 (parallel [
            (set (reg:SI 307)
                (plus:SI (reg:SI 307)
                    (reg:SI 92 [ D.5972 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:504 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 92 [ D.5972 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 99 98 100 9 (parallel [
            (set (reg:SI 308)
                (ashift:SI (reg:SI 307)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:504 -1
     (nil))

(insn 100 99 101 9 (set (reg:SI 307)
        (reg:SI 308)) src/gui.c:504 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 92 [ D.5972 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 101 100 102 9 (set (reg:SI 93 [ D.5973 ])
        (reg:SI 307)) src/gui.c:504 -1
     (nil))

(insn 102 101 103 9 (parallel [
            (set (reg:SI 94 [ D.5974 ])
                (minus:SI (reg:SI 89 [ D.5969 ])
                    (reg:SI 93 [ D.5973 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:504 -1
     (nil))

(insn 103 102 104 9 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 pos_src_y+0 S4 A32])
        (reg:SI 94 [ D.5974 ])) src/gui.c:504 -1
     (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 (fallthru)

;; Start of basic block ( 6 8 9 5) -> 10
;; Pred edge  6
;; Pred edge  8
;; Pred edge  9 (fallthru)
;; Pred edge  5
(code_label 104 103 105 10 73 "" [3 uses])

(note 105 104 106 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 107 10 (set (reg/f:SI 309)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:507 -1
     (nil))

(insn 107 106 108 10 (set (reg:SI 95 [ D.5975 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 309)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:507 -1
     (nil))

(insn 108 107 109 10 (parallel [
            (set (reg:SI 96 [ D.5976 ])
                (plus:SI (reg:SI 95 [ D.5975 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:507 -1
     (nil))

(insn 109 108 110 10 (set (reg/f:SI 310)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:507 -1
     (nil))

(insn 110 109 111 10 (parallel [
            (set (reg:SI 311)
                (plus:SI (reg:SI 96 [ D.5976 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:507 -1
     (nil))

(insn 111 110 112 10 (set (reg:HI 97 [ D.5977 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 311)
                        (const_int 8 [0x8]))
                    (reg/f:SI 310))
                (const_int 4 [0x4])) [0 display_21(D)->positions[D.5976_63].x+0 S2 A32])) src/gui.c:507 -1
     (nil))

(insn 112 111 113 10 (set (reg:SI 312)
        (sign_extend:SI (reg:HI 97 [ D.5977 ]))) src/gui.c:507 -1
     (nil))

(insn 113 112 114 10 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])
        (reg:SI 312)) src/gui.c:507 -1
     (nil))

(insn 114 113 115 10 (set (reg/f:SI 313)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:509 -1
     (nil))

(insn 115 114 116 10 (set (reg:SI 98 [ D.5978 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 313)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:509 -1
     (nil))

(insn 116 115 117 10 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 98 [ D.5978 ])
            (const_int 12 [0xc]))) src/gui.c:509 -1
     (nil))

(jump_insn 117 116 118 10 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 162)
            (pc))) src/gui.c:509 -1
     (nil)
 -> 162)
;; End of basic block 10 -> ( 11 14)

;; Succ edge  11 (fallthru)
;; Succ edge  14

;; Start of basic block ( 10) -> 11
;; Pred edge  10 (fallthru)
(note 118 117 119 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 120 11 (set (reg/f:SI 314)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:511 -1
     (nil))

(insn 120 119 121 11 (set (reg:SI 99 [ D.5981 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 314)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:511 -1
     (nil))

(insn 121 120 122 11 (parallel [
            (set (reg:SI 100 [ D.5982 ])
                (plus:SI (reg:SI 99 [ D.5981 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:511 -1
     (nil))

(insn 122 121 123 11 (set (reg/f:SI 315)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:511 -1
     (nil))

(insn 123 122 124 11 (set (reg:SI 101 [ D.5983 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 100 [ D.5982 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 315))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.5982_68].nb_checkers+0 S4 A32])) src/gui.c:511 -1
     (nil))

(insn 124 123 125 11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 101 [ D.5983 ])
            (const_int 6 [0x6]))) src/gui.c:511 -1
     (nil))

(jump_insn 125 124 126 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) src/gui.c:511 -1
     (nil)
 -> 138)
;; End of basic block 11 -> ( 12 13)

;; Succ edge  12 (fallthru)
;; Succ edge  13

;; Start of basic block ( 11) -> 12
;; Pred edge  11 (fallthru)
(note 126 125 127 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 127 126 128 12 (set (reg/f:SI 316)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:512 -1
     (nil))

(insn 128 127 129 12 (set (reg:SI 102 [ D.5986 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 316)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:512 -1
     (nil))

(insn 129 128 130 12 (parallel [
            (set (reg:SI 103 [ D.5987 ])
                (plus:SI (reg:SI 102 [ D.5986 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:512 -1
     (nil))

(insn 130 129 131 12 (set (reg/f:SI 317)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:512 -1
     (nil))

(insn 131 130 132 12 (parallel [
            (set (reg:SI 318)
                (plus:SI (reg:SI 103 [ D.5987 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:512 -1
     (nil))

(insn 132 131 133 12 (set (reg:HI 104 [ D.5988 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 318)
                        (const_int 8 [0x8]))
                    (reg/f:SI 317))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.5987_71].y+0 S2 A16])) src/gui.c:512 -1
     (nil))

(insn 133 132 134 12 (set (reg:SI 105 [ D.5989 ])
        (sign_extend:SI (reg:HI 104 [ D.5988 ]))) src/gui.c:512 -1
     (nil))

(insn 134 133 135 12 (parallel [
            (set (reg:SI 319)
                (plus:SI (reg:SI 105 [ D.5989 ])
                    (const_int 120 [0x78])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:512 -1
     (nil))

(insn 135 134 136 12 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pos_dest_y+0 S4 A32])
        (reg:SI 319)) src/gui.c:512 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 105 [ D.5989 ])
            (const_int 120 [0x78]))
        (nil)))

(jump_insn 136 135 137 12 (set (pc)
        (label_ref 205)) src/gui.c:512 -1
     (nil)
 -> 205)
;; End of basic block 12 -> ( 17)

;; Succ edge  17

(barrier 137 136 138)

;; Start of basic block ( 11) -> 13
;; Pred edge  11
(code_label 138 137 139 13 76 "" [1 uses])

(note 139 138 140 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 141 13 (set (reg/f:SI 320)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:514 -1
     (nil))

(insn 141 140 142 13 (set (reg:SI 106 [ D.5991 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 320)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:514 -1
     (nil))

(insn 142 141 143 13 (parallel [
            (set (reg:SI 107 [ D.5992 ])
                (plus:SI (reg:SI 106 [ D.5991 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:514 -1
     (nil))

(insn 143 142 144 13 (set (reg/f:SI 321)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:514 -1
     (nil))

(insn 144 143 145 13 (parallel [
            (set (reg:SI 322)
                (plus:SI (reg:SI 107 [ D.5992 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:514 -1
     (nil))

(insn 145 144 146 13 (set (reg:HI 108 [ D.5993 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 322)
                        (const_int 8 [0x8]))
                    (reg/f:SI 321))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.5992_76].y+0 S2 A16])) src/gui.c:514 -1
     (nil))

(insn 146 145 147 13 (set (reg:SI 109 [ D.5994 ])
        (sign_extend:SI (reg:HI 108 [ D.5993 ]))) src/gui.c:514 -1
     (nil))

(insn 147 146 148 13 (set (reg/f:SI 323)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:514 -1
     (nil))

(insn 148 147 149 13 (set (reg:SI 110 [ D.5995 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 323)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:514 -1
     (nil))

(insn 149 148 150 13 (parallel [
            (set (reg:SI 111 [ D.5996 ])
                (plus:SI (reg:SI 110 [ D.5995 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:514 -1
     (nil))

(insn 150 149 151 13 (set (reg/f:SI 324)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:514 -1
     (nil))

(insn 151 150 152 13 (set (reg:SI 112 [ D.5997 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 111 [ D.5996 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 324))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.5996_80].nb_checkers+0 S4 A32])) src/gui.c:514 -1
     (nil))

(insn 152 151 153 13 (set (reg:SI 325)
        (reg:SI 112 [ D.5997 ])) src/gui.c:514 -1
     (nil))

(insn 153 152 154 13 (parallel [
            (set (reg:SI 325)
                (ashift:SI (reg:SI 325)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:514 -1
     (nil))

(insn 154 153 155 13 (parallel [
            (set (reg:SI 325)
                (plus:SI (reg:SI 325)
                    (reg:SI 112 [ D.5997 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:514 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 112 [ D.5997 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 155 154 156 13 (parallel [
            (set (reg:SI 326)
                (ashift:SI (reg:SI 325)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:514 -1
     (nil))

(insn 156 155 157 13 (set (reg:SI 325)
        (reg:SI 326)) src/gui.c:514 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 112 [ D.5997 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 157 156 158 13 (set (reg:SI 113 [ D.5998 ])
        (reg:SI 325)) src/gui.c:514 -1
     (nil))

(insn 158 157 159 13 (parallel [
            (set (reg:SI 114 [ D.5999 ])
                (plus:SI (reg:SI 109 [ D.5994 ])
                    (reg:SI 113 [ D.5998 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:514 -1
     (nil))

(insn 159 158 160 13 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pos_dest_y+0 S4 A32])
        (reg:SI 114 [ D.5999 ])) src/gui.c:514 -1
     (nil))

(jump_insn 160 159 161 13 (set (pc)
        (label_ref 205)) src/gui.c:514 -1
     (nil)
 -> 205)
;; End of basic block 13 -> ( 17)

;; Succ edge  17

(barrier 161 160 162)

;; Start of basic block ( 10) -> 14
;; Pred edge  10
(code_label 162 161 163 14 75 "" [1 uses])

(note 163 162 164 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 164 163 165 14 (set (reg/f:SI 327)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:518 -1
     (nil))

(insn 165 164 166 14 (set (reg:SI 115 [ D.6001 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 327)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:518 -1
     (nil))

(insn 166 165 167 14 (parallel [
            (set (reg:SI 116 [ D.6002 ])
                (plus:SI (reg:SI 115 [ D.6001 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:518 -1
     (nil))

(insn 167 166 168 14 (set (reg/f:SI 328)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:518 -1
     (nil))

(insn 168 167 169 14 (set (reg:SI 117 [ D.6003 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 116 [ D.6002 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 328))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6002_86].nb_checkers+0 S4 A32])) src/gui.c:518 -1
     (nil))

(insn 169 168 170 14 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 117 [ D.6003 ])
            (const_int 6 [0x6]))) src/gui.c:518 -1
     (nil))

(jump_insn 170 169 171 14 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) src/gui.c:518 -1
     (nil)
 -> 183)
;; End of basic block 14 -> ( 15 16)

;; Succ edge  15 (fallthru)
;; Succ edge  16

;; Start of basic block ( 14) -> 15
;; Pred edge  14 (fallthru)
(note 171 170 172 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 172 171 173 15 (set (reg/f:SI 329)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:519 -1
     (nil))

(insn 173 172 174 15 (set (reg:SI 118 [ D.6006 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 329)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:519 -1
     (nil))

(insn 174 173 175 15 (parallel [
            (set (reg:SI 119 [ D.6007 ])
                (plus:SI (reg:SI 118 [ D.6006 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:519 -1
     (nil))

(insn 175 174 176 15 (set (reg/f:SI 330)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:519 -1
     (nil))

(insn 176 175 177 15 (parallel [
            (set (reg:SI 331)
                (plus:SI (reg:SI 119 [ D.6007 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:519 -1
     (nil))

(insn 177 176 178 15 (set (reg:HI 120 [ D.6008 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 331)
                        (const_int 8 [0x8]))
                    (reg/f:SI 330))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.6007_89].y+0 S2 A16])) src/gui.c:519 -1
     (nil))

(insn 178 177 179 15 (set (reg:SI 121 [ D.6009 ])
        (sign_extend:SI (reg:HI 120 [ D.6008 ]))) src/gui.c:519 -1
     (nil))

(insn 179 178 180 15 (parallel [
            (set (reg:SI 332)
                (plus:SI (reg:SI 121 [ D.6009 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:519 -1
     (nil))

(insn 180 179 181 15 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pos_dest_y+0 S4 A32])
        (reg:SI 332)) src/gui.c:519 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 121 [ D.6009 ])
            (const_int -120 [0xffffffffffffff88]))
        (nil)))

(jump_insn 181 180 182 15 (set (pc)
        (label_ref 205)) src/gui.c:519 -1
     (nil)
 -> 205)
;; End of basic block 15 -> ( 17)

;; Succ edge  17

(barrier 182 181 183)

;; Start of basic block ( 14) -> 16
;; Pred edge  14
(code_label 183 182 184 16 78 "" [1 uses])

(note 184 183 185 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 185 184 186 16 (set (reg/f:SI 333)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:521 -1
     (nil))

(insn 186 185 187 16 (set (reg:SI 122 [ D.6011 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 333)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:521 -1
     (nil))

(insn 187 186 188 16 (parallel [
            (set (reg:SI 123 [ D.6012 ])
                (plus:SI (reg:SI 122 [ D.6011 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:521 -1
     (nil))

(insn 188 187 189 16 (set (reg/f:SI 334)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:521 -1
     (nil))

(insn 189 188 190 16 (parallel [
            (set (reg:SI 335)
                (plus:SI (reg:SI 123 [ D.6012 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:521 -1
     (nil))

(insn 190 189 191 16 (set (reg:HI 124 [ D.6013 ])
        (mem/s/j:HI (plus:SI (plus:SI (mult:SI (reg:SI 335)
                        (const_int 8 [0x8]))
                    (reg/f:SI 334))
                (const_int 6 [0x6])) [0 display_21(D)->positions[D.6012_94].y+0 S2 A16])) src/gui.c:521 -1
     (nil))

(insn 191 190 192 16 (set (reg:SI 125 [ D.6014 ])
        (sign_extend:SI (reg:HI 124 [ D.6013 ]))) src/gui.c:521 -1
     (nil))

(insn 192 191 193 16 (set (reg/f:SI 336)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:521 -1
     (nil))

(insn 193 192 194 16 (set (reg:SI 126 [ D.6015 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 336)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:521 -1
     (nil))

(insn 194 193 195 16 (parallel [
            (set (reg:SI 127 [ D.6016 ])
                (plus:SI (reg:SI 126 [ D.6015 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:521 -1
     (nil))

(insn 195 194 196 16 (set (reg/f:SI 337)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:521 -1
     (nil))

(insn 196 195 197 16 (set (reg:SI 128 [ D.6017 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 127 [ D.6016 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 337))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6016_98].nb_checkers+0 S4 A32])) src/gui.c:521 -1
     (nil))

(insn 197 196 198 16 (set (reg:SI 338)
        (reg:SI 128 [ D.6017 ])) src/gui.c:521 -1
     (nil))

(insn 198 197 199 16 (parallel [
            (set (reg:SI 338)
                (ashift:SI (reg:SI 338)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:521 -1
     (nil))

(insn 199 198 200 16 (parallel [
            (set (reg:SI 338)
                (plus:SI (reg:SI 338)
                    (reg:SI 128 [ D.6017 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:521 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 128 [ D.6017 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 200 199 201 16 (parallel [
            (set (reg:SI 339)
                (ashift:SI (reg:SI 338)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:521 -1
     (nil))

(insn 201 200 202 16 (set (reg:SI 338)
        (reg:SI 339)) src/gui.c:521 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 128 [ D.6017 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 202 201 203 16 (set (reg:SI 129 [ D.6018 ])
        (reg:SI 338)) src/gui.c:521 -1
     (nil))

(insn 203 202 204 16 (parallel [
            (set (reg:SI 130 [ D.6019 ])
                (minus:SI (reg:SI 125 [ D.6014 ])
                    (reg:SI 129 [ D.6018 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:521 -1
     (nil))

(insn 204 203 205 16 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pos_dest_y+0 S4 A32])
        (reg:SI 130 [ D.6019 ])) src/gui.c:521 -1
     (nil))
;; End of basic block 16 -> ( 17)

;; Succ edge  17 (fallthru)

;; Start of basic block ( 13 15 16 12) -> 17
;; Pred edge  13
;; Pred edge  15
;; Pred edge  16 (fallthru)
;; Pred edge  12
(code_label 205 204 206 17 77 "" [3 uses])

(note 206 205 207 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 207 206 208 17 (set (reg:SI 340)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 pos_dest_y+0 S4 A32])) src/gui.c:524 -1
     (nil))

(insn 208 207 209 17 (set (reg:SI 341)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 pos_src_y+0 S4 A32])) src/gui.c:524 -1
     (nil))

(insn 209 208 210 17 (parallel [
            (set (reg:SI 131 [ D.6020 ])
                (minus:SI (reg:SI 341)
                    (reg:SI 340)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:524 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 pos_src_y+0 S4 A32])
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 pos_dest_y+0 S4 A32]))
        (nil)))

(insn 210 209 211 17 (set (reg:DF 132 [ D.6021 ])
        (float:DF (reg:SI 131 [ D.6020 ]))) src/gui.c:524 -1
     (nil))

(insn 211 210 212 17 (set (reg:XF 133 [ D.6022 ])
        (float_extend:XF (reg:DF 132 [ D.6021 ]))) src/gui.c:524 -1
     (nil))

(insn 212 211 213 17 (set (reg:SI 342)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])) src/gui.c:524 -1
     (nil))

(insn 213 212 214 17 (set (reg:SI 343)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pos_src_x+0 S4 A32])) src/gui.c:524 -1
     (nil))

(insn 214 213 215 17 (parallel [
            (set (reg:SI 134 [ D.6023 ])
                (minus:SI (reg:SI 343)
                    (reg:SI 342)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:524 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 pos_src_x+0 S4 A32])
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32]))
        (nil)))

(insn 215 214 216 17 (set (reg:DF 135 [ D.6024 ])
        (float:DF (reg:SI 134 [ D.6023 ]))) src/gui.c:524 -1
     (nil))

(insn 216 215 217 17 (set (reg:XF 136 [ D.6025 ])
        (float_extend:XF (reg:DF 135 [ D.6024 ]))) src/gui.c:524 -1
     (nil))

(insn 217 216 218 17 (set (reg:XF 137 [ D.6026 ])
        (div:XF (reg:XF 133 [ D.6022 ])
            (reg:XF 136 [ D.6025 ]))) src/gui.c:524 -1
     (nil))

(insn 218 217 219 17 (parallel [
            (set (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -56 [0xffffffffffffffc8])) [0 a+0 S8 A64])
                (float_truncate:DF (reg:XF 137 [ D.6026 ])))
            (clobber (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -72 [0xffffffffffffffb8])) [0 S8 A64]))
        ]) src/gui.c:524 -1
     (nil))

(insn 219 218 220 17 (set (reg:DF 138 [ D.6027 ])
        (float:DF (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 pos_dest_y+0 S4 A32]))) src/gui.c:525 -1
     (nil))

(insn 220 219 221 17 (set (reg:XF 139 [ D.6028 ])
        (float_extend:XF (reg:DF 138 [ D.6027 ]))) src/gui.c:525 -1
     (nil))

(insn 221 220 222 17 (set (reg:XF 140 [ D.6029 ])
        (float_extend:XF (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 a+0 S8 A64]))) src/gui.c:525 -1
     (nil))

(insn 222 221 223 17 (set (reg:DF 141 [ D.6030 ])
        (float:DF (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32]))) src/gui.c:525 -1
     (nil))

(insn 223 222 224 17 (set (reg:XF 142 [ D.6031 ])
        (float_extend:XF (reg:DF 141 [ D.6030 ]))) src/gui.c:525 -1
     (nil))

(insn 224 223 225 17 (set (reg:XF 143 [ D.6032 ])
        (mult:XF (reg:XF 140 [ D.6029 ])
            (reg:XF 142 [ D.6031 ]))) src/gui.c:525 -1
     (nil))

(insn 225 224 226 17 (set (reg:XF 144 [ D.6033 ])
        (minus:XF (reg:XF 139 [ D.6028 ])
            (reg:XF 143 [ D.6032 ]))) src/gui.c:525 -1
     (nil))

(insn 226 225 227 17 (parallel [
            (set (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -48 [0xffffffffffffffd0])) [0 b+0 S8 A64])
                (float_truncate:DF (reg:XF 144 [ D.6033 ])))
            (clobber (mem/c:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -72 [0xffffffffffffffb8])) [0 S8 A64]))
        ]) src/gui.c:525 -1
     (nil))

(insn 227 226 228 17 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])
        (const_int 8 [0x8])) src/gui.c:531 -1
     (nil))

(insn 228 227 229 17 (set (reg/f:SI 344)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:534 -1
     (nil))

(insn 229 228 230 17 (set (reg:SI 145 [ D.6036 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 344)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:534 -1
     (nil))

(insn 230 229 231 17 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 145 [ D.6036 ])
            (const_int 12 [0xc]))) src/gui.c:534 -1
     (nil))

(jump_insn 231 230 232 17 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 258)
            (pc))) src/gui.c:534 -1
     (nil)
 -> 258)
;; End of basic block 17 -> ( 18 23)

;; Succ edge  18 (fallthru)
;; Succ edge  23

;; Start of basic block ( 17) -> 18
;; Pred edge  17 (fallthru)
(note 232 231 233 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 233 232 234 18 (set (reg/f:SI 345)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:534 -1
     (nil))

(insn 234 233 235 18 (set (reg:SI 146 [ D.6038 ])
        (mem/s/j:SI (reg/f:SI 345) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:534 -1
     (nil))

(insn 235 234 236 18 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 146 [ D.6038 ])
            (const_int 12 [0xc]))) src/gui.c:534 -1
     (nil))

(jump_insn 236 235 237 18 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 258)
            (pc))) src/gui.c:534 -1
     (nil)
 -> 258)
;; End of basic block 18 -> ( 19 23)

;; Succ edge  19 (fallthru)
;; Succ edge  23

;; Start of basic block ( 18) -> 19
;; Pred edge  18 (fallthru)
(note 237 236 238 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 238 237 239 19 (set (reg/f:SI 346)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:536 -1
     (nil))

(insn 239 238 240 19 (set (reg:SI 147 [ D.6040 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 346)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:536 -1
     (nil))

(insn 240 239 241 19 (parallel [
            (set (reg:SI 148 [ D.6041 ])
                (plus:SI (reg:SI 147 [ D.6040 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:536 -1
     (nil))

(insn 241 240 242 19 (set (reg/f:SI 347)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:536 -1
     (nil))

(insn 242 241 243 19 (set (reg:SI 149 [ D.6042 ])
        (mem/s/j:SI (reg/f:SI 347) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:536 -1
     (nil))

(insn 243 242 244 19 (parallel [
            (set (reg:SI 150 [ D.6043 ])
                (plus:SI (reg:SI 149 [ D.6042 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:536 -1
     (nil))

(insn 244 243 245 19 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 148 [ D.6041 ])
            (reg:SI 150 [ D.6043 ]))) src/gui.c:536 -1
     (nil))

(jump_insn 245 244 246 19 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 250)
            (pc))) src/gui.c:536 -1
     (nil)
 -> 250)
;; End of basic block 19 -> ( 20 21)

;; Succ edge  20 (fallthru)
;; Succ edge  21

;; Start of basic block ( 19) -> 20
;; Pred edge  19 (fallthru)
(note 246 245 247 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 247 246 248 20 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:537 -1
     (nil))

(jump_insn 248 247 249 20 (set (pc)
        (label_ref 254)) src/gui.c:537 -1
     (nil)
 -> 254)
;; End of basic block 20 -> ( 22)

;; Succ edge  22

(barrier 249 248 250)

;; Start of basic block ( 19) -> 21
;; Pred edge  19
(code_label 250 249 251 21 80 "" [1 uses])

(note 251 250 252 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 252 251 253 21 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 2 [0x2])) src/gui.c:540 -1
     (nil))

(insn 253 252 254 21 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])
                (neg:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:541 -1
     (nil))
;; End of basic block 21 -> ( 22)

;; Succ edge  22 (fallthru)

;; Start of basic block ( 20 21) -> 22
;; Pred edge  20
;; Pred edge  21 (fallthru)
(code_label 254 253 255 22 81 "" [1 uses])

(note 255 254 256 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(jump_insn 256 255 257 22 (set (pc)
        (label_ref 358)) src/gui.c:536 -1
     (nil)
 -> 358)
;; End of basic block 22 -> ( 39)

;; Succ edge  39

(barrier 257 256 258)

;; Start of basic block ( 17 18) -> 23
;; Pred edge  17
;; Pred edge  18
(code_label 258 257 259 23 79 "" [2 uses])

(note 259 258 260 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 260 259 261 23 (set (reg/f:SI 348)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:544 -1
     (nil))

(insn 261 260 262 23 (set (reg:SI 151 [ D.6049 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 348)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:544 -1
     (nil))

(insn 262 261 263 23 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 151 [ D.6049 ])
            (const_int 12 [0xc]))) src/gui.c:544 -1
     (nil))

(jump_insn 263 262 264 23 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 290)
            (pc))) src/gui.c:544 -1
     (nil)
 -> 290)
;; End of basic block 23 -> ( 24 29)

;; Succ edge  24 (fallthru)
;; Succ edge  29

;; Start of basic block ( 23) -> 24
;; Pred edge  23 (fallthru)
(note 264 263 265 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 265 264 266 24 (set (reg/f:SI 349)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:544 -1
     (nil))

(insn 266 265 267 24 (set (reg:SI 152 [ D.6051 ])
        (mem/s/j:SI (reg/f:SI 349) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:544 -1
     (nil))

(insn 267 266 268 24 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 152 [ D.6051 ])
            (const_int 12 [0xc]))) src/gui.c:544 -1
     (nil))

(jump_insn 268 267 269 24 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 290)
            (pc))) src/gui.c:544 -1
     (nil)
 -> 290)
;; End of basic block 24 -> ( 25 29)

;; Succ edge  25 (fallthru)
;; Succ edge  29

;; Start of basic block ( 24) -> 25
;; Pred edge  24 (fallthru)
(note 269 268 270 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 270 269 271 25 (set (reg/f:SI 350)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:546 -1
     (nil))

(insn 271 270 272 25 (set (reg:SI 153 [ D.6053 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 350)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:546 -1
     (nil))

(insn 272 271 273 25 (parallel [
            (set (reg:SI 154 [ D.6054 ])
                (plus:SI (reg:SI 153 [ D.6053 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:546 -1
     (nil))

(insn 273 272 274 25 (set (reg/f:SI 351)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:546 -1
     (nil))

(insn 274 273 275 25 (set (reg:SI 155 [ D.6055 ])
        (mem/s/j:SI (reg/f:SI 351) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:546 -1
     (nil))

(insn 275 274 276 25 (parallel [
            (set (reg:SI 156 [ D.6056 ])
                (plus:SI (reg:SI 155 [ D.6055 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:546 -1
     (nil))

(insn 276 275 277 25 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 154 [ D.6054 ])
            (reg:SI 156 [ D.6056 ]))) src/gui.c:546 -1
     (nil))

(jump_insn 277 276 278 25 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 282)
            (pc))) src/gui.c:546 -1
     (nil)
 -> 282)
;; End of basic block 25 -> ( 26 27)

;; Succ edge  26 (fallthru)
;; Succ edge  27

;; Start of basic block ( 25) -> 26
;; Pred edge  25 (fallthru)
(note 278 277 279 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 279 278 280 26 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 3 [0x3])) src/gui.c:547 -1
     (nil))

(jump_insn 280 279 281 26 (set (pc)
        (label_ref 286)) src/gui.c:547 -1
     (nil)
 -> 286)
;; End of basic block 26 -> ( 28)

;; Succ edge  28

(barrier 281 280 282)

;; Start of basic block ( 25) -> 27
;; Pred edge  25
(code_label 282 281 283 27 84 "" [1 uses])

(note 283 282 284 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 284 283 285 27 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 4 [0x4])) src/gui.c:550 -1
     (nil))

(insn 285 284 286 27 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])
                (neg:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:551 -1
     (nil))
;; End of basic block 27 -> ( 28)

;; Succ edge  28 (fallthru)

;; Start of basic block ( 26 27) -> 28
;; Pred edge  26
;; Pred edge  27 (fallthru)
(code_label 286 285 287 28 85 "" [1 uses])

(note 287 286 288 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(jump_insn 288 287 289 28 (set (pc)
        (label_ref 358)) src/gui.c:546 -1
     (nil)
 -> 358)
;; End of basic block 28 -> ( 39)

;; Succ edge  39

(barrier 289 288 290)

;; Start of basic block ( 23 24) -> 29
;; Pred edge  23
;; Pred edge  24
(code_label 290 289 291 29 83 "" [2 uses])

(note 291 290 292 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 292 291 293 29 (set (reg:DF 352)
        (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 a+0 S8 A64])) src/gui.c:554 -1
     (nil))

(insn 293 292 294 29 (set (reg:DF 353)
        (mem/u/c/i:DF (symbol_ref/u:SI ("*.LC21") [flags 0x2]) [0 S8 A64])) src/gui.c:554 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(insn 294 293 295 29 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 352)
            (reg:DF 353))) src/gui.c:554 -1
     (nil))

(insn 295 294 296 29 (set (reg:QI 157 [ D.6062 ])
        (ge:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) src/gui.c:554 -1
     (nil))

(insn 296 295 297 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 157 [ D.6062 ])
            (const_int 0 [0]))) src/gui.c:554 -1
     (nil))

(jump_insn 297 296 298 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 311)
            (pc))) src/gui.c:554 -1
     (nil)
 -> 311)
;; End of basic block 29 -> ( 30 32)

;; Succ edge  30 (fallthru)
;; Succ edge  32

;; Start of basic block ( 29) -> 30
;; Pred edge  29 (fallthru)
(note 298 297 299 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 299 298 300 30 (set (reg/f:SI 354)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:554 -1
     (nil))

(insn 300 299 301 30 (set (reg:SI 158 [ D.6064 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 354)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:554 -1
     (nil))

(insn 301 300 302 30 (parallel [
            (set (reg:SI 159 [ D.6065 ])
                (plus:SI (reg:SI 158 [ D.6064 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:554 -1
     (nil))

(insn 302 301 303 30 (set (reg/f:SI 355)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:554 -1
     (nil))

(insn 303 302 304 30 (set (reg:SI 160 [ D.6066 ])
        (mem/s/j:SI (reg/f:SI 355) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:554 -1
     (nil))

(insn 304 303 305 30 (parallel [
            (set (reg:SI 161 [ D.6067 ])
                (plus:SI (reg:SI 160 [ D.6066 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:554 -1
     (nil))

(insn 305 304 306 30 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 159 [ D.6065 ])
            (reg:SI 161 [ D.6067 ]))) src/gui.c:554 -1
     (nil))

(jump_insn 306 305 307 30 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 311)
            (pc))) src/gui.c:554 -1
     (nil)
 -> 311)
;; End of basic block 30 -> ( 31 32)

;; Succ edge  31 (fallthru)
;; Succ edge  32

;; Start of basic block ( 30) -> 31
;; Pred edge  30 (fallthru)
(note 307 306 308 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 308 307 309 31 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 5 [0x5])) src/gui.c:556 -1
     (nil))

(jump_insn 309 308 310 31 (set (pc)
        (label_ref 358)) src/gui.c:556 -1
     (nil)
 -> 358)
;; End of basic block 31 -> ( 39)

;; Succ edge  39

(barrier 310 309 311)

;; Start of basic block ( 29 30) -> 32
;; Pred edge  29
;; Pred edge  30
(code_label 311 310 312 32 86 "" [2 uses])

(note 312 311 313 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 313 312 314 32 (set (reg:DF 356)
        (mem/u/c/i:DF (symbol_ref/u:SI ("*.LC21") [flags 0x2]) [0 S8 A64])) src/gui.c:557 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(insn 314 313 315 32 (set (reg:DF 357)
        (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 a+0 S8 A64])) src/gui.c:557 -1
     (nil))

(insn 315 314 316 32 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 356)
            (reg:DF 357))) src/gui.c:557 -1
     (nil))

(insn 316 315 317 32 (set (reg:QI 162 [ D.6071 ])
        (ge:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) src/gui.c:557 -1
     (nil))

(insn 317 316 318 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 162 [ D.6071 ])
            (const_int 0 [0]))) src/gui.c:557 -1
     (nil))

(jump_insn 318 317 319 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) src/gui.c:557 -1
     (nil)
 -> 332)
;; End of basic block 32 -> ( 33 35)

;; Succ edge  33 (fallthru)
;; Succ edge  35

;; Start of basic block ( 32) -> 33
;; Pred edge  32 (fallthru)
(note 319 318 320 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 320 319 321 33 (set (reg/f:SI 358)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:557 -1
     (nil))

(insn 321 320 322 33 (set (reg:SI 163 [ D.6073 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 358)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:557 -1
     (nil))

(insn 322 321 323 33 (parallel [
            (set (reg:SI 164 [ D.6074 ])
                (plus:SI (reg:SI 163 [ D.6073 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:557 -1
     (nil))

(insn 323 322 324 33 (set (reg/f:SI 359)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:557 -1
     (nil))

(insn 324 323 325 33 (set (reg:SI 165 [ D.6075 ])
        (mem/s/j:SI (reg/f:SI 359) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:557 -1
     (nil))

(insn 325 324 326 33 (parallel [
            (set (reg:SI 166 [ D.6076 ])
                (plus:SI (reg:SI 165 [ D.6075 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:557 -1
     (nil))

(insn 326 325 327 33 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 164 [ D.6074 ])
            (reg:SI 166 [ D.6076 ]))) src/gui.c:557 -1
     (nil))

(jump_insn 327 326 328 33 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) src/gui.c:557 -1
     (nil)
 -> 332)
;; End of basic block 33 -> ( 34 35)

;; Succ edge  34 (fallthru)
;; Succ edge  35

;; Start of basic block ( 33) -> 34
;; Pred edge  33 (fallthru)
(note 328 327 329 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 329 328 330 34 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 6 [0x6])) src/gui.c:559 -1
     (nil))

(jump_insn 330 329 331 34 (set (pc)
        (label_ref 358)) src/gui.c:559 -1
     (nil)
 -> 358)
;; End of basic block 34 -> ( 39)

;; Succ edge  39

(barrier 331 330 332)

;; Start of basic block ( 32 33) -> 35
;; Pred edge  32
;; Pred edge  33
(code_label 332 331 333 35 87 "" [2 uses])

(note 333 332 334 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 334 333 335 35 (set (reg:DF 360)
        (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 a+0 S8 A64])) src/gui.c:561 -1
     (nil))

(insn 335 334 336 35 (set (reg:DF 361)
        (mem/u/c/i:DF (symbol_ref/u:SI ("*.LC21") [flags 0x2]) [0 S8 A64])) src/gui.c:561 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(insn 336 335 337 35 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 360)
            (reg:DF 361))) src/gui.c:561 -1
     (nil))

(insn 337 336 338 35 (set (reg:QI 167 [ D.6080 ])
        (ge:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) src/gui.c:561 -1
     (nil))

(insn 338 337 339 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 167 [ D.6080 ])
            (const_int 0 [0]))) src/gui.c:561 -1
     (nil))

(jump_insn 339 338 340 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 354)
            (pc))) src/gui.c:561 -1
     (nil)
 -> 354)
;; End of basic block 35 -> ( 36 38)

;; Succ edge  36 (fallthru)
;; Succ edge  38

;; Start of basic block ( 35) -> 36
;; Pred edge  35 (fallthru)
(note 340 339 341 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 341 340 342 36 (set (reg/f:SI 362)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:561 -1
     (nil))

(insn 342 341 343 36 (set (reg:SI 168 [ D.6082 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 362)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:561 -1
     (nil))

(insn 343 342 344 36 (parallel [
            (set (reg:SI 169 [ D.6083 ])
                (plus:SI (reg:SI 168 [ D.6082 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:561 -1
     (nil))

(insn 344 343 345 36 (set (reg/f:SI 363)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:561 -1
     (nil))

(insn 345 344 346 36 (set (reg:SI 170 [ D.6084 ])
        (mem/s/j:SI (reg/f:SI 363) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:561 -1
     (nil))

(insn 346 345 347 36 (parallel [
            (set (reg:SI 171 [ D.6085 ])
                (plus:SI (reg:SI 170 [ D.6084 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:561 -1
     (nil))

(insn 347 346 348 36 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 169 [ D.6083 ])
            (reg:SI 171 [ D.6085 ]))) src/gui.c:561 -1
     (nil))

(jump_insn 348 347 349 36 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 354)
            (pc))) src/gui.c:561 -1
     (nil)
 -> 354)
;; End of basic block 36 -> ( 37 38)

;; Succ edge  37 (fallthru)
;; Succ edge  38

;; Start of basic block ( 36) -> 37
;; Pred edge  36 (fallthru)
(note 349 348 350 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 350 349 351 37 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 7 [0x7])) src/gui.c:563 -1
     (nil))

(insn 351 350 352 37 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])
                (neg:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:564 -1
     (nil))

(jump_insn 352 351 353 37 (set (pc)
        (label_ref 358)) src/gui.c:564 -1
     (nil)
 -> 358)
;; End of basic block 37 -> ( 39)

;; Succ edge  39

(barrier 353 352 354)

;; Start of basic block ( 35 36) -> 38
;; Pred edge  35
;; Pred edge  36
(code_label 354 353 355 38 88 "" [2 uses])

(note 355 354 356 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 356 355 357 38 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
        (const_int 8 [0x8])) src/gui.c:568 -1
     (nil))

(insn 357 356 358 38 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])
                (neg:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:569 -1
     (nil))
;; End of basic block 38 -> ( 39)

;; Succ edge  39 (fallthru)

;; Start of basic block ( 22 28 31 34 37 38) -> 39
;; Pred edge  22
;; Pred edge  28
;; Pred edge  31
;; Pred edge  34
;; Pred edge  37
;; Pred edge  38 (fallthru)
(code_label 358 357 359 39 82 "" [5 uses])

(note 359 358 360 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 360 359 361 39 (set (reg/f:SI 172 [ D.6087 ])
        (symbol_ref/f:SI ("*.LC22") [flags 0x2]  <var_decl 0x408fdf00 *.LC22>)) src/gui.c:571 -1
     (nil))

(insn 361 360 362 39 (set (reg:SI 364)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])) src/gui.c:571 -1
     (nil))

(insn 362 361 363 39 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 364)) src/gui.c:571 -1
     (nil))

(insn 363 362 364 39 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 172 [ D.6087 ])) src/gui.c:571 -1
     (nil))

(call_insn 364 363 365 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x406b1b80 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:571 -1
     (nil)
    (nil))

(insn 365 364 366 39 (set (reg:SI 365)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 pos_src_x+0 S4 A32])) src/gui.c:574 -1
     (nil))

(insn 366 365 367 39 (set (reg:HI 173 [ D.6088 ])
        (subreg:HI (reg:SI 365) 0)) src/gui.c:574 -1
     (nil))

(insn 367 366 368 39 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])
        (reg:HI 173 [ D.6088 ])) src/gui.c:574 -1
     (nil))

(insn 368 367 369 39 (set (reg:SI 366)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 pos_src_y+0 S4 A32])) src/gui.c:575 -1
     (nil))

(insn 369 368 370 39 (set (reg:HI 174 [ D.6089 ])
        (subreg:HI (reg:SI 366) 0)) src/gui.c:575 -1
     (nil))

(insn 370 369 371 39 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -34 [0xffffffffffffffde])) [0 new_pos.y+0 S2 A16])
        (reg:HI 174 [ D.6089 ])) src/gui.c:575 -1
     (nil))

(insn 371 370 372 39 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 0 [0])) src/gui.c:576 -1
     (nil))

(insn 372 371 373 39 (set (reg/f:SI 367)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:577 -1
     (nil))

(insn 373 372 374 39 (set (reg:SI 175 [ D.6090 ])
        (mem/s/j:SI (reg/f:SI 367) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:577 -1
     (nil))

(insn 374 373 375 39 (parallel [
            (set (reg:SI 176 [ D.6091 ])
                (plus:SI (reg:SI 175 [ D.6090 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:577 -1
     (nil))

(insn 375 374 376 39 (set (reg/f:SI 368)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:577 -1
     (nil))

(insn 376 375 377 39 (set (reg:SI 177 [ D.6092 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 176 [ D.6091 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 368))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6091_164].nb_checkers+0 S4 A32])) src/gui.c:577 -1
     (nil))

(insn 377 376 378 39 (parallel [
            (set (reg:SI 178 [ D.6093 ])
                (plus:SI (reg:SI 177 [ D.6092 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:577 -1
     (nil))

(insn 378 377 379 39 (set (reg/f:SI 369)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:577 -1
     (nil))

(insn 379 378 380 39 (set (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 176 [ D.6091 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 369))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6091_164].nb_checkers+0 S4 A32])
        (reg:SI 178 [ D.6093 ])) src/gui.c:577 -1
     (nil))

(jump_insn 380 379 381 39 (set (pc)
        (label_ref 591)) src/gui.c:578 -1
     (nil)
 -> 591)
;; End of basic block 39 -> ( 67)

;; Succ edge  67

(barrier 381 380 593)

;; Start of basic block ( 67) -> 40
;; Pred edge  67
(code_label 593 381 382 40 108 "" [1 uses])

(note 382 593 383 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 383 382 384 40 (set (reg:HI 179 [ D.6094 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:580 -1
     (nil))

(insn 384 383 385 40 (set (reg:HI 180 [ D.6095 ])
        (reg:HI 179 [ D.6094 ])) src/gui.c:580 -1
     (nil))

(insn 385 384 386 40 (set (reg:SI 370)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:580 -1
     (nil))

(insn 386 385 387 40 (set (reg:HI 181 [ D.6096 ])
        (subreg:HI (reg:SI 370) 0)) src/gui.c:580 -1
     (nil))

(insn 387 386 388 40 (parallel [
            (set (reg:HI 182 [ D.6097 ])
                (plus:HI (reg:HI 180 [ D.6095 ])
                    (reg:HI 181 [ D.6096 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:580 -1
     (nil))

(insn 388 387 389 40 (set (reg:HI 183 [ D.6098 ])
        (reg:HI 182 [ D.6097 ])) src/gui.c:580 -1
     (nil))

(insn 389 388 390 40 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])
        (reg:HI 183 [ D.6098 ])) src/gui.c:580 -1
     (nil))

(insn 390 389 391 40 (set (reg:XF 184 [ D.6099 ])
        (float_extend:XF (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 a+0 S8 A64]))) src/gui.c:581 -1
     (nil))

(insn 391 390 392 40 (set (reg:HI 185 [ D.6100 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:581 -1
     (nil))

(insn 392 391 393 40 (set (reg:DF 186 [ D.6101 ])
        (float:DF (reg:HI 185 [ D.6100 ]))) src/gui.c:581 -1
     (nil))

(insn 393 392 394 40 (set (reg:XF 187 [ D.6102 ])
        (float_extend:XF (reg:DF 186 [ D.6101 ]))) src/gui.c:581 -1
     (nil))

(insn 394 393 395 40 (set (reg:XF 188 [ D.6103 ])
        (mult:XF (reg:XF 184 [ D.6099 ])
            (reg:XF 187 [ D.6102 ]))) src/gui.c:581 -1
     (nil))

(insn 395 394 396 40 (set (reg:XF 189 [ D.6104 ])
        (float_extend:XF (mem/c/i:DF (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 b+0 S8 A64]))) src/gui.c:581 -1
     (nil))

(insn 396 395 397 40 (set (reg:XF 190 [ D.6105 ])
        (plus:XF (reg:XF 188 [ D.6103 ])
            (reg:XF 189 [ D.6104 ]))) src/gui.c:581 -1
     (nil))

(insn 397 396 398 40 (parallel [
            (set (reg:SI 191 [ D.6106 ])
                (fix:SI (reg:XF 190 [ D.6105 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:581 -1
     (nil))

(insn 398 397 399 40 (set (reg:HI 192 [ D.6107 ])
        (subreg:HI (reg:SI 191 [ D.6106 ]) 0)) src/gui.c:581 -1
     (nil))

(insn 399 398 400 40 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -34 [0xffffffffffffffde])) [0 new_pos.y+0 S2 A16])
        (reg:HI 192 [ D.6107 ])) src/gui.c:581 -1
     (nil))

(insn 400 399 401 40 (set (reg/f:SI 371)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 game+0 S4 A32])) src/gui.c:582 -1
     (nil))

(insn 401 400 402 40 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 371)) src/gui.c:582 -1
     (nil))

(insn 402 401 403 40 (set (reg/f:SI 372)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:582 -1
     (nil))

(insn 403 402 404 40 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 372)) src/gui.c:582 -1
     (nil))

(insn 404 403 405 40 (set (reg/f:SI 373)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:582 -1
     (nil))

(insn 405 404 406 40 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 373)) src/gui.c:582 -1
     (nil))

(call_insn 406 405 407 40 (call (mem:QI (symbol_ref:SI ("Display_RefreshGameBoard") [flags 0x3]  <function_decl 0x4081a780 Display_RefreshGameBoard>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:582 -1
     (nil)
    (nil))

(insn 407 406 408 40 (set (reg/f:SI 374)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:583 -1
     (nil))

(insn 408 407 409 40 (set (reg:SI 193 [ D.6108 ])
        (mem/s/j:SI (reg/f:SI 374) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:583 -1
     (nil))

(insn 409 408 410 40 (parallel [
            (set (reg:SI 194 [ D.6109 ])
                (plus:SI (reg:SI 193 [ D.6108 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:583 -1
     (nil))

(insn 410 409 411 40 (set (reg/f:SI 375)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:583 -1
     (nil))

(insn 411 410 412 40 (set (reg:SI 195 [ D.6110 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 194 [ D.6109 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 375)) [0 gameState_27(D)->zones[D.6109_183].player+0 S4 A32])) src/gui.c:583 -1
     (nil))

(insn 412 411 413 40 (set (reg:SI 196 [ D.6111 ])
        (reg:SI 195 [ D.6110 ])) src/gui.c:583 -1
     (nil))

(insn 413 412 414 40 (set (reg/f:SI 376)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 game+0 S4 A32])) src/gui.c:583 -1
     (nil))

(insn 414 413 415 40 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg/f:SI 376)) src/gui.c:583 -1
     (nil))

(insn 415 414 416 40 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 196 [ D.6111 ])) src/gui.c:583 -1
     (nil))

(insn 416 415 417 40 (set (reg:DI 377)
        (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos+0 S8 A32])) src/gui.c:583 -1
     (nil))

(insn 417 416 418 40 (set (mem:DI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S8 A32])
        (reg:DI 377)) src/gui.c:583 -1
     (nil))

(insn 418 417 419 40 (set (reg/f:SI 378)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:583 -1
     (nil))

(insn 419 418 420 40 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 378)) src/gui.c:583 -1
     (nil))

(call_insn 420 419 421 40 (call (mem:QI (symbol_ref:SI ("Checker_Draw") [flags 0x3]  <function_decl 0x4081a200 Checker_Draw>) [0 S1 A8])
        (const_int 20 [0x14])) src/gui.c:583 -1
     (nil)
    (nil))

(insn 421 420 422 40 (set (reg/f:SI 379)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:584 -1
     (nil))

(insn 422 421 423 40 (set (reg/f:SI 197 [ D.6112 ])
        (mem/s/f/j:SI (reg/f:SI 379) [0 display_21(D)->screen+0 S4 A32])) src/gui.c:584 -1
     (nil))

(insn 423 422 424 40 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 197 [ D.6112 ])) src/gui.c:584 -1
     (nil))

(call_insn 424 423 425 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_Flip") [flags 0x41]  <function_decl 0x4079fa00 SDL_Flip>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:584 -1
     (nil)
    (nil))

(insn 425 424 426 40 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
            (const_int 8 [0x8]))) src/gui.c:585 -1
     (nil))

(jump_insn 426 425 725 40 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 588)
            (pc))) src/gui.c:585 -1
     (nil)
 -> 588)
;; End of basic block 40 -> ( 66 41)

;; Succ edge  66
;; Succ edge  41 (fallthru)

;; Start of basic block ( 40) -> 41
;; Pred edge  40 (fallthru)
(note 725 426 427 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 427 725 428 41 (set (reg:SI 381)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])) src/gui.c:585 -1
     (nil))

(insn 428 427 429 41 (parallel [
            (set (reg:SI 380)
                (ashift:SI (reg:SI 381)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:585 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 numCas+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))

(insn 429 428 430 41 (parallel [
            (set (reg/f:SI 382)
                (plus:SI (reg:SI 380)
                    (label_ref:SI 433)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:585 -1
     (insn_list:REG_LABEL_OPERAND 433 (nil)))

(insn 430 429 431 41 (set (reg:SI 383)
        (mem/u/c:SI (reg/f:SI 382) [0 S4 A8])) src/gui.c:585 -1
     (nil))

(jump_insn 431 430 432 41 (parallel [
            (set (pc)
                (reg:SI 383))
            (use (label_ref 433))
        ]) src/gui.c:585 -1
     (nil)
 -> 433)
;; End of basic block 41 -> ( 66 42 45 48 51 54 57 60 63)

;; Succ edge  66
;; Succ edge  42
;; Succ edge  45
;; Succ edge  48
;; Succ edge  51
;; Succ edge  54
;; Succ edge  57
;; Succ edge  60
;; Succ edge  63

(barrier 432 431 433)

;; Insn is not within a basic block
(code_label 433 432 434 99 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 434 433 435 (addr_vec:SI [
            (label_ref:SI 588)
            (label_ref:SI 436)
            (label_ref:SI 455)
            (label_ref:SI 474)
            (label_ref:SI 493)
            (label_ref:SI 512)
            (label_ref:SI 531)
            (label_ref:SI 550)
            (label_ref:SI 569)
        ]) src/gui.c:585 -1
     (nil))

(barrier 435 434 436)

;; Start of basic block ( 41) -> 42
;; Pred edge  41
(code_label 436 435 437 42 91 "" [1 uses])

(note 437 436 438 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 438 437 439 42 (set (reg:HI 198 [ D.6113 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:588 -1
     (nil))

(insn 439 438 440 42 (set (reg:SI 199 [ D.6114 ])
        (sign_extend:SI (reg:HI 198 [ D.6113 ]))) src/gui.c:588 -1
     (nil))

(insn 440 439 441 42 (set (reg:SI 384)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:588 -1
     (nil))

(insn 441 440 442 42 (set (reg:SI 385)
        (const_int 0 [0])) src/gui.c:588 -1
     (nil))

(insn 442 441 443 42 (parallel [
            (set (reg:SI 385)
                (minus:SI (reg:SI 385)
                    (reg:SI 384)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:588 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 384)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 443 442 444 42 (parallel [
            (set (reg:SI 386)
                (ashift:SI (reg:SI 385)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:588 -1
     (nil))

(insn 444 443 445 42 (set (reg:SI 385)
        (reg:SI 386)) src/gui.c:588 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 384)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 445 444 446 42 (set (reg:SI 200 [ D.6115 ])
        (reg:SI 385)) src/gui.c:588 -1
     (nil))

(insn 446 445 447 42 (parallel [
            (set (reg:SI 201 [ D.6116 ])
                (plus:SI (reg:SI 200 [ D.6115 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:588 -1
     (nil))

(insn 447 446 448 42 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 199 [ D.6114 ])
            (reg:SI 201 [ D.6116 ]))) src/gui.c:588 -1
     (nil))

(jump_insn 448 447 449 42 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 451)
            (pc))) src/gui.c:588 -1
     (nil)
 -> 451)
;; End of basic block 42 -> ( 43 44)

;; Succ edge  43 (fallthru)
;; Succ edge  44

;; Start of basic block ( 42) -> 43
;; Pred edge  42 (fallthru)
(note 449 448 450 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 450 449 451 43 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:589 -1
     (nil))
;; End of basic block 43 -> ( 44)

;; Succ edge  44 (fallthru)

;; Start of basic block ( 42 43) -> 44
;; Pred edge  42
;; Pred edge  43 (fallthru)
(code_label 451 450 452 44 100 "" [1 uses])

(note 452 451 453 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(jump_insn 453 452 454 44 (set (pc)
        (label_ref 591)) src/gui.c:590 -1
     (nil)
 -> 591)
;; End of basic block 44 -> ( 67)

;; Succ edge  67

(barrier 454 453 455)

;; Start of basic block ( 41) -> 45
;; Pred edge  41
(code_label 455 454 456 45 92 "" [1 uses])

(note 456 455 457 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 457 456 458 45 (set (reg:HI 202 [ D.6119 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:592 -1
     (nil))

(insn 458 457 459 45 (set (reg:SI 203 [ D.6120 ])
        (sign_extend:SI (reg:HI 202 [ D.6119 ]))) src/gui.c:592 -1
     (nil))

(insn 459 458 460 45 (set (reg:SI 387)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:592 -1
     (nil))

(insn 460 459 461 45 (set (reg:SI 388)
        (const_int 0 [0])) src/gui.c:592 -1
     (nil))

(insn 461 460 462 45 (parallel [
            (set (reg:SI 388)
                (minus:SI (reg:SI 388)
                    (reg:SI 387)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:592 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 387)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 462 461 463 45 (parallel [
            (set (reg:SI 389)
                (ashift:SI (reg:SI 388)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:592 -1
     (nil))

(insn 463 462 464 45 (set (reg:SI 388)
        (reg:SI 389)) src/gui.c:592 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 387)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 464 463 465 45 (set (reg:SI 204 [ D.6121 ])
        (reg:SI 388)) src/gui.c:592 -1
     (nil))

(insn 465 464 466 45 (parallel [
            (set (reg:SI 205 [ D.6122 ])
                (plus:SI (reg:SI 204 [ D.6121 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:592 -1
     (nil))

(insn 466 465 467 45 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 203 [ D.6120 ])
            (reg:SI 205 [ D.6122 ]))) src/gui.c:592 -1
     (nil))

(jump_insn 467 466 468 45 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 470)
            (pc))) src/gui.c:592 -1
     (nil)
 -> 470)
;; End of basic block 45 -> ( 46 47)

;; Succ edge  46 (fallthru)
;; Succ edge  47

;; Start of basic block ( 45) -> 46
;; Pred edge  45 (fallthru)
(note 468 467 469 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 469 468 470 46 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:593 -1
     (nil))
;; End of basic block 46 -> ( 47)

;; Succ edge  47 (fallthru)

;; Start of basic block ( 45 46) -> 47
;; Pred edge  45
;; Pred edge  46 (fallthru)
(code_label 470 469 471 47 101 "" [1 uses])

(note 471 470 472 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(jump_insn 472 471 473 47 (set (pc)
        (label_ref 591)) src/gui.c:594 -1
     (nil)
 -> 591)
;; End of basic block 47 -> ( 67)

;; Succ edge  67

(barrier 473 472 474)

;; Start of basic block ( 41) -> 48
;; Pred edge  41
(code_label 474 473 475 48 93 "" [1 uses])

(note 475 474 476 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 476 475 477 48 (set (reg:HI 206 [ D.6125 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:596 -1
     (nil))

(insn 477 476 478 48 (set (reg:SI 207 [ D.6126 ])
        (sign_extend:SI (reg:HI 206 [ D.6125 ]))) src/gui.c:596 -1
     (nil))

(insn 478 477 479 48 (set (reg:SI 390)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:596 -1
     (nil))

(insn 479 478 480 48 (set (reg:SI 391)
        (const_int 0 [0])) src/gui.c:596 -1
     (nil))

(insn 480 479 481 48 (parallel [
            (set (reg:SI 391)
                (minus:SI (reg:SI 391)
                    (reg:SI 390)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:596 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 390)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 481 480 482 48 (parallel [
            (set (reg:SI 392)
                (ashift:SI (reg:SI 391)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:596 -1
     (nil))

(insn 482 481 483 48 (set (reg:SI 391)
        (reg:SI 392)) src/gui.c:596 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 390)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 483 482 484 48 (set (reg:SI 208 [ D.6127 ])
        (reg:SI 391)) src/gui.c:596 -1
     (nil))

(insn 484 483 485 48 (parallel [
            (set (reg:SI 209 [ D.6128 ])
                (plus:SI (reg:SI 208 [ D.6127 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:596 -1
     (nil))

(insn 485 484 486 48 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 207 [ D.6126 ])
            (reg:SI 209 [ D.6128 ]))) src/gui.c:596 -1
     (nil))

(jump_insn 486 485 487 48 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 489)
            (pc))) src/gui.c:596 -1
     (nil)
 -> 489)
;; End of basic block 48 -> ( 49 50)

;; Succ edge  49 (fallthru)
;; Succ edge  50

;; Start of basic block ( 48) -> 49
;; Pred edge  48 (fallthru)
(note 487 486 488 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 488 487 489 49 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:597 -1
     (nil))
;; End of basic block 49 -> ( 50)

;; Succ edge  50 (fallthru)

;; Start of basic block ( 48 49) -> 50
;; Pred edge  48
;; Pred edge  49 (fallthru)
(code_label 489 488 490 50 102 "" [1 uses])

(note 490 489 491 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(jump_insn 491 490 492 50 (set (pc)
        (label_ref 591)) src/gui.c:598 -1
     (nil)
 -> 591)
;; End of basic block 50 -> ( 67)

;; Succ edge  67

(barrier 492 491 493)

;; Start of basic block ( 41) -> 51
;; Pred edge  41
(code_label 493 492 494 51 94 "" [1 uses])

(note 494 493 495 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 495 494 496 51 (set (reg:HI 210 [ D.6131 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:600 -1
     (nil))

(insn 496 495 497 51 (set (reg:SI 211 [ D.6132 ])
        (sign_extend:SI (reg:HI 210 [ D.6131 ]))) src/gui.c:600 -1
     (nil))

(insn 497 496 498 51 (set (reg:SI 393)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:600 -1
     (nil))

(insn 498 497 499 51 (set (reg:SI 394)
        (const_int 0 [0])) src/gui.c:600 -1
     (nil))

(insn 499 498 500 51 (parallel [
            (set (reg:SI 394)
                (minus:SI (reg:SI 394)
                    (reg:SI 393)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:600 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 393)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 500 499 501 51 (parallel [
            (set (reg:SI 395)
                (ashift:SI (reg:SI 394)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:600 -1
     (nil))

(insn 501 500 502 51 (set (reg:SI 394)
        (reg:SI 395)) src/gui.c:600 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 393)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 502 501 503 51 (set (reg:SI 212 [ D.6133 ])
        (reg:SI 394)) src/gui.c:600 -1
     (nil))

(insn 503 502 504 51 (parallel [
            (set (reg:SI 213 [ D.6134 ])
                (plus:SI (reg:SI 212 [ D.6133 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:600 -1
     (nil))

(insn 504 503 505 51 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 211 [ D.6132 ])
            (reg:SI 213 [ D.6134 ]))) src/gui.c:600 -1
     (nil))

(jump_insn 505 504 506 51 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 508)
            (pc))) src/gui.c:600 -1
     (nil)
 -> 508)
;; End of basic block 51 -> ( 52 53)

;; Succ edge  52 (fallthru)
;; Succ edge  53

;; Start of basic block ( 51) -> 52
;; Pred edge  51 (fallthru)
(note 506 505 507 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 507 506 508 52 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:601 -1
     (nil))
;; End of basic block 52 -> ( 53)

;; Succ edge  53 (fallthru)

;; Start of basic block ( 51 52) -> 53
;; Pred edge  51
;; Pred edge  52 (fallthru)
(code_label 508 507 509 53 103 "" [1 uses])

(note 509 508 510 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(jump_insn 510 509 511 53 (set (pc)
        (label_ref 591)) src/gui.c:602 -1
     (nil)
 -> 591)
;; End of basic block 53 -> ( 67)

;; Succ edge  67

(barrier 511 510 512)

;; Start of basic block ( 41) -> 54
;; Pred edge  41
(code_label 512 511 513 54 95 "" [1 uses])

(note 513 512 514 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 514 513 515 54 (set (reg:HI 214 [ D.6137 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:604 -1
     (nil))

(insn 515 514 516 54 (set (reg:SI 215 [ D.6138 ])
        (sign_extend:SI (reg:HI 214 [ D.6137 ]))) src/gui.c:604 -1
     (nil))

(insn 516 515 517 54 (set (reg:SI 396)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:604 -1
     (nil))

(insn 517 516 518 54 (set (reg:SI 397)
        (const_int 0 [0])) src/gui.c:604 -1
     (nil))

(insn 518 517 519 54 (parallel [
            (set (reg:SI 397)
                (minus:SI (reg:SI 397)
                    (reg:SI 396)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:604 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 396)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 519 518 520 54 (parallel [
            (set (reg:SI 398)
                (ashift:SI (reg:SI 397)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:604 -1
     (nil))

(insn 520 519 521 54 (set (reg:SI 397)
        (reg:SI 398)) src/gui.c:604 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 396)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 521 520 522 54 (set (reg:SI 216 [ D.6139 ])
        (reg:SI 397)) src/gui.c:604 -1
     (nil))

(insn 522 521 523 54 (parallel [
            (set (reg:SI 217 [ D.6140 ])
                (plus:SI (reg:SI 216 [ D.6139 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:604 -1
     (nil))

(insn 523 522 524 54 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 215 [ D.6138 ])
            (reg:SI 217 [ D.6140 ]))) src/gui.c:604 -1
     (nil))

(jump_insn 524 523 525 54 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 527)
            (pc))) src/gui.c:604 -1
     (nil)
 -> 527)
;; End of basic block 54 -> ( 55 56)

;; Succ edge  55 (fallthru)
;; Succ edge  56

;; Start of basic block ( 54) -> 55
;; Pred edge  54 (fallthru)
(note 525 524 526 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 526 525 527 55 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:605 -1
     (nil))
;; End of basic block 55 -> ( 56)

;; Succ edge  56 (fallthru)

;; Start of basic block ( 54 55) -> 56
;; Pred edge  54
;; Pred edge  55 (fallthru)
(code_label 527 526 528 56 104 "" [1 uses])

(note 528 527 529 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(jump_insn 529 528 530 56 (set (pc)
        (label_ref 591)) src/gui.c:606 -1
     (nil)
 -> 591)
;; End of basic block 56 -> ( 67)

;; Succ edge  67

(barrier 530 529 531)

;; Start of basic block ( 41) -> 57
;; Pred edge  41
(code_label 531 530 532 57 96 "" [1 uses])

(note 532 531 533 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 533 532 534 57 (set (reg:HI 218 [ D.6143 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:608 -1
     (nil))

(insn 534 533 535 57 (set (reg:SI 219 [ D.6144 ])
        (sign_extend:SI (reg:HI 218 [ D.6143 ]))) src/gui.c:608 -1
     (nil))

(insn 535 534 536 57 (set (reg:SI 399)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:608 -1
     (nil))

(insn 536 535 537 57 (set (reg:SI 400)
        (const_int 0 [0])) src/gui.c:608 -1
     (nil))

(insn 537 536 538 57 (parallel [
            (set (reg:SI 400)
                (minus:SI (reg:SI 400)
                    (reg:SI 399)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:608 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 399)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 538 537 539 57 (parallel [
            (set (reg:SI 401)
                (ashift:SI (reg:SI 400)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:608 -1
     (nil))

(insn 539 538 540 57 (set (reg:SI 400)
        (reg:SI 401)) src/gui.c:608 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 399)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 540 539 541 57 (set (reg:SI 220 [ D.6145 ])
        (reg:SI 400)) src/gui.c:608 -1
     (nil))

(insn 541 540 542 57 (parallel [
            (set (reg:SI 221 [ D.6146 ])
                (plus:SI (reg:SI 220 [ D.6145 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:608 -1
     (nil))

(insn 542 541 543 57 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 219 [ D.6144 ])
            (reg:SI 221 [ D.6146 ]))) src/gui.c:608 -1
     (nil))

(jump_insn 543 542 544 57 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 546)
            (pc))) src/gui.c:608 -1
     (nil)
 -> 546)
;; End of basic block 57 -> ( 58 59)

;; Succ edge  58 (fallthru)
;; Succ edge  59

;; Start of basic block ( 57) -> 58
;; Pred edge  57 (fallthru)
(note 544 543 545 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 545 544 546 58 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:609 -1
     (nil))
;; End of basic block 58 -> ( 59)

;; Succ edge  59 (fallthru)

;; Start of basic block ( 57 58) -> 59
;; Pred edge  57
;; Pred edge  58 (fallthru)
(code_label 546 545 547 59 105 "" [1 uses])

(note 547 546 548 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(jump_insn 548 547 549 59 (set (pc)
        (label_ref 591)) src/gui.c:610 -1
     (nil)
 -> 591)
;; End of basic block 59 -> ( 67)

;; Succ edge  67

(barrier 549 548 550)

;; Start of basic block ( 41) -> 60
;; Pred edge  41
(code_label 550 549 551 60 97 "" [1 uses])

(note 551 550 552 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 552 551 553 60 (set (reg:HI 222 [ D.6149 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:612 -1
     (nil))

(insn 553 552 554 60 (set (reg:SI 223 [ D.6150 ])
        (sign_extend:SI (reg:HI 222 [ D.6149 ]))) src/gui.c:612 -1
     (nil))

(insn 554 553 555 60 (set (reg:SI 402)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:612 -1
     (nil))

(insn 555 554 556 60 (set (reg:SI 403)
        (const_int 0 [0])) src/gui.c:612 -1
     (nil))

(insn 556 555 557 60 (parallel [
            (set (reg:SI 403)
                (minus:SI (reg:SI 403)
                    (reg:SI 402)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:612 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 402)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 557 556 558 60 (parallel [
            (set (reg:SI 404)
                (ashift:SI (reg:SI 403)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:612 -1
     (nil))

(insn 558 557 559 60 (set (reg:SI 403)
        (reg:SI 404)) src/gui.c:612 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 402)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 559 558 560 60 (set (reg:SI 224 [ D.6151 ])
        (reg:SI 403)) src/gui.c:612 -1
     (nil))

(insn 560 559 561 60 (parallel [
            (set (reg:SI 225 [ D.6152 ])
                (plus:SI (reg:SI 224 [ D.6151 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:612 -1
     (nil))

(insn 561 560 562 60 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 223 [ D.6150 ])
            (reg:SI 225 [ D.6152 ]))) src/gui.c:612 -1
     (nil))

(jump_insn 562 561 563 60 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 565)
            (pc))) src/gui.c:612 -1
     (nil)
 -> 565)
;; End of basic block 60 -> ( 61 62)

;; Succ edge  61 (fallthru)
;; Succ edge  62

;; Start of basic block ( 60) -> 61
;; Pred edge  60 (fallthru)
(note 563 562 564 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 564 563 565 61 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:613 -1
     (nil))
;; End of basic block 61 -> ( 62)

;; Succ edge  62 (fallthru)

;; Start of basic block ( 60 61) -> 62
;; Pred edge  60
;; Pred edge  61 (fallthru)
(code_label 565 564 566 62 106 "" [1 uses])

(note 566 565 567 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(jump_insn 567 566 568 62 (set (pc)
        (label_ref 591)) src/gui.c:614 -1
     (nil)
 -> 591)
;; End of basic block 62 -> ( 67)

;; Succ edge  67

(barrier 568 567 569)

;; Start of basic block ( 41) -> 63
;; Pred edge  41
(code_label 569 568 570 63 98 "" [1 uses])

(note 570 569 571 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 571 570 572 63 (set (reg:HI 226 [ D.6155 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 new_pos.x+0 S2 A32])) src/gui.c:616 -1
     (nil))

(insn 572 571 573 63 (set (reg:SI 227 [ D.6156 ])
        (sign_extend:SI (reg:HI 226 [ D.6155 ]))) src/gui.c:616 -1
     (nil))

(insn 573 572 574 63 (set (reg:SI 405)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 pas+0 S4 A32])) src/gui.c:616 -1
     (nil))

(insn 574 573 575 63 (set (reg:SI 406)
        (const_int 0 [0])) src/gui.c:616 -1
     (nil))

(insn 575 574 576 63 (parallel [
            (set (reg:SI 406)
                (minus:SI (reg:SI 406)
                    (reg:SI 405)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:616 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 405)
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 576 575 577 63 (parallel [
            (set (reg:SI 407)
                (ashift:SI (reg:SI 406)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:616 -1
     (nil))

(insn 577 576 578 63 (set (reg:SI 406)
        (reg:SI 407)) src/gui.c:616 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 405)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 578 577 579 63 (set (reg:SI 228 [ D.6157 ])
        (reg:SI 406)) src/gui.c:616 -1
     (nil))

(insn 579 578 580 63 (parallel [
            (set (reg:SI 229 [ D.6158 ])
                (plus:SI (reg:SI 228 [ D.6157 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 pos_dest_x+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:616 -1
     (nil))

(insn 580 579 581 63 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 227 [ D.6156 ])
            (reg:SI 229 [ D.6158 ]))) src/gui.c:616 -1
     (nil))

(jump_insn 581 580 582 63 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 584)
            (pc))) src/gui.c:616 -1
     (nil)
 -> 584)
;; End of basic block 63 -> ( 64 65)

;; Succ edge  64 (fallthru)
;; Succ edge  65

;; Start of basic block ( 63) -> 64
;; Pred edge  63 (fallthru)
(note 582 581 583 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 583 582 584 64 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:617 -1
     (nil))
;; End of basic block 64 -> ( 65)

;; Succ edge  65 (fallthru)

;; Start of basic block ( 63 64) -> 65
;; Pred edge  63
;; Pred edge  64 (fallthru)
(code_label 584 583 585 65 107 "" [1 uses])

(note 585 584 586 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(jump_insn 586 585 587 65 (set (pc)
        (label_ref 591)) src/gui.c:618 -1
     (nil)
 -> 591)
;; End of basic block 65 -> ( 67)

;; Succ edge  67

(barrier 587 586 588)

;; Start of basic block ( 41 40) -> 66
;; Pred edge  41
;; Pred edge  40
(code_label 588 587 589 66 90 "" [2 uses])

(note 589 588 590 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 590 589 591 66 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:620 -1
     (nil))
;; End of basic block 66 -> ( 67)

;; Succ edge  67 (fallthru)

;; Start of basic block ( 39 44 47 50 53 56 59 62 65 66) -> 67
;; Pred edge  39
;; Pred edge  44
;; Pred edge  47
;; Pred edge  50
;; Pred edge  53
;; Pred edge  56
;; Pred edge  59
;; Pred edge  62
;; Pred edge  65
;; Pred edge  66 (fallthru)
(code_label 591 590 592 67 89 "" [9 uses])

(note 592 591 594 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn 594 592 595 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 depassement+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:578 -1
     (nil))

(jump_insn 595 594 596 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 593)
            (pc))) src/gui.c:578 -1
     (nil)
 -> 593)
;; End of basic block 67 -> ( 40 68)

;; Succ edge  40
;; Succ edge  68 (fallthru)

;; Start of basic block ( 67) -> 68
;; Pred edge  67 (fallthru)
(note 596 595 597 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(insn 597 596 598 68 (set (reg/f:SI 408)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 598 597 599 68 (set (reg:SI 230 [ D.6163 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 408)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 599 598 600 68 (parallel [
            (set (reg:SI 231 [ D.6164 ])
                (plus:SI (reg:SI 230 [ D.6163 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:624 -1
     (nil))

(insn 600 599 601 68 (set (reg/f:SI 409)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 601 600 602 68 (set (reg:SI 232 [ D.6165 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 231 [ D.6164 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 409))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6164_229].nb_checkers+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 602 601 603 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 232 [ D.6165 ])
            (const_int 1 [0x1]))) src/gui.c:624 -1
     (nil))

(jump_insn 603 602 604 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 694)
            (pc))) src/gui.c:624 -1
     (nil)
 -> 694)
;; End of basic block 68 -> ( 69 75)

;; Succ edge  69 (fallthru)
;; Succ edge  75

;; Start of basic block ( 68) -> 69
;; Pred edge  68 (fallthru)
(note 604 603 605 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(insn 605 604 606 69 (set (reg/f:SI 410)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 606 605 607 69 (set (reg:SI 233 [ D.6167 ])
        (mem/s/j:SI (reg/f:SI 410) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 607 606 608 69 (parallel [
            (set (reg:SI 234 [ D.6168 ])
                (plus:SI (reg:SI 233 [ D.6167 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:624 -1
     (nil))

(insn 608 607 609 69 (set (reg/f:SI 411)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 609 608 610 69 (set (reg:SI 235 [ D.6169 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 234 [ D.6168 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 411)) [0 gameState_27(D)->zones[D.6168_232].player+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 610 609 611 69 (set (reg/f:SI 412)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 611 610 612 69 (set (reg:SI 236 [ D.6170 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 412)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 612 611 613 69 (parallel [
            (set (reg:SI 237 [ D.6171 ])
                (plus:SI (reg:SI 236 [ D.6170 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:624 -1
     (nil))

(insn 613 612 614 69 (set (reg/f:SI 413)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 614 613 615 69 (set (reg:SI 238 [ D.6172 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 237 [ D.6171 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 413)) [0 gameState_27(D)->zones[D.6171_235].player+0 S4 A32])) src/gui.c:624 -1
     (nil))

(insn 615 614 616 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 235 [ D.6169 ])
            (reg:SI 238 [ D.6172 ]))) src/gui.c:624 -1
     (nil))

(jump_insn 616 615 617 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 694)
            (pc))) src/gui.c:624 -1
     (nil)
 -> 694)
;; End of basic block 69 -> ( 70 75)

;; Succ edge  70 (fallthru)
;; Succ edge  75

;; Start of basic block ( 69) -> 70
;; Pred edge  69 (fallthru)
(note 617 616 618 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(insn 618 617 619 70 (set (reg/f:SI 414)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:626 -1
     (nil))

(insn 619 618 620 70 (set (reg:SI 239 [ D.6176 ])
        (mem/s/j:SI (reg/f:SI 414) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:626 -1
     (nil))

(insn 620 619 621 70 (set (reg/f:SI 415)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:626 -1
     (nil))

(insn 621 620 622 70 (set (reg:SI 240 [ D.6177 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 239 [ D.6176 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 415)) [0 gameState_27(D)->zones[D.6176_237].player+0 S4 A32])) src/gui.c:626 -1
     (nil))

(insn 622 621 623 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 240 [ D.6177 ])
            (const_int 0 [0]))) src/gui.c:626 -1
     (nil))

(jump_insn 623 622 624 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 661)
            (pc))) src/gui.c:626 -1
     (nil)
 -> 661)
;; End of basic block 70 -> ( 71 73)

;; Succ edge  71 (fallthru)
;; Succ edge  73

;; Start of basic block ( 70) -> 71
;; Pred edge  70 (fallthru)
(note 624 623 625 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(insn 625 624 626 71 (set (reg/f:SI 416)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:626 -1
     (nil))

(insn 626 625 627 71 (set (reg:SI 241 [ D.6179 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 416)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:626 -1
     (nil))

(insn 627 626 628 71 (set (reg/f:SI 417)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:626 -1
     (nil))

(insn 628 627 629 71 (set (reg:SI 242 [ D.6180 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 241 [ D.6179 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 417)) [0 gameState_27(D)->zones[D.6179_239].player+0 S4 A32])) src/gui.c:626 -1
     (nil))

(insn 629 628 630 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 242 [ D.6180 ])
            (const_int 1 [0x1]))) src/gui.c:626 -1
     (nil))

(jump_insn 630 629 631 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 661)
            (pc))) src/gui.c:626 -1
     (nil)
 -> 661)
;; End of basic block 71 -> ( 72 73)

;; Succ edge  72 (fallthru)
;; Succ edge  73

;; Start of basic block ( 71) -> 72
;; Pred edge  71 (fallthru)
(note 631 630 632 72 [bb 72] NOTE_INSN_BASIC_BLOCK)

(insn 632 631 633 72 (set (reg/f:SI 418)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:628 -1
     (nil))

(insn 633 632 634 72 (set (reg:SI 243 [ D.6182 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 418)
                (const_int 212 [0xd4])) [0 gameState_27(D)->zones[26].nb_checkers+0 S4 A32])) src/gui.c:628 -1
     (nil))

(insn 634 633 635 72 (parallel [
            (set (reg:SI 244 [ D.6183 ])
                (plus:SI (reg:SI 243 [ D.6182 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:628 -1
     (nil))

(insn 635 634 636 72 (set (reg/f:SI 419)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:628 -1
     (nil))

(insn 636 635 637 72 (set (mem/s/j:SI (plus:SI (reg/f:SI 419)
                (const_int 212 [0xd4])) [0 gameState_27(D)->zones[26].nb_checkers+0 S4 A32])
        (reg:SI 244 [ D.6183 ])) src/gui.c:628 -1
     (nil))

(insn 637 636 638 72 (set (reg/f:SI 420)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:629 -1
     (nil))

(insn 638 637 639 72 (set (reg:SI 245 [ D.6184 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 420)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:629 -1
     (nil))

(insn 639 638 640 72 (parallel [
            (set (reg:SI 246 [ D.6185 ])
                (plus:SI (reg:SI 245 [ D.6184 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:629 -1
     (nil))

(insn 640 639 641 72 (set (reg/f:SI 421)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:629 -1
     (nil))

(insn 641 640 642 72 (set (reg:SI 247 [ D.6186 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 246 [ D.6185 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 421)) [0 gameState_27(D)->zones[D.6185_244].player+0 S4 A32])) src/gui.c:629 -1
     (nil))

(insn 642 641 643 72 (set (reg/f:SI 422)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:629 -1
     (nil))

(insn 643 642 644 72 (set (mem/s/j:SI (plus:SI (reg/f:SI 422)
                (const_int 208 [0xd0])) [0 gameState_27(D)->zones[26].player+0 S4 A32])
        (reg:SI 247 [ D.6186 ])) src/gui.c:629 -1
     (nil))

(insn 644 643 645 72 (set (reg/f:SI 423)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:630 -1
     (nil))

(insn 645 644 646 72 (set (reg:SI 248 [ D.6187 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 423)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:630 -1
     (nil))

(insn 646 645 647 72 (parallel [
            (set (reg:SI 249 [ D.6188 ])
                (plus:SI (reg:SI 248 [ D.6187 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:630 -1
     (nil))

(insn 647 646 648 72 (set (reg/f:SI 424)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:630 -1
     (nil))

(insn 648 647 649 72 (set (reg:SI 250 [ D.6189 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 249 [ D.6188 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 424))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6188_247].nb_checkers+0 S4 A32])) src/gui.c:630 -1
     (nil))

(insn 649 648 650 72 (set (reg/f:SI 425)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:631 -1
     (nil))

(insn 650 649 651 72 (set (reg:SI 251 [ D.6190 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 425)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:631 -1
     (nil))

(insn 651 650 652 72 (parallel [
            (set (reg:SI 252 [ D.6191 ])
                (plus:SI (reg:SI 251 [ D.6190 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:631 -1
     (nil))

(insn 652 651 653 72 (set (reg/f:SI 426)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:631 -1
     (nil))

(insn 653 652 654 72 (set (reg:SI 253 [ D.6192 ])
        (mem/s/j:SI (reg/f:SI 426) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:631 -1
     (nil))

(insn 654 653 655 72 (parallel [
            (set (reg:SI 254 [ D.6193 ])
                (plus:SI (reg:SI 253 [ D.6192 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:631 -1
     (nil))

(insn 655 654 656 72 (set (reg/f:SI 427)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:631 -1
     (nil))

(insn 656 655 657 72 (set (reg:SI 255 [ D.6194 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 254 [ D.6193 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 427)) [0 gameState_27(D)->zones[D.6193_252].player+0 S4 A32])) src/gui.c:631 -1
     (nil))

(insn 657 656 658 72 (set (reg/f:SI 428)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:631 -1
     (nil))

(insn 658 657 659 72 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 252 [ D.6191 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 428)) [0 gameState_27(D)->zones[D.6191_250].player+0 S4 A32])
        (reg:SI 255 [ D.6194 ])) src/gui.c:631 -1
     (nil))

(jump_insn 659 658 660 72 (set (pc)
        (label_ref 690)) src/gui.c:631 -1
     (nil)
 -> 690)
;; End of basic block 72 -> ( 74)

;; Succ edge  74

(barrier 660 659 661)

;; Start of basic block ( 70 71) -> 73
;; Pred edge  70
;; Pred edge  71
(code_label 661 660 662 73 110 "" [2 uses])

(note 662 661 663 73 [bb 73] NOTE_INSN_BASIC_BLOCK)

(insn 663 662 664 73 (set (reg/f:SI 429)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:635 -1
     (nil))

(insn 664 663 665 73 (set (reg:SI 256 [ D.6195 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 429)
                (const_int 196 [0xc4])) [0 gameState_27(D)->zones[24].nb_checkers+0 S4 A32])) src/gui.c:635 -1
     (nil))

(insn 665 664 666 73 (parallel [
            (set (reg:SI 257 [ D.6196 ])
                (plus:SI (reg:SI 256 [ D.6195 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:635 -1
     (nil))

(insn 666 665 667 73 (set (reg/f:SI 430)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:635 -1
     (nil))

(insn 667 666 668 73 (set (mem/s/j:SI (plus:SI (reg/f:SI 430)
                (const_int 196 [0xc4])) [0 gameState_27(D)->zones[24].nb_checkers+0 S4 A32])
        (reg:SI 257 [ D.6196 ])) src/gui.c:635 -1
     (nil))

(insn 668 667 669 73 (set (reg/f:SI 431)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:636 -1
     (nil))

(insn 669 668 670 73 (set (reg:SI 258 [ D.6197 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 431)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:636 -1
     (nil))

(insn 670 669 671 73 (parallel [
            (set (reg:SI 259 [ D.6198 ])
                (plus:SI (reg:SI 258 [ D.6197 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:636 -1
     (nil))

(insn 671 670 672 73 (set (reg/f:SI 432)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:636 -1
     (nil))

(insn 672 671 673 73 (set (reg:SI 260 [ D.6199 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 259 [ D.6198 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 432)) [0 gameState_27(D)->zones[D.6198_257].player+0 S4 A32])) src/gui.c:636 -1
     (nil))

(insn 673 672 674 73 (set (reg/f:SI 433)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:636 -1
     (nil))

(insn 674 673 675 73 (set (mem/s/j:SI (plus:SI (reg/f:SI 433)
                (const_int 192 [0xc0])) [0 gameState_27(D)->zones[24].player+0 S4 A32])
        (reg:SI 260 [ D.6199 ])) src/gui.c:636 -1
     (nil))

(insn 675 674 676 73 (set (reg/f:SI 434)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:637 -1
     (nil))

(insn 676 675 677 73 (set (reg:SI 261 [ D.6200 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 434)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:637 -1
     (nil))

(insn 677 676 678 73 (parallel [
            (set (reg:SI 262 [ D.6201 ])
                (plus:SI (reg:SI 261 [ D.6200 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:637 -1
     (nil))

(insn 678 677 679 73 (set (reg/f:SI 435)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:637 -1
     (nil))

(insn 679 678 680 73 (set (reg:SI 263 [ D.6202 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 262 [ D.6201 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 435))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6201_260].nb_checkers+0 S4 A32])) src/gui.c:637 -1
     (nil))

(insn 680 679 681 73 (set (reg/f:SI 436)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:638 -1
     (nil))

(insn 681 680 682 73 (set (reg:SI 264 [ D.6203 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 436)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:638 -1
     (nil))

(insn 682 681 683 73 (parallel [
            (set (reg:SI 265 [ D.6204 ])
                (plus:SI (reg:SI 264 [ D.6203 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:638 -1
     (nil))

(insn 683 682 684 73 (set (reg/f:SI 437)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:638 -1
     (nil))

(insn 684 683 685 73 (set (reg:SI 266 [ D.6205 ])
        (mem/s/j:SI (reg/f:SI 437) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:638 -1
     (nil))

(insn 685 684 686 73 (parallel [
            (set (reg:SI 267 [ D.6206 ])
                (plus:SI (reg:SI 266 [ D.6205 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:638 -1
     (nil))

(insn 686 685 687 73 (set (reg/f:SI 438)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:638 -1
     (nil))

(insn 687 686 688 73 (set (reg:SI 268 [ D.6207 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 267 [ D.6206 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 438)) [0 gameState_27(D)->zones[D.6206_265].player+0 S4 A32])) src/gui.c:638 -1
     (nil))

(insn 688 687 689 73 (set (reg/f:SI 439)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:638 -1
     (nil))

(insn 689 688 690 73 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 265 [ D.6204 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 439)) [0 gameState_27(D)->zones[D.6204_263].player+0 S4 A32])
        (reg:SI 268 [ D.6207 ])) src/gui.c:638 -1
     (nil))
;; End of basic block 73 -> ( 74)

;; Succ edge  74 (fallthru)

;; Start of basic block ( 72 73) -> 74
;; Pred edge  72
;; Pred edge  73 (fallthru)
(code_label 690 689 691 74 111 "" [1 uses])

(note 691 690 692 74 [bb 74] NOTE_INSN_BASIC_BLOCK)

(jump_insn 692 691 693 74 (set (pc)
        (label_ref 714)) src/gui.c:626 -1
     (nil)
 -> 714)
;; End of basic block 74 -> ( 76)

;; Succ edge  76

(barrier 693 692 694)

;; Start of basic block ( 68 69) -> 75
;; Pred edge  68
;; Pred edge  69
(code_label 694 693 695 75 109 "" [2 uses])

(note 695 694 696 75 [bb 75] NOTE_INSN_BASIC_BLOCK)

(insn 696 695 697 75 (set (reg/f:SI 440)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:643 -1
     (nil))

(insn 697 696 698 75 (set (reg:SI 269 [ D.6208 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 440)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:643 -1
     (nil))

(insn 698 697 699 75 (parallel [
            (set (reg:SI 270 [ D.6209 ])
                (plus:SI (reg:SI 269 [ D.6208 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:643 -1
     (nil))

(insn 699 698 700 75 (set (reg/f:SI 441)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:643 -1
     (nil))

(insn 700 699 701 75 (set (reg:SI 271 [ D.6210 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 270 [ D.6209 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 441))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6209_268].nb_checkers+0 S4 A32])) src/gui.c:643 -1
     (nil))

(insn 701 700 702 75 (parallel [
            (set (reg:SI 272 [ D.6211 ])
                (plus:SI (reg:SI 271 [ D.6210 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:643 -1
     (nil))

(insn 702 701 703 75 (set (reg/f:SI 442)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:643 -1
     (nil))

(insn 703 702 704 75 (set (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 270 [ D.6209 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 442))
                (const_int 4 [0x4])) [0 gameState_27(D)->zones[D.6209_268].nb_checkers+0 S4 A32])
        (reg:SI 272 [ D.6211 ])) src/gui.c:643 -1
     (nil))

(insn 704 703 705 75 (set (reg/f:SI 443)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:644 -1
     (nil))

(insn 705 704 706 75 (set (reg:SI 273 [ D.6212 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 443)
                (const_int 4 [0x4])) [0 move_18(D)->dest_point+0 S4 A32])) src/gui.c:644 -1
     (nil))

(insn 706 705 707 75 (parallel [
            (set (reg:SI 274 [ D.6213 ])
                (plus:SI (reg:SI 273 [ D.6212 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:644 -1
     (nil))

(insn 707 706 708 75 (set (reg/f:SI 444)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 move+0 S4 A32])) src/gui.c:644 -1
     (nil))

(insn 708 707 709 75 (set (reg:SI 275 [ D.6214 ])
        (mem/s/j:SI (reg/f:SI 444) [0 move_18(D)->src_point+0 S4 A32])) src/gui.c:644 -1
     (nil))

(insn 709 708 710 75 (parallel [
            (set (reg:SI 276 [ D.6215 ])
                (plus:SI (reg:SI 275 [ D.6214 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:644 -1
     (nil))

(insn 710 709 711 75 (set (reg/f:SI 445)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:644 -1
     (nil))

(insn 711 710 712 75 (set (reg:SI 277 [ D.6216 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 276 [ D.6215 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 445)) [0 gameState_27(D)->zones[D.6215_274].player+0 S4 A32])) src/gui.c:644 -1
     (nil))

(insn 712 711 713 75 (set (reg/f:SI 446)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:644 -1
     (nil))

(insn 713 712 714 75 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 274 [ D.6213 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 446)) [0 gameState_27(D)->zones[D.6213_272].player+0 S4 A32])
        (reg:SI 277 [ D.6216 ])) src/gui.c:644 -1
     (nil))
;; End of basic block 75 -> ( 76)

;; Succ edge  76 (fallthru)

;; Start of basic block ( 74 75) -> 76
;; Pred edge  74
;; Pred edge  75 (fallthru)
(code_label 714 713 715 76 112 "" [1 uses])

(note 715 714 716 76 [bb 76] NOTE_INSN_BASIC_BLOCK)

(insn 716 715 717 76 (set (reg/f:SI 447)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 game+0 S4 A32])) src/gui.c:646 -1
     (nil))

(insn 717 716 718 76 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 447)) src/gui.c:646 -1
     (nil))

(insn 718 717 719 76 (set (reg/f:SI 448)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:646 -1
     (nil))

(insn 719 718 720 76 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 448)) src/gui.c:646 -1
     (nil))

(insn 720 719 721 76 (set (reg/f:SI 449)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:646 -1
     (nil))

(insn 721 720 722 76 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 449)) src/gui.c:646 -1
     (nil))

(call_insn 722 721 723 76 (call (mem:QI (symbol_ref:SI ("Display_RefreshGameBoard") [flags 0x3]  <function_decl 0x4081a780 Display_RefreshGameBoard>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:646 -1
     (nil)
    (nil))
;; End of basic block 76 -> ( 77)

;; Succ edge  77 (fallthru)

;; Start of basic block ( 76) -> 77
;; Pred edge  76 (fallthru)
(code_label 723 722 724 77 70 "" [0 uses])

(note 724 723 0 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 77 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Quit_Zone (Quit_Zone)

Quit_Zone (int x, int y)
{
  int D.5928;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  if (x_2(D) > 634)
    goto <bb 3>;
  else
    goto <bb 7>;
  # SUCC: 3 (true) 7 (false)

  # BLOCK 3
  # PRED: 2 (true)
  if (x_2(D) <= 795)
    goto <bb 4>;
  else
    goto <bb 7>;
  # SUCC: 4 (true) 7 (false)

  # BLOCK 4
  # PRED: 3 (true)
  if (y_3(D) > 243)
    goto <bb 5>;
  else
    goto <bb 7>;
  # SUCC: 5 (true) 7 (false)

  # BLOCK 5
  # PRED: 4 (true)
  if (y_3(D) <= 325)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 (true) 7 (false)

  # BLOCK 6
  # PRED: 5 (true)
  D.5928_4 = 1;
  goto <bb 8>;
  # SUCC: 8 (fallthru)

  # BLOCK 7
  # PRED: 2 (false) 3 (false) 4 (false) 5 (false)
  D.5928_5 = 0;
  # SUCC: 8 (fallthru)

  # BLOCK 8
  # PRED: 6 (fallthru) 7 (fallthru)
  # D.5928_1 = PHI <D.5928_4(6), D.5928_5(7)>
  return D.5928_1;
  # SUCC: EXIT

}



Partition map 

Partition 1 (D.5928_1 - 1 )
Partition 2 (x_2(D) - 2 )
Partition 3 (y_3(D) - 3 )
Partition 4 (D.5928_4 - 4 )
Partition 5 (D.5928_5 - 5 )


Partition map 

Partition 0 (D.5928_1 - 1 )
Partition 1 (x_2(D) - 2 )
Partition 2 (y_3(D) - 3 )
Partition 3 (D.5928_4 - 4 )
Partition 4 (D.5928_5 - 5 )


Live on entry to BB2 : x_2(D)  y_3(D)  

Live on entry to BB3 : x_2(D)  y_3(D)  

Live on entry to BB4 : y_3(D)  

Live on entry to BB5 : y_3(D)  

Live on entry to BB6 : 

Live on entry to BB7 : 

Live on entry to BB8 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (D.5928_1 - 1 )
Partition 1 (x_2(D) - 2 )
Partition 2 (y_3(D) - 3 )
Partition 3 (D.5928_4 - 4 )
Partition 4 (D.5928_5 - 5 )

Coalesce list: (1)D.5928_1 & (5)D.5928_5 [map: 0, 4] : Success -> 0
Coalesce list: (1)D.5928_1 & (4)D.5928_4 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (D.5928_1 - 1 4 5 )
Partition 1 (x_2(D) - 2 )
Partition 2 (y_3(D) - 3 )

Quit_Zone (int x, int y)
{
  int D.5928;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  if (x_2(D) > 634)
    goto <bb 3>;
  else
    goto <bb 7>;
  # SUCC: 3 (true) 7 (false)

  # BLOCK 3
  # PRED: 2 (true)
  if (x_2(D) <= 795)
    goto <bb 4>;
  else
    goto <bb 7>;
  # SUCC: 4 (true) 7 (false)

  # BLOCK 4
  # PRED: 3 (true)
  if (y_3(D) > 243)
    goto <bb 5>;
  else
    goto <bb 7>;
  # SUCC: 5 (true) 7 (false)

  # BLOCK 5
  # PRED: 4 (true)
  if (y_3(D) <= 325)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 (true) 7 (false)

  # BLOCK 6
  # PRED: 5 (true)
  D.5928_4 = 1;
  goto <bb 8>;
  # SUCC: 8 (fallthru)

  # BLOCK 7
  # PRED: 2 (false) 3 (false) 4 (false) 5 (false)
  D.5928_5 = 0;
  # SUCC: 8 (fallthru)

  # BLOCK 8
  # PRED: 6 (fallthru) 7 (fallthru)
  # D.5928_1 = PHI <D.5928_4(6), D.5928_5(7)>
  return D.5928_1;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; if (x_2(D) > 634)

(insn 5 4 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32])
            (const_int 634 [0x27a]))) src/gui.c:653 -1
     (nil))

(jump_insn 6 5 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:653 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (x_2(D) <= 795)

(insn 8 7 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32])
            (const_int 795 [0x31b]))) src/gui.c:653 -1
     (nil))

(jump_insn 9 8 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:653 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; if (y_3(D) > 243)

(insn 11 10 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 243 [0xf3]))) src/gui.c:653 -1
     (nil))

(jump_insn 12 11 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:653 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; if (y_3(D) <= 325)

(insn 14 13 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 325 [0x145]))) src/gui.c:653 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:653 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; D.5928_4 = 1;

(insn 17 16 0 (set (reg:SI 59 [ D.5928 ])
        (const_int 1 [0x1])) src/gui.c:655 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 20 19 21 122 "" [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; D.5928_5 = 0;

(insn 22 21 0 (set (reg:SI 59 [ D.5928 ])
        (const_int 0 [0])) src/gui.c:657 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 23 22 24 123 "" [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; return D.5928_1;

(insn 25 24 26 (set (reg:SI 60 [ <retval> ])
        (reg:SI 59 [ D.5928 ])) src/gui.c:657 -1
     (nil))

(jump_insn 26 25 27 (set (pc)
        (label_ref 0)) src/gui.c:657 -1
     (nil))

(barrier 27 26 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32])
            (const_int 634 [0x27a]))) src/gui.c:653 -1
     (nil))

(jump_insn 6 5 7 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) src/gui.c:653 -1
     (nil)
 -> 20)
;; End of basic block 3 -> ( 4 8)

;; Succ edge  4 (fallthru)
;; Succ edge  8

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 7 6 8 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32])
            (const_int 795 [0x31b]))) src/gui.c:653 -1
     (nil))

(jump_insn 9 8 10 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) src/gui.c:653 -1
     (nil)
 -> 20)
;; End of basic block 4 -> ( 5 8)

;; Succ edge  5 (fallthru)
;; Succ edge  8

;; Start of basic block ( 4) -> 5
;; Pred edge  4 (fallthru)
(note 10 9 11 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 243 [0xf3]))) src/gui.c:653 -1
     (nil))

(jump_insn 12 11 13 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) src/gui.c:653 -1
     (nil)
 -> 20)
;; End of basic block 5 -> ( 6 8)

;; Succ edge  6 (fallthru)
;; Succ edge  8

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 13 12 14 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 325 [0x145]))) src/gui.c:653 -1
     (nil))

(jump_insn 15 14 16 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) src/gui.c:653 -1
     (nil)
 -> 20)
;; End of basic block 6 -> ( 7 8)

;; Succ edge  7 (fallthru)
;; Succ edge  8

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(note 16 15 17 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 7 (set (reg:SI 59 [ D.5928 ])
        (const_int 1 [0x1])) src/gui.c:655 -1
     (nil))

(jump_insn 18 17 19 7 (set (pc)
        (label_ref 23)) src/gui.c:655 -1
     (nil)
 -> 23)
;; End of basic block 7 -> ( 9)

;; Succ edge  9

(barrier 19 18 20)

;; Start of basic block ( 3 4 5 6) -> 8
;; Pred edge  3
;; Pred edge  4
;; Pred edge  5
;; Pred edge  6
(code_label 20 19 21 8 122 "" [4 uses])

(note 21 20 22 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 8 (set (reg:SI 59 [ D.5928 ])
        (const_int 0 [0])) src/gui.c:657 -1
     (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 (fallthru)

;; Start of basic block ( 7 8) -> 9
;; Pred edge  7
;; Pred edge  8 (fallthru)
(code_label 23 22 24 9 123 "" [1 uses])

(note 24 23 25 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 9 (set (reg:SI 60 [ <retval> ])
        (reg:SI 59 [ D.5928 ])) src/gui.c:657 -1
     (nil))

(jump_insn 26 25 27 9 (set (pc)
        (label_ref 28)) src/gui.c:657 -1
     (nil)
 -> 28)
;; End of basic block 9 -> ( 11)

;; Succ edge  11

(barrier 27 26 33)

;; Start of basic block () -> 10
(note 33 27 30 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 30 33 31 10 (clobber (reg/i:SI 0 ax)) src/gui.c:658 -1
     (nil))

(insn 31 30 28 10 (clobber (reg:SI 60 [ <retval> ])) src/gui.c:658 -1
     (nil))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 (fallthru)

;; Start of basic block ( 9 10) -> 11
;; Pred edge  9
;; Pred edge  10 (fallthru)
(code_label 28 31 34 11 121 "" [1 uses])

(note 34 28 29 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 29 34 32 11 (set (reg/i:SI 0 ax)
        (reg:SI 60 [ <retval> ])) src/gui.c:658 -1
     (nil))

(insn 32 29 0 11 (use (reg/i:SI 0 ax)) src/gui.c:658 -1
     (nil))
;; End of basic block 11 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function CheckerWithScreenPosition (CheckerWithScreenPosition)

CheckerWithScreenPosition (int x, int y, EPosition * pos)
{
  EPosition tmpPos;
  EPosition tmpPos;
  EPosition tmpPos;
  EPosition tmpPos;
  int i;
  int D.5916;
  int D.5915;
  int D.5908;
  int D.5907;
  int D.5896;
  int D.5895;
  int D.5890;
  int D.5887;
  int D.5886;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  i_10 = 0;
  if (x_11(D) > 322)
    goto <bb 3>;
  else
    goto <bb 20>;
  # SUCC: 3 (true) 20 (false)

  # BLOCK 3
  # PRED: 2 (true)
  if (x_11(D) <= 554)
    goto <bb 4>;
  else
    goto <bb 20>;
  # SUCC: 4 (true) 20 (false)

  # BLOCK 4
  # PRED: 3 (true)
  if (y_12(D) > 422)
    goto <bb 5>;
  else
    goto <bb 12>;
  # SUCC: 5 (true) 12 (false)

  # BLOCK 5
  # PRED: 4 (true)
  if (y_12(D) <= 590)
    goto <bb 6>;
  else
    goto <bb 12>;
  # SUCC: 6 (true) 12 (false)

  # BLOCK 6
  # PRED: 5 (true)
  tmpPos_13 = 5;
  i_14 = 1;
  goto <bb 10>;
  # SUCC: 10 (fallthru)

  # BLOCK 7
  # PRED: 10 (true)
  D.5886_15 = i_1 * 40;
  D.5887_16 = D.5886_15 + 323;
  if (D.5887_16 >= x_11(D))
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 (true) 9 (false)

  # BLOCK 8
  # PRED: 7 (true)
  *pos_17(D) = tmpPos_5;
  D.5890_18 = 1;
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 9
  # PRED: 7 (false)
  tmpPos_19 = tmpPos_5 - 1;
  i_20 = i_1 + 1;
  # SUCC: 10 (fallthru)

  # BLOCK 10
  # PRED: 6 (fallthru) 9 (fallthru)
  # i_1 = PHI <i_14(6), i_20(9)>
  # tmpPos_5 = PHI <tmpPos_13(6), tmpPos_19(9)>
  if (i_1 <= 6)
    goto <bb 7>;
  else
    goto <bb 11>;
  # SUCC: 7 (true) 11 (false)

  # BLOCK 11
  # PRED: 10 (false)
  goto <bb 19>;
  # SUCC: 19 (fallthru)

  # BLOCK 12
  # PRED: 4 (false) 5 (false)
  if (y_12(D) > 141)
    goto <bb 13>;
  else
    goto <bb 19>;
  # SUCC: 13 (true) 19 (false)

  # BLOCK 13
  # PRED: 12 (true)
  if (y_12(D) <= 303)
    goto <bb 14>;
  else
    goto <bb 19>;
  # SUCC: 14 (true) 19 (false)

  # BLOCK 14
  # PRED: 13 (true)
  tmpPos_21 = 18;
  i_22 = 1;
  goto <bb 18>;
  # SUCC: 18 (fallthru)

  # BLOCK 15
  # PRED: 18 (true)
  D.5895_23 = i_2 * 40;
  D.5896_24 = D.5895_23 + 323;
  if (D.5896_24 >= x_11(D))
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 (true) 17 (false)

  # BLOCK 16
  # PRED: 15 (true)
  *pos_17(D) = tmpPos_6;
  D.5890_25 = 1;
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 17
  # PRED: 15 (false)
  tmpPos_26 = tmpPos_6 + 1;
  i_27 = i_2 + 1;
  # SUCC: 18 (fallthru)

  # BLOCK 18
  # PRED: 14 (fallthru) 17 (fallthru)
  # i_2 = PHI <i_22(14), i_27(17)>
  # tmpPos_6 = PHI <tmpPos_21(14), tmpPos_26(17)>
  if (i_2 <= 6)
    goto <bb 15>;
  else
    goto <bb 19>;
  # SUCC: 15 (true) 19 (false)

  # BLOCK 19
  # PRED: 11 (fallthru) 12 (false) 13 (false) 18 (false)
  goto <bb 37>;
  # SUCC: 37 (fallthru)

  # BLOCK 20
  # PRED: 2 (false) 3 (false)
  if (x_11(D) > 58)
    goto <bb 21>;
  else
    goto <bb 37>;
  # SUCC: 21 (true) 37 (false)

  # BLOCK 21
  # PRED: 20 (true)
  if (x_11(D) <= 289)
    goto <bb 22>;
  else
    goto <bb 37>;
  # SUCC: 22 (true) 37 (false)

  # BLOCK 22
  # PRED: 21 (true)
  if (y_12(D) > 422)
    goto <bb 23>;
  else
    goto <bb 30>;
  # SUCC: 23 (true) 30 (false)

  # BLOCK 23
  # PRED: 22 (true)
  if (y_12(D) <= 590)
    goto <bb 24>;
  else
    goto <bb 30>;
  # SUCC: 24 (true) 30 (false)

  # BLOCK 24
  # PRED: 23 (true)
  tmpPos_28 = 11;
  i_29 = 1;
  goto <bb 28>;
  # SUCC: 28 (fallthru)

  # BLOCK 25
  # PRED: 28 (true)
  D.5907_30 = i_3 * 40;
  D.5908_31 = D.5907_30 + 59;
  if (D.5908_31 >= x_11(D))
    goto <bb 26>;
  else
    goto <bb 27>;
  # SUCC: 26 (true) 27 (false)

  # BLOCK 26
  # PRED: 25 (true)
  *pos_17(D) = tmpPos_7;
  D.5890_32 = 1;
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 27
  # PRED: 25 (false)
  tmpPos_33 = tmpPos_7 - 1;
  i_34 = i_3 + 1;
  # SUCC: 28 (fallthru)

  # BLOCK 28
  # PRED: 24 (fallthru) 27 (fallthru)
  # i_3 = PHI <i_29(24), i_34(27)>
  # tmpPos_7 = PHI <tmpPos_28(24), tmpPos_33(27)>
  if (i_3 <= 6)
    goto <bb 25>;
  else
    goto <bb 29>;
  # SUCC: 25 (true) 29 (false)

  # BLOCK 29
  # PRED: 28 (false)
  goto <bb 37>;
  # SUCC: 37 (fallthru)

  # BLOCK 30
  # PRED: 22 (false) 23 (false)
  if (y_12(D) > 141)
    goto <bb 31>;
  else
    goto <bb 37>;
  # SUCC: 31 (true) 37 (false)

  # BLOCK 31
  # PRED: 30 (true)
  if (y_12(D) <= 303)
    goto <bb 32>;
  else
    goto <bb 37>;
  # SUCC: 32 (true) 37 (false)

  # BLOCK 32
  # PRED: 31 (true)
  tmpPos_35 = 12;
  i_36 = 1;
  goto <bb 36>;
  # SUCC: 36 (fallthru)

  # BLOCK 33
  # PRED: 36 (true)
  D.5915_37 = i_4 * 40;
  D.5916_38 = D.5915_37 + 59;
  if (D.5916_38 >= x_11(D))
    goto <bb 34>;
  else
    goto <bb 35>;
  # SUCC: 34 (true) 35 (false)

  # BLOCK 34
  # PRED: 33 (true)
  *pos_17(D) = tmpPos_8;
  D.5890_39 = 1;
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 35
  # PRED: 33 (false)
  tmpPos_40 = tmpPos_8 + 1;
  i_41 = i_4 + 1;
  # SUCC: 36 (fallthru)

  # BLOCK 36
  # PRED: 32 (fallthru) 35 (fallthru)
  # i_4 = PHI <i_36(32), i_41(35)>
  # tmpPos_8 = PHI <tmpPos_35(32), tmpPos_40(35)>
  if (i_4 <= 6)
    goto <bb 33>;
  else
    goto <bb 37>;
  # SUCC: 33 (true) 37 (false)

  # BLOCK 37
  # PRED: 19 (fallthru) 20 (false) 21 (false) 29 (fallthru) 30 (false) 31 (false) 36 (false)
  D.5890_42 = 0;
  # SUCC: 38 (fallthru)

  # BLOCK 38
  # PRED: 8 (fallthru) 16 (fallthru) 26 (fallthru) 34 (fallthru) 37 (fallthru)
  # D.5890_9 = PHI <D.5890_18(8), D.5890_25(16), D.5890_32(26), D.5890_39(34), D.5890_42(37)>
  return D.5890_9;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (i_3 - 3 )
Partition 4 (i_4 - 4 )
Partition 5 (tmpPos_5 - 5 )
Partition 6 (tmpPos_6 - 6 )
Partition 7 (tmpPos_7 - 7 )
Partition 8 (tmpPos_8 - 8 )
Partition 9 (D.5890_9 - 9 )
Partition 10 (i_10 - 10 )
Partition 11 (x_11(D) - 11 )
Partition 12 (y_12(D) - 12 )
Partition 13 (tmpPos_13 - 13 )
Partition 14 (i_14 - 14 )
Partition 15 (D.5886_15 - 15 )
Partition 16 (D.5887_16 - 16 )
Partition 17 (pos_17(D) - 17 )
Partition 18 (D.5890_18 - 18 )
Partition 19 (tmpPos_19 - 19 )
Partition 20 (i_20 - 20 )
Partition 21 (tmpPos_21 - 21 )
Partition 22 (i_22 - 22 )
Partition 23 (D.5895_23 - 23 )
Partition 24 (D.5896_24 - 24 )
Partition 25 (D.5890_25 - 25 )
Partition 26 (tmpPos_26 - 26 )
Partition 27 (i_27 - 27 )
Partition 28 (tmpPos_28 - 28 )
Partition 29 (i_29 - 29 )
Partition 30 (D.5907_30 - 30 )
Partition 31 (D.5908_31 - 31 )
Partition 32 (D.5890_32 - 32 )
Partition 33 (tmpPos_33 - 33 )
Partition 34 (i_34 - 34 )
Partition 35 (tmpPos_35 - 35 )
Partition 36 (i_36 - 36 )
Partition 37 (D.5915_37 - 37 )
Partition 38 (D.5916_38 - 38 )
Partition 39 (D.5890_39 - 39 )
Partition 40 (tmpPos_40 - 40 )
Partition 41 (i_41 - 41 )
Partition 42 (D.5890_42 - 42 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (i_4 - 4 )
Partition 4 (tmpPos_5 - 5 )
Partition 5 (tmpPos_6 - 6 )
Partition 6 (tmpPos_7 - 7 )
Partition 7 (tmpPos_8 - 8 )
Partition 8 (D.5890_9 - 9 )
Partition 9 (i_10 - 10 )
Partition 10 (x_11(D) - 11 )
Partition 11 (y_12(D) - 12 )
Partition 12 (tmpPos_13 - 13 )
Partition 13 (i_14 - 14 )
Partition 14 (pos_17(D) - 17 )
Partition 15 (D.5890_18 - 18 )
Partition 16 (tmpPos_19 - 19 )
Partition 17 (i_20 - 20 )
Partition 18 (tmpPos_21 - 21 )
Partition 19 (i_22 - 22 )
Partition 20 (D.5890_25 - 25 )
Partition 21 (tmpPos_26 - 26 )
Partition 22 (i_27 - 27 )
Partition 23 (tmpPos_28 - 28 )
Partition 24 (i_29 - 29 )
Partition 25 (D.5890_32 - 32 )
Partition 26 (tmpPos_33 - 33 )
Partition 27 (i_34 - 34 )
Partition 28 (tmpPos_35 - 35 )
Partition 29 (i_36 - 36 )
Partition 30 (D.5890_39 - 39 )
Partition 31 (tmpPos_40 - 40 )
Partition 32 (i_41 - 41 )
Partition 33 (D.5890_42 - 42 )


Live on entry to BB2 : x_11(D)  y_12(D)  pos_17(D)  

Live on entry to BB3 : x_11(D)  y_12(D)  pos_17(D)  

Live on entry to BB4 : x_11(D)  y_12(D)  pos_17(D)  

Live on entry to BB5 : x_11(D)  y_12(D)  pos_17(D)  

Live on entry to BB6 : x_11(D)  pos_17(D)  

Live on entry to BB7 : i_1  tmpPos_5  x_11(D)  pos_17(D)  

Live on entry to BB8 : tmpPos_5  pos_17(D)  

Live on entry to BB9 : i_1  tmpPos_5  x_11(D)  pos_17(D)  

Live on entry to BB10 : x_11(D)  pos_17(D)  

Live on entry to BB11 : 

Live on entry to BB12 : x_11(D)  y_12(D)  pos_17(D)  

Live on entry to BB13 : x_11(D)  y_12(D)  pos_17(D)  

Live on entry to BB14 : x_11(D)  pos_17(D)  

Live on entry to BB15 : i_2  tmpPos_6  x_11(D)  pos_17(D)  

Live on entry to BB16 : tmpPos_6  pos_17(D)  

Live on entry to BB17 : i_2  tmpPos_6  x_11(D)  pos_17(D)  

Live on entry to BB18 : x_11(D)  pos_17(D)  

Live on entry to BB19 : 

Live on entry to BB20 : x_11(D)  y_12(D)  pos_17(D)  

Live on entry to BB21 : x_11(D)  y_12(D)  pos_17(D)  

Live on entry to BB22 : x_11(D)  y_12(D)  pos_17(D)  

Live on entry to BB23 : x_11(D)  y_12(D)  pos_17(D)  

Live on entry to BB24 : x_11(D)  pos_17(D)  

Live on entry to BB25 : i_3  tmpPos_7  x_11(D)  pos_17(D)  

Live on entry to BB26 : tmpPos_7  pos_17(D)  

Live on entry to BB27 : i_3  tmpPos_7  x_11(D)  pos_17(D)  

Live on entry to BB28 : x_11(D)  pos_17(D)  

Live on entry to BB29 : 

Live on entry to BB30 : x_11(D)  y_12(D)  pos_17(D)  

Live on entry to BB31 : x_11(D)  y_12(D)  pos_17(D)  

Live on entry to BB32 : x_11(D)  pos_17(D)  

Live on entry to BB33 : i_4  tmpPos_8  x_11(D)  pos_17(D)  

Live on entry to BB34 : tmpPos_8  pos_17(D)  

Live on entry to BB35 : i_4  tmpPos_8  x_11(D)  pos_17(D)  

Live on entry to BB36 : x_11(D)  pos_17(D)  

Live on entry to BB37 : 

Live on entry to BB38 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_2
(2147483646) i_1 <-> i_3
(2147483646) i_1 <-> i_4
(2147483646) i_1 <-> i_10
(2147483646) i_1 <-> i_14
(2147483646) i_1 <-> i_20
(2147483646) i_1 <-> i_22
(2147483646) i_1 <-> i_27
(2147483646) i_1 <-> i_29
(2147483646) i_1 <-> i_34
(2147483646) i_1 <-> i_36
(2147483646) i_1 <-> i_41
(2147483646) tmpPos_5 <-> tmpPos_13
(2147483646) tmpPos_5 <-> tmpPos_19
(2147483646) tmpPos_6 <-> tmpPos_21
(2147483646) tmpPos_6 <-> tmpPos_26
(2147483646) tmpPos_7 <-> tmpPos_28
(2147483646) tmpPos_7 <-> tmpPos_33
(2147483646) tmpPos_8 <-> tmpPos_35
(2147483646) tmpPos_8 <-> tmpPos_40

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (i_4 - 4 )
Partition 4 (tmpPos_5 - 5 )
Partition 5 (tmpPos_6 - 6 )
Partition 6 (tmpPos_7 - 7 )
Partition 7 (tmpPos_8 - 8 )
Partition 8 (D.5890_9 - 9 )
Partition 9 (i_10 - 10 )
Partition 10 (x_11(D) - 11 )
Partition 11 (y_12(D) - 12 )
Partition 12 (tmpPos_13 - 13 )
Partition 13 (i_14 - 14 )
Partition 14 (pos_17(D) - 17 )
Partition 15 (D.5890_18 - 18 )
Partition 16 (tmpPos_19 - 19 )
Partition 17 (i_20 - 20 )
Partition 18 (tmpPos_21 - 21 )
Partition 19 (i_22 - 22 )
Partition 20 (D.5890_25 - 25 )
Partition 21 (tmpPos_26 - 26 )
Partition 22 (i_27 - 27 )
Partition 23 (tmpPos_28 - 28 )
Partition 24 (i_29 - 29 )
Partition 25 (D.5890_32 - 32 )
Partition 26 (tmpPos_33 - 33 )
Partition 27 (i_34 - 34 )
Partition 28 (tmpPos_35 - 35 )
Partition 29 (i_36 - 36 )
Partition 30 (D.5890_39 - 39 )
Partition 31 (tmpPos_40 - 40 )
Partition 32 (i_41 - 41 )
Partition 33 (D.5890_42 - 42 )

Coalesce list: (1)i_1 & (2)i_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (3)i_3 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (4)i_4 [map: 0, 3] : Success -> 0
Coalesce list: (1)i_1 & (10)i_10 [map: 0, 9] : Success -> 0
Coalesce list: (1)i_1 & (14)i_14 [map: 0, 13] : Success -> 0
Coalesce list: (1)i_1 & (20)i_20 [map: 0, 17] : Success -> 0
Coalesce list: (1)i_1 & (22)i_22 [map: 0, 19] : Success -> 0
Coalesce list: (1)i_1 & (27)i_27 [map: 0, 22] : Success -> 0
Coalesce list: (1)i_1 & (29)i_29 [map: 0, 24] : Success -> 0
Coalesce list: (1)i_1 & (34)i_34 [map: 0, 27] : Success -> 0
Coalesce list: (1)i_1 & (36)i_36 [map: 0, 29] : Success -> 0
Coalesce list: (1)i_1 & (41)i_41 [map: 0, 32] : Success -> 0
Coalesce list: (5)tmpPos_5 & (13)tmpPos_13 [map: 4, 12] : Success -> 4
Coalesce list: (5)tmpPos_5 & (19)tmpPos_19 [map: 4, 16] : Success -> 4
Coalesce list: (6)tmpPos_6 & (21)tmpPos_21 [map: 5, 18] : Success -> 5
Coalesce list: (6)tmpPos_6 & (26)tmpPos_26 [map: 5, 21] : Success -> 5
Coalesce list: (7)tmpPos_7 & (28)tmpPos_28 [map: 6, 23] : Success -> 6
Coalesce list: (7)tmpPos_7 & (33)tmpPos_33 [map: 6, 26] : Success -> 6
Coalesce list: (8)tmpPos_8 & (35)tmpPos_35 [map: 7, 28] : Success -> 7
Coalesce list: (8)tmpPos_8 & (40)tmpPos_40 [map: 7, 31] : Success -> 7
Coalesce list: (9)D.5890_9 & (42)D.5890_42 [map: 8, 33] : Success -> 8
Coalesce list: (9)D.5890_9 & (39)D.5890_39 [map: 8, 30] : Success -> 8
Coalesce list: (9)D.5890_9 & (32)D.5890_32 [map: 8, 25] : Success -> 8
Coalesce list: (9)D.5890_9 & (25)D.5890_25 [map: 8, 20] : Success -> 8
Coalesce list: (9)D.5890_9 & (18)D.5890_18 [map: 8, 15] : Success -> 8
Coalesce list: (8)tmpPos_8 & (40)tmpPos_8: Already Coalesced.
Coalesce list: (8)tmpPos_8 & (35)tmpPos_8: Already Coalesced.
Coalesce list: (4)i_1 & (41)i_1: Already Coalesced.
Coalesce list: (4)i_1 & (36)i_1: Already Coalesced.
Coalesce list: (7)tmpPos_7 & (33)tmpPos_7: Already Coalesced.
Coalesce list: (7)tmpPos_7 & (28)tmpPos_7: Already Coalesced.
Coalesce list: (3)i_1 & (34)i_1: Already Coalesced.
Coalesce list: (3)i_1 & (29)i_1: Already Coalesced.
Coalesce list: (6)tmpPos_6 & (26)tmpPos_6: Already Coalesced.
Coalesce list: (6)tmpPos_6 & (21)tmpPos_6: Already Coalesced.
Coalesce list: (2)i_1 & (27)i_1: Already Coalesced.
Coalesce list: (2)i_1 & (22)i_1: Already Coalesced.
Coalesce list: (5)tmpPos_5 & (19)tmpPos_5: Already Coalesced.
Coalesce list: (5)tmpPos_5 & (13)tmpPos_5: Already Coalesced.
Coalesce list: (1)i_1 & (20)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (14)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 2 3 4 10 14 20 22 27 29 34 36 41 )
Partition 1 (tmpPos_5 - 5 13 19 )
Partition 2 (tmpPos_6 - 6 21 26 )
Partition 3 (tmpPos_7 - 7 28 33 )
Partition 4 (tmpPos_8 - 8 35 40 )
Partition 5 (D.5890_9 - 9 18 25 32 39 42 )
Partition 6 (x_11(D) - 11 )
Partition 7 (y_12(D) - 12 )
Partition 8 (D.5886_15 - 15 )
Partition 9 (D.5887_16 - 16 )
Partition 10 (pos_17(D) - 17 )
Partition 11 (D.5895_23 - 23 )
Partition 12 (D.5896_24 - 24 )
Partition 13 (D.5907_30 - 30 )
Partition 14 (D.5908_31 - 31 )
Partition 15 (D.5915_37 - 37 )
Partition 16 (D.5916_38 - 38 )

CheckerWithScreenPosition (int x, int y, EPosition * pos)
{
  EPosition tmpPos;
  EPosition tmpPos;
  EPosition tmpPos;
  EPosition tmpPos;
  int i;
  int D.5916;
  int D.5915;
  int D.5908;
  int D.5907;
  int D.5896;
  int D.5895;
  int D.5890;
  int D.5887;
  int D.5886;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  i_10 = 0;
  if (x_11(D) > 322)
    goto <bb 3>;
  else
    goto <bb 20>;
  # SUCC: 3 (true) 20 (false)

  # BLOCK 3
  # PRED: 2 (true)
  if (x_11(D) <= 554)
    goto <bb 4>;
  else
    goto <bb 20>;
  # SUCC: 4 (true) 20 (false)

  # BLOCK 4
  # PRED: 3 (true)
  if (y_12(D) > 422)
    goto <bb 5>;
  else
    goto <bb 12>;
  # SUCC: 5 (true) 12 (false)

  # BLOCK 5
  # PRED: 4 (true)
  if (y_12(D) <= 590)
    goto <bb 6>;
  else
    goto <bb 12>;
  # SUCC: 6 (true) 12 (false)

  # BLOCK 6
  # PRED: 5 (true)
  tmpPos_13 = 5;
  i_14 = 1;
  goto <bb 10>;
  # SUCC: 10 (fallthru)

  # BLOCK 7
  # PRED: 10 (true)
  D.5886_15 = i_1 * 40;
  D.5887_16 = D.5886_15 + 323;
  if (D.5887_16 >= x_11(D))
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 (true) 9 (false)

  # BLOCK 8
  # PRED: 7 (true)
  *pos_17(D) = tmpPos_5;
  D.5890_18 = 1;
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 9
  # PRED: 7 (false)
  tmpPos_19 = tmpPos_5 - 1;
  i_20 = i_1 + 1;
  # SUCC: 10 (fallthru)

  # BLOCK 10
  # PRED: 6 (fallthru) 9 (fallthru)
  # i_1 = PHI <i_14(6), i_20(9)>
  # tmpPos_5 = PHI <tmpPos_13(6), tmpPos_19(9)>
  if (i_1 <= 6)
    goto <bb 7>;
  else
    goto <bb 11>;
  # SUCC: 7 (true) 11 (false)

  # BLOCK 11
  # PRED: 10 (false)
  goto <bb 19>;
  # SUCC: 19 (fallthru)

  # BLOCK 12
  # PRED: 4 (false) 5 (false)
  if (y_12(D) > 141)
    goto <bb 13>;
  else
    goto <bb 19>;
  # SUCC: 13 (true) 19 (false)

  # BLOCK 13
  # PRED: 12 (true)
  if (y_12(D) <= 303)
    goto <bb 14>;
  else
    goto <bb 19>;
  # SUCC: 14 (true) 19 (false)

  # BLOCK 14
  # PRED: 13 (true)
  tmpPos_21 = 18;
  i_22 = 1;
  goto <bb 18>;
  # SUCC: 18 (fallthru)

  # BLOCK 15
  # PRED: 18 (true)
  D.5895_23 = i_2 * 40;
  D.5896_24 = D.5895_23 + 323;
  if (D.5896_24 >= x_11(D))
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 (true) 17 (false)

  # BLOCK 16
  # PRED: 15 (true)
  *pos_17(D) = tmpPos_6;
  D.5890_25 = 1;
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 17
  # PRED: 15 (false)
  tmpPos_26 = tmpPos_6 + 1;
  i_27 = i_2 + 1;
  # SUCC: 18 (fallthru)

  # BLOCK 18
  # PRED: 14 (fallthru) 17 (fallthru)
  # i_2 = PHI <i_22(14), i_27(17)>
  # tmpPos_6 = PHI <tmpPos_21(14), tmpPos_26(17)>
  if (i_2 <= 6)
    goto <bb 15>;
  else
    goto <bb 19>;
  # SUCC: 15 (true) 19 (false)

  # BLOCK 19
  # PRED: 11 (fallthru) 12 (false) 13 (false) 18 (false)
  goto <bb 37>;
  # SUCC: 37 (fallthru)

  # BLOCK 20
  # PRED: 2 (false) 3 (false)
  if (x_11(D) > 58)
    goto <bb 21>;
  else
    goto <bb 37>;
  # SUCC: 21 (true) 37 (false)

  # BLOCK 21
  # PRED: 20 (true)
  if (x_11(D) <= 289)
    goto <bb 22>;
  else
    goto <bb 37>;
  # SUCC: 22 (true) 37 (false)

  # BLOCK 22
  # PRED: 21 (true)
  if (y_12(D) > 422)
    goto <bb 23>;
  else
    goto <bb 30>;
  # SUCC: 23 (true) 30 (false)

  # BLOCK 23
  # PRED: 22 (true)
  if (y_12(D) <= 590)
    goto <bb 24>;
  else
    goto <bb 30>;
  # SUCC: 24 (true) 30 (false)

  # BLOCK 24
  # PRED: 23 (true)
  tmpPos_28 = 11;
  i_29 = 1;
  goto <bb 28>;
  # SUCC: 28 (fallthru)

  # BLOCK 25
  # PRED: 28 (true)
  D.5907_30 = i_3 * 40;
  D.5908_31 = D.5907_30 + 59;
  if (D.5908_31 >= x_11(D))
    goto <bb 26>;
  else
    goto <bb 27>;
  # SUCC: 26 (true) 27 (false)

  # BLOCK 26
  # PRED: 25 (true)
  *pos_17(D) = tmpPos_7;
  D.5890_32 = 1;
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 27
  # PRED: 25 (false)
  tmpPos_33 = tmpPos_7 - 1;
  i_34 = i_3 + 1;
  # SUCC: 28 (fallthru)

  # BLOCK 28
  # PRED: 24 (fallthru) 27 (fallthru)
  # i_3 = PHI <i_29(24), i_34(27)>
  # tmpPos_7 = PHI <tmpPos_28(24), tmpPos_33(27)>
  if (i_3 <= 6)
    goto <bb 25>;
  else
    goto <bb 29>;
  # SUCC: 25 (true) 29 (false)

  # BLOCK 29
  # PRED: 28 (false)
  goto <bb 37>;
  # SUCC: 37 (fallthru)

  # BLOCK 30
  # PRED: 22 (false) 23 (false)
  if (y_12(D) > 141)
    goto <bb 31>;
  else
    goto <bb 37>;
  # SUCC: 31 (true) 37 (false)

  # BLOCK 31
  # PRED: 30 (true)
  if (y_12(D) <= 303)
    goto <bb 32>;
  else
    goto <bb 37>;
  # SUCC: 32 (true) 37 (false)

  # BLOCK 32
  # PRED: 31 (true)
  tmpPos_35 = 12;
  i_36 = 1;
  goto <bb 36>;
  # SUCC: 36 (fallthru)

  # BLOCK 33
  # PRED: 36 (true)
  D.5915_37 = i_4 * 40;
  D.5916_38 = D.5915_37 + 59;
  if (D.5916_38 >= x_11(D))
    goto <bb 34>;
  else
    goto <bb 35>;
  # SUCC: 34 (true) 35 (false)

  # BLOCK 34
  # PRED: 33 (true)
  *pos_17(D) = tmpPos_8;
  D.5890_39 = 1;
  goto <bb 38>;
  # SUCC: 38 (fallthru)

  # BLOCK 35
  # PRED: 33 (false)
  tmpPos_40 = tmpPos_8 + 1;
  i_41 = i_4 + 1;
  # SUCC: 36 (fallthru)

  # BLOCK 36
  # PRED: 32 (fallthru) 35 (fallthru)
  # i_4 = PHI <i_36(32), i_41(35)>
  # tmpPos_8 = PHI <tmpPos_35(32), tmpPos_40(35)>
  if (i_4 <= 6)
    goto <bb 33>;
  else
    goto <bb 37>;
  # SUCC: 33 (true) 37 (false)

  # BLOCK 37
  # PRED: 19 (fallthru) 20 (false) 21 (false) 29 (fallthru) 30 (false) 31 (false) 36 (false)
  D.5890_42 = 0;
  # SUCC: 38 (fallthru)

  # BLOCK 38
  # PRED: 8 (fallthru) 16 (fallthru) 26 (fallthru) 34 (fallthru) 37 (fallthru)
  # D.5890_9 = PHI <D.5890_18(8), D.5890_25(16), D.5890_32(26), D.5890_39(34), D.5890_42(37)>
  return D.5890_9;
  # SUCC: EXIT

}


Partition 4: size 4 align 4
	tmpPos_8, offset 0
Partition 3: size 4 align 4
	tmpPos_7, offset 0
Partition 2: size 4 align 4
	tmpPos_6, offset 0
Partition 1: size 4 align 4
	tmpPos_5, offset 0
Partition 0: size 4 align 4
	i_1, offset 0

;; Generating RTL for gimple basic block 2

;; i_10 = 0;

(insn 5 4 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:662 -1
     (nil))

;; if (x_11(D) > 322)

(insn 6 5 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32])
            (const_int 322 [0x142]))) src/gui.c:664 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:664 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (x_11(D) <= 554)

(insn 9 8 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32])
            (const_int 554 [0x22a]))) src/gui.c:664 -1
     (nil))

(jump_insn 10 9 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:664 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; if (y_12(D) > 422)

(insn 12 11 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 422 [0x1a6]))) src/gui.c:667 -1
     (nil))

(jump_insn 13 12 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:667 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; if (y_12(D) <= 590)

(insn 15 14 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 590 [0x24e]))) src/gui.c:667 -1
     (nil))

(jump_insn 16 15 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:667 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; tmpPos_13 = 5;

(insn 18 17 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 tmpPos+0 S4 A32])
        (const_int 5 [0x5])) src/gui.c:670 -1
     (nil))

;; i_14 = 1;

(insn 19 18 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:671 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; D.5886_15 = i_1 * 40;

(insn 23 22 24 (set (reg:SI 69)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:674 -1
     (nil))

(insn 24 23 25 (set (reg:SI 70)
        (reg:SI 69)) src/gui.c:674 -1
     (nil))

(insn 25 24 26 (parallel [
            (set (reg:SI 70)
                (ashift:SI (reg:SI 70)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:674 -1
     (nil))

(insn 26 25 27 (parallel [
            (set (reg:SI 70)
                (plus:SI (reg:SI 70)
                    (reg:SI 69)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:674 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 69)
            (const_int 5 [0x5]))
        (nil)))

(insn 27 26 28 (parallel [
            (set (reg:SI 71)
                (ashift:SI (reg:SI 70)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:674 -1
     (nil))

(insn 28 27 29 (set (reg:SI 70)
        (reg:SI 71)) src/gui.c:674 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 69)
            (const_int 40 [0x28]))
        (nil)))

(insn 29 28 0 (set (reg:SI 60 [ D.5886 ])
        (reg:SI 70)) src/gui.c:674 -1
     (nil))

;; D.5887_16 = D.5886_15 + 323;

(insn 30 29 0 (parallel [
            (set (reg:SI 61 [ D.5887 ])
                (plus:SI (reg:SI 60 [ D.5886 ])
                    (const_int 323 [0x143])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:674 -1
     (nil))

;; if (D.5887_16 >= x_11(D))

(insn 31 30 32 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 61 [ D.5887 ])
            (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32]))) src/gui.c:674 -1
     (nil))

(jump_insn 32 31 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:674 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; *pos_17(D) = tmpPos_5;

(insn 34 33 35 (set (reg/f:SI 72)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 pos+0 S4 A32])) src/gui.c:676 -1
     (nil))

(insn 35 34 36 (set (reg:SI 73)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 tmpPos+0 S4 A32])) src/gui.c:676 -1
     (nil))

(insn 36 35 0 (set (mem:SI (reg/f:SI 72) [0 *pos_17(D)+0 S4 A32])
        (reg:SI 73)) src/gui.c:676 -1
     (nil))

;; D.5890_18 = 1;

(insn 37 36 0 (set (reg:SI 59 [ D.5890 ])
        (const_int 1 [0x1])) src/gui.c:677 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 40 39 41 128 "" [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; tmpPos_19 = tmpPos_5 - 1;

(insn 42 41 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 tmpPos+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 tmpPos+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:679 -1
     (nil))

;; i_20 = i_1 + 1;

(insn 43 42 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:671 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 44 43 45 127 "" [0 uses])

(note 45 44 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 <= 6)

(insn 47 45 48 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 6 [0x6]))) src/gui.c:671 -1
     (nil))

(jump_insn 48 47 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) src/gui.c:671 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; 

(code_label 52 51 53 126 "" [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; if (y_12(D) > 141)

(insn 54 53 55 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 141 [0x8d]))) src/gui.c:682 -1
     (nil))

(jump_insn 55 54 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:682 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; if (y_12(D) <= 303)

(insn 57 56 58 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 303 [0x12f]))) src/gui.c:682 -1
     (nil))

(jump_insn 58 57 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:682 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; tmpPos_21 = 18;

(insn 60 59 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 tmpPos+0 S4 A32])
        (const_int 18 [0x12])) src/gui.c:685 -1
     (nil))

;; i_22 = 1;

(insn 61 60 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:686 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; D.5895_23 = i_2 * 40;

(insn 65 64 66 (set (reg:SI 74)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:688 -1
     (nil))

(insn 66 65 67 (set (reg:SI 75)
        (reg:SI 74)) src/gui.c:688 -1
     (nil))

(insn 67 66 68 (parallel [
            (set (reg:SI 75)
                (ashift:SI (reg:SI 75)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:688 -1
     (nil))

(insn 68 67 69 (parallel [
            (set (reg:SI 75)
                (plus:SI (reg:SI 75)
                    (reg:SI 74)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:688 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 74)
            (const_int 5 [0x5]))
        (nil)))

(insn 69 68 70 (parallel [
            (set (reg:SI 76)
                (ashift:SI (reg:SI 75)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:688 -1
     (nil))

(insn 70 69 71 (set (reg:SI 75)
        (reg:SI 76)) src/gui.c:688 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 74)
            (const_int 40 [0x28]))
        (nil)))

(insn 71 70 0 (set (reg:SI 62 [ D.5895 ])
        (reg:SI 75)) src/gui.c:688 -1
     (nil))

;; D.5896_24 = D.5895_23 + 323;

(insn 72 71 0 (parallel [
            (set (reg:SI 63 [ D.5896 ])
                (plus:SI (reg:SI 62 [ D.5895 ])
                    (const_int 323 [0x143])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:688 -1
     (nil))

;; if (D.5896_24 >= x_11(D))

(insn 73 72 74 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 63 [ D.5896 ])
            (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32]))) src/gui.c:688 -1
     (nil))

(jump_insn 74 73 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:688 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; *pos_17(D) = tmpPos_6;

(insn 76 75 77 (set (reg/f:SI 77)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 pos+0 S4 A32])) src/gui.c:690 -1
     (nil))

(insn 77 76 78 (set (reg:SI 78)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 tmpPos+0 S4 A32])) src/gui.c:690 -1
     (nil))

(insn 78 77 0 (set (mem:SI (reg/f:SI 77) [0 *pos_17(D)+0 S4 A32])
        (reg:SI 78)) src/gui.c:690 -1
     (nil))

;; D.5890_25 = 1;

(insn 79 78 0 (set (reg:SI 59 [ D.5890 ])
        (const_int 1 [0x1])) src/gui.c:691 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; 

(code_label 82 81 83 133 "" [0 uses])

(note 83 82 0 NOTE_INSN_BASIC_BLOCK)

;; tmpPos_26 = tmpPos_6 + 1;

(insn 84 83 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 tmpPos+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 tmpPos+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:693 -1
     (nil))

;; i_27 = i_2 + 1;

(insn 85 84 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:686 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 86 85 87 132 "" [0 uses])

(note 87 86 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_2 <= 6)

(insn 89 87 90 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 6 [0x6]))) src/gui.c:686 -1
     (nil))

(jump_insn 90 89 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) src/gui.c:686 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; 

(code_label 91 90 92 131 "" [0 uses])

(note 92 91 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 20

;; 

(code_label 95 94 96 125 "" [0 uses])

(note 96 95 0 NOTE_INSN_BASIC_BLOCK)

;; if (x_11(D) > 58)

(insn 97 96 98 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32])
            (const_int 58 [0x3a]))) src/gui.c:698 -1
     (nil))

(jump_insn 98 97 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:698 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; if (x_11(D) <= 289)

(insn 100 99 101 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32])
            (const_int 289 [0x121]))) src/gui.c:698 -1
     (nil))

(jump_insn 101 100 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:698 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; if (y_12(D) > 422)

(insn 103 102 104 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 422 [0x1a6]))) src/gui.c:700 -1
     (nil))

(jump_insn 104 103 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:700 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; if (y_12(D) <= 590)

(insn 106 105 107 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 590 [0x24e]))) src/gui.c:700 -1
     (nil))

(jump_insn 107 106 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:700 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; tmpPos_28 = 11;

(insn 109 108 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 tmpPos+0 S4 A32])
        (const_int 11 [0xb])) src/gui.c:703 -1
     (nil))

;; i_29 = 1;

(insn 110 109 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:704 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; D.5907_30 = i_3 * 40;

(insn 114 113 115 (set (reg:SI 79)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:706 -1
     (nil))

(insn 115 114 116 (set (reg:SI 80)
        (reg:SI 79)) src/gui.c:706 -1
     (nil))

(insn 116 115 117 (parallel [
            (set (reg:SI 80)
                (ashift:SI (reg:SI 80)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:706 -1
     (nil))

(insn 117 116 118 (parallel [
            (set (reg:SI 80)
                (plus:SI (reg:SI 80)
                    (reg:SI 79)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:706 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 79)
            (const_int 5 [0x5]))
        (nil)))

(insn 118 117 119 (parallel [
            (set (reg:SI 81)
                (ashift:SI (reg:SI 80)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:706 -1
     (nil))

(insn 119 118 120 (set (reg:SI 80)
        (reg:SI 81)) src/gui.c:706 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 79)
            (const_int 40 [0x28]))
        (nil)))

(insn 120 119 0 (set (reg:SI 64 [ D.5907 ])
        (reg:SI 80)) src/gui.c:706 -1
     (nil))

;; D.5908_31 = D.5907_30 + 59;

(insn 121 120 0 (parallel [
            (set (reg:SI 65 [ D.5908 ])
                (plus:SI (reg:SI 64 [ D.5907 ])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:706 -1
     (nil))

;; if (D.5908_31 >= x_11(D))

(insn 122 121 123 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 65 [ D.5908 ])
            (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32]))) src/gui.c:706 -1
     (nil))

(jump_insn 123 122 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:706 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; *pos_17(D) = tmpPos_7;

(insn 125 124 126 (set (reg/f:SI 82)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 pos+0 S4 A32])) src/gui.c:708 -1
     (nil))

(insn 126 125 127 (set (reg:SI 83)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 tmpPos+0 S4 A32])) src/gui.c:708 -1
     (nil))

(insn 127 126 0 (set (mem:SI (reg/f:SI 82) [0 *pos_17(D)+0 S4 A32])
        (reg:SI 83)) src/gui.c:708 -1
     (nil))

;; D.5890_32 = 1;

(insn 128 127 0 (set (reg:SI 59 [ D.5890 ])
        (const_int 1 [0x1])) src/gui.c:709 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; 

(code_label 131 130 132 138 "" [0 uses])

(note 132 131 0 NOTE_INSN_BASIC_BLOCK)

;; tmpPos_33 = tmpPos_7 - 1;

(insn 133 132 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 tmpPos+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 tmpPos+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:711 -1
     (nil))

;; i_34 = i_3 + 1;

(insn 134 133 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:704 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; 

(code_label 135 134 136 137 "" [0 uses])

(note 136 135 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_3 <= 6)

(insn 138 136 139 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 6 [0x6]))) src/gui.c:704 -1
     (nil))

(jump_insn 139 138 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) src/gui.c:704 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; 

(code_label 143 142 144 136 "" [0 uses])

(note 144 143 0 NOTE_INSN_BASIC_BLOCK)

;; if (y_12(D) > 141)

(insn 145 144 146 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 141 [0x8d]))) src/gui.c:714 -1
     (nil))

(jump_insn 146 145 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:714 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; if (y_12(D) <= 303)

(insn 148 147 149 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 303 [0x12f]))) src/gui.c:714 -1
     (nil))

(jump_insn 149 148 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:714 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; tmpPos_35 = 12;

(insn 151 150 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 tmpPos+0 S4 A32])
        (const_int 12 [0xc])) src/gui.c:717 -1
     (nil))

;; i_36 = 1;

(insn 152 151 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:718 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; D.5915_37 = i_4 * 40;

(insn 156 155 157 (set (reg:SI 84)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:720 -1
     (nil))

(insn 157 156 158 (set (reg:SI 85)
        (reg:SI 84)) src/gui.c:720 -1
     (nil))

(insn 158 157 159 (parallel [
            (set (reg:SI 85)
                (ashift:SI (reg:SI 85)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:720 -1
     (nil))

(insn 159 158 160 (parallel [
            (set (reg:SI 85)
                (plus:SI (reg:SI 85)
                    (reg:SI 84)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:720 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 84)
            (const_int 5 [0x5]))
        (nil)))

(insn 160 159 161 (parallel [
            (set (reg:SI 86)
                (ashift:SI (reg:SI 85)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:720 -1
     (nil))

(insn 161 160 162 (set (reg:SI 85)
        (reg:SI 86)) src/gui.c:720 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 84)
            (const_int 40 [0x28]))
        (nil)))

(insn 162 161 0 (set (reg:SI 66 [ D.5915 ])
        (reg:SI 85)) src/gui.c:720 -1
     (nil))

;; D.5916_38 = D.5915_37 + 59;

(insn 163 162 0 (parallel [
            (set (reg:SI 67 [ D.5916 ])
                (plus:SI (reg:SI 66 [ D.5915 ])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:720 -1
     (nil))

;; if (D.5916_38 >= x_11(D))

(insn 164 163 165 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 67 [ D.5916 ])
            (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32]))) src/gui.c:720 -1
     (nil))

(jump_insn 165 164 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:720 -1
     (nil))

;; Generating RTL for gimple basic block 34

;; *pos_17(D) = tmpPos_8;

(insn 167 166 168 (set (reg/f:SI 87)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 pos+0 S4 A32])) src/gui.c:722 -1
     (nil))

(insn 168 167 169 (set (reg:SI 88)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 tmpPos+0 S4 A32])) src/gui.c:722 -1
     (nil))

(insn 169 168 0 (set (mem:SI (reg/f:SI 87) [0 *pos_17(D)+0 S4 A32])
        (reg:SI 88)) src/gui.c:722 -1
     (nil))

;; D.5890_39 = 1;

(insn 170 169 0 (set (reg:SI 59 [ D.5890 ])
        (const_int 1 [0x1])) src/gui.c:723 -1
     (nil))

;; Generating RTL for gimple basic block 35

;; 

(code_label 173 172 174 141 "" [0 uses])

(note 174 173 0 NOTE_INSN_BASIC_BLOCK)

;; tmpPos_40 = tmpPos_8 + 1;

(insn 175 174 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 tmpPos+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 tmpPos+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:725 -1
     (nil))

;; i_41 = i_4 + 1;

(insn 176 175 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:718 -1
     (nil))

;; Generating RTL for gimple basic block 36

;; 

(code_label 177 176 178 140 "" [0 uses])

(note 178 177 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_4 <= 6)

(insn 180 178 181 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 6 [0x6]))) src/gui.c:718 -1
     (nil))

(jump_insn 181 180 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) src/gui.c:718 -1
     (nil))

;; Generating RTL for gimple basic block 37

;; 

(code_label 182 181 183 135 "" [0 uses])

(note 183 182 0 NOTE_INSN_BASIC_BLOCK)

;; D.5890_42 = 0;

(insn 184 183 0 (set (reg:SI 59 [ D.5890 ])
        (const_int 0 [0])) src/gui.c:731 -1
     (nil))

;; Generating RTL for gimple basic block 38

;; 

(code_label 185 184 186 129 "" [0 uses])

(note 186 185 0 NOTE_INSN_BASIC_BLOCK)

;; return D.5890_9;

(insn 187 186 188 (set (reg:SI 68 [ <retval> ])
        (reg:SI 59 [ D.5890 ])) src/gui.c:731 -1
     (nil))

(jump_insn 188 187 189 (set (pc)
        (label_ref 0)) src/gui.c:731 -1
     (nil))

(barrier 189 188 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:662 -1
     (nil))

(insn 6 5 7 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32])
            (const_int 322 [0x142]))) src/gui.c:664 -1
     (nil))

(jump_insn 7 6 8 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) src/gui.c:664 -1
     (nil)
 -> 95)
;; End of basic block 3 -> ( 4 21)

;; Succ edge  4 (fallthru)
;; Succ edge  21

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32])
            (const_int 554 [0x22a]))) src/gui.c:664 -1
     (nil))

(jump_insn 10 9 11 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) src/gui.c:664 -1
     (nil)
 -> 95)
;; End of basic block 4 -> ( 5 21)

;; Succ edge  5 (fallthru)
;; Succ edge  21

;; Start of basic block ( 4) -> 5
;; Pred edge  4 (fallthru)
(note 11 10 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 422 [0x1a6]))) src/gui.c:667 -1
     (nil))

(jump_insn 13 12 14 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) src/gui.c:667 -1
     (nil)
 -> 52)
;; End of basic block 5 -> ( 6 13)

;; Succ edge  6 (fallthru)
;; Succ edge  13

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 14 13 15 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 590 [0x24e]))) src/gui.c:667 -1
     (nil))

(jump_insn 16 15 17 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) src/gui.c:667 -1
     (nil)
 -> 52)
;; End of basic block 6 -> ( 7 13)

;; Succ edge  7 (fallthru)
;; Succ edge  13

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(note 17 16 18 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 7 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 tmpPos+0 S4 A32])
        (const_int 5 [0x5])) src/gui.c:670 -1
     (nil))

(insn 19 18 20 7 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:671 -1
     (nil))

(jump_insn 20 19 21 7 (set (pc)
        (label_ref 44)) src/gui.c:671 -1
     (nil)
 -> 44)
;; End of basic block 7 -> ( 11)

;; Succ edge  11

(barrier 21 20 46)

;; Start of basic block ( 11) -> 8
;; Pred edge  11
(code_label 46 21 22 8 130 "" [1 uses])

(note 22 46 23 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 8 (set (reg:SI 69)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:674 -1
     (nil))

(insn 24 23 25 8 (set (reg:SI 70)
        (reg:SI 69)) src/gui.c:674 -1
     (nil))

(insn 25 24 26 8 (parallel [
            (set (reg:SI 70)
                (ashift:SI (reg:SI 70)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:674 -1
     (nil))

(insn 26 25 27 8 (parallel [
            (set (reg:SI 70)
                (plus:SI (reg:SI 70)
                    (reg:SI 69)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:674 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 69)
            (const_int 5 [0x5]))
        (nil)))

(insn 27 26 28 8 (parallel [
            (set (reg:SI 71)
                (ashift:SI (reg:SI 70)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:674 -1
     (nil))

(insn 28 27 29 8 (set (reg:SI 70)
        (reg:SI 71)) src/gui.c:674 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 69)
            (const_int 40 [0x28]))
        (nil)))

(insn 29 28 30 8 (set (reg:SI 60 [ D.5886 ])
        (reg:SI 70)) src/gui.c:674 -1
     (nil))

(insn 30 29 31 8 (parallel [
            (set (reg:SI 61 [ D.5887 ])
                (plus:SI (reg:SI 60 [ D.5886 ])
                    (const_int 323 [0x143])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:674 -1
     (nil))

(insn 31 30 32 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 61 [ D.5887 ])
            (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32]))) src/gui.c:674 -1
     (nil))

(jump_insn 32 31 33 8 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) src/gui.c:674 -1
     (nil)
 -> 40)
;; End of basic block 8 -> ( 9 10)

;; Succ edge  9 (fallthru)
;; Succ edge  10

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 33 32 34 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 9 (set (reg/f:SI 72)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 pos+0 S4 A32])) src/gui.c:676 -1
     (nil))

(insn 35 34 36 9 (set (reg:SI 73)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 tmpPos+0 S4 A32])) src/gui.c:676 -1
     (nil))

(insn 36 35 37 9 (set (mem:SI (reg/f:SI 72) [0 *pos_17(D)+0 S4 A32])
        (reg:SI 73)) src/gui.c:676 -1
     (nil))

(insn 37 36 38 9 (set (reg:SI 59 [ D.5890 ])
        (const_int 1 [0x1])) src/gui.c:677 -1
     (nil))

(jump_insn 38 37 39 9 (set (pc)
        (label_ref 185)) src/gui.c:677 -1
     (nil)
 -> 185)
;; End of basic block 9 -> ( 39)

;; Succ edge  39

(barrier 39 38 40)

;; Start of basic block ( 8) -> 10
;; Pred edge  8
(code_label 40 39 41 10 128 "" [1 uses])

(note 41 40 42 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 10 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 tmpPos+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 tmpPos+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:679 -1
     (nil))

(insn 43 42 44 10 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:671 -1
     (nil))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 (fallthru)

;; Start of basic block ( 7 10) -> 11
;; Pred edge  7
;; Pred edge  10 (fallthru)
(code_label 44 43 45 11 127 "" [1 uses])

(note 45 44 47 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 47 45 48 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 6 [0x6]))) src/gui.c:671 -1
     (nil))

(jump_insn 48 47 49 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) src/gui.c:671 -1
     (nil)
 -> 46)
;; End of basic block 11 -> ( 8 12)

;; Succ edge  8
;; Succ edge  12 (fallthru)

;; Start of basic block ( 11) -> 12
;; Pred edge  11 (fallthru)
(note 49 48 50 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(jump_insn 50 49 51 12 (set (pc)
        (label_ref 91)) src/gui.c:668 -1
     (nil)
 -> 91)
;; End of basic block 12 -> ( 20)

;; Succ edge  20

(barrier 51 50 52)

;; Start of basic block ( 5 6) -> 13
;; Pred edge  5
;; Pred edge  6
(code_label 52 51 53 13 126 "" [2 uses])

(note 53 52 54 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 141 [0x8d]))) src/gui.c:682 -1
     (nil))

(jump_insn 55 54 56 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) src/gui.c:682 -1
     (nil)
 -> 91)
;; End of basic block 13 -> ( 14 20)

;; Succ edge  14 (fallthru)
;; Succ edge  20

;; Start of basic block ( 13) -> 14
;; Pred edge  13 (fallthru)
(note 56 55 57 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 303 [0x12f]))) src/gui.c:682 -1
     (nil))

(jump_insn 58 57 59 14 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) src/gui.c:682 -1
     (nil)
 -> 91)
;; End of basic block 14 -> ( 15 20)

;; Succ edge  15 (fallthru)
;; Succ edge  20

;; Start of basic block ( 14) -> 15
;; Pred edge  14 (fallthru)
(note 59 58 60 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 15 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 tmpPos+0 S4 A32])
        (const_int 18 [0x12])) src/gui.c:685 -1
     (nil))

(insn 61 60 62 15 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:686 -1
     (nil))

(jump_insn 62 61 63 15 (set (pc)
        (label_ref 86)) src/gui.c:686 -1
     (nil)
 -> 86)
;; End of basic block 15 -> ( 19)

;; Succ edge  19

(barrier 63 62 88)

;; Start of basic block ( 19) -> 16
;; Pred edge  19
(code_label 88 63 64 16 134 "" [1 uses])

(note 64 88 65 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 16 (set (reg:SI 74)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:688 -1
     (nil))

(insn 66 65 67 16 (set (reg:SI 75)
        (reg:SI 74)) src/gui.c:688 -1
     (nil))

(insn 67 66 68 16 (parallel [
            (set (reg:SI 75)
                (ashift:SI (reg:SI 75)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:688 -1
     (nil))

(insn 68 67 69 16 (parallel [
            (set (reg:SI 75)
                (plus:SI (reg:SI 75)
                    (reg:SI 74)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:688 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 74)
            (const_int 5 [0x5]))
        (nil)))

(insn 69 68 70 16 (parallel [
            (set (reg:SI 76)
                (ashift:SI (reg:SI 75)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:688 -1
     (nil))

(insn 70 69 71 16 (set (reg:SI 75)
        (reg:SI 76)) src/gui.c:688 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 74)
            (const_int 40 [0x28]))
        (nil)))

(insn 71 70 72 16 (set (reg:SI 62 [ D.5895 ])
        (reg:SI 75)) src/gui.c:688 -1
     (nil))

(insn 72 71 73 16 (parallel [
            (set (reg:SI 63 [ D.5896 ])
                (plus:SI (reg:SI 62 [ D.5895 ])
                    (const_int 323 [0x143])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:688 -1
     (nil))

(insn 73 72 74 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 63 [ D.5896 ])
            (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32]))) src/gui.c:688 -1
     (nil))

(jump_insn 74 73 75 16 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) src/gui.c:688 -1
     (nil)
 -> 82)
;; End of basic block 16 -> ( 17 18)

;; Succ edge  17 (fallthru)
;; Succ edge  18

;; Start of basic block ( 16) -> 17
;; Pred edge  16 (fallthru)
(note 75 74 76 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 77 17 (set (reg/f:SI 77)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 pos+0 S4 A32])) src/gui.c:690 -1
     (nil))

(insn 77 76 78 17 (set (reg:SI 78)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 tmpPos+0 S4 A32])) src/gui.c:690 -1
     (nil))

(insn 78 77 79 17 (set (mem:SI (reg/f:SI 77) [0 *pos_17(D)+0 S4 A32])
        (reg:SI 78)) src/gui.c:690 -1
     (nil))

(insn 79 78 80 17 (set (reg:SI 59 [ D.5890 ])
        (const_int 1 [0x1])) src/gui.c:691 -1
     (nil))

(jump_insn 80 79 81 17 (set (pc)
        (label_ref 185)) src/gui.c:691 -1
     (nil)
 -> 185)
;; End of basic block 17 -> ( 39)

;; Succ edge  39

(barrier 81 80 82)

;; Start of basic block ( 16) -> 18
;; Pred edge  16
(code_label 82 81 83 18 133 "" [1 uses])

(note 83 82 84 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 85 18 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 tmpPos+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 tmpPos+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:693 -1
     (nil))

(insn 85 84 86 18 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:686 -1
     (nil))
;; End of basic block 18 -> ( 19)

;; Succ edge  19 (fallthru)

;; Start of basic block ( 15 18) -> 19
;; Pred edge  15
;; Pred edge  18 (fallthru)
(code_label 86 85 87 19 132 "" [1 uses])

(note 87 86 89 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 89 87 90 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 6 [0x6]))) src/gui.c:686 -1
     (nil))

(jump_insn 90 89 91 19 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) src/gui.c:686 -1
     (nil)
 -> 88)
;; End of basic block 19 -> ( 16 20)

;; Succ edge  16
;; Succ edge  20 (fallthru)

;; Start of basic block ( 12 13 14 19) -> 20
;; Pred edge  12
;; Pred edge  13
;; Pred edge  14
;; Pred edge  19 (fallthru)
(code_label 91 90 92 20 131 "" [3 uses])

(note 92 91 93 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(jump_insn 93 92 94 20 (set (pc)
        (label_ref 182)) src/gui.c:667 -1
     (nil)
 -> 182)
;; End of basic block 20 -> ( 38)

;; Succ edge  38

(barrier 94 93 95)

;; Start of basic block ( 3 4) -> 21
;; Pred edge  3
;; Pred edge  4
(code_label 95 94 96 21 125 "" [2 uses])

(note 96 95 97 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 97 96 98 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32])
            (const_int 58 [0x3a]))) src/gui.c:698 -1
     (nil))

(jump_insn 98 97 99 21 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) src/gui.c:698 -1
     (nil)
 -> 182)
;; End of basic block 21 -> ( 22 38)

;; Succ edge  22 (fallthru)
;; Succ edge  38

;; Start of basic block ( 21) -> 22
;; Pred edge  21 (fallthru)
(note 99 98 100 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 101 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32])
            (const_int 289 [0x121]))) src/gui.c:698 -1
     (nil))

(jump_insn 101 100 102 22 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) src/gui.c:698 -1
     (nil)
 -> 182)
;; End of basic block 22 -> ( 23 38)

;; Succ edge  23 (fallthru)
;; Succ edge  38

;; Start of basic block ( 22) -> 23
;; Pred edge  22 (fallthru)
(note 102 101 103 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 103 102 104 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 422 [0x1a6]))) src/gui.c:700 -1
     (nil))

(jump_insn 104 103 105 23 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) src/gui.c:700 -1
     (nil)
 -> 143)
;; End of basic block 23 -> ( 24 31)

;; Succ edge  24 (fallthru)
;; Succ edge  31

;; Start of basic block ( 23) -> 24
;; Pred edge  23 (fallthru)
(note 105 104 106 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 107 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 590 [0x24e]))) src/gui.c:700 -1
     (nil))

(jump_insn 107 106 108 24 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) src/gui.c:700 -1
     (nil)
 -> 143)
;; End of basic block 24 -> ( 25 31)

;; Succ edge  25 (fallthru)
;; Succ edge  31

;; Start of basic block ( 24) -> 25
;; Pred edge  24 (fallthru)
(note 108 107 109 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 25 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 tmpPos+0 S4 A32])
        (const_int 11 [0xb])) src/gui.c:703 -1
     (nil))

(insn 110 109 111 25 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:704 -1
     (nil))

(jump_insn 111 110 112 25 (set (pc)
        (label_ref 135)) src/gui.c:704 -1
     (nil)
 -> 135)
;; End of basic block 25 -> ( 29)

;; Succ edge  29

(barrier 112 111 137)

;; Start of basic block ( 29) -> 26
;; Pred edge  29
(code_label 137 112 113 26 139 "" [1 uses])

(note 113 137 114 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 115 26 (set (reg:SI 79)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:706 -1
     (nil))

(insn 115 114 116 26 (set (reg:SI 80)
        (reg:SI 79)) src/gui.c:706 -1
     (nil))

(insn 116 115 117 26 (parallel [
            (set (reg:SI 80)
                (ashift:SI (reg:SI 80)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:706 -1
     (nil))

(insn 117 116 118 26 (parallel [
            (set (reg:SI 80)
                (plus:SI (reg:SI 80)
                    (reg:SI 79)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:706 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 79)
            (const_int 5 [0x5]))
        (nil)))

(insn 118 117 119 26 (parallel [
            (set (reg:SI 81)
                (ashift:SI (reg:SI 80)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:706 -1
     (nil))

(insn 119 118 120 26 (set (reg:SI 80)
        (reg:SI 81)) src/gui.c:706 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 79)
            (const_int 40 [0x28]))
        (nil)))

(insn 120 119 121 26 (set (reg:SI 64 [ D.5907 ])
        (reg:SI 80)) src/gui.c:706 -1
     (nil))

(insn 121 120 122 26 (parallel [
            (set (reg:SI 65 [ D.5908 ])
                (plus:SI (reg:SI 64 [ D.5907 ])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:706 -1
     (nil))

(insn 122 121 123 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 65 [ D.5908 ])
            (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32]))) src/gui.c:706 -1
     (nil))

(jump_insn 123 122 124 26 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) src/gui.c:706 -1
     (nil)
 -> 131)
;; End of basic block 26 -> ( 27 28)

;; Succ edge  27 (fallthru)
;; Succ edge  28

;; Start of basic block ( 26) -> 27
;; Pred edge  26 (fallthru)
(note 124 123 125 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 126 27 (set (reg/f:SI 82)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 pos+0 S4 A32])) src/gui.c:708 -1
     (nil))

(insn 126 125 127 27 (set (reg:SI 83)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 tmpPos+0 S4 A32])) src/gui.c:708 -1
     (nil))

(insn 127 126 128 27 (set (mem:SI (reg/f:SI 82) [0 *pos_17(D)+0 S4 A32])
        (reg:SI 83)) src/gui.c:708 -1
     (nil))

(insn 128 127 129 27 (set (reg:SI 59 [ D.5890 ])
        (const_int 1 [0x1])) src/gui.c:709 -1
     (nil))

(jump_insn 129 128 130 27 (set (pc)
        (label_ref 185)) src/gui.c:709 -1
     (nil)
 -> 185)
;; End of basic block 27 -> ( 39)

;; Succ edge  39

(barrier 130 129 131)

;; Start of basic block ( 26) -> 28
;; Pred edge  26
(code_label 131 130 132 28 138 "" [1 uses])

(note 132 131 133 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 133 132 134 28 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 tmpPos+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 tmpPos+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:711 -1
     (nil))

(insn 134 133 135 28 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:704 -1
     (nil))
;; End of basic block 28 -> ( 29)

;; Succ edge  29 (fallthru)

;; Start of basic block ( 25 28) -> 29
;; Pred edge  25
;; Pred edge  28 (fallthru)
(code_label 135 134 136 29 137 "" [1 uses])

(note 136 135 138 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 138 136 139 29 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 6 [0x6]))) src/gui.c:704 -1
     (nil))

(jump_insn 139 138 140 29 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) src/gui.c:704 -1
     (nil)
 -> 137)
;; End of basic block 29 -> ( 26 30)

;; Succ edge  26
;; Succ edge  30 (fallthru)

;; Start of basic block ( 29) -> 30
;; Pred edge  29 (fallthru)
(note 140 139 141 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(jump_insn 141 140 142 30 (set (pc)
        (label_ref 182)) src/gui.c:701 -1
     (nil)
 -> 182)
;; End of basic block 30 -> ( 38)

;; Succ edge  38

(barrier 142 141 143)

;; Start of basic block ( 23 24) -> 31
;; Pred edge  23
;; Pred edge  24
(code_label 143 142 144 31 136 "" [2 uses])

(note 144 143 145 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 145 144 146 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 141 [0x8d]))) src/gui.c:714 -1
     (nil))

(jump_insn 146 145 147 31 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) src/gui.c:714 -1
     (nil)
 -> 182)
;; End of basic block 31 -> ( 32 38)

;; Succ edge  32 (fallthru)
;; Succ edge  38

;; Start of basic block ( 31) -> 32
;; Pred edge  31 (fallthru)
(note 147 146 148 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 148 147 149 32 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 y+0 S4 A32])
            (const_int 303 [0x12f]))) src/gui.c:714 -1
     (nil))

(jump_insn 149 148 150 32 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) src/gui.c:714 -1
     (nil)
 -> 182)
;; End of basic block 32 -> ( 33 38)

;; Succ edge  33 (fallthru)
;; Succ edge  38

;; Start of basic block ( 32) -> 33
;; Pred edge  32 (fallthru)
(note 150 149 151 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 151 150 152 33 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 tmpPos+0 S4 A32])
        (const_int 12 [0xc])) src/gui.c:717 -1
     (nil))

(insn 152 151 153 33 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:718 -1
     (nil))

(jump_insn 153 152 154 33 (set (pc)
        (label_ref 177)) src/gui.c:718 -1
     (nil)
 -> 177)
;; End of basic block 33 -> ( 37)

;; Succ edge  37

(barrier 154 153 179)

;; Start of basic block ( 37) -> 34
;; Pred edge  37
(code_label 179 154 155 34 142 "" [1 uses])

(note 155 179 156 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 156 155 157 34 (set (reg:SI 84)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:720 -1
     (nil))

(insn 157 156 158 34 (set (reg:SI 85)
        (reg:SI 84)) src/gui.c:720 -1
     (nil))

(insn 158 157 159 34 (parallel [
            (set (reg:SI 85)
                (ashift:SI (reg:SI 85)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:720 -1
     (nil))

(insn 159 158 160 34 (parallel [
            (set (reg:SI 85)
                (plus:SI (reg:SI 85)
                    (reg:SI 84)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:720 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 84)
            (const_int 5 [0x5]))
        (nil)))

(insn 160 159 161 34 (parallel [
            (set (reg:SI 86)
                (ashift:SI (reg:SI 85)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:720 -1
     (nil))

(insn 161 160 162 34 (set (reg:SI 85)
        (reg:SI 86)) src/gui.c:720 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 84)
            (const_int 40 [0x28]))
        (nil)))

(insn 162 161 163 34 (set (reg:SI 66 [ D.5915 ])
        (reg:SI 85)) src/gui.c:720 -1
     (nil))

(insn 163 162 164 34 (parallel [
            (set (reg:SI 67 [ D.5916 ])
                (plus:SI (reg:SI 66 [ D.5915 ])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:720 -1
     (nil))

(insn 164 163 165 34 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 67 [ D.5916 ])
            (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 x+0 S4 A32]))) src/gui.c:720 -1
     (nil))

(jump_insn 165 164 166 34 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) src/gui.c:720 -1
     (nil)
 -> 173)
;; End of basic block 34 -> ( 35 36)

;; Succ edge  35 (fallthru)
;; Succ edge  36

;; Start of basic block ( 34) -> 35
;; Pred edge  34 (fallthru)
(note 166 165 167 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 167 166 168 35 (set (reg/f:SI 87)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 pos+0 S4 A32])) src/gui.c:722 -1
     (nil))

(insn 168 167 169 35 (set (reg:SI 88)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 tmpPos+0 S4 A32])) src/gui.c:722 -1
     (nil))

(insn 169 168 170 35 (set (mem:SI (reg/f:SI 87) [0 *pos_17(D)+0 S4 A32])
        (reg:SI 88)) src/gui.c:722 -1
     (nil))

(insn 170 169 171 35 (set (reg:SI 59 [ D.5890 ])
        (const_int 1 [0x1])) src/gui.c:723 -1
     (nil))

(jump_insn 171 170 172 35 (set (pc)
        (label_ref 185)) src/gui.c:723 -1
     (nil)
 -> 185)
;; End of basic block 35 -> ( 39)

;; Succ edge  39

(barrier 172 171 173)

;; Start of basic block ( 34) -> 36
;; Pred edge  34
(code_label 173 172 174 36 141 "" [1 uses])

(note 174 173 175 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 175 174 176 36 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 tmpPos+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 tmpPos+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:725 -1
     (nil))

(insn 176 175 177 36 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:718 -1
     (nil))
;; End of basic block 36 -> ( 37)

;; Succ edge  37 (fallthru)

;; Start of basic block ( 33 36) -> 37
;; Pred edge  33
;; Pred edge  36 (fallthru)
(code_label 177 176 178 37 140 "" [1 uses])

(note 178 177 180 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 180 178 181 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 6 [0x6]))) src/gui.c:718 -1
     (nil))

(jump_insn 181 180 182 37 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) src/gui.c:718 -1
     (nil)
 -> 179)
;; End of basic block 37 -> ( 34 38)

;; Succ edge  34
;; Succ edge  38 (fallthru)

;; Start of basic block ( 20 21 22 30 31 32 37) -> 38
;; Pred edge  20
;; Pred edge  21
;; Pred edge  22
;; Pred edge  30
;; Pred edge  31
;; Pred edge  32
;; Pred edge  37 (fallthru)
(code_label 182 181 183 38 135 "" [6 uses])

(note 183 182 184 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 184 183 185 38 (set (reg:SI 59 [ D.5890 ])
        (const_int 0 [0])) src/gui.c:731 -1
     (nil))
;; End of basic block 38 -> ( 39)

;; Succ edge  39 (fallthru)

;; Start of basic block ( 9 17 27 35 38) -> 39
;; Pred edge  9
;; Pred edge  17
;; Pred edge  27
;; Pred edge  35
;; Pred edge  38 (fallthru)
(code_label 185 184 186 39 129 "" [4 uses])

(note 186 185 187 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 187 186 188 39 (set (reg:SI 68 [ <retval> ])
        (reg:SI 59 [ D.5890 ])) src/gui.c:731 -1
     (nil))

(jump_insn 188 187 189 39 (set (pc)
        (label_ref 190)) src/gui.c:731 -1
     (nil)
 -> 190)
;; End of basic block 39 -> ( 41)

;; Succ edge  41

(barrier 189 188 195)

;; Start of basic block () -> 40
(note 195 189 192 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 192 195 193 40 (clobber (reg/i:SI 0 ax)) src/gui.c:733 -1
     (nil))

(insn 193 192 190 40 (clobber (reg:SI 68 [ <retval> ])) src/gui.c:733 -1
     (nil))
;; End of basic block 40 -> ( 41)

;; Succ edge  41 (fallthru)

;; Start of basic block ( 39 40) -> 41
;; Pred edge  39
;; Pred edge  40 (fallthru)
(code_label 190 193 196 41 124 "" [1 uses])

(note 196 190 191 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 191 196 194 41 (set (reg/i:SI 0 ax)
        (reg:SI 68 [ <retval> ])) src/gui.c:733 -1
     (nil))

(insn 194 191 0 41 (use (reg/i:SI 0 ax)) src/gui.c:733 -1
     (nil))
;; End of basic block 41 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function colorChecker (colorChecker)

colorChecker (struct SDisplay * display, struct SGameState * game, EPosition pos)
{
  struct SZone selectedZone;
  struct SDL_Rect posSelectedChecker;
  struct SDL_Surface * D.5877;
  struct SDL_Surface * D.5876;
  Sint16 D.5875;
  short unsigned int D.5874;
  short unsigned int D.5873;
  short unsigned int D.5872;
  short unsigned int D.5871;
  unsigned int D.5870;
  short unsigned int D.5869;
  Sint16 D.5868;
  Sint16 D.5866;
  short unsigned int D.5865;
  short unsigned int D.5864;
  Sint16 D.5863;
  unsigned int D.5860;
  Sint16 D.5858;
  short unsigned int D.5857;
  short unsigned int D.5856;
  short unsigned int D.5855;
  short unsigned int D.5854;
  unsigned int D.5853;
  short unsigned int D.5852;
  Sint16 D.5851;
  Sint16 D.5849;
  short unsigned int D.5848;
  short unsigned int D.5847;
  Sint16 D.5846;
  unsigned int D.5843;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  selectedZone = game_1(D)->zones[pos_2(D)];
  posSelectedChecker = display_3(D)->positions[pos_2(D)];
  if (pos_2(D) <= 11)
    goto <bb 3>;
  else
    goto <bb 6>;
  # SUCC: 3 (true) 6 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.5843_4 = selectedZone.nb_checkers;
  if (D.5843_4 > 6)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.5846_5 = posSelectedChecker.y;
  D.5847_6 = (short unsigned int) D.5846_5;
  D.5848_7 = D.5847_6 + 65436;
  D.5849_8 = (Sint16) D.5848_7;
  posSelectedChecker.y = D.5849_8;
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  D.5851_9 = posSelectedChecker.y;
  D.5852_10 = (short unsigned int) D.5851_9;
  D.5853_11 = selectedZone.nb_checkers;
  D.5854_12 = (short unsigned int) D.5853_11;
  D.5855_13 = D.5854_12 * 65516;
  D.5856_14 = D.5852_10 + D.5855_13;
  D.5857_15 = D.5856_14 + 20;
  D.5858_16 = (Sint16) D.5857_15;
  posSelectedChecker.y = D.5858_16;
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 6
  # PRED: 2 (false)
  D.5860_17 = selectedZone.nb_checkers;
  if (D.5860_17 > 6)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 (true) 8 (false)

  # BLOCK 7
  # PRED: 6 (true)
  D.5863_18 = posSelectedChecker.y;
  D.5864_19 = (short unsigned int) D.5863_18;
  D.5865_20 = D.5864_19 + 100;
  D.5866_21 = (Sint16) D.5865_20;
  posSelectedChecker.y = D.5866_21;
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 8
  # PRED: 6 (false)
  D.5868_22 = posSelectedChecker.y;
  D.5869_23 = (short unsigned int) D.5868_22;
  D.5870_24 = selectedZone.nb_checkers;
  D.5871_25 = (short unsigned int) D.5870_24;
  D.5872_26 = D.5871_25 * 20;
  D.5873_27 = D.5869_23 + D.5872_26;
  D.5874_28 = D.5873_27 + 65516;
  D.5875_29 = (Sint16) D.5874_28;
  posSelectedChecker.y = D.5875_29;
  # SUCC: 9 (fallthru)

  # BLOCK 9
  # PRED: 5 (fallthru) 7 (fallthru) 8 (fallthru) 4 (fallthru)
  D.5876_30 = display_3(D)->screen;
  D.5877_31 = display_3(D)->selected_checker;
  SDL_UpperBlit (D.5877_31, 0B, D.5876_30, &posSelectedChecker);
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (game_1(D) - 1 )
Partition 2 (pos_2(D) - 2 )
Partition 3 (display_3(D) - 3 )
Partition 4 (D.5843_4 - 4 )
Partition 5 (D.5846_5 - 5 )
Partition 6 (D.5847_6 - 6 )
Partition 7 (D.5848_7 - 7 )
Partition 8 (D.5849_8 - 8 )
Partition 9 (D.5851_9 - 9 )
Partition 10 (D.5852_10 - 10 )
Partition 11 (D.5853_11 - 11 )
Partition 12 (D.5854_12 - 12 )
Partition 13 (D.5855_13 - 13 )
Partition 14 (D.5856_14 - 14 )
Partition 15 (D.5857_15 - 15 )
Partition 16 (D.5858_16 - 16 )
Partition 17 (D.5860_17 - 17 )
Partition 18 (D.5863_18 - 18 )
Partition 19 (D.5864_19 - 19 )
Partition 20 (D.5865_20 - 20 )
Partition 21 (D.5866_21 - 21 )
Partition 22 (D.5868_22 - 22 )
Partition 23 (D.5869_23 - 23 )
Partition 24 (D.5870_24 - 24 )
Partition 25 (D.5871_25 - 25 )
Partition 26 (D.5872_26 - 26 )
Partition 27 (D.5873_27 - 27 )
Partition 28 (D.5874_28 - 28 )
Partition 29 (D.5875_29 - 29 )
Partition 30 (D.5876_30 - 30 )
Partition 31 (D.5877_31 - 31 )


Partition map 

Partition 0 (game_1(D) - 1 )
Partition 1 (pos_2(D) - 2 )
Partition 2 (display_3(D) - 3 )


Live on entry to BB2 : game_1(D)  pos_2(D)  display_3(D)  

Live on entry to BB3 : display_3(D)  

Live on entry to BB4 : display_3(D)  

Live on entry to BB5 : display_3(D)  

Live on entry to BB6 : display_3(D)  

Live on entry to BB7 : display_3(D)  

Live on entry to BB8 : display_3(D)  

Live on entry to BB9 : display_3(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (game_1(D) - 1 )
Partition 1 (pos_2(D) - 2 )
Partition 2 (display_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (game_1(D) - 1 )
Partition 1 (pos_2(D) - 2 )
Partition 2 (display_3(D) - 3 )
Partition 3 (D.5843_4 - 4 )
Partition 4 (D.5846_5 - 5 )
Partition 5 (D.5847_6 - 6 )
Partition 6 (D.5848_7 - 7 )
Partition 7 (D.5849_8 - 8 )
Partition 8 (D.5851_9 - 9 )
Partition 9 (D.5852_10 - 10 )
Partition 10 (D.5853_11 - 11 )
Partition 11 (D.5854_12 - 12 )
Partition 12 (D.5855_13 - 13 )
Partition 13 (D.5856_14 - 14 )
Partition 14 (D.5857_15 - 15 )
Partition 15 (D.5858_16 - 16 )
Partition 16 (D.5860_17 - 17 )
Partition 17 (D.5863_18 - 18 )
Partition 18 (D.5864_19 - 19 )
Partition 19 (D.5865_20 - 20 )
Partition 20 (D.5866_21 - 21 )
Partition 21 (D.5868_22 - 22 )
Partition 22 (D.5869_23 - 23 )
Partition 23 (D.5870_24 - 24 )
Partition 24 (D.5871_25 - 25 )
Partition 25 (D.5872_26 - 26 )
Partition 26 (D.5873_27 - 27 )
Partition 27 (D.5874_28 - 28 )
Partition 28 (D.5875_29 - 29 )
Partition 29 (D.5876_30 - 30 )
Partition 30 (D.5877_31 - 31 )

colorChecker (struct SDisplay * display, struct SGameState * game, EPosition pos)
{
  struct SZone selectedZone;
  struct SDL_Rect posSelectedChecker;
  struct SDL_Surface * D.5877;
  struct SDL_Surface * D.5876;
  Sint16 D.5875;
  short unsigned int D.5874;
  short unsigned int D.5873;
  short unsigned int D.5872;
  short unsigned int D.5871;
  unsigned int D.5870;
  short unsigned int D.5869;
  Sint16 D.5868;
  Sint16 D.5866;
  short unsigned int D.5865;
  short unsigned int D.5864;
  Sint16 D.5863;
  unsigned int D.5860;
  Sint16 D.5858;
  short unsigned int D.5857;
  short unsigned int D.5856;
  short unsigned int D.5855;
  short unsigned int D.5854;
  unsigned int D.5853;
  short unsigned int D.5852;
  Sint16 D.5851;
  Sint16 D.5849;
  short unsigned int D.5848;
  short unsigned int D.5847;
  Sint16 D.5846;
  unsigned int D.5843;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  selectedZone = game_1(D)->zones[pos_2(D)];
  posSelectedChecker = display_3(D)->positions[pos_2(D)];
  if (pos_2(D) <= 11)
    goto <bb 3>;
  else
    goto <bb 6>;
  # SUCC: 3 (true) 6 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.5843_4 = selectedZone.nb_checkers;
  if (D.5843_4 > 6)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.5846_5 = posSelectedChecker.y;
  D.5847_6 = (short unsigned int) D.5846_5;
  D.5848_7 = D.5847_6 + 65436;
  D.5849_8 = (Sint16) D.5848_7;
  posSelectedChecker.y = D.5849_8;
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  D.5851_9 = posSelectedChecker.y;
  D.5852_10 = (short unsigned int) D.5851_9;
  D.5853_11 = selectedZone.nb_checkers;
  D.5854_12 = (short unsigned int) D.5853_11;
  D.5855_13 = D.5854_12 * 65516;
  D.5856_14 = D.5852_10 + D.5855_13;
  D.5857_15 = D.5856_14 + 20;
  D.5858_16 = (Sint16) D.5857_15;
  posSelectedChecker.y = D.5858_16;
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 6
  # PRED: 2 (false)
  D.5860_17 = selectedZone.nb_checkers;
  if (D.5860_17 > 6)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 (true) 8 (false)

  # BLOCK 7
  # PRED: 6 (true)
  D.5863_18 = posSelectedChecker.y;
  D.5864_19 = (short unsigned int) D.5863_18;
  D.5865_20 = D.5864_19 + 100;
  D.5866_21 = (Sint16) D.5865_20;
  posSelectedChecker.y = D.5866_21;
  goto <bb 9>;
  # SUCC: 9 (fallthru)

  # BLOCK 8
  # PRED: 6 (false)
  D.5868_22 = posSelectedChecker.y;
  D.5869_23 = (short unsigned int) D.5868_22;
  D.5870_24 = selectedZone.nb_checkers;
  D.5871_25 = (short unsigned int) D.5870_24;
  D.5872_26 = D.5871_25 * 20;
  D.5873_27 = D.5869_23 + D.5872_26;
  D.5874_28 = D.5873_27 + 65516;
  D.5875_29 = (Sint16) D.5874_28;
  posSelectedChecker.y = D.5875_29;
  # SUCC: 9 (fallthru)

  # BLOCK 9
  # PRED: 5 (fallthru) 7 (fallthru) 8 (fallthru) 4 (fallthru)
  D.5876_30 = display_3(D)->screen;
  D.5877_31 = display_3(D)->selected_checker;
  SDL_UpperBlit (D.5877_31, 0B, D.5876_30, &posSelectedChecker);
  return;
  # SUCC: EXIT

}


Partition 0: size 8 align 2
	posSelectedChecker, offset 0
Partition 1: size 8 align 4
	selectedZone, offset 0

;; Generating RTL for gimple basic block 2

;; selectedZone = game_1(D)->zones[pos_2(D)];

(insn 5 4 6 (set (reg/f:SI 87)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:740 -1
     (nil))

(insn 6 5 7 (set (reg:SI 88)
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 pos+0 S4 A32])) src/gui.c:740 -1
     (nil))

(insn 7 6 8 (set (reg:DI 89)
        (mem/s/j:DI (plus:SI (mult:SI (reg:SI 88)
                    (const_int 8 [0x8]))
                (reg/f:SI 87)) [0 game_1(D)->zones S8 A32])) src/gui.c:740 -1
     (nil))

(insn 8 7 0 (set (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 selectedZone+0 S8 A32])
        (reg:DI 89)) src/gui.c:740 -1
     (nil))

;; posSelectedChecker = display_3(D)->positions[pos_2(D)];

(insn 9 8 10 (set (reg/f:SI 90)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:741 -1
     (nil))

(insn 10 9 11 (set (reg:SI 92)
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 pos+0 S4 A32])) src/gui.c:741 -1
     (nil))

(insn 11 10 12 (parallel [
            (set (reg:SI 91)
                (plus:SI (reg:SI 92)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:741 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 pos+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 12 11 13 (set (reg:DI 93)
        (mem/s/j:DI (plus:SI (plus:SI (mult:SI (reg:SI 91)
                        (const_int 8 [0x8]))
                    (reg/f:SI 90))
                (const_int 4 [0x4])) [0 display_3(D)->positions S8 A32])) src/gui.c:741 -1
     (nil))

(insn 13 12 0 (set (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posSelectedChecker+0 S8 A32])
        (reg:DI 93)) src/gui.c:741 -1
     (nil))

;; if (pos_2(D) <= 11)

(insn 14 13 15 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 pos+0 S4 A32])
            (const_int 11 [0xb]))) src/gui.c:743 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:743 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; D.5843_4 = selectedZone.nb_checkers;

(insn 17 16 0 (set (reg:SI 59 [ D.5843 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 selectedZone.nb_checkers+0 S4 A32])) src/gui.c:744 -1
     (nil))

;; if (D.5843_4 > 6)

(insn 18 17 19 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 59 [ D.5843 ])
            (const_int 6 [0x6]))) src/gui.c:744 -1
     (nil))

(jump_insn 19 18 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:744 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; D.5846_5 = posSelectedChecker.y;

(insn 21 20 0 (set (reg:HI 60 [ D.5846 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])) src/gui.c:745 -1
     (nil))

;; D.5847_6 = (short unsigned int) D.5846_5;

(insn 22 21 0 (set (reg:HI 61 [ D.5847 ])
        (reg:HI 60 [ D.5846 ])) src/gui.c:745 -1
     (nil))

;; D.5848_7 = D.5847_6 + 65436;

(insn 23 22 0 (parallel [
            (set (reg:HI 62 [ D.5848 ])
                (plus:HI (reg:HI 61 [ D.5847 ])
                    (const_int -100 [0xffffffffffffff9c])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:745 -1
     (nil))

;; D.5849_8 = (Sint16) D.5848_7;

(insn 24 23 0 (set (reg:HI 63 [ D.5849 ])
        (reg:HI 62 [ D.5848 ])) src/gui.c:745 -1
     (nil))

;; posSelectedChecker.y = D.5849_8;

(insn 25 24 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])
        (reg:HI 63 [ D.5849 ])) src/gui.c:745 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 28 27 29 147 "" [0 uses])

(note 29 28 0 NOTE_INSN_BASIC_BLOCK)

;; D.5851_9 = posSelectedChecker.y;

(insn 30 29 0 (set (reg:HI 64 [ D.5851 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])) src/gui.c:747 -1
     (nil))

;; D.5852_10 = (short unsigned int) D.5851_9;

(insn 31 30 0 (set (reg:HI 65 [ D.5852 ])
        (reg:HI 64 [ D.5851 ])) src/gui.c:747 -1
     (nil))

;; D.5853_11 = selectedZone.nb_checkers;

(insn 32 31 0 (set (reg:SI 66 [ D.5853 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 selectedZone.nb_checkers+0 S4 A32])) src/gui.c:747 -1
     (nil))

;; D.5854_12 = (short unsigned int) D.5853_11;

(insn 33 32 0 (set (reg:HI 67 [ D.5854 ])
        (subreg:HI (reg:SI 66 [ D.5853 ]) 0)) src/gui.c:747 -1
     (nil))

;; D.5855_13 = D.5854_12 * 65516;

(insn 34 33 35 (set (reg:HI 94)
        (reg:HI 67 [ D.5854 ])) src/gui.c:747 -1
     (nil))

(insn 35 34 36 (parallel [
            (set (reg:HI 94)
                (ashift:HI (reg:HI 94)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:747 -1
     (nil))

(insn 36 35 37 (parallel [
            (set (reg:HI 94)
                (plus:HI (reg:HI 94)
                    (reg:HI 67 [ D.5854 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:747 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 67 [ D.5854 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 37 36 38 (parallel [
            (set (reg:HI 95)
                (ashift:HI (reg:HI 94)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:747 -1
     (nil))

(insn 38 37 39 (set (reg:HI 94)
        (reg:HI 95)) src/gui.c:747 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 67 [ D.5854 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 39 38 0 (parallel [
            (set (reg:HI 68 [ D.5855 ])
                (neg:HI (reg:HI 94)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:747 -1
     (nil))

;; D.5856_14 = D.5852_10 + D.5855_13;

(insn 40 39 0 (parallel [
            (set (reg:HI 69 [ D.5856 ])
                (plus:HI (reg:HI 65 [ D.5852 ])
                    (reg:HI 68 [ D.5855 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:747 -1
     (nil))

;; D.5857_15 = D.5856_14 + 20;

(insn 41 40 0 (parallel [
            (set (reg:HI 70 [ D.5857 ])
                (plus:HI (reg:HI 69 [ D.5856 ])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:747 -1
     (nil))

;; D.5858_16 = (Sint16) D.5857_15;

(insn 42 41 0 (set (reg:HI 71 [ D.5858 ])
        (reg:HI 70 [ D.5857 ])) src/gui.c:747 -1
     (nil))

;; posSelectedChecker.y = D.5858_16;

(insn 43 42 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])
        (reg:HI 71 [ D.5858 ])) src/gui.c:747 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 46 45 47 146 "" [0 uses])

(note 47 46 0 NOTE_INSN_BASIC_BLOCK)

;; D.5860_17 = selectedZone.nb_checkers;

(insn 48 47 0 (set (reg:SI 72 [ D.5860 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 selectedZone.nb_checkers+0 S4 A32])) src/gui.c:749 -1
     (nil))

;; if (D.5860_17 > 6)

(insn 49 48 50 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 72 [ D.5860 ])
            (const_int 6 [0x6]))) src/gui.c:749 -1
     (nil))

(jump_insn 50 49 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:749 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; D.5863_18 = posSelectedChecker.y;

(insn 52 51 0 (set (reg:HI 73 [ D.5863 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])) src/gui.c:750 -1
     (nil))

;; D.5864_19 = (short unsigned int) D.5863_18;

(insn 53 52 0 (set (reg:HI 74 [ D.5864 ])
        (reg:HI 73 [ D.5863 ])) src/gui.c:750 -1
     (nil))

;; D.5865_20 = D.5864_19 + 100;

(insn 54 53 0 (parallel [
            (set (reg:HI 75 [ D.5865 ])
                (plus:HI (reg:HI 74 [ D.5864 ])
                    (const_int 100 [0x64])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:750 -1
     (nil))

;; D.5866_21 = (Sint16) D.5865_20;

(insn 55 54 0 (set (reg:HI 76 [ D.5866 ])
        (reg:HI 75 [ D.5865 ])) src/gui.c:750 -1
     (nil))

;; posSelectedChecker.y = D.5866_21;

(insn 56 55 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])
        (reg:HI 76 [ D.5866 ])) src/gui.c:750 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 59 58 60 149 "" [0 uses])

(note 60 59 0 NOTE_INSN_BASIC_BLOCK)

;; D.5868_22 = posSelectedChecker.y;

(insn 61 60 0 (set (reg:HI 77 [ D.5868 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])) src/gui.c:752 -1
     (nil))

;; D.5869_23 = (short unsigned int) D.5868_22;

(insn 62 61 0 (set (reg:HI 78 [ D.5869 ])
        (reg:HI 77 [ D.5868 ])) src/gui.c:752 -1
     (nil))

;; D.5870_24 = selectedZone.nb_checkers;

(insn 63 62 0 (set (reg:SI 79 [ D.5870 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 selectedZone.nb_checkers+0 S4 A32])) src/gui.c:752 -1
     (nil))

;; D.5871_25 = (short unsigned int) D.5870_24;

(insn 64 63 0 (set (reg:HI 80 [ D.5871 ])
        (subreg:HI (reg:SI 79 [ D.5870 ]) 0)) src/gui.c:752 -1
     (nil))

;; D.5872_26 = D.5871_25 * 20;

(insn 65 64 66 (set (reg:HI 96)
        (reg:HI 80 [ D.5871 ])) src/gui.c:752 -1
     (nil))

(insn 66 65 67 (parallel [
            (set (reg:HI 96)
                (ashift:HI (reg:HI 96)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:752 -1
     (nil))

(insn 67 66 68 (parallel [
            (set (reg:HI 96)
                (plus:HI (reg:HI 96)
                    (reg:HI 80 [ D.5871 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:752 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 80 [ D.5871 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 68 67 69 (parallel [
            (set (reg:HI 97)
                (ashift:HI (reg:HI 96)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:752 -1
     (nil))

(insn 69 68 70 (set (reg:HI 96)
        (reg:HI 97)) src/gui.c:752 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 80 [ D.5871 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 70 69 0 (set (reg:HI 81 [ D.5872 ])
        (reg:HI 96)) src/gui.c:752 -1
     (nil))

;; D.5873_27 = D.5869_23 + D.5872_26;

(insn 71 70 0 (parallel [
            (set (reg:HI 82 [ D.5873 ])
                (plus:HI (reg:HI 78 [ D.5869 ])
                    (reg:HI 81 [ D.5872 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:752 -1
     (nil))

;; D.5874_28 = D.5873_27 + 65516;

(insn 72 71 0 (parallel [
            (set (reg:HI 83 [ D.5874 ])
                (plus:HI (reg:HI 82 [ D.5873 ])
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:752 -1
     (nil))

;; D.5875_29 = (Sint16) D.5874_28;

(insn 73 72 0 (set (reg:HI 84 [ D.5875 ])
        (reg:HI 83 [ D.5874 ])) src/gui.c:752 -1
     (nil))

;; posSelectedChecker.y = D.5875_29;

(insn 74 73 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])
        (reg:HI 84 [ D.5875 ])) src/gui.c:752 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 75 74 76 148 "" [0 uses])

(note 76 75 0 NOTE_INSN_BASIC_BLOCK)

;; D.5876_30 = display_3(D)->screen;

(insn 77 76 78 (set (reg/f:SI 98)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:754 -1
     (nil))

(insn 78 77 0 (set (reg/f:SI 85 [ D.5876 ])
        (mem/s/f/j:SI (reg/f:SI 98) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:754 -1
     (nil))

;; D.5877_31 = display_3(D)->selected_checker;

(insn 79 78 80 (set (reg/f:SI 99)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:754 -1
     (nil))

(insn 80 79 0 (set (reg/f:SI 86 [ D.5877 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 99)
                (const_int 60 [0x3c])) [0 display_3(D)->selected_checker+0 S4 A32])) src/gui.c:754 -1
     (nil))

;; SDL_UpperBlit (D.5877_31, 0B, D.5876_30, &posSelectedChecker);

(insn 81 80 82 (parallel [
            (set (reg:SI 100)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:754 -1
     (nil))

(insn 82 81 83 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 100)) src/gui.c:754 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 83 82 84 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 85 [ D.5876 ])) src/gui.c:754 -1
     (nil))

(insn 84 83 85 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:754 -1
     (nil))

(insn 85 84 86 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 86 [ D.5877 ])) src/gui.c:754 -1
     (nil))

(call_insn 86 85 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:754 -1
     (nil)
    (nil))


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (reg/f:SI 87)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 game+0 S4 A32])) src/gui.c:740 -1
     (nil))

(insn 6 5 7 3 (set (reg:SI 88)
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 pos+0 S4 A32])) src/gui.c:740 -1
     (nil))

(insn 7 6 8 3 (set (reg:DI 89)
        (mem/s/j:DI (plus:SI (mult:SI (reg:SI 88)
                    (const_int 8 [0x8]))
                (reg/f:SI 87)) [0 game_1(D)->zones S8 A32])) src/gui.c:740 -1
     (nil))

(insn 8 7 9 3 (set (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 selectedZone+0 S8 A32])
        (reg:DI 89)) src/gui.c:740 -1
     (nil))

(insn 9 8 10 3 (set (reg/f:SI 90)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:741 -1
     (nil))

(insn 10 9 11 3 (set (reg:SI 92)
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 pos+0 S4 A32])) src/gui.c:741 -1
     (nil))

(insn 11 10 12 3 (parallel [
            (set (reg:SI 91)
                (plus:SI (reg:SI 92)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:741 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 pos+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 12 11 13 3 (set (reg:DI 93)
        (mem/s/j:DI (plus:SI (plus:SI (mult:SI (reg:SI 91)
                        (const_int 8 [0x8]))
                    (reg/f:SI 90))
                (const_int 4 [0x4])) [0 display_3(D)->positions S8 A32])) src/gui.c:741 -1
     (nil))

(insn 13 12 14 3 (set (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posSelectedChecker+0 S8 A32])
        (reg:DI 93)) src/gui.c:741 -1
     (nil))

(insn 14 13 15 3 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 pos+0 S4 A32])
            (const_int 11 [0xb]))) src/gui.c:743 -1
     (nil))

(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) src/gui.c:743 -1
     (nil)
 -> 46)
;; End of basic block 3 -> ( 4 7)

;; Succ edge  4 (fallthru)
;; Succ edge  7

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 (set (reg:SI 59 [ D.5843 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 selectedZone.nb_checkers+0 S4 A32])) src/gui.c:744 -1
     (nil))

(insn 18 17 19 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 59 [ D.5843 ])
            (const_int 6 [0x6]))) src/gui.c:744 -1
     (nil))

(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) src/gui.c:744 -1
     (nil)
 -> 28)
;; End of basic block 4 -> ( 5 6)

;; Succ edge  5 (fallthru)
;; Succ edge  6

;; Start of basic block ( 4) -> 5
;; Pred edge  4 (fallthru)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 5 (set (reg:HI 60 [ D.5846 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])) src/gui.c:745 -1
     (nil))

(insn 22 21 23 5 (set (reg:HI 61 [ D.5847 ])
        (reg:HI 60 [ D.5846 ])) src/gui.c:745 -1
     (nil))

(insn 23 22 24 5 (parallel [
            (set (reg:HI 62 [ D.5848 ])
                (plus:HI (reg:HI 61 [ D.5847 ])
                    (const_int -100 [0xffffffffffffff9c])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:745 -1
     (nil))

(insn 24 23 25 5 (set (reg:HI 63 [ D.5849 ])
        (reg:HI 62 [ D.5848 ])) src/gui.c:745 -1
     (nil))

(insn 25 24 26 5 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])
        (reg:HI 63 [ D.5849 ])) src/gui.c:745 -1
     (nil))

(jump_insn 26 25 27 5 (set (pc)
        (label_ref 75)) src/gui.c:745 -1
     (nil)
 -> 75)
;; End of basic block 5 -> ( 10)

;; Succ edge  10

(barrier 27 26 28)

;; Start of basic block ( 4) -> 6
;; Pred edge  4
(code_label 28 27 29 6 147 "" [1 uses])

(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 6 (set (reg:HI 64 [ D.5851 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])) src/gui.c:747 -1
     (nil))

(insn 31 30 32 6 (set (reg:HI 65 [ D.5852 ])
        (reg:HI 64 [ D.5851 ])) src/gui.c:747 -1
     (nil))

(insn 32 31 33 6 (set (reg:SI 66 [ D.5853 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 selectedZone.nb_checkers+0 S4 A32])) src/gui.c:747 -1
     (nil))

(insn 33 32 34 6 (set (reg:HI 67 [ D.5854 ])
        (subreg:HI (reg:SI 66 [ D.5853 ]) 0)) src/gui.c:747 -1
     (nil))

(insn 34 33 35 6 (set (reg:HI 94)
        (reg:HI 67 [ D.5854 ])) src/gui.c:747 -1
     (nil))

(insn 35 34 36 6 (parallel [
            (set (reg:HI 94)
                (ashift:HI (reg:HI 94)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:747 -1
     (nil))

(insn 36 35 37 6 (parallel [
            (set (reg:HI 94)
                (plus:HI (reg:HI 94)
                    (reg:HI 67 [ D.5854 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:747 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 67 [ D.5854 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 37 36 38 6 (parallel [
            (set (reg:HI 95)
                (ashift:HI (reg:HI 94)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:747 -1
     (nil))

(insn 38 37 39 6 (set (reg:HI 94)
        (reg:HI 95)) src/gui.c:747 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 67 [ D.5854 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 39 38 40 6 (parallel [
            (set (reg:HI 68 [ D.5855 ])
                (neg:HI (reg:HI 94)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:747 -1
     (nil))

(insn 40 39 41 6 (parallel [
            (set (reg:HI 69 [ D.5856 ])
                (plus:HI (reg:HI 65 [ D.5852 ])
                    (reg:HI 68 [ D.5855 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:747 -1
     (nil))

(insn 41 40 42 6 (parallel [
            (set (reg:HI 70 [ D.5857 ])
                (plus:HI (reg:HI 69 [ D.5856 ])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:747 -1
     (nil))

(insn 42 41 43 6 (set (reg:HI 71 [ D.5858 ])
        (reg:HI 70 [ D.5857 ])) src/gui.c:747 -1
     (nil))

(insn 43 42 44 6 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])
        (reg:HI 71 [ D.5858 ])) src/gui.c:747 -1
     (nil))

(jump_insn 44 43 45 6 (set (pc)
        (label_ref 75)) src/gui.c:747 -1
     (nil)
 -> 75)
;; End of basic block 6 -> ( 10)

;; Succ edge  10

(barrier 45 44 46)

;; Start of basic block ( 3) -> 7
;; Pred edge  3
(code_label 46 45 47 7 146 "" [1 uses])

(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 7 (set (reg:SI 72 [ D.5860 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 selectedZone.nb_checkers+0 S4 A32])) src/gui.c:749 -1
     (nil))

(insn 49 48 50 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 72 [ D.5860 ])
            (const_int 6 [0x6]))) src/gui.c:749 -1
     (nil))

(jump_insn 50 49 51 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) src/gui.c:749 -1
     (nil)
 -> 59)
;; End of basic block 7 -> ( 8 9)

;; Succ edge  8 (fallthru)
;; Succ edge  9

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(note 51 50 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 8 (set (reg:HI 73 [ D.5863 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])) src/gui.c:750 -1
     (nil))

(insn 53 52 54 8 (set (reg:HI 74 [ D.5864 ])
        (reg:HI 73 [ D.5863 ])) src/gui.c:750 -1
     (nil))

(insn 54 53 55 8 (parallel [
            (set (reg:HI 75 [ D.5865 ])
                (plus:HI (reg:HI 74 [ D.5864 ])
                    (const_int 100 [0x64])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:750 -1
     (nil))

(insn 55 54 56 8 (set (reg:HI 76 [ D.5866 ])
        (reg:HI 75 [ D.5865 ])) src/gui.c:750 -1
     (nil))

(insn 56 55 57 8 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])
        (reg:HI 76 [ D.5866 ])) src/gui.c:750 -1
     (nil))

(jump_insn 57 56 58 8 (set (pc)
        (label_ref 75)) src/gui.c:750 -1
     (nil)
 -> 75)
;; End of basic block 8 -> ( 10)

;; Succ edge  10

(barrier 58 57 59)

;; Start of basic block ( 7) -> 9
;; Pred edge  7
(code_label 59 58 60 9 149 "" [1 uses])

(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 9 (set (reg:HI 77 [ D.5868 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])) src/gui.c:752 -1
     (nil))

(insn 62 61 63 9 (set (reg:HI 78 [ D.5869 ])
        (reg:HI 77 [ D.5868 ])) src/gui.c:752 -1
     (nil))

(insn 63 62 64 9 (set (reg:SI 79 [ D.5870 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 selectedZone.nb_checkers+0 S4 A32])) src/gui.c:752 -1
     (nil))

(insn 64 63 65 9 (set (reg:HI 80 [ D.5871 ])
        (subreg:HI (reg:SI 79 [ D.5870 ]) 0)) src/gui.c:752 -1
     (nil))

(insn 65 64 66 9 (set (reg:HI 96)
        (reg:HI 80 [ D.5871 ])) src/gui.c:752 -1
     (nil))

(insn 66 65 67 9 (parallel [
            (set (reg:HI 96)
                (ashift:HI (reg:HI 96)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:752 -1
     (nil))

(insn 67 66 68 9 (parallel [
            (set (reg:HI 96)
                (plus:HI (reg:HI 96)
                    (reg:HI 80 [ D.5871 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:752 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 80 [ D.5871 ])
            (const_int 5 [0x5]))
        (nil)))

(insn 68 67 69 9 (parallel [
            (set (reg:HI 97)
                (ashift:HI (reg:HI 96)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:752 -1
     (nil))

(insn 69 68 70 9 (set (reg:HI 96)
        (reg:HI 97)) src/gui.c:752 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 80 [ D.5871 ])
            (const_int 20 [0x14]))
        (nil)))

(insn 70 69 71 9 (set (reg:HI 81 [ D.5872 ])
        (reg:HI 96)) src/gui.c:752 -1
     (nil))

(insn 71 70 72 9 (parallel [
            (set (reg:HI 82 [ D.5873 ])
                (plus:HI (reg:HI 78 [ D.5869 ])
                    (reg:HI 81 [ D.5872 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:752 -1
     (nil))

(insn 72 71 73 9 (parallel [
            (set (reg:HI 83 [ D.5874 ])
                (plus:HI (reg:HI 82 [ D.5873 ])
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:752 -1
     (nil))

(insn 73 72 74 9 (set (reg:HI 84 [ D.5875 ])
        (reg:HI 83 [ D.5874 ])) src/gui.c:752 -1
     (nil))

(insn 74 73 75 9 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posSelectedChecker.y+0 S2 A16])
        (reg:HI 84 [ D.5875 ])) src/gui.c:752 -1
     (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 (fallthru)

;; Start of basic block ( 6 8 9 5) -> 10
;; Pred edge  6
;; Pred edge  8
;; Pred edge  9 (fallthru)
;; Pred edge  5
(code_label 75 74 76 10 148 "" [3 uses])

(note 76 75 77 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 10 (set (reg/f:SI 98)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:754 -1
     (nil))

(insn 78 77 79 10 (set (reg/f:SI 85 [ D.5876 ])
        (mem/s/f/j:SI (reg/f:SI 98) [0 display_3(D)->screen+0 S4 A32])) src/gui.c:754 -1
     (nil))

(insn 79 78 80 10 (set (reg/f:SI 99)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:754 -1
     (nil))

(insn 80 79 81 10 (set (reg/f:SI 86 [ D.5877 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 99)
                (const_int 60 [0x3c])) [0 display_3(D)->selected_checker+0 S4 A32])) src/gui.c:754 -1
     (nil))

(insn 81 80 82 10 (parallel [
            (set (reg:SI 100)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:754 -1
     (nil))

(insn 82 81 83 10 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 100)) src/gui.c:754 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 83 82 84 10 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 85 [ D.5876 ])) src/gui.c:754 -1
     (nil))

(insn 84 83 85 10 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:754 -1
     (nil))

(insn 85 84 86 10 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 86 [ D.5877 ])) src/gui.c:754 -1
     (nil))

(call_insn 86 85 87 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:754 -1
     (nil)
    (nil))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 (fallthru)

;; Start of basic block ( 10) -> 11
;; Pred edge  10 (fallthru)
(code_label 87 86 88 11 145 "" [0 uses])

(note 88 87 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 11 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Display_CheckersPossibilities (Display_CheckersPossibilities)

Display_CheckersPossibilities (struct SDisplay * display, struct SGameState * gameState, EPlayer player, struct SGame * game)
{
  struct SMove mouvement;
  EPosition posArrivee;
  EPosition posDepart;
  int i;
  union SDL_Event event;
  int posDepartSelected;
  int cpt;
  int * arriveesValides;
  int tab[28];
  int i;
  unsigned int D.5837;
  EPosition posArrivee.49;
  int D.5833;
  EPosition posArrivee.48;
  int D.5829;
  int D.5828;
  Uint16 D.5827;
  int D.5826;
  Uint16 D.5825;
  unsigned int D.5823;
  EPosition posDepart.47;
  EPosition posDepart.46;
  int D.5818;
  EPosition posDepart.45;
  int D.5814;
  int D.5813;
  Uint16 D.5812;
  int D.5811;
  Uint16 D.5810;
  int D.5805;
  EPosition posDepart.44;
  int D.5799;
  EPosition posDepart.43;
  int D.5795;
  int D.5794;
  Uint16 D.5793;
  int D.5792;
  Uint16 D.5791;
  Uint8 D.5788;
  int D.5787;
  int D.5784;
  Uint8 D.5783;
  struct SDL_Surface * D.5782;
  EPosition i.42;
  const char * restrict D.5780;
  unsigned int D.5779;
  unsigned int D.5778;
  unsigned int D.5777;
  unsigned int D.5776;
  unsigned int i.41;
  unsigned int D.5774;
  int D.5773;
  EPlayer D.5772;
  unsigned int D.5771;
  unsigned int D.5770;
  unsigned int D.5769;
  unsigned int i.40;
  unsigned int D.5767;
  unsigned int D.5765;
  unsigned int D.5764;
  unsigned int D.5763;
  unsigned int D.5762;
  unsigned int i.39;
  unsigned int D.5760;
  unsigned int D.5758;
  unsigned int D.5757;
  unsigned int D.5756;
  unsigned int D.5755;
  unsigned int i.38;
  unsigned int D.5753;
  unsigned int D.5750;
  unsigned int D.5749;
  unsigned int D.5748;
  unsigned int i.37;
  unsigned int D.5746;
  unsigned int D.5743;
  unsigned int D.5742;
  unsigned int D.5741;
  unsigned int i.36;
  unsigned int D.5739;
  EPosition i.35;
  const char * restrict D.5735;
  unsigned int D.5734;
  unsigned int D.5733;
  unsigned int i.34;
  unsigned int D.5731;
  int D.5730;
  EPlayer D.5729;
  unsigned int D.5728;
  unsigned int i.33;
  unsigned int D.5726;
  unsigned int D.5724;
  unsigned int D.5723;
  unsigned int i.32;
  unsigned int D.5721;
  unsigned int D.5719;
  unsigned int D.5718;
  unsigned int i.31;
  unsigned int D.5716;
  unsigned int D.5713;
  unsigned int i.30;
  unsigned int D.5711;
  unsigned int D.5708;
  unsigned int i.29;
  unsigned int D.5706;
  EPosition i.28;
  const char * restrict D.5702;
  unsigned int D.5701;
  unsigned int D.5700;
  unsigned int i.27;
  unsigned int D.5698;
  int D.5697;
  EPlayer D.5696;
  unsigned int D.5695;
  unsigned int i.26;
  unsigned int D.5693;
  unsigned int D.5691;
  unsigned int D.5690;
  unsigned int i.25;
  unsigned int D.5688;
  unsigned int D.5686;
  unsigned int D.5685;
  unsigned int i.24;
  unsigned int D.5683;
  unsigned int D.5680;
  unsigned int i.23;
  unsigned int D.5678;
  unsigned int D.5675;
  unsigned int i.22;
  unsigned int D.5673;
  EPlayer D.5668;
  unsigned int D.5665;
  unsigned int D.5662;
  unsigned int D.5661;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  i_15 = 0;
  cpt_16 = 0;
  posDepartSelected_17 = 0;
  i_18 = 0;
  goto <bb 4>;
  # SUCC: 4 (fallthru)

  # BLOCK 3
  # PRED: 4 (true)
  tab[i_13] = -1;
  i_19 = i_13 + 1;
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (fallthru) 3 (fallthru)
  # i_13 = PHI <i_18(2), i_19(3)>
  if (i_13 <= 27)
    goto <bb 3>;
  else
    goto <bb 5>;
  # SUCC: 3 (true) 5 (false)

  # BLOCK 5
  # PRED: 4 (false)
  D.5661_21 = gameState_20(D)->die1;
  D.5662_22 = gameState_20(D)->die2;
  if (D.5661_21 != D.5662_22)
    goto <bb 6>;
  else
    goto <bb 50>;
  # SUCC: 6 (true) 50 (false)

  # BLOCK 6
  # PRED: 5 (true)
  i_23 = 0;
  goto <bb 28>;
  # SUCC: 28 (fallthru)

  # BLOCK 7
  # PRED: 28 (true)
  D.5665_24 = gameState_20(D)->zones[i_1].nb_checkers;
  if (D.5665_24 != 0)
    goto <bb 8>;
  else
    goto <bb 27>;
  # SUCC: 8 (true) 27 (false)

  # BLOCK 8
  # PRED: 7 (true)
  D.5668_25 = gameState_20(D)->zones[i_1].player;
  if (D.5668_25 == player_26(D))
    goto <bb 9>;
  else
    goto <bb 27>;
  # SUCC: 9 (true) 27 (false)

  # BLOCK 9
  # PRED: 8 (true)
  D.5673_27 = gameState_20(D)->die1;
  i.22_28 = (unsigned int) i_1;
  D.5675_29 = D.5673_27 + i.22_28;
  if (D.5675_29 <= 27)
    goto <bb 10>;
  else
    goto <bb 15>;
  # SUCC: 10 (true) 15 (false)

  # BLOCK 10
  # PRED: 9 (true)
  D.5678_30 = gameState_20(D)->die1;
  i.23_31 = (unsigned int) i_1;
  D.5680_32 = D.5678_30 + i.23_31;
  if (D.5680_32 != 26)
    goto <bb 11>;
  else
    goto <bb 15>;
  # SUCC: 11 (true) 15 (false)

  # BLOCK 11
  # PRED: 10 (true)
  D.5683_33 = gameState_20(D)->die1;
  i.24_34 = (unsigned int) i_1;
  D.5685_35 = D.5683_33 + i.24_34;
  D.5686_36 = gameState_20(D)->zones[D.5685_35].nb_checkers;
  if (D.5686_36 == 1)
    goto <bb 14>;
  else
    goto <bb 12>;
  # SUCC: 14 (true) 12 (false)

  # BLOCK 12
  # PRED: 11 (false)
  D.5688_37 = gameState_20(D)->die1;
  i.25_38 = (unsigned int) i_1;
  D.5690_39 = D.5688_37 + i.25_38;
  D.5691_40 = gameState_20(D)->zones[D.5690_39].nb_checkers;
  if (D.5691_40 == 0)
    goto <bb 14>;
  else
    goto <bb 13>;
  # SUCC: 14 (true) 13 (false)

  # BLOCK 13
  # PRED: 12 (false)
  D.5693_41 = gameState_20(D)->die1;
  i.26_42 = (unsigned int) i_1;
  D.5695_43 = D.5693_41 + i.26_42;
  D.5696_44 = gameState_20(D)->zones[D.5695_43].player;
  if (D.5696_44 == player_26(D))
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 (true) 15 (false)

  # BLOCK 14
  # PRED: 11 (true) 12 (true) 13 (true)
  D.5697_45 = i_1 + 1;
  D.5698_46 = gameState_20(D)->die1;
  i.27_47 = (unsigned int) i_1;
  D.5700_48 = D.5698_46 + i.27_47;
  D.5701_49 = D.5700_48 + 1;
  D.5702_50 = (const char * restrict) &"Possibilite sur fleche %d avec de1 et pion sur fleche %d\n"[0];
  printf (D.5702_50, D.5701_49, D.5697_45);
  i.28_51 = (EPosition) i_1;
  colorChecker (display_52(D), gameState_20(D), i.28_51);
  tab[cpt_8] = i_1;
  cpt_53 = cpt_8 + 1;
  # SUCC: 15 (fallthru)

  # BLOCK 15
  # PRED: 9 (false) 10 (false) 13 (false) 14 (fallthru)
  # cpt_5 = PHI <cpt_8(9), cpt_8(10), cpt_8(13), cpt_53(14)>
  D.5706_54 = gameState_20(D)->die2;
  i.29_55 = (unsigned int) i_1;
  D.5708_56 = D.5706_54 + i.29_55;
  if (D.5708_56 <= 27)
    goto <bb 16>;
  else
    goto <bb 21>;
  # SUCC: 16 (true) 21 (false)

  # BLOCK 16
  # PRED: 15 (true)
  D.5711_57 = gameState_20(D)->die2;
  i.30_58 = (unsigned int) i_1;
  D.5713_59 = D.5711_57 + i.30_58;
  if (D.5713_59 != 26)
    goto <bb 17>;
  else
    goto <bb 21>;
  # SUCC: 17 (true) 21 (false)

  # BLOCK 17
  # PRED: 16 (true)
  D.5716_60 = gameState_20(D)->die2;
  i.31_61 = (unsigned int) i_1;
  D.5718_62 = D.5716_60 + i.31_61;
  D.5719_63 = gameState_20(D)->zones[D.5718_62].nb_checkers;
  if (D.5719_63 == 0)
    goto <bb 20>;
  else
    goto <bb 18>;
  # SUCC: 20 (true) 18 (false)

  # BLOCK 18
  # PRED: 17 (false)
  D.5721_64 = gameState_20(D)->die2;
  i.32_65 = (unsigned int) i_1;
  D.5723_66 = D.5721_64 + i.32_65;
  D.5724_67 = gameState_20(D)->zones[D.5723_66].nb_checkers;
  if (D.5724_67 == 1)
    goto <bb 20>;
  else
    goto <bb 19>;
  # SUCC: 20 (true) 19 (false)

  # BLOCK 19
  # PRED: 18 (false)
  D.5726_68 = gameState_20(D)->die2;
  i.33_69 = (unsigned int) i_1;
  D.5728_70 = D.5726_68 + i.33_69;
  D.5729_71 = gameState_20(D)->zones[D.5728_70].player;
  if (D.5729_71 == player_26(D))
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 (true) 21 (false)

  # BLOCK 20
  # PRED: 17 (true) 18 (true) 19 (true)
  D.5730_72 = i_1 + 1;
  D.5731_73 = gameState_20(D)->die2;
  i.34_74 = (unsigned int) i_1;
  D.5733_75 = D.5731_73 + i.34_74;
  D.5734_76 = D.5733_75 + 1;
  D.5735_77 = (const char * restrict) &"Possibilite sur fleche %d avec de2 et pion sur fleche %d\n"[0];
  printf (D.5735_77, D.5734_76, D.5730_72);
  i.35_78 = (EPosition) i_1;
  colorChecker (display_52(D), gameState_20(D), i.35_78);
  tab[cpt_5] = i_1;
  cpt_79 = cpt_5 + 1;
  # SUCC: 21 (fallthru)

  # BLOCK 21
  # PRED: 15 (false) 16 (false) 19 (false) 20 (fallthru)
  # cpt_6 = PHI <cpt_5(15), cpt_5(16), cpt_5(19), cpt_79(20)>
  D.5739_80 = gameState_20(D)->die1;
  i.36_81 = (unsigned int) i_1;
  D.5741_82 = D.5739_80 + i.36_81;
  D.5742_83 = gameState_20(D)->die2;
  D.5743_84 = D.5741_82 + D.5742_83;
  if (D.5743_84 <= 27)
    goto <bb 22>;
  else
    goto <bb 27>;
  # SUCC: 22 (true) 27 (false)

  # BLOCK 22
  # PRED: 21 (true)
  D.5746_85 = gameState_20(D)->die1;
  i.37_86 = (unsigned int) i_1;
  D.5748_87 = D.5746_85 + i.37_86;
  D.5749_88 = gameState_20(D)->die2;
  D.5750_89 = D.5748_87 + D.5749_88;
  if (D.5750_89 != 26)
    goto <bb 23>;
  else
    goto <bb 27>;
  # SUCC: 23 (true) 27 (false)

  # BLOCK 23
  # PRED: 22 (true)
  D.5753_90 = gameState_20(D)->die1;
  i.38_91 = (unsigned int) i_1;
  D.5755_92 = D.5753_90 + i.38_91;
  D.5756_93 = gameState_20(D)->die2;
  D.5757_94 = D.5755_92 + D.5756_93;
  D.5758_95 = gameState_20(D)->zones[D.5757_94].nb_checkers;
  if (D.5758_95 == 1)
    goto <bb 26>;
  else
    goto <bb 24>;
  # SUCC: 26 (true) 24 (false)

  # BLOCK 24
  # PRED: 23 (false)
  D.5760_96 = gameState_20(D)->die1;
  i.39_97 = (unsigned int) i_1;
  D.5762_98 = D.5760_96 + i.39_97;
  D.5763_99 = gameState_20(D)->die2;
  D.5764_100 = D.5762_98 + D.5763_99;
  D.5765_101 = gameState_20(D)->zones[D.5764_100].nb_checkers;
  if (D.5765_101 == 0)
    goto <bb 26>;
  else
    goto <bb 25>;
  # SUCC: 26 (true) 25 (false)

  # BLOCK 25
  # PRED: 24 (false)
  D.5767_102 = gameState_20(D)->die1;
  i.40_103 = (unsigned int) i_1;
  D.5769_104 = D.5767_102 + i.40_103;
  D.5770_105 = gameState_20(D)->die2;
  D.5771_106 = D.5769_104 + D.5770_105;
  D.5772_107 = gameState_20(D)->zones[D.5771_106].player;
  if (D.5772_107 == player_26(D))
    goto <bb 26>;
  else
    goto <bb 27>;
  # SUCC: 26 (true) 27 (false)

  # BLOCK 26
  # PRED: 23 (true) 24 (true) 25 (true)
  D.5773_108 = i_1 + 1;
  D.5774_109 = gameState_20(D)->die1;
  i.41_110 = (unsigned int) i_1;
  D.5776_111 = D.5774_109 + i.41_110;
  D.5777_112 = gameState_20(D)->die2;
  D.5778_113 = D.5776_111 + D.5777_112;
  D.5779_114 = D.5778_113 + 1;
  D.5780_115 = (const char * restrict) &"Possibilite sur fleche %d avec de1+de2 et pion sur fleche %d\n"[0];
  printf (D.5780_115, D.5779_114, D.5773_108);
  i.42_116 = (EPosition) i_1;
  colorChecker (display_52(D), gameState_20(D), i.42_116);
  tab[cpt_6] = i_1;
  cpt_117 = cpt_6 + 1;
  # SUCC: 27 (fallthru)

  # BLOCK 27
  # PRED: 7 (false) 8 (false) 21 (false) 22 (false) 25 (false) 26 (fallthru)
  # cpt_7 = PHI <cpt_8(7), cpt_8(8), cpt_6(21), cpt_6(22), cpt_6(25), cpt_117(26)>
  i_118 = i_1 + 1;
  # SUCC: 28 (fallthru)

  # BLOCK 28
  # PRED: 6 (fallthru) 27 (fallthru)
  # i_1 = PHI <i_23(6), i_118(27)>
  # cpt_8 = PHI <cpt_16(6), cpt_7(27)>
  if (i_1 <= 23)
    goto <bb 7>;
  else
    goto <bb 29>;
  # SUCC: 7 (true) 29 (false)

  # BLOCK 29
  # PRED: 28 (false)
  D.5782_119 = display_52(D)->screen;
  SDL_Flip (D.5782_119);
  # SUCC: 30 (fallthru)

  # BLOCK 30
  # PRED: 29 (fallthru) 49 (fallthru)
  # arriveesValides_2 = PHI <arriveesValides_120(D)(29), arriveesValides_4(49)>
  # posDepartSelected_9 = PHI <posDepartSelected_17(29), posDepartSelected_12(49)>
  SDL_WaitEvent (&event);
  D.5783_121 = event.type;
  D.5784_122 = (int) D.5783_121;
  switch (D.5784_122) <default: <L62>, case 6: <L39>, case 12: <L36>>
  # SUCC: 49 34 31

  # BLOCK 31
  # PRED: 30
<L36>:
  if (posDepartSelected_9 != 0)
    goto <bb 32>;
  else
    goto <bb 33>;
  # SUCC: 32 (true) 33 (false)

  # BLOCK 32
  # PRED: 31 (true)
  free (arriveesValides_2);
  # SUCC: 33 (fallthru)

  # BLOCK 33
  # PRED: 31 (false) 32 (fallthru)
  D.5787_123 = 1;
  goto <bb 51>;
  # SUCC: 51 (fallthru)

  # BLOCK 34
  # PRED: 30
<L39>:
  D.5788_124 = event.button.button;
  if (D.5788_124 == 1)
    goto <bb 35>;
  else
    goto <bb 48>;
  # SUCC: 35 (true) 48 (false)

  # BLOCK 35
  # PRED: 34 (true)
  D.5791_125 = event.button.y;
  D.5792_126 = (int) D.5791_125;
  D.5793_127 = event.button.x;
  D.5794_128 = (int) D.5793_127;
  D.5795_129 = CheckerWithScreenPosition (D.5794_128, D.5792_126, &posDepart);
  if (D.5795_129 != 0)
    goto <bb 36>;
  else
    goto <bb 40>;
  # SUCC: 36 (true) 40 (false)

  # BLOCK 36
  # PRED: 35 (true)
  posDepart.43_130 = posDepart;
  D.5799_131 = inTab (posDepart.43_130, &tab);
  if (D.5799_131 != 0)
    goto <bb 37>;
  else
    goto <bb 40>;
  # SUCC: 37 (true) 40 (false)

  # BLOCK 37
  # PRED: 36 (true)
  if (posDepartSelected_9 != 0)
    goto <bb 38>;
  else
    goto <bb 40>;
  # SUCC: 38 (true) 40 (false)

  # BLOCK 38
  # PRED: 37 (true)
  posDepart.44_132 = posDepart;
  D.5805_133 = inTab (posDepart.44_132, arriveesValides_2);
  if (D.5805_133 == 0)
    goto <bb 39>;
  else
    goto <bb 40>;
  # SUCC: 39 (true) 40 (false)

  # BLOCK 39
  # PRED: 38 (true)
  posDepartSelected_134 = posDepartSelected_9 == 0;
  # SUCC: 40 (fallthru)

  # BLOCK 40
  # PRED: 35 (false) 36 (false) 37 (false) 38 (false) 39 (fallthru)
  # posDepartSelected_10 = PHI <posDepartSelected_9(35), posDepartSelected_9(36), posDepartSelected_9(37), posDepartSelected_9(38), posDepartSelected_134(39)>
  if (posDepartSelected_10 == 0)
    goto <bb 41>;
  else
    goto <bb 44>;
  # SUCC: 41 (true) 44 (false)

  # BLOCK 41
  # PRED: 40 (true)
  D.5810_135 = event.button.y;
  D.5811_136 = (int) D.5810_135;
  D.5812_137 = event.button.x;
  D.5813_138 = (int) D.5812_137;
  D.5814_139 = CheckerWithScreenPosition (D.5813_138, D.5811_136, &posDepart);
  if (D.5814_139 != 0)
    goto <bb 42>;
  else
    goto <bb 48>;
  # SUCC: 42 (true) 48 (false)

  # BLOCK 42
  # PRED: 41 (true)
  posDepart.45_140 = posDepart;
  D.5818_141 = inTab (posDepart.45_140, &tab);
  if (D.5818_141 != 0)
    goto <bb 43>;
  else
    goto <bb 48>;
  # SUCC: 43 (true) 48 (false)

  # BLOCK 43
  # PRED: 42 (true)
  posDepart.46_142 = posDepart;
  arriveesValides_144 = Display_Arrow_Possibilities (display_52(D), gameState_20(D), player_26(D), posDepart.46_142, game_143(D));
  posDepartSelected_145 = 1;
  posDepart.47_146 = posDepart;
  D.5823_147 = posDepart.47_146 + 1;
  mouvement.src_point = D.5823_147;
  goto <bb 48>;
  # SUCC: 48 (fallthru)

  # BLOCK 44
  # PRED: 40 (false)
  D.5825_148 = event.button.y;
  D.5826_149 = (int) D.5825_148;
  D.5827_150 = event.button.x;
  D.5828_151 = (int) D.5827_150;
  D.5829_152 = CheckerWithScreenPosition (D.5828_151, D.5826_149, &posArrivee);
  if (D.5829_152 != 0)
    goto <bb 45>;
  else
    goto <bb 47>;
  # SUCC: 45 (true) 47 (false)

  # BLOCK 45
  # PRED: 44 (true)
  __builtin_puts (&"POS ARRIVEE"[0]);
  posArrivee.48_153 = posArrivee;
  D.5833_154 = inTab (posArrivee.48_153, arriveesValides_2);
  if (D.5833_154 != 0)
    goto <bb 46>;
  else
    goto <bb 48>;
  # SUCC: 46 (true) 48 (false)

  # BLOCK 46
  # PRED: 45 (true)
  __builtin_puts (&"POS ARRIVEE VALIDE"[0]);
  posArrivee.49_155 = posArrivee;
  D.5837_156 = posArrivee.49_155 + 1;
  mouvement.dest_point = D.5837_156;
  free (arriveesValides_2);
  Checker_Move (display_52(D), gameState_20(D), &mouvement, game_143(D));
  D.5787_157 = 0;
  goto <bb 51>;
  # SUCC: 51 (fallthru)

  # BLOCK 47
  # PRED: 44 (false)
  free (arriveesValides_2);
  Display_RefreshGameBoard (display_52(D), gameState_20(D), game_143(D));
  D.5787_158 = Display_CheckersPossibilities (display_52(D), gameState_20(D), player_26(D), game_143(D));
  goto <bb 51>;
  # SUCC: 51 (fallthru)

  # BLOCK 48
  # PRED: 34 (false) 42 (false) 45 (false) 41 (false) 43 (fallthru)
  # arriveesValides_3 = PHI <arriveesValides_2(34), arriveesValides_2(42), arriveesValides_2(45), arriveesValides_2(41), arriveesValides_144(43)>
  # posDepartSelected_11 = PHI <posDepartSelected_9(34), posDepartSelected_10(42), posDepartSelected_10(45), posDepartSelected_10(41), posDepartSelected_145(43)>
  # SUCC: 49 (fallthru)

  # BLOCK 49
  # PRED: 30 48 (fallthru)
  # arriveesValides_4 = PHI <arriveesValides_2(30), arriveesValides_3(48)>
  # posDepartSelected_12 = PHI <posDepartSelected_9(30), posDepartSelected_11(48)>
<L62>:
  goto <bb 30>;
  # SUCC: 30 (fallthru)

  # BLOCK 50
  # PRED: 5 (false)
  return;
  # SUCC: EXIT

  # BLOCK 51
  # PRED: 33 (fallthru) 46 (fallthru) 47 (fallthru)
  # D.5787_14 = PHI <D.5787_123(33), D.5787_157(46), D.5787_158(47)>
  return D.5787_14;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (arriveesValides_2 - 2 )
Partition 3 (arriveesValides_3 - 3 )
Partition 4 (arriveesValides_4 - 4 )
Partition 5 (cpt_5 - 5 )
Partition 6 (cpt_6 - 6 )
Partition 7 (cpt_7 - 7 )
Partition 8 (cpt_8 - 8 )
Partition 9 (posDepartSelected_9 - 9 )
Partition 10 (posDepartSelected_10 - 10 )
Partition 11 (posDepartSelected_11 - 11 )
Partition 12 (posDepartSelected_12 - 12 )
Partition 13 (i_13 - 13 )
Partition 14 (D.5787_14 - 14 )
Partition 15 (i_15 - 15 )
Partition 16 (cpt_16 - 16 )
Partition 17 (posDepartSelected_17 - 17 )
Partition 18 (i_18 - 18 )
Partition 19 (i_19 - 19 )
Partition 20 (gameState_20(D) - 20 )
Partition 21 (D.5661_21 - 21 )
Partition 22 (D.5662_22 - 22 )
Partition 23 (i_23 - 23 )
Partition 24 (D.5665_24 - 24 )
Partition 25 (D.5668_25 - 25 )
Partition 26 (player_26(D) - 26 )
Partition 27 (D.5673_27 - 27 )
Partition 28 (i.22_28 - 28 )
Partition 29 (D.5675_29 - 29 )
Partition 30 (D.5678_30 - 30 )
Partition 31 (i.23_31 - 31 )
Partition 32 (D.5680_32 - 32 )
Partition 33 (D.5683_33 - 33 )
Partition 34 (i.24_34 - 34 )
Partition 35 (D.5685_35 - 35 )
Partition 36 (D.5686_36 - 36 )
Partition 37 (D.5688_37 - 37 )
Partition 38 (i.25_38 - 38 )
Partition 39 (D.5690_39 - 39 )
Partition 40 (D.5691_40 - 40 )
Partition 41 (D.5693_41 - 41 )
Partition 42 (i.26_42 - 42 )
Partition 43 (D.5695_43 - 43 )
Partition 44 (D.5696_44 - 44 )
Partition 45 (D.5697_45 - 45 )
Partition 46 (D.5698_46 - 46 )
Partition 47 (i.27_47 - 47 )
Partition 48 (D.5700_48 - 48 )
Partition 49 (D.5701_49 - 49 )
Partition 50 (D.5702_50 - 50 )
Partition 51 (i.28_51 - 51 )
Partition 52 (display_52(D) - 52 )
Partition 53 (cpt_53 - 53 )
Partition 54 (D.5706_54 - 54 )
Partition 55 (i.29_55 - 55 )
Partition 56 (D.5708_56 - 56 )
Partition 57 (D.5711_57 - 57 )
Partition 58 (i.30_58 - 58 )
Partition 59 (D.5713_59 - 59 )
Partition 60 (D.5716_60 - 60 )
Partition 61 (i.31_61 - 61 )
Partition 62 (D.5718_62 - 62 )
Partition 63 (D.5719_63 - 63 )
Partition 64 (D.5721_64 - 64 )
Partition 65 (i.32_65 - 65 )
Partition 66 (D.5723_66 - 66 )
Partition 67 (D.5724_67 - 67 )
Partition 68 (D.5726_68 - 68 )
Partition 69 (i.33_69 - 69 )
Partition 70 (D.5728_70 - 70 )
Partition 71 (D.5729_71 - 71 )
Partition 72 (D.5730_72 - 72 )
Partition 73 (D.5731_73 - 73 )
Partition 74 (i.34_74 - 74 )
Partition 75 (D.5733_75 - 75 )
Partition 76 (D.5734_76 - 76 )
Partition 77 (D.5735_77 - 77 )
Partition 78 (i.35_78 - 78 )
Partition 79 (cpt_79 - 79 )
Partition 80 (D.5739_80 - 80 )
Partition 81 (i.36_81 - 81 )
Partition 82 (D.5741_82 - 82 )
Partition 83 (D.5742_83 - 83 )
Partition 84 (D.5743_84 - 84 )
Partition 85 (D.5746_85 - 85 )
Partition 86 (i.37_86 - 86 )
Partition 87 (D.5748_87 - 87 )
Partition 88 (D.5749_88 - 88 )
Partition 89 (D.5750_89 - 89 )
Partition 90 (D.5753_90 - 90 )
Partition 91 (i.38_91 - 91 )
Partition 92 (D.5755_92 - 92 )
Partition 93 (D.5756_93 - 93 )
Partition 94 (D.5757_94 - 94 )
Partition 95 (D.5758_95 - 95 )
Partition 96 (D.5760_96 - 96 )
Partition 97 (i.39_97 - 97 )
Partition 98 (D.5762_98 - 98 )
Partition 99 (D.5763_99 - 99 )
Partition 100 (D.5764_100 - 100 )
Partition 101 (D.5765_101 - 101 )
Partition 102 (D.5767_102 - 102 )
Partition 103 (i.40_103 - 103 )
Partition 104 (D.5769_104 - 104 )
Partition 105 (D.5770_105 - 105 )
Partition 106 (D.5771_106 - 106 )
Partition 107 (D.5772_107 - 107 )
Partition 108 (D.5773_108 - 108 )
Partition 109 (D.5774_109 - 109 )
Partition 110 (i.41_110 - 110 )
Partition 111 (D.5776_111 - 111 )
Partition 112 (D.5777_112 - 112 )
Partition 113 (D.5778_113 - 113 )
Partition 114 (D.5779_114 - 114 )
Partition 115 (D.5780_115 - 115 )
Partition 116 (i.42_116 - 116 )
Partition 117 (cpt_117 - 117 )
Partition 118 (i_118 - 118 )
Partition 119 (D.5782_119 - 119 )
Partition 120 (arriveesValides_120(D) - 120 )
Partition 121 (D.5783_121 - 121 )
Partition 122 (D.5784_122 - 122 )
Partition 123 (D.5787_123 - 123 )
Partition 124 (D.5788_124 - 124 )
Partition 125 (D.5791_125 - 125 )
Partition 126 (D.5792_126 - 126 )
Partition 127 (D.5793_127 - 127 )
Partition 128 (D.5794_128 - 128 )
Partition 129 (D.5795_129 - 129 )
Partition 130 (posDepart.43_130 - 130 )
Partition 131 (D.5799_131 - 131 )
Partition 132 (posDepart.44_132 - 132 )
Partition 133 (D.5805_133 - 133 )
Partition 134 (posDepartSelected_134 - 134 )
Partition 135 (D.5810_135 - 135 )
Partition 136 (D.5811_136 - 136 )
Partition 137 (D.5812_137 - 137 )
Partition 138 (D.5813_138 - 138 )
Partition 139 (D.5814_139 - 139 )
Partition 140 (posDepart.45_140 - 140 )
Partition 141 (D.5818_141 - 141 )
Partition 142 (posDepart.46_142 - 142 )
Partition 143 (game_143(D) - 143 )
Partition 144 (arriveesValides_144 - 144 )
Partition 145 (posDepartSelected_145 - 145 )
Partition 146 (posDepart.47_146 - 146 )
Partition 147 (D.5823_147 - 147 )
Partition 148 (D.5825_148 - 148 )
Partition 149 (D.5826_149 - 149 )
Partition 150 (D.5827_150 - 150 )
Partition 151 (D.5828_151 - 151 )
Partition 152 (D.5829_152 - 152 )
Partition 153 (posArrivee.48_153 - 153 )
Partition 154 (D.5833_154 - 154 )
Partition 155 (posArrivee.49_155 - 155 )
Partition 156 (D.5837_156 - 156 )
Partition 157 (D.5787_157 - 157 )
Partition 158 (D.5787_158 - 158 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (arriveesValides_2 - 2 )
Partition 2 (arriveesValides_3 - 3 )
Partition 3 (arriveesValides_4 - 4 )
Partition 4 (cpt_5 - 5 )
Partition 5 (cpt_6 - 6 )
Partition 6 (cpt_7 - 7 )
Partition 7 (cpt_8 - 8 )
Partition 8 (posDepartSelected_9 - 9 )
Partition 9 (posDepartSelected_10 - 10 )
Partition 10 (posDepartSelected_11 - 11 )
Partition 11 (posDepartSelected_12 - 12 )
Partition 12 (i_13 - 13 )
Partition 13 (D.5787_14 - 14 )
Partition 14 (i_15 - 15 )
Partition 15 (cpt_16 - 16 )
Partition 16 (posDepartSelected_17 - 17 )
Partition 17 (i_18 - 18 )
Partition 18 (i_19 - 19 )
Partition 19 (gameState_20(D) - 20 )
Partition 20 (i_23 - 23 )
Partition 21 (player_26(D) - 26 )
Partition 22 (display_52(D) - 52 )
Partition 23 (cpt_53 - 53 )
Partition 24 (cpt_79 - 79 )
Partition 25 (cpt_117 - 117 )
Partition 26 (i_118 - 118 )
Partition 27 (arriveesValides_120(D) - 120 )
Partition 28 (D.5787_123 - 123 )
Partition 29 (posDepartSelected_134 - 134 )
Partition 30 (game_143(D) - 143 )
Partition 31 (arriveesValides_144 - 144 )
Partition 32 (posDepartSelected_145 - 145 )
Partition 33 (D.5787_157 - 157 )
Partition 34 (D.5787_158 - 158 )


Live on entry to BB2 : gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB3 : i_13  cpt_16  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB4 : cpt_16  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB5 : cpt_16  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB6 : cpt_16  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB7 : i_1  cpt_8  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB8 : i_1  cpt_8  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB9 : i_1  cpt_8  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB10 : i_1  cpt_8  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB11 : i_1  cpt_8  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB12 : i_1  cpt_8  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB13 : i_1  cpt_8  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB14 : i_1  cpt_8  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB15 : i_1  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB16 : i_1  cpt_5  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB17 : i_1  cpt_5  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB18 : i_1  cpt_5  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB19 : i_1  cpt_5  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB20 : i_1  cpt_5  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB21 : i_1  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB22 : i_1  cpt_6  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB23 : i_1  cpt_6  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB24 : i_1  cpt_6  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB25 : i_1  cpt_6  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB26 : i_1  cpt_6  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB27 : i_1  posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB28 : posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB29 : posDepartSelected_17  gameState_20(D)  player_26(D)  display_52(D)  arriveesValides_120(D)  game_143(D)  

Live on entry to BB30 : gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB31 : arriveesValides_2  posDepartSelected_9  

Live on entry to BB32 : arriveesValides_2  

Live on entry to BB33 : 

Live on entry to BB34 : arriveesValides_2  posDepartSelected_9  gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB35 : arriveesValides_2  posDepartSelected_9  gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB36 : arriveesValides_2  posDepartSelected_9  gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB37 : arriveesValides_2  posDepartSelected_9  gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB38 : arriveesValides_2  posDepartSelected_9  gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB39 : arriveesValides_2  posDepartSelected_9  gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB40 : arriveesValides_2  gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB41 : arriveesValides_2  posDepartSelected_10  gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB42 : arriveesValides_2  posDepartSelected_10  gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB43 : gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB44 : arriveesValides_2  posDepartSelected_10  gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB45 : arriveesValides_2  posDepartSelected_10  gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB46 : arriveesValides_2  gameState_20(D)  display_52(D)  game_143(D)  

Live on entry to BB47 : arriveesValides_2  gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB48 : gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB49 : gameState_20(D)  player_26(D)  display_52(D)  game_143(D)  

Live on entry to BB50 : 

Live on entry to BB51 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_15
(2147483646) i_1 <-> i_23
(2147483646) i_1 <-> i_118
(2147483646) arriveesValides_2 <-> arriveesValides_3
(2147483646) arriveesValides_2 <-> arriveesValides_4
(2147483646) arriveesValides_2 <-> arriveesValides_120(D)
(2147483646) arriveesValides_2 <-> arriveesValides_144
(2147483646) cpt_5 <-> cpt_6
(2147483646) cpt_5 <-> cpt_7
(2147483646) cpt_5 <-> cpt_8
(2147483646) cpt_5 <-> cpt_16
(2147483646) cpt_5 <-> cpt_53
(2147483646) cpt_5 <-> cpt_79
(2147483646) cpt_5 <-> cpt_117
(2147483646) posDepartSelected_9 <-> posDepartSelected_10
(2147483646) posDepartSelected_9 <-> posDepartSelected_11
(2147483646) posDepartSelected_9 <-> posDepartSelected_12
(2147483646) posDepartSelected_9 <-> posDepartSelected_17
(2147483646) posDepartSelected_9 <-> posDepartSelected_134
(2147483646) posDepartSelected_9 <-> posDepartSelected_145
(2147483646) i_13 <-> i_18
(2147483646) i_13 <-> i_19
(6) cpt_6 <-> cpt_7
(6) posDepartSelected_10 <-> posDepartSelected_11
(4) cpt_7 <-> cpt_8

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (arriveesValides_2 - 2 )
Partition 2 (arriveesValides_3 - 3 )
Partition 3 (arriveesValides_4 - 4 )
Partition 4 (cpt_5 - 5 )
Partition 5 (cpt_6 - 6 )
Partition 6 (cpt_7 - 7 )
Partition 7 (cpt_8 - 8 )
Partition 8 (posDepartSelected_9 - 9 )
Partition 9 (posDepartSelected_10 - 10 )
Partition 10 (posDepartSelected_11 - 11 )
Partition 11 (posDepartSelected_12 - 12 )
Partition 12 (i_13 - 13 )
Partition 13 (D.5787_14 - 14 )
Partition 14 (i_15 - 15 )
Partition 15 (cpt_16 - 16 )
Partition 16 (posDepartSelected_17 - 17 )
Partition 17 (i_18 - 18 )
Partition 18 (i_19 - 19 )
Partition 19 (gameState_20(D) - 20 )
Partition 20 (i_23 - 23 )
Partition 21 (player_26(D) - 26 )
Partition 22 (display_52(D) - 52 )
Partition 23 (cpt_53 - 53 )
Partition 24 (cpt_79 - 79 )
Partition 25 (cpt_117 - 117 )
Partition 26 (i_118 - 118 )
Partition 27 (arriveesValides_120(D) - 120 )
Partition 28 (D.5787_123 - 123 )
Partition 29 (posDepartSelected_134 - 134 )
Partition 30 (game_143(D) - 143 )
Partition 31 (arriveesValides_144 - 144 )
Partition 32 (posDepartSelected_145 - 145 )
Partition 33 (D.5787_157 - 157 )
Partition 34 (D.5787_158 - 158 )

Coalesce list: (1)i_1 & (15)i_15 [map: 0, 14] : Success -> 0
Coalesce list: (1)i_1 & (23)i_23 [map: 0, 20] : Success -> 0
Coalesce list: (1)i_1 & (118)i_118 [map: 0, 26] : Success -> 0
Coalesce list: (2)arriveesValides_2 & (3)arriveesValides_3 [map: 1, 2] : Success -> 1
Coalesce list: (2)arriveesValides_2 & (4)arriveesValides_4 [map: 1, 3] : Success -> 1
Coalesce list: (2)arriveesValides_2 & (120)arriveesValides_120(D) [map: 1, 27] : Success -> 1
Coalesce list: (2)arriveesValides_2 & (144)arriveesValides_144 [map: 1, 31] : Success -> 1
Coalesce list: (5)cpt_5 & (6)cpt_6 [map: 4, 5] : Success -> 4
Coalesce list: (5)cpt_5 & (7)cpt_7 [map: 4, 6] : Success -> 4
Coalesce list: (5)cpt_5 & (8)cpt_8 [map: 4, 7] : Success -> 4
Coalesce list: (5)cpt_5 & (16)cpt_16 [map: 4, 15] : Success -> 4
Coalesce list: (5)cpt_5 & (53)cpt_53 [map: 4, 23] : Success -> 4
Coalesce list: (5)cpt_5 & (79)cpt_79 [map: 4, 24] : Success -> 4
Coalesce list: (5)cpt_5 & (117)cpt_117 [map: 4, 25] : Success -> 4
Coalesce list: (9)posDepartSelected_9 & (10)posDepartSelected_10 [map: 8, 9] : Success -> 8
Coalesce list: (9)posDepartSelected_9 & (11)posDepartSelected_11 [map: 8, 10] : Success -> 8
Coalesce list: (9)posDepartSelected_9 & (12)posDepartSelected_12 [map: 8, 11] : Success -> 8
Coalesce list: (9)posDepartSelected_9 & (17)posDepartSelected_17 [map: 8, 16] : Success -> 8
Coalesce list: (9)posDepartSelected_9 & (134)posDepartSelected_134 [map: 8, 29] : Success -> 8
Coalesce list: (9)posDepartSelected_9 & (145)posDepartSelected_145 [map: 8, 32] : Success -> 8
Coalesce list: (13)i_13 & (18)i_18 [map: 12, 17] : Success -> 12
Coalesce list: (13)i_13 & (19)i_19 [map: 12, 18] : Success -> 12
Coalesce list: (6)cpt_5 & (7)cpt_5: Already Coalesced.
Coalesce list: (10)posDepartSelected_9 & (11)posDepartSelected_9: Already Coalesced.
Coalesce list: (7)cpt_5 & (8)cpt_5: Already Coalesced.
Coalesce list: (14)D.5787_14 & (158)D.5787_158 [map: 13, 34] : Success -> 13
Coalesce list: (14)D.5787_14 & (157)D.5787_157 [map: 13, 33] : Success -> 13
Coalesce list: (14)D.5787_14 & (123)D.5787_123 [map: 13, 28] : Success -> 13
Coalesce list: (12)posDepartSelected_9 & (11)posDepartSelected_9: Already Coalesced.
Coalesce list: (4)arriveesValides_2 & (3)arriveesValides_2: Already Coalesced.
Coalesce list: (11)posDepartSelected_9 & (145)posDepartSelected_9: Already Coalesced.
Coalesce list: (3)arriveesValides_2 & (144)arriveesValides_2: Already Coalesced.
Coalesce list: (10)posDepartSelected_9 & (134)posDepartSelected_9: Already Coalesced.
Coalesce list: (9)posDepartSelected_9 & (12)posDepartSelected_9: Already Coalesced.
Coalesce list: (9)posDepartSelected_9 & (17)posDepartSelected_9: Already Coalesced.
Coalesce list: (2)arriveesValides_2 & (4)arriveesValides_2: Already Coalesced.
Coalesce list: (2)arriveesValides_2 & (120)arriveesValides_2: Already Coalesced.
Coalesce list: (8)cpt_5 & (7)cpt_5: Already Coalesced.
Coalesce list: (8)cpt_5 & (16)cpt_5: Already Coalesced.
Coalesce list: (1)i_1 & (118)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (23)i_1: Already Coalesced.
Coalesce list: (7)cpt_5 & (117)cpt_5: Already Coalesced.
Coalesce list: (6)cpt_5 & (79)cpt_5: Already Coalesced.
Coalesce list: (5)cpt_5 & (53)cpt_5: Already Coalesced.
Coalesce list: (13)i_13 & (19)i_13: Already Coalesced.
Coalesce list: (13)i_13 & (18)i_13: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 15 23 118 )
Partition 1 (arriveesValides_2 - 2 3 4 120 144 )
Partition 2 (cpt_5 - 5 6 7 8 16 53 79 117 )
Partition 3 (posDepartSelected_9 - 9 10 11 12 17 134 145 )
Partition 4 (i_13 - 13 18 19 )
Partition 5 (D.5787_14 - 14 123 157 158 )
Partition 6 (gameState_20(D) - 20 )
Partition 7 (D.5661_21 - 21 )
Partition 8 (D.5662_22 - 22 )
Partition 9 (D.5665_24 - 24 )
Partition 10 (D.5668_25 - 25 )
Partition 11 (player_26(D) - 26 )
Partition 12 (D.5673_27 - 27 )
Partition 13 (i.22_28 - 28 )
Partition 14 (D.5675_29 - 29 )
Partition 15 (D.5678_30 - 30 )
Partition 16 (i.23_31 - 31 )
Partition 17 (D.5680_32 - 32 )
Partition 18 (D.5683_33 - 33 )
Partition 19 (i.24_34 - 34 )
Partition 20 (D.5685_35 - 35 )
Partition 21 (D.5686_36 - 36 )
Partition 22 (D.5688_37 - 37 )
Partition 23 (i.25_38 - 38 )
Partition 24 (D.5690_39 - 39 )
Partition 25 (D.5691_40 - 40 )
Partition 26 (D.5693_41 - 41 )
Partition 27 (i.26_42 - 42 )
Partition 28 (D.5695_43 - 43 )
Partition 29 (D.5696_44 - 44 )
Partition 30 (D.5697_45 - 45 )
Partition 31 (D.5698_46 - 46 )
Partition 32 (i.27_47 - 47 )
Partition 33 (D.5700_48 - 48 )
Partition 34 (D.5701_49 - 49 )
Partition 35 (D.5702_50 - 50 )
Partition 36 (i.28_51 - 51 )
Partition 37 (display_52(D) - 52 )
Partition 38 (D.5706_54 - 54 )
Partition 39 (i.29_55 - 55 )
Partition 40 (D.5708_56 - 56 )
Partition 41 (D.5711_57 - 57 )
Partition 42 (i.30_58 - 58 )
Partition 43 (D.5713_59 - 59 )
Partition 44 (D.5716_60 - 60 )
Partition 45 (i.31_61 - 61 )
Partition 46 (D.5718_62 - 62 )
Partition 47 (D.5719_63 - 63 )
Partition 48 (D.5721_64 - 64 )
Partition 49 (i.32_65 - 65 )
Partition 50 (D.5723_66 - 66 )
Partition 51 (D.5724_67 - 67 )
Partition 52 (D.5726_68 - 68 )
Partition 53 (i.33_69 - 69 )
Partition 54 (D.5728_70 - 70 )
Partition 55 (D.5729_71 - 71 )
Partition 56 (D.5730_72 - 72 )
Partition 57 (D.5731_73 - 73 )
Partition 58 (i.34_74 - 74 )
Partition 59 (D.5733_75 - 75 )
Partition 60 (D.5734_76 - 76 )
Partition 61 (D.5735_77 - 77 )
Partition 62 (i.35_78 - 78 )
Partition 63 (D.5739_80 - 80 )
Partition 64 (i.36_81 - 81 )
Partition 65 (D.5741_82 - 82 )
Partition 66 (D.5742_83 - 83 )
Partition 67 (D.5743_84 - 84 )
Partition 68 (D.5746_85 - 85 )
Partition 69 (i.37_86 - 86 )
Partition 70 (D.5748_87 - 87 )
Partition 71 (D.5749_88 - 88 )
Partition 72 (D.5750_89 - 89 )
Partition 73 (D.5753_90 - 90 )
Partition 74 (i.38_91 - 91 )
Partition 75 (D.5755_92 - 92 )
Partition 76 (D.5756_93 - 93 )
Partition 77 (D.5757_94 - 94 )
Partition 78 (D.5758_95 - 95 )
Partition 79 (D.5760_96 - 96 )
Partition 80 (i.39_97 - 97 )
Partition 81 (D.5762_98 - 98 )
Partition 82 (D.5763_99 - 99 )
Partition 83 (D.5764_100 - 100 )
Partition 84 (D.5765_101 - 101 )
Partition 85 (D.5767_102 - 102 )
Partition 86 (i.40_103 - 103 )
Partition 87 (D.5769_104 - 104 )
Partition 88 (D.5770_105 - 105 )
Partition 89 (D.5771_106 - 106 )
Partition 90 (D.5772_107 - 107 )
Partition 91 (D.5773_108 - 108 )
Partition 92 (D.5774_109 - 109 )
Partition 93 (i.41_110 - 110 )
Partition 94 (D.5776_111 - 111 )
Partition 95 (D.5777_112 - 112 )
Partition 96 (D.5778_113 - 113 )
Partition 97 (D.5779_114 - 114 )
Partition 98 (D.5780_115 - 115 )
Partition 99 (i.42_116 - 116 )
Partition 100 (D.5782_119 - 119 )
Partition 101 (D.5783_121 - 121 )
Partition 102 (D.5784_122 - 122 )
Partition 103 (D.5788_124 - 124 )
Partition 104 (D.5791_125 - 125 )
Partition 105 (D.5792_126 - 126 )
Partition 106 (D.5793_127 - 127 )
Partition 107 (D.5794_128 - 128 )
Partition 108 (D.5795_129 - 129 )
Partition 109 (posDepart.43_130 - 130 )
Partition 110 (D.5799_131 - 131 )
Partition 111 (posDepart.44_132 - 132 )
Partition 112 (D.5805_133 - 133 )
Partition 113 (D.5810_135 - 135 )
Partition 114 (D.5811_136 - 136 )
Partition 115 (D.5812_137 - 137 )
Partition 116 (D.5813_138 - 138 )
Partition 117 (D.5814_139 - 139 )
Partition 118 (posDepart.45_140 - 140 )
Partition 119 (D.5818_141 - 141 )
Partition 120 (posDepart.46_142 - 142 )
Partition 121 (game_143(D) - 143 )
Partition 122 (posDepart.47_146 - 146 )
Partition 123 (D.5823_147 - 147 )
Partition 124 (D.5825_148 - 148 )
Partition 125 (D.5826_149 - 149 )
Partition 126 (D.5827_150 - 150 )
Partition 127 (D.5828_151 - 151 )
Partition 128 (D.5829_152 - 152 )
Partition 129 (posArrivee.48_153 - 153 )
Partition 130 (D.5833_154 - 154 )
Partition 131 (posArrivee.49_155 - 155 )
Partition 132 (D.5837_156 - 156 )

Display_CheckersPossibilities (struct SDisplay * display, struct SGameState * gameState, EPlayer player, struct SGame * game)
{
  struct SMove mouvement;
  EPosition posArrivee;
  EPosition posDepart;
  int i;
  union SDL_Event event;
  int posDepartSelected;
  int cpt;
  int * arriveesValides;
  int tab[28];
  int i;
  unsigned int D.5837;
  EPosition posArrivee.49;
  int D.5833;
  EPosition posArrivee.48;
  int D.5829;
  int D.5828;
  Uint16 D.5827;
  int D.5826;
  Uint16 D.5825;
  unsigned int D.5823;
  EPosition posDepart.47;
  EPosition posDepart.46;
  int D.5818;
  EPosition posDepart.45;
  int D.5814;
  int D.5813;
  Uint16 D.5812;
  int D.5811;
  Uint16 D.5810;
  int D.5805;
  EPosition posDepart.44;
  int D.5799;
  EPosition posDepart.43;
  int D.5795;
  int D.5794;
  Uint16 D.5793;
  int D.5792;
  Uint16 D.5791;
  Uint8 D.5788;
  int D.5787;
  int D.5784;
  Uint8 D.5783;
  struct SDL_Surface * D.5782;
  EPosition i.42;
  const char * restrict D.5780;
  unsigned int D.5779;
  unsigned int D.5778;
  unsigned int D.5777;
  unsigned int D.5776;
  unsigned int i.41;
  unsigned int D.5774;
  int D.5773;
  EPlayer D.5772;
  unsigned int D.5771;
  unsigned int D.5770;
  unsigned int D.5769;
  unsigned int i.40;
  unsigned int D.5767;
  unsigned int D.5765;
  unsigned int D.5764;
  unsigned int D.5763;
  unsigned int D.5762;
  unsigned int i.39;
  unsigned int D.5760;
  unsigned int D.5758;
  unsigned int D.5757;
  unsigned int D.5756;
  unsigned int D.5755;
  unsigned int i.38;
  unsigned int D.5753;
  unsigned int D.5750;
  unsigned int D.5749;
  unsigned int D.5748;
  unsigned int i.37;
  unsigned int D.5746;
  unsigned int D.5743;
  unsigned int D.5742;
  unsigned int D.5741;
  unsigned int i.36;
  unsigned int D.5739;
  EPosition i.35;
  const char * restrict D.5735;
  unsigned int D.5734;
  unsigned int D.5733;
  unsigned int i.34;
  unsigned int D.5731;
  int D.5730;
  EPlayer D.5729;
  unsigned int D.5728;
  unsigned int i.33;
  unsigned int D.5726;
  unsigned int D.5724;
  unsigned int D.5723;
  unsigned int i.32;
  unsigned int D.5721;
  unsigned int D.5719;
  unsigned int D.5718;
  unsigned int i.31;
  unsigned int D.5716;
  unsigned int D.5713;
  unsigned int i.30;
  unsigned int D.5711;
  unsigned int D.5708;
  unsigned int i.29;
  unsigned int D.5706;
  EPosition i.28;
  const char * restrict D.5702;
  unsigned int D.5701;
  unsigned int D.5700;
  unsigned int i.27;
  unsigned int D.5698;
  int D.5697;
  EPlayer D.5696;
  unsigned int D.5695;
  unsigned int i.26;
  unsigned int D.5693;
  unsigned int D.5691;
  unsigned int D.5690;
  unsigned int i.25;
  unsigned int D.5688;
  unsigned int D.5686;
  unsigned int D.5685;
  unsigned int i.24;
  unsigned int D.5683;
  unsigned int D.5680;
  unsigned int i.23;
  unsigned int D.5678;
  unsigned int D.5675;
  unsigned int i.22;
  unsigned int D.5673;
  EPlayer D.5668;
  unsigned int D.5665;
  unsigned int D.5662;
  unsigned int D.5661;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  i_15 = 0;
  cpt_16 = 0;
  posDepartSelected_17 = 0;
  i_18 = 0;
  goto <bb 4>;
  # SUCC: 4 (fallthru)

  # BLOCK 3
  # PRED: 4 (true)
  tab[i_13] = -1;
  i_19 = i_13 + 1;
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (fallthru) 3 (fallthru)
  # i_13 = PHI <i_18(2), i_19(3)>
  if (i_13 <= 27)
    goto <bb 3>;
  else
    goto <bb 5>;
  # SUCC: 3 (true) 5 (false)

  # BLOCK 5
  # PRED: 4 (false)
  D.5661_21 = gameState_20(D)->die1;
  D.5662_22 = gameState_20(D)->die2;
  if (D.5661_21 != D.5662_22)
    goto <bb 6>;
  else
    goto <bb 50>;
  # SUCC: 6 (true) 50 (false)

  # BLOCK 6
  # PRED: 5 (true)
  i_23 = 0;
  goto <bb 28>;
  # SUCC: 28 (fallthru)

  # BLOCK 7
  # PRED: 28 (true)
  D.5665_24 = gameState_20(D)->zones[i_1].nb_checkers;
  if (D.5665_24 != 0)
    goto <bb 8>;
  else
    goto <bb 27>;
  # SUCC: 8 (true) 27 (false)

  # BLOCK 8
  # PRED: 7 (true)
  D.5668_25 = gameState_20(D)->zones[i_1].player;
  if (D.5668_25 == player_26(D))
    goto <bb 9>;
  else
    goto <bb 27>;
  # SUCC: 9 (true) 27 (false)

  # BLOCK 9
  # PRED: 8 (true)
  D.5673_27 = gameState_20(D)->die1;
  i.22_28 = (unsigned int) i_1;
  D.5675_29 = D.5673_27 + i.22_28;
  if (D.5675_29 <= 27)
    goto <bb 10>;
  else
    goto <bb 15>;
  # SUCC: 10 (true) 15 (false)

  # BLOCK 10
  # PRED: 9 (true)
  D.5678_30 = gameState_20(D)->die1;
  i.23_31 = (unsigned int) i_1;
  D.5680_32 = D.5678_30 + i.23_31;
  if (D.5680_32 != 26)
    goto <bb 11>;
  else
    goto <bb 15>;
  # SUCC: 11 (true) 15 (false)

  # BLOCK 11
  # PRED: 10 (true)
  D.5683_33 = gameState_20(D)->die1;
  i.24_34 = (unsigned int) i_1;
  D.5685_35 = D.5683_33 + i.24_34;
  D.5686_36 = gameState_20(D)->zones[D.5685_35].nb_checkers;
  if (D.5686_36 == 1)
    goto <bb 14>;
  else
    goto <bb 12>;
  # SUCC: 14 (true) 12 (false)

  # BLOCK 12
  # PRED: 11 (false)
  D.5688_37 = gameState_20(D)->die1;
  i.25_38 = (unsigned int) i_1;
  D.5690_39 = D.5688_37 + i.25_38;
  D.5691_40 = gameState_20(D)->zones[D.5690_39].nb_checkers;
  if (D.5691_40 == 0)
    goto <bb 14>;
  else
    goto <bb 13>;
  # SUCC: 14 (true) 13 (false)

  # BLOCK 13
  # PRED: 12 (false)
  D.5693_41 = gameState_20(D)->die1;
  i.26_42 = (unsigned int) i_1;
  D.5695_43 = D.5693_41 + i.26_42;
  D.5696_44 = gameState_20(D)->zones[D.5695_43].player;
  if (D.5696_44 == player_26(D))
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 (true) 15 (false)

  # BLOCK 14
  # PRED: 11 (true) 12 (true) 13 (true)
  D.5697_45 = i_1 + 1;
  D.5698_46 = gameState_20(D)->die1;
  i.27_47 = (unsigned int) i_1;
  D.5700_48 = D.5698_46 + i.27_47;
  D.5701_49 = D.5700_48 + 1;
  D.5702_50 = (const char * restrict) &"Possibilite sur fleche %d avec de1 et pion sur fleche %d\n"[0];
  printf (D.5702_50, D.5701_49, D.5697_45);
  i.28_51 = (EPosition) i_1;
  colorChecker (display_52(D), gameState_20(D), i.28_51);
  tab[cpt_8] = i_1;
  cpt_53 = cpt_8 + 1;
  # SUCC: 15 (fallthru)

  # BLOCK 15
  # PRED: 9 (false) 10 (false) 13 (false) 14 (fallthru)
  # cpt_5 = PHI <cpt_8(9), cpt_8(10), cpt_8(13), cpt_53(14)>
  D.5706_54 = gameState_20(D)->die2;
  i.29_55 = (unsigned int) i_1;
  D.5708_56 = D.5706_54 + i.29_55;
  if (D.5708_56 <= 27)
    goto <bb 16>;
  else
    goto <bb 21>;
  # SUCC: 16 (true) 21 (false)

  # BLOCK 16
  # PRED: 15 (true)
  D.5711_57 = gameState_20(D)->die2;
  i.30_58 = (unsigned int) i_1;
  D.5713_59 = D.5711_57 + i.30_58;
  if (D.5713_59 != 26)
    goto <bb 17>;
  else
    goto <bb 21>;
  # SUCC: 17 (true) 21 (false)

  # BLOCK 17
  # PRED: 16 (true)
  D.5716_60 = gameState_20(D)->die2;
  i.31_61 = (unsigned int) i_1;
  D.5718_62 = D.5716_60 + i.31_61;
  D.5719_63 = gameState_20(D)->zones[D.5718_62].nb_checkers;
  if (D.5719_63 == 0)
    goto <bb 20>;
  else
    goto <bb 18>;
  # SUCC: 20 (true) 18 (false)

  # BLOCK 18
  # PRED: 17 (false)
  D.5721_64 = gameState_20(D)->die2;
  i.32_65 = (unsigned int) i_1;
  D.5723_66 = D.5721_64 + i.32_65;
  D.5724_67 = gameState_20(D)->zones[D.5723_66].nb_checkers;
  if (D.5724_67 == 1)
    goto <bb 20>;
  else
    goto <bb 19>;
  # SUCC: 20 (true) 19 (false)

  # BLOCK 19
  # PRED: 18 (false)
  D.5726_68 = gameState_20(D)->die2;
  i.33_69 = (unsigned int) i_1;
  D.5728_70 = D.5726_68 + i.33_69;
  D.5729_71 = gameState_20(D)->zones[D.5728_70].player;
  if (D.5729_71 == player_26(D))
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 (true) 21 (false)

  # BLOCK 20
  # PRED: 17 (true) 18 (true) 19 (true)
  D.5730_72 = i_1 + 1;
  D.5731_73 = gameState_20(D)->die2;
  i.34_74 = (unsigned int) i_1;
  D.5733_75 = D.5731_73 + i.34_74;
  D.5734_76 = D.5733_75 + 1;
  D.5735_77 = (const char * restrict) &"Possibilite sur fleche %d avec de2 et pion sur fleche %d\n"[0];
  printf (D.5735_77, D.5734_76, D.5730_72);
  i.35_78 = (EPosition) i_1;
  colorChecker (display_52(D), gameState_20(D), i.35_78);
  tab[cpt_5] = i_1;
  cpt_79 = cpt_5 + 1;
  # SUCC: 21 (fallthru)

  # BLOCK 21
  # PRED: 15 (false) 16 (false) 19 (false) 20 (fallthru)
  # cpt_6 = PHI <cpt_5(15), cpt_5(16), cpt_5(19), cpt_79(20)>
  D.5739_80 = gameState_20(D)->die1;
  i.36_81 = (unsigned int) i_1;
  D.5741_82 = D.5739_80 + i.36_81;
  D.5742_83 = gameState_20(D)->die2;
  D.5743_84 = D.5741_82 + D.5742_83;
  if (D.5743_84 <= 27)
    goto <bb 22>;
  else
    goto <bb 27>;
  # SUCC: 22 (true) 27 (false)

  # BLOCK 22
  # PRED: 21 (true)
  D.5746_85 = gameState_20(D)->die1;
  i.37_86 = (unsigned int) i_1;
  D.5748_87 = D.5746_85 + i.37_86;
  D.5749_88 = gameState_20(D)->die2;
  D.5750_89 = D.5748_87 + D.5749_88;
  if (D.5750_89 != 26)
    goto <bb 23>;
  else
    goto <bb 27>;
  # SUCC: 23 (true) 27 (false)

  # BLOCK 23
  # PRED: 22 (true)
  D.5753_90 = gameState_20(D)->die1;
  i.38_91 = (unsigned int) i_1;
  D.5755_92 = D.5753_90 + i.38_91;
  D.5756_93 = gameState_20(D)->die2;
  D.5757_94 = D.5755_92 + D.5756_93;
  D.5758_95 = gameState_20(D)->zones[D.5757_94].nb_checkers;
  if (D.5758_95 == 1)
    goto <bb 26>;
  else
    goto <bb 24>;
  # SUCC: 26 (true) 24 (false)

  # BLOCK 24
  # PRED: 23 (false)
  D.5760_96 = gameState_20(D)->die1;
  i.39_97 = (unsigned int) i_1;
  D.5762_98 = D.5760_96 + i.39_97;
  D.5763_99 = gameState_20(D)->die2;
  D.5764_100 = D.5762_98 + D.5763_99;
  D.5765_101 = gameState_20(D)->zones[D.5764_100].nb_checkers;
  if (D.5765_101 == 0)
    goto <bb 26>;
  else
    goto <bb 25>;
  # SUCC: 26 (true) 25 (false)

  # BLOCK 25
  # PRED: 24 (false)
  D.5767_102 = gameState_20(D)->die1;
  i.40_103 = (unsigned int) i_1;
  D.5769_104 = D.5767_102 + i.40_103;
  D.5770_105 = gameState_20(D)->die2;
  D.5771_106 = D.5769_104 + D.5770_105;
  D.5772_107 = gameState_20(D)->zones[D.5771_106].player;
  if (D.5772_107 == player_26(D))
    goto <bb 26>;
  else
    goto <bb 27>;
  # SUCC: 26 (true) 27 (false)

  # BLOCK 26
  # PRED: 23 (true) 24 (true) 25 (true)
  D.5773_108 = i_1 + 1;
  D.5774_109 = gameState_20(D)->die1;
  i.41_110 = (unsigned int) i_1;
  D.5776_111 = D.5774_109 + i.41_110;
  D.5777_112 = gameState_20(D)->die2;
  D.5778_113 = D.5776_111 + D.5777_112;
  D.5779_114 = D.5778_113 + 1;
  D.5780_115 = (const char * restrict) &"Possibilite sur fleche %d avec de1+de2 et pion sur fleche %d\n"[0];
  printf (D.5780_115, D.5779_114, D.5773_108);
  i.42_116 = (EPosition) i_1;
  colorChecker (display_52(D), gameState_20(D), i.42_116);
  tab[cpt_6] = i_1;
  cpt_117 = cpt_6 + 1;
  # SUCC: 27 (fallthru)

  # BLOCK 27
  # PRED: 7 (false) 8 (false) 21 (false) 22 (false) 25 (false) 26 (fallthru)
  # cpt_7 = PHI <cpt_8(7), cpt_8(8), cpt_6(21), cpt_6(22), cpt_6(25), cpt_117(26)>
  i_118 = i_1 + 1;
  # SUCC: 28 (fallthru)

  # BLOCK 28
  # PRED: 6 (fallthru) 27 (fallthru)
  # i_1 = PHI <i_23(6), i_118(27)>
  # cpt_8 = PHI <cpt_16(6), cpt_7(27)>
  if (i_1 <= 23)
    goto <bb 7>;
  else
    goto <bb 29>;
  # SUCC: 7 (true) 29 (false)

  # BLOCK 29
  # PRED: 28 (false)
  D.5782_119 = display_52(D)->screen;
  SDL_Flip (D.5782_119);
  # SUCC: 30 (fallthru)

  # BLOCK 30
  # PRED: 29 (fallthru) 49 (fallthru)
  # arriveesValides_2 = PHI <arriveesValides_120(D)(29), arriveesValides_4(49)>
  # posDepartSelected_9 = PHI <posDepartSelected_17(29), posDepartSelected_12(49)>
  SDL_WaitEvent (&event);
  D.5783_121 = event.type;
  D.5784_122 = (int) D.5783_121;
  switch (D.5784_122) <default: <L62>, case 6: <L39>, case 12: <L36>>
  # SUCC: 49 34 31

  # BLOCK 31
  # PRED: 30
<L36>:
  if (posDepartSelected_9 != 0)
    goto <bb 32>;
  else
    goto <bb 33>;
  # SUCC: 32 (true) 33 (false)

  # BLOCK 32
  # PRED: 31 (true)
  free (arriveesValides_2);
  # SUCC: 33 (fallthru)

  # BLOCK 33
  # PRED: 31 (false) 32 (fallthru)
  D.5787_123 = 1;
  goto <bb 51>;
  # SUCC: 51 (fallthru)

  # BLOCK 34
  # PRED: 30
<L39>:
  D.5788_124 = event.button.button;
  if (D.5788_124 == 1)
    goto <bb 35>;
  else
    goto <bb 48>;
  # SUCC: 35 (true) 48 (false)

  # BLOCK 35
  # PRED: 34 (true)
  D.5791_125 = event.button.y;
  D.5792_126 = (int) D.5791_125;
  D.5793_127 = event.button.x;
  D.5794_128 = (int) D.5793_127;
  D.5795_129 = CheckerWithScreenPosition (D.5794_128, D.5792_126, &posDepart);
  if (D.5795_129 != 0)
    goto <bb 36>;
  else
    goto <bb 40>;
  # SUCC: 36 (true) 40 (false)

  # BLOCK 36
  # PRED: 35 (true)
  posDepart.43_130 = posDepart;
  D.5799_131 = inTab (posDepart.43_130, &tab);
  if (D.5799_131 != 0)
    goto <bb 37>;
  else
    goto <bb 40>;
  # SUCC: 37 (true) 40 (false)

  # BLOCK 37
  # PRED: 36 (true)
  if (posDepartSelected_9 != 0)
    goto <bb 38>;
  else
    goto <bb 40>;
  # SUCC: 38 (true) 40 (false)

  # BLOCK 38
  # PRED: 37 (true)
  posDepart.44_132 = posDepart;
  D.5805_133 = inTab (posDepart.44_132, arriveesValides_2);
  if (D.5805_133 == 0)
    goto <bb 39>;
  else
    goto <bb 40>;
  # SUCC: 39 (true) 40 (false)

  # BLOCK 39
  # PRED: 38 (true)
  posDepartSelected_134 = posDepartSelected_9 == 0;
  # SUCC: 40 (fallthru)

  # BLOCK 40
  # PRED: 35 (false) 36 (false) 37 (false) 38 (false) 39 (fallthru)
  # posDepartSelected_10 = PHI <posDepartSelected_9(35), posDepartSelected_9(36), posDepartSelected_9(37), posDepartSelected_9(38), posDepartSelected_134(39)>
  if (posDepartSelected_10 == 0)
    goto <bb 41>;
  else
    goto <bb 44>;
  # SUCC: 41 (true) 44 (false)

  # BLOCK 41
  # PRED: 40 (true)
  D.5810_135 = event.button.y;
  D.5811_136 = (int) D.5810_135;
  D.5812_137 = event.button.x;
  D.5813_138 = (int) D.5812_137;
  D.5814_139 = CheckerWithScreenPosition (D.5813_138, D.5811_136, &posDepart);
  if (D.5814_139 != 0)
    goto <bb 42>;
  else
    goto <bb 48>;
  # SUCC: 42 (true) 48 (false)

  # BLOCK 42
  # PRED: 41 (true)
  posDepart.45_140 = posDepart;
  D.5818_141 = inTab (posDepart.45_140, &tab);
  if (D.5818_141 != 0)
    goto <bb 43>;
  else
    goto <bb 48>;
  # SUCC: 43 (true) 48 (false)

  # BLOCK 43
  # PRED: 42 (true)
  posDepart.46_142 = posDepart;
  arriveesValides_144 = Display_Arrow_Possibilities (display_52(D), gameState_20(D), player_26(D), posDepart.46_142, game_143(D));
  posDepartSelected_145 = 1;
  posDepart.47_146 = posDepart;
  D.5823_147 = posDepart.47_146 + 1;
  mouvement.src_point = D.5823_147;
  goto <bb 48>;
  # SUCC: 48 (fallthru)

  # BLOCK 44
  # PRED: 40 (false)
  D.5825_148 = event.button.y;
  D.5826_149 = (int) D.5825_148;
  D.5827_150 = event.button.x;
  D.5828_151 = (int) D.5827_150;
  D.5829_152 = CheckerWithScreenPosition (D.5828_151, D.5826_149, &posArrivee);
  if (D.5829_152 != 0)
    goto <bb 45>;
  else
    goto <bb 47>;
  # SUCC: 45 (true) 47 (false)

  # BLOCK 45
  # PRED: 44 (true)
  __builtin_puts (&"POS ARRIVEE"[0]);
  posArrivee.48_153 = posArrivee;
  D.5833_154 = inTab (posArrivee.48_153, arriveesValides_2);
  if (D.5833_154 != 0)
    goto <bb 46>;
  else
    goto <bb 48>;
  # SUCC: 46 (true) 48 (false)

  # BLOCK 46
  # PRED: 45 (true)
  __builtin_puts (&"POS ARRIVEE VALIDE"[0]);
  posArrivee.49_155 = posArrivee;
  D.5837_156 = posArrivee.49_155 + 1;
  mouvement.dest_point = D.5837_156;
  free (arriveesValides_2);
  Checker_Move (display_52(D), gameState_20(D), &mouvement, game_143(D));
  D.5787_157 = 0;
  goto <bb 51>;
  # SUCC: 51 (fallthru)

  # BLOCK 47
  # PRED: 44 (false)
  free (arriveesValides_2);
  Display_RefreshGameBoard (display_52(D), gameState_20(D), game_143(D));
  D.5787_158 = Display_CheckersPossibilities (display_52(D), gameState_20(D), player_26(D), game_143(D));
  goto <bb 51>;
  # SUCC: 51 (fallthru)

  # BLOCK 48
  # PRED: 34 (false) 42 (false) 45 (false) 41 (false) 43 (fallthru)
  # arriveesValides_3 = PHI <arriveesValides_2(34), arriveesValides_2(42), arriveesValides_2(45), arriveesValides_2(41), arriveesValides_144(43)>
  # posDepartSelected_11 = PHI <posDepartSelected_9(34), posDepartSelected_10(42), posDepartSelected_10(45), posDepartSelected_10(41), posDepartSelected_145(43)>
  # SUCC: 49 (fallthru)

  # BLOCK 49
  # PRED: 30 48 (fallthru)
  # arriveesValides_4 = PHI <arriveesValides_2(30), arriveesValides_3(48)>
  # posDepartSelected_12 = PHI <posDepartSelected_9(30), posDepartSelected_11(48)>
<L62>:
  goto <bb 30>;
  # SUCC: 30 (fallthru)

  # BLOCK 50
  # PRED: 5 (false)
  return;
  # SUCC: EXIT

  # BLOCK 51
  # PRED: 33 (fallthru) 46 (fallthru) 47 (fallthru)
  # D.5787_14 = PHI <D.5787_123(33), D.5787_157(46), D.5787_158(47)>
  return D.5787_14;
  # SUCC: EXIT

}


Partition 4: size 4 align 4
	i_13, offset 0
Partition 3: size 4 align 4
	posDepartSelected_9, offset 0
Partition 2: size 4 align 4
	cpt_5, offset 0
Partition 1: size 4 align 4
	arriveesValides_2, offset 0
Partition 0: size 4 align 4
	i_1, offset 0
Partition 8: size 4 align 4
	posArrivee, offset 0
Partition 7: size 4 align 4
	posDepart, offset 0
Partition 9: size 8 align 4
	mouvement, offset 0
Partition 6: size 20 align 4
	event, offset 0
Partition 5: size 112 align 4
	tab, offset 0

;; Generating RTL for gimple basic block 2

;; i_15 = 0;

(insn 5 4 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:759 -1
     (nil))

;; cpt_16 = 0;

(insn 6 5 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])
        (const_int 0 [0])) src/gui.c:762 -1
     (nil))

;; posDepartSelected_17 = 0;

(insn 7 6 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posDepartSelected+0 S4 A32])
        (const_int 0 [0])) src/gui.c:763 -1
     (nil))

;; i_18 = 0;

(insn 8 7 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:764 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; tab[i_13] = -1;

(insn 12 11 13 (set (reg:SI 184)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) src/gui.c:764 -1
     (nil))

(insn 13 12 0 (set (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 184)
                        (const_int 4 [0x4]))
                    (reg/f:SI 54 virtual-stack-vars))
                (const_int -168 [0xffffffffffffff58])) [0 tab S4 A32])
        (const_int -1 [0xffffffffffffffff])) src/gui.c:764 -1
     (nil))

;; i_19 = i_13 + 1;

(insn 14 13 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:764 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 15 14 16 151 "" [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_13 <= 27)

(insn 18 16 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 27 [0x1b]))) src/gui.c:764 -1
     (nil))

(jump_insn 19 18 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) src/gui.c:764 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; D.5661_21 = gameState_20(D)->die1;

(insn 21 20 22 (set (reg/f:SI 185)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:767 -1
     (nil))

(insn 22 21 0 (set (reg:SI 60 [ D.5661 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 185)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:767 -1
     (nil))

;; D.5662_22 = gameState_20(D)->die2;

(insn 23 22 24 (set (reg/f:SI 186)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:767 -1
     (nil))

(insn 24 23 0 (set (reg:SI 61 [ D.5662 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 186)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:767 -1
     (nil))

;; if (D.5661_21 != D.5662_22)

(insn 25 24 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.5661 ])
            (reg:SI 61 [ D.5662 ]))) src/gui.c:767 -1
     (nil))

(jump_insn 26 25 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:767 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; i_23 = 0;

(insn 28 27 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:769 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; D.5665_24 = gameState_20(D)->zones[i_1].nb_checkers;

(insn 32 31 33 (set (reg/f:SI 187)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:771 -1
     (nil))

(insn 33 32 34 (set (reg:SI 188)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:771 -1
     (nil))

(insn 34 33 0 (set (reg:SI 62 [ D.5665 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 188)
                        (const_int 8 [0x8]))
                    (reg/f:SI 187))
                (const_int 4 [0x4])) [0 gameState_20(D)->zones[i_1].nb_checkers+0 S4 A32])) src/gui.c:771 -1
     (nil))

;; if (D.5665_24 != 0)

(insn 35 34 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 62 [ D.5665 ])
            (const_int 0 [0]))) src/gui.c:771 -1
     (nil))

(jump_insn 36 35 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:771 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; D.5668_25 = gameState_20(D)->zones[i_1].player;

(insn 38 37 39 (set (reg/f:SI 189)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:771 -1
     (nil))

(insn 39 38 40 (set (reg:SI 190)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:771 -1
     (nil))

(insn 40 39 0 (set (reg:SI 63 [ D.5668 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 190)
                    (const_int 8 [0x8]))
                (reg/f:SI 189)) [0 gameState_20(D)->zones[i_1].player+0 S4 A32])) src/gui.c:771 -1
     (nil))

;; if (D.5668_25 == player_26(D))

(insn 41 40 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 63 [ D.5668 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:771 -1
     (nil))

(jump_insn 42 41 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:771 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; D.5673_27 = gameState_20(D)->die1;

(insn 44 43 45 (set (reg/f:SI 191)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 45 44 0 (set (reg:SI 64 [ D.5673 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 191)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:773 -1
     (nil))

;; i.22_28 = (unsigned int) i_1;

(insn 46 45 0 (set (reg:SI 65 [ i.22 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:773 -1
     (nil))

;; D.5675_29 = D.5673_27 + i.22_28;

(insn 47 46 0 (parallel [
            (set (reg:SI 66 [ D.5675 ])
                (plus:SI (reg:SI 64 [ D.5673 ])
                    (reg:SI 65 [ i.22 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:773 -1
     (nil))

;; if (D.5675_29 <= 27)

(insn 48 47 49 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 66 [ D.5675 ])
            (const_int 27 [0x1b]))) src/gui.c:773 -1
     (nil))

(jump_insn 49 48 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:773 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; D.5678_30 = gameState_20(D)->die1;

(insn 51 50 52 (set (reg/f:SI 192)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 52 51 0 (set (reg:SI 67 [ D.5678 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 192)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:773 -1
     (nil))

;; i.23_31 = (unsigned int) i_1;

(insn 53 52 0 (set (reg:SI 68 [ i.23 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:773 -1
     (nil))

;; D.5680_32 = D.5678_30 + i.23_31;

(insn 54 53 0 (parallel [
            (set (reg:SI 69 [ D.5680 ])
                (plus:SI (reg:SI 67 [ D.5678 ])
                    (reg:SI 68 [ i.23 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:773 -1
     (nil))

;; if (D.5680_32 != 26)

(insn 55 54 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 69 [ D.5680 ])
            (const_int 26 [0x1a]))) src/gui.c:773 -1
     (nil))

(jump_insn 56 55 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:773 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; D.5683_33 = gameState_20(D)->die1;

(insn 58 57 59 (set (reg/f:SI 193)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 59 58 0 (set (reg:SI 70 [ D.5683 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 193)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:773 -1
     (nil))

;; i.24_34 = (unsigned int) i_1;

(insn 60 59 0 (set (reg:SI 71 [ i.24 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:773 -1
     (nil))

;; D.5685_35 = D.5683_33 + i.24_34;

(insn 61 60 0 (parallel [
            (set (reg:SI 72 [ D.5685 ])
                (plus:SI (reg:SI 70 [ D.5683 ])
                    (reg:SI 71 [ i.24 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:773 -1
     (nil))

;; D.5686_36 = gameState_20(D)->zones[D.5685_35].nb_checkers;

(insn 62 61 63 (set (reg/f:SI 194)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 63 62 0 (set (reg:SI 73 [ D.5686 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 72 [ D.5685 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 194))
                (const_int 4 [0x4])) [0 gameState_20(D)->zones[D.5685_35].nb_checkers+0 S4 A32])) src/gui.c:773 -1
     (nil))

;; if (D.5686_36 == 1)

(insn 64 63 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 73 [ D.5686 ])
            (const_int 1 [0x1]))) src/gui.c:773 -1
     (nil))

(jump_insn 65 64 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:773 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; D.5688_37 = gameState_20(D)->die1;

(insn 67 66 68 (set (reg/f:SI 195)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 68 67 0 (set (reg:SI 74 [ D.5688 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 195)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:773 -1
     (nil))

;; i.25_38 = (unsigned int) i_1;

(insn 69 68 0 (set (reg:SI 75 [ i.25 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:773 -1
     (nil))

;; D.5690_39 = D.5688_37 + i.25_38;

(insn 70 69 0 (parallel [
            (set (reg:SI 76 [ D.5690 ])
                (plus:SI (reg:SI 74 [ D.5688 ])
                    (reg:SI 75 [ i.25 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:773 -1
     (nil))

;; D.5691_40 = gameState_20(D)->zones[D.5690_39].nb_checkers;

(insn 71 70 72 (set (reg/f:SI 196)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 72 71 0 (set (reg:SI 77 [ D.5691 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 76 [ D.5690 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 196))
                (const_int 4 [0x4])) [0 gameState_20(D)->zones[D.5690_39].nb_checkers+0 S4 A32])) src/gui.c:773 -1
     (nil))

;; if (D.5691_40 == 0)

(insn 73 72 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 77 [ D.5691 ])
            (const_int 0 [0]))) src/gui.c:773 -1
     (nil))

(jump_insn 74 73 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:773 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; D.5693_41 = gameState_20(D)->die1;

(insn 76 75 77 (set (reg/f:SI 197)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 77 76 0 (set (reg:SI 78 [ D.5693 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 197)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:773 -1
     (nil))

;; i.26_42 = (unsigned int) i_1;

(insn 78 77 0 (set (reg:SI 79 [ i.26 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:773 -1
     (nil))

;; D.5695_43 = D.5693_41 + i.26_42;

(insn 79 78 0 (parallel [
            (set (reg:SI 80 [ D.5695 ])
                (plus:SI (reg:SI 78 [ D.5693 ])
                    (reg:SI 79 [ i.26 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:773 -1
     (nil))

;; D.5696_44 = gameState_20(D)->zones[D.5695_43].player;

(insn 80 79 81 (set (reg/f:SI 198)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 81 80 0 (set (reg:SI 81 [ D.5696 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 80 [ D.5695 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 198)) [0 gameState_20(D)->zones[D.5695_43].player+0 S4 A32])) src/gui.c:773 -1
     (nil))

;; if (D.5696_44 == player_26(D))

(insn 82 81 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81 [ D.5696 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:773 -1
     (nil))

(jump_insn 83 82 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:773 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 84 83 85 157 "" [0 uses])

(note 85 84 0 NOTE_INSN_BASIC_BLOCK)

;; D.5697_45 = i_1 + 1;

(insn 86 85 87 (set (reg:SI 199)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:775 -1
     (nil))

(insn 87 86 0 (parallel [
            (set (reg:SI 82 [ D.5697 ])
                (plus:SI (reg:SI 199)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:775 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; D.5698_46 = gameState_20(D)->die1;

(insn 88 87 89 (set (reg/f:SI 200)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:775 -1
     (nil))

(insn 89 88 0 (set (reg:SI 83 [ D.5698 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 200)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:775 -1
     (nil))

;; i.27_47 = (unsigned int) i_1;

(insn 90 89 0 (set (reg:SI 84 [ i.27 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:775 -1
     (nil))

;; D.5700_48 = D.5698_46 + i.27_47;

(insn 91 90 0 (parallel [
            (set (reg:SI 85 [ D.5700 ])
                (plus:SI (reg:SI 83 [ D.5698 ])
                    (reg:SI 84 [ i.27 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:775 -1
     (nil))

;; D.5701_49 = D.5700_48 + 1;

(insn 92 91 0 (parallel [
            (set (reg:SI 86 [ D.5701 ])
                (plus:SI (reg:SI 85 [ D.5700 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:775 -1
     (nil))

;; D.5702_50 = (const char * restrict) &"Possibilite sur fleche %d avec de1 et pion sur fleche %d\n"[0];

(insn 93 92 0 (set (reg/f:SI 87 [ D.5702 ])
        (symbol_ref/f:SI ("*.LC24") [flags 0x2]  <var_decl 0x408fdf60 *.LC24>)) src/gui.c:775 -1
     (nil))

;; printf (D.5702_50, D.5701_49, D.5697_45);

(insn 94 93 95 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 82 [ D.5697 ])) src/gui.c:775 -1
     (nil))

(insn 95 94 96 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 86 [ D.5701 ])) src/gui.c:775 -1
     (nil))

(insn 96 95 97 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 87 [ D.5702 ])) src/gui.c:775 -1
     (nil))

(call_insn 97 96 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x406b1b80 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:775 -1
     (nil)
    (nil))

;; i.28_51 = (EPosition) i_1;

(insn 98 97 0 (set (reg:SI 88 [ i.28 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:776 -1
     (nil))

;; colorChecker (display_52(D), gameState_20(D), i.28_51);

(insn 99 98 100 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 88 [ i.28 ])) src/gui.c:776 -1
     (nil))

(insn 100 99 101 (set (reg/f:SI 201)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:776 -1
     (nil))

(insn 101 100 102 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 201)) src/gui.c:776 -1
     (nil))

(insn 102 101 103 (set (reg/f:SI 202)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:776 -1
     (nil))

(insn 103 102 104 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 202)) src/gui.c:776 -1
     (nil))

(call_insn 104 103 0 (call (mem:QI (symbol_ref:SI ("colorChecker") [flags 0x3]  <function_decl 0x4081a680 colorChecker>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:776 -1
     (nil)
    (nil))

;; tab[cpt_8] = i_1;

(insn 105 104 106 (set (reg:SI 203)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])) src/gui.c:777 -1
     (nil))

(insn 106 105 107 (set (reg:SI 204)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:777 -1
     (nil))

(insn 107 106 0 (set (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 203)
                        (const_int 4 [0x4]))
                    (reg/f:SI 54 virtual-stack-vars))
                (const_int -168 [0xffffffffffffff58])) [0 tab S4 A32])
        (reg:SI 204)) src/gui.c:777 -1
     (nil))

;; cpt_53 = cpt_8 + 1;

(insn 108 107 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:778 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 109 108 110 156 "" [0 uses])

(note 110 109 0 NOTE_INSN_BASIC_BLOCK)

;; D.5706_54 = gameState_20(D)->die2;

(insn 111 110 112 (set (reg/f:SI 205)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 112 111 0 (set (reg:SI 89 [ D.5706 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 205)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:780 -1
     (nil))

;; i.29_55 = (unsigned int) i_1;

(insn 113 112 0 (set (reg:SI 90 [ i.29 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:780 -1
     (nil))

;; D.5708_56 = D.5706_54 + i.29_55;

(insn 114 113 0 (parallel [
            (set (reg:SI 91 [ D.5708 ])
                (plus:SI (reg:SI 89 [ D.5706 ])
                    (reg:SI 90 [ i.29 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:780 -1
     (nil))

;; if (D.5708_56 <= 27)

(insn 115 114 116 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 91 [ D.5708 ])
            (const_int 27 [0x1b]))) src/gui.c:780 -1
     (nil))

(jump_insn 116 115 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:780 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; D.5711_57 = gameState_20(D)->die2;

(insn 118 117 119 (set (reg/f:SI 206)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 119 118 0 (set (reg:SI 92 [ D.5711 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 206)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:780 -1
     (nil))

;; i.30_58 = (unsigned int) i_1;

(insn 120 119 0 (set (reg:SI 93 [ i.30 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:780 -1
     (nil))

;; D.5713_59 = D.5711_57 + i.30_58;

(insn 121 120 0 (parallel [
            (set (reg:SI 94 [ D.5713 ])
                (plus:SI (reg:SI 92 [ D.5711 ])
                    (reg:SI 93 [ i.30 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:780 -1
     (nil))

;; if (D.5713_59 != 26)

(insn 122 121 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.5713 ])
            (const_int 26 [0x1a]))) src/gui.c:780 -1
     (nil))

(jump_insn 123 122 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:780 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; D.5716_60 = gameState_20(D)->die2;

(insn 125 124 126 (set (reg/f:SI 207)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 126 125 0 (set (reg:SI 95 [ D.5716 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 207)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:780 -1
     (nil))

;; i.31_61 = (unsigned int) i_1;

(insn 127 126 0 (set (reg:SI 96 [ i.31 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:780 -1
     (nil))

;; D.5718_62 = D.5716_60 + i.31_61;

(insn 128 127 0 (parallel [
            (set (reg:SI 97 [ D.5718 ])
                (plus:SI (reg:SI 95 [ D.5716 ])
                    (reg:SI 96 [ i.31 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:780 -1
     (nil))

;; D.5719_63 = gameState_20(D)->zones[D.5718_62].nb_checkers;

(insn 129 128 130 (set (reg/f:SI 208)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 130 129 0 (set (reg:SI 98 [ D.5719 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 97 [ D.5718 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 208))
                (const_int 4 [0x4])) [0 gameState_20(D)->zones[D.5718_62].nb_checkers+0 S4 A32])) src/gui.c:780 -1
     (nil))

;; if (D.5719_63 == 0)

(insn 131 130 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.5719 ])
            (const_int 0 [0]))) src/gui.c:780 -1
     (nil))

(jump_insn 132 131 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:780 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; D.5721_64 = gameState_20(D)->die2;

(insn 134 133 135 (set (reg/f:SI 209)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 135 134 0 (set (reg:SI 99 [ D.5721 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 209)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:780 -1
     (nil))

;; i.32_65 = (unsigned int) i_1;

(insn 136 135 0 (set (reg:SI 100 [ i.32 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:780 -1
     (nil))

;; D.5723_66 = D.5721_64 + i.32_65;

(insn 137 136 0 (parallel [
            (set (reg:SI 101 [ D.5723 ])
                (plus:SI (reg:SI 99 [ D.5721 ])
                    (reg:SI 100 [ i.32 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:780 -1
     (nil))

;; D.5724_67 = gameState_20(D)->zones[D.5723_66].nb_checkers;

(insn 138 137 139 (set (reg/f:SI 210)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 139 138 0 (set (reg:SI 102 [ D.5724 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 101 [ D.5723 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 210))
                (const_int 4 [0x4])) [0 gameState_20(D)->zones[D.5723_66].nb_checkers+0 S4 A32])) src/gui.c:780 -1
     (nil))

;; if (D.5724_67 == 1)

(insn 140 139 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.5724 ])
            (const_int 1 [0x1]))) src/gui.c:780 -1
     (nil))

(jump_insn 141 140 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:780 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; D.5726_68 = gameState_20(D)->die2;

(insn 143 142 144 (set (reg/f:SI 211)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 144 143 0 (set (reg:SI 103 [ D.5726 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 211)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:780 -1
     (nil))

;; i.33_69 = (unsigned int) i_1;

(insn 145 144 0 (set (reg:SI 104 [ i.33 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:780 -1
     (nil))

;; D.5728_70 = D.5726_68 + i.33_69;

(insn 146 145 0 (parallel [
            (set (reg:SI 105 [ D.5728 ])
                (plus:SI (reg:SI 103 [ D.5726 ])
                    (reg:SI 104 [ i.33 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:780 -1
     (nil))

;; D.5729_71 = gameState_20(D)->zones[D.5728_70].player;

(insn 147 146 148 (set (reg/f:SI 212)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 148 147 0 (set (reg:SI 106 [ D.5729 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 105 [ D.5728 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 212)) [0 gameState_20(D)->zones[D.5728_70].player+0 S4 A32])) src/gui.c:780 -1
     (nil))

;; if (D.5729_71 == player_26(D))

(insn 149 148 150 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ D.5729 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:780 -1
     (nil))

(jump_insn 150 149 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:780 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; 

(code_label 151 150 152 159 "" [0 uses])

(note 152 151 0 NOTE_INSN_BASIC_BLOCK)

;; D.5730_72 = i_1 + 1;

(insn 153 152 154 (set (reg:SI 213)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:782 -1
     (nil))

(insn 154 153 0 (parallel [
            (set (reg:SI 107 [ D.5730 ])
                (plus:SI (reg:SI 213)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:782 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; D.5731_73 = gameState_20(D)->die2;

(insn 155 154 156 (set (reg/f:SI 214)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:782 -1
     (nil))

(insn 156 155 0 (set (reg:SI 108 [ D.5731 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 214)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:782 -1
     (nil))

;; i.34_74 = (unsigned int) i_1;

(insn 157 156 0 (set (reg:SI 109 [ i.34 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:782 -1
     (nil))

;; D.5733_75 = D.5731_73 + i.34_74;

(insn 158 157 0 (parallel [
            (set (reg:SI 110 [ D.5733 ])
                (plus:SI (reg:SI 108 [ D.5731 ])
                    (reg:SI 109 [ i.34 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:782 -1
     (nil))

;; D.5734_76 = D.5733_75 + 1;

(insn 159 158 0 (parallel [
            (set (reg:SI 111 [ D.5734 ])
                (plus:SI (reg:SI 110 [ D.5733 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:782 -1
     (nil))

;; D.5735_77 = (const char * restrict) &"Possibilite sur fleche %d avec de2 et pion sur fleche %d\n"[0];

(insn 160 159 0 (set (reg/f:SI 112 [ D.5735 ])
        (symbol_ref/f:SI ("*.LC25") [flags 0x2]  <var_decl 0x409cd000 *.LC25>)) src/gui.c:782 -1
     (nil))

;; printf (D.5735_77, D.5734_76, D.5730_72);

(insn 161 160 162 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 107 [ D.5730 ])) src/gui.c:782 -1
     (nil))

(insn 162 161 163 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 111 [ D.5734 ])) src/gui.c:782 -1
     (nil))

(insn 163 162 164 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 112 [ D.5735 ])) src/gui.c:782 -1
     (nil))

(call_insn 164 163 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x406b1b80 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:782 -1
     (nil)
    (nil))

;; i.35_78 = (EPosition) i_1;

(insn 165 164 0 (set (reg:SI 113 [ i.35 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:783 -1
     (nil))

;; colorChecker (display_52(D), gameState_20(D), i.35_78);

(insn 166 165 167 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 113 [ i.35 ])) src/gui.c:783 -1
     (nil))

(insn 167 166 168 (set (reg/f:SI 215)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:783 -1
     (nil))

(insn 168 167 169 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 215)) src/gui.c:783 -1
     (nil))

(insn 169 168 170 (set (reg/f:SI 216)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:783 -1
     (nil))

(insn 170 169 171 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 216)) src/gui.c:783 -1
     (nil))

(call_insn 171 170 0 (call (mem:QI (symbol_ref:SI ("colorChecker") [flags 0x3]  <function_decl 0x4081a680 colorChecker>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:783 -1
     (nil)
    (nil))

;; tab[cpt_5] = i_1;

(insn 172 171 173 (set (reg:SI 217)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])) src/gui.c:784 -1
     (nil))

(insn 173 172 174 (set (reg:SI 218)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:784 -1
     (nil))

(insn 174 173 0 (set (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 217)
                        (const_int 4 [0x4]))
                    (reg/f:SI 54 virtual-stack-vars))
                (const_int -168 [0xffffffffffffff58])) [0 tab S4 A32])
        (reg:SI 218)) src/gui.c:784 -1
     (nil))

;; cpt_79 = cpt_5 + 1;

(insn 175 174 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:785 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; 

(code_label 176 175 177 158 "" [0 uses])

(note 177 176 0 NOTE_INSN_BASIC_BLOCK)

;; D.5739_80 = gameState_20(D)->die1;

(insn 178 177 179 (set (reg/f:SI 219)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 179 178 0 (set (reg:SI 114 [ D.5739 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 219)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; i.36_81 = (unsigned int) i_1;

(insn 180 179 0 (set (reg:SI 115 [ i.36 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; D.5741_82 = D.5739_80 + i.36_81;

(insn 181 180 0 (parallel [
            (set (reg:SI 116 [ D.5741 ])
                (plus:SI (reg:SI 114 [ D.5739 ])
                    (reg:SI 115 [ i.36 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

;; D.5742_83 = gameState_20(D)->die2;

(insn 182 181 183 (set (reg/f:SI 220)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 183 182 0 (set (reg:SI 117 [ D.5742 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 220)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; D.5743_84 = D.5741_82 + D.5742_83;

(insn 184 183 0 (parallel [
            (set (reg:SI 118 [ D.5743 ])
                (plus:SI (reg:SI 116 [ D.5741 ])
                    (reg:SI 117 [ D.5742 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

;; if (D.5743_84 <= 27)

(insn 185 184 186 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 118 [ D.5743 ])
            (const_int 27 [0x1b]))) src/gui.c:787 -1
     (nil))

(jump_insn 186 185 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:787 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; D.5746_85 = gameState_20(D)->die1;

(insn 188 187 189 (set (reg/f:SI 221)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 189 188 0 (set (reg:SI 119 [ D.5746 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 221)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; i.37_86 = (unsigned int) i_1;

(insn 190 189 0 (set (reg:SI 120 [ i.37 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; D.5748_87 = D.5746_85 + i.37_86;

(insn 191 190 0 (parallel [
            (set (reg:SI 121 [ D.5748 ])
                (plus:SI (reg:SI 119 [ D.5746 ])
                    (reg:SI 120 [ i.37 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

;; D.5749_88 = gameState_20(D)->die2;

(insn 192 191 193 (set (reg/f:SI 222)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 193 192 0 (set (reg:SI 122 [ D.5749 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 222)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; D.5750_89 = D.5748_87 + D.5749_88;

(insn 194 193 0 (parallel [
            (set (reg:SI 123 [ D.5750 ])
                (plus:SI (reg:SI 121 [ D.5748 ])
                    (reg:SI 122 [ D.5749 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

;; if (D.5750_89 != 26)

(insn 195 194 196 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 123 [ D.5750 ])
            (const_int 26 [0x1a]))) src/gui.c:787 -1
     (nil))

(jump_insn 196 195 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:787 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; D.5753_90 = gameState_20(D)->die1;

(insn 198 197 199 (set (reg/f:SI 223)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 199 198 0 (set (reg:SI 124 [ D.5753 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 223)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; i.38_91 = (unsigned int) i_1;

(insn 200 199 0 (set (reg:SI 125 [ i.38 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; D.5755_92 = D.5753_90 + i.38_91;

(insn 201 200 0 (parallel [
            (set (reg:SI 126 [ D.5755 ])
                (plus:SI (reg:SI 124 [ D.5753 ])
                    (reg:SI 125 [ i.38 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

;; D.5756_93 = gameState_20(D)->die2;

(insn 202 201 203 (set (reg/f:SI 224)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 203 202 0 (set (reg:SI 127 [ D.5756 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 224)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; D.5757_94 = D.5755_92 + D.5756_93;

(insn 204 203 0 (parallel [
            (set (reg:SI 128 [ D.5757 ])
                (plus:SI (reg:SI 126 [ D.5755 ])
                    (reg:SI 127 [ D.5756 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

;; D.5758_95 = gameState_20(D)->zones[D.5757_94].nb_checkers;

(insn 205 204 206 (set (reg/f:SI 225)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 206 205 0 (set (reg:SI 129 [ D.5758 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 128 [ D.5757 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 225))
                (const_int 4 [0x4])) [0 gameState_20(D)->zones[D.5757_94].nb_checkers+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; if (D.5758_95 == 1)

(insn 207 206 208 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 129 [ D.5758 ])
            (const_int 1 [0x1]))) src/gui.c:787 -1
     (nil))

(jump_insn 208 207 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:787 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; D.5760_96 = gameState_20(D)->die1;

(insn 210 209 211 (set (reg/f:SI 226)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 211 210 0 (set (reg:SI 130 [ D.5760 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 226)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; i.39_97 = (unsigned int) i_1;

(insn 212 211 0 (set (reg:SI 131 [ i.39 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; D.5762_98 = D.5760_96 + i.39_97;

(insn 213 212 0 (parallel [
            (set (reg:SI 132 [ D.5762 ])
                (plus:SI (reg:SI 130 [ D.5760 ])
                    (reg:SI 131 [ i.39 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

;; D.5763_99 = gameState_20(D)->die2;

(insn 214 213 215 (set (reg/f:SI 227)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 215 214 0 (set (reg:SI 133 [ D.5763 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 227)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; D.5764_100 = D.5762_98 + D.5763_99;

(insn 216 215 0 (parallel [
            (set (reg:SI 134 [ D.5764 ])
                (plus:SI (reg:SI 132 [ D.5762 ])
                    (reg:SI 133 [ D.5763 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

;; D.5765_101 = gameState_20(D)->zones[D.5764_100].nb_checkers;

(insn 217 216 218 (set (reg/f:SI 228)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 218 217 0 (set (reg:SI 135 [ D.5765 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 134 [ D.5764 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 228))
                (const_int 4 [0x4])) [0 gameState_20(D)->zones[D.5764_100].nb_checkers+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; if (D.5765_101 == 0)

(insn 219 218 220 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135 [ D.5765 ])
            (const_int 0 [0]))) src/gui.c:787 -1
     (nil))

(jump_insn 220 219 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:787 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; D.5767_102 = gameState_20(D)->die1;

(insn 222 221 223 (set (reg/f:SI 229)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 223 222 0 (set (reg:SI 136 [ D.5767 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 229)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; i.40_103 = (unsigned int) i_1;

(insn 224 223 0 (set (reg:SI 137 [ i.40 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; D.5769_104 = D.5767_102 + i.40_103;

(insn 225 224 0 (parallel [
            (set (reg:SI 138 [ D.5769 ])
                (plus:SI (reg:SI 136 [ D.5767 ])
                    (reg:SI 137 [ i.40 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

;; D.5770_105 = gameState_20(D)->die2;

(insn 226 225 227 (set (reg/f:SI 230)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 227 226 0 (set (reg:SI 139 [ D.5770 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 230)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; D.5771_106 = D.5769_104 + D.5770_105;

(insn 228 227 0 (parallel [
            (set (reg:SI 140 [ D.5771 ])
                (plus:SI (reg:SI 138 [ D.5769 ])
                    (reg:SI 139 [ D.5770 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

;; D.5772_107 = gameState_20(D)->zones[D.5771_106].player;

(insn 229 228 230 (set (reg/f:SI 231)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 230 229 0 (set (reg:SI 141 [ D.5772 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 140 [ D.5771 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 231)) [0 gameState_20(D)->zones[D.5771_106].player+0 S4 A32])) src/gui.c:787 -1
     (nil))

;; if (D.5772_107 == player_26(D))

(insn 231 230 232 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 141 [ D.5772 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:787 -1
     (nil))

(jump_insn 232 231 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:787 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; 

(code_label 233 232 234 160 "" [0 uses])

(note 234 233 0 NOTE_INSN_BASIC_BLOCK)

;; D.5773_108 = i_1 + 1;

(insn 235 234 236 (set (reg:SI 232)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:789 -1
     (nil))

(insn 236 235 0 (parallel [
            (set (reg:SI 142 [ D.5773 ])
                (plus:SI (reg:SI 232)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:789 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; D.5774_109 = gameState_20(D)->die1;

(insn 237 236 238 (set (reg/f:SI 233)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:789 -1
     (nil))

(insn 238 237 0 (set (reg:SI 143 [ D.5774 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 233)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:789 -1
     (nil))

;; i.41_110 = (unsigned int) i_1;

(insn 239 238 0 (set (reg:SI 144 [ i.41 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:789 -1
     (nil))

;; D.5776_111 = D.5774_109 + i.41_110;

(insn 240 239 0 (parallel [
            (set (reg:SI 145 [ D.5776 ])
                (plus:SI (reg:SI 143 [ D.5774 ])
                    (reg:SI 144 [ i.41 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:789 -1
     (nil))

;; D.5777_112 = gameState_20(D)->die2;

(insn 241 240 242 (set (reg/f:SI 234)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:789 -1
     (nil))

(insn 242 241 0 (set (reg:SI 146 [ D.5777 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 234)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:789 -1
     (nil))

;; D.5778_113 = D.5776_111 + D.5777_112;

(insn 243 242 0 (parallel [
            (set (reg:SI 147 [ D.5778 ])
                (plus:SI (reg:SI 145 [ D.5776 ])
                    (reg:SI 146 [ D.5777 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:789 -1
     (nil))

;; D.5779_114 = D.5778_113 + 1;

(insn 244 243 0 (parallel [
            (set (reg:SI 148 [ D.5779 ])
                (plus:SI (reg:SI 147 [ D.5778 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:789 -1
     (nil))

;; D.5780_115 = (const char * restrict) &"Possibilite sur fleche %d avec de1+de2 et pion sur fleche %d\n"[0];

(insn 245 244 0 (set (reg/f:SI 149 [ D.5780 ])
        (symbol_ref/f:SI ("*.LC26") [flags 0x2]  <var_decl 0x409cd060 *.LC26>)) src/gui.c:789 -1
     (nil))

;; printf (D.5780_115, D.5779_114, D.5773_108);

(insn 246 245 247 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 142 [ D.5773 ])) src/gui.c:789 -1
     (nil))

(insn 247 246 248 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 148 [ D.5779 ])) src/gui.c:789 -1
     (nil))

(insn 248 247 249 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 149 [ D.5780 ])) src/gui.c:789 -1
     (nil))

(call_insn 249 248 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x406b1b80 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:789 -1
     (nil)
    (nil))

;; i.42_116 = (EPosition) i_1;

(insn 250 249 0 (set (reg:SI 150 [ i.42 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:790 -1
     (nil))

;; colorChecker (display_52(D), gameState_20(D), i.42_116);

(insn 251 250 252 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 150 [ i.42 ])) src/gui.c:790 -1
     (nil))

(insn 252 251 253 (set (reg/f:SI 235)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:790 -1
     (nil))

(insn 253 252 254 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 235)) src/gui.c:790 -1
     (nil))

(insn 254 253 255 (set (reg/f:SI 236)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:790 -1
     (nil))

(insn 255 254 256 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 236)) src/gui.c:790 -1
     (nil))

(call_insn 256 255 0 (call (mem:QI (symbol_ref:SI ("colorChecker") [flags 0x3]  <function_decl 0x4081a680 colorChecker>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:790 -1
     (nil)
    (nil))

;; tab[cpt_6] = i_1;

(insn 257 256 258 (set (reg:SI 237)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])) src/gui.c:791 -1
     (nil))

(insn 258 257 259 (set (reg:SI 238)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:791 -1
     (nil))

(insn 259 258 0 (set (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 237)
                        (const_int 4 [0x4]))
                    (reg/f:SI 54 virtual-stack-vars))
                (const_int -168 [0xffffffffffffff58])) [0 tab S4 A32])
        (reg:SI 238)) src/gui.c:791 -1
     (nil))

;; cpt_117 = cpt_6 + 1;

(insn 260 259 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:792 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; 

(code_label 261 260 262 155 "" [0 uses])

(note 262 261 0 NOTE_INSN_BASIC_BLOCK)

;; i_118 = i_1 + 1;

(insn 263 262 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:769 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; 

(code_label 264 263 265 154 "" [0 uses])

(note 265 264 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 <= 23)

(insn 267 265 268 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 23 [0x17]))) src/gui.c:769 -1
     (nil))

(jump_insn 268 267 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 266)
            (pc))) src/gui.c:769 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; D.5782_119 = display_52(D)->screen;

(insn 270 269 271 (set (reg/f:SI 239)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:796 -1
     (nil))

(insn 271 270 0 (set (reg/f:SI 151 [ D.5782 ])
        (mem/s/f/j:SI (reg/f:SI 239) [0 display_52(D)->screen+0 S4 A32])) src/gui.c:796 -1
     (nil))

;; SDL_Flip (D.5782_119);

(insn 272 271 273 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 151 [ D.5782 ])) src/gui.c:796 -1
     (nil))

(call_insn 273 272 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_Flip") [flags 0x41]  <function_decl 0x4079fa00 SDL_Flip>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:796 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 30

;; SDL_WaitEvent (&event);

(insn 275 274 276 (parallel [
            (set (reg:SI 240)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:799 -1
     (nil))

(insn 276 275 277 (set (mem/f/i:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 240)) src/gui.c:799 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -56 [0xffffffffffffffc8]))
        (nil)))

(call_insn 277 276 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_WaitEvent") [flags 0x41]  <function_decl 0x407d8f80 SDL_WaitEvent>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:799 -1
     (nil)
    (nil))

;; D.5783_121 = event.type;

(insn 278 277 0 (set (reg:QI 152 [ D.5783 ])
        (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 event.type+0 S1 A32])) src/gui.c:804 -1
     (nil))

;; D.5784_122 = (int) D.5783_121;

(insn 279 278 0 (parallel [
            (set (reg:SI 153 [ D.5784 ])
                (zero_extend:SI (reg:QI 152 [ D.5783 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:804 -1
     (nil))

;; switch (D.5784_122) <default: <L62>, case 6: <L39>, case 12: <L36>>

(insn 280 279 281 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153 [ D.5784 ])
            (const_int 6 [0x6]))) src/gui.c:804 -1
     (nil))

(jump_insn 281 280 282 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:804 -1
     (nil))

(insn 282 281 283 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153 [ D.5784 ])
            (const_int 12 [0xc]))) src/gui.c:804 -1
     (nil))

(jump_insn 283 282 284 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:804 -1
     (nil))

(jump_insn 284 283 285 (set (pc)
        (label_ref 0)) src/gui.c:804 -1
     (nil))

(barrier 285 284 0)

;; Generating RTL for gimple basic block 31

;; <L36>:

(code_label 286 285 287 164 "" [0 uses])

(note 287 286 0 NOTE_INSN_BASIC_BLOCK)

;; if (posDepartSelected_9 != 0)

(insn 288 287 289 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 posDepartSelected+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:807 -1
     (nil))

(jump_insn 289 288 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:807 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; free (arriveesValides_2);

(insn 291 290 292 (set (reg/f:SI 241)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arriveesValides+0 S4 A32])) src/gui.c:808 -1
     (nil))

(insn 292 291 293 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 241)) src/gui.c:808 -1
     (nil))

(call_insn 293 292 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:808 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; Generating RTL for gimple basic block 33

;; 

(code_label 294 293 295 165 "" [0 uses])

(note 295 294 0 NOTE_INSN_BASIC_BLOCK)

;; D.5787_123 = 1;

(insn 296 295 0 (set (reg:SI 59 [ D.5787 ])
        (const_int 1 [0x1])) src/gui.c:809 -1
     (nil))

;; Generating RTL for gimple basic block 34

;; <L39>:

(code_label 299 298 300 163 "" [0 uses])

(note 300 299 0 NOTE_INSN_BASIC_BLOCK)

;; D.5788_124 = event.button.button;

(insn 301 300 0 (set (reg:QI 154 [ D.5788 ])
        (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -54 [0xffffffffffffffca])) [0 event.button.button+0 S1 A16])) src/gui.c:813 -1
     (nil))

;; if (D.5788_124 == 1)

(insn 302 301 303 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 154 [ D.5788 ])
            (const_int 1 [0x1]))) src/gui.c:813 -1
     (nil))

(jump_insn 303 302 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:813 -1
     (nil))

;; Generating RTL for gimple basic block 35

;; D.5791_125 = event.button.y;

(insn 305 304 0 (set (reg:HI 155 [ D.5791 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -50 [0xffffffffffffffce])) [0 event.button.y+0 S2 A16])) src/gui.c:816 -1
     (nil))

;; D.5792_126 = (int) D.5791_125;

(insn 306 305 0 (set (reg:SI 156 [ D.5792 ])
        (zero_extend:SI (reg:HI 155 [ D.5791 ]))) src/gui.c:816 -1
     (nil))

;; D.5793_127 = event.button.x;

(insn 307 306 0 (set (reg:HI 157 [ D.5793 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 event.button.x+0 S2 A32])) src/gui.c:816 -1
     (nil))

;; D.5794_128 = (int) D.5793_127;

(insn 308 307 0 (set (reg:SI 158 [ D.5794 ])
        (zero_extend:SI (reg:HI 157 [ D.5793 ]))) src/gui.c:816 -1
     (nil))

;; D.5795_129 = CheckerWithScreenPosition (D.5794_128, D.5792_126, &posDepart);

(insn 309 308 310 (parallel [
            (set (reg:SI 242)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:816 -1
     (nil))

(insn 310 309 311 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 242)) src/gui.c:816 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -28 [0xffffffffffffffe4]))
        (nil)))

(insn 311 310 312 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 156 [ D.5792 ])) src/gui.c:816 -1
     (nil))

(insn 312 311 313 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 158 [ D.5794 ])) src/gui.c:816 -1
     (nil))

(call_insn 313 312 314 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("CheckerWithScreenPosition") [flags 0x3]  <function_decl 0x4081a600 CheckerWithScreenPosition>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:816 -1
     (nil)
    (nil))

(insn 314 313 0 (set (reg:SI 159 [ D.5795 ])
        (reg:SI 0 ax)) src/gui.c:816 -1
     (nil))

;; if (D.5795_129 != 0)

(insn 315 314 316 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 159 [ D.5795 ])
            (const_int 0 [0]))) src/gui.c:816 -1
     (nil))

(jump_insn 316 315 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:816 -1
     (nil))

;; Generating RTL for gimple basic block 36

;; posDepart.43_130 = posDepart;

(insn 318 317 0 (set (reg:SI 160 [ posDepart.43 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 posDepart+0 S4 A32])) src/gui.c:816 -1
     (nil))

;; D.5799_131 = inTab (posDepart.43_130, &tab);

(insn 319 318 320 (parallel [
            (set (reg:SI 243)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:816 -1
     (nil))

(insn 320 319 321 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 243)) src/gui.c:816 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -168 [0xffffffffffffff58]))
        (nil)))

(insn 321 320 322 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 160 [ posDepart.43 ])) src/gui.c:816 -1
     (nil))

(call_insn 322 321 323 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("inTab") [flags 0x3]  <function_decl 0x4081a800 inTab>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:816 -1
     (nil)
    (nil))

(insn 323 322 0 (set (reg:SI 161 [ D.5799 ])
        (reg:SI 0 ax)) src/gui.c:816 -1
     (nil))

;; if (D.5799_131 != 0)

(insn 324 323 325 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.5799 ])
            (const_int 0 [0]))) src/gui.c:816 -1
     (nil))

(jump_insn 325 324 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:816 -1
     (nil))

;; Generating RTL for gimple basic block 37

;; if (posDepartSelected_9 != 0)

(insn 327 326 328 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 posDepartSelected+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:816 -1
     (nil))

(jump_insn 328 327 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:816 -1
     (nil))

;; Generating RTL for gimple basic block 38

;; posDepart.44_132 = posDepart;

(insn 330 329 0 (set (reg:SI 162 [ posDepart.44 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 posDepart+0 S4 A32])) src/gui.c:816 -1
     (nil))

;; D.5805_133 = inTab (posDepart.44_132, arriveesValides_2);

(insn 331 330 332 (set (reg/f:SI 244)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arriveesValides+0 S4 A32])) src/gui.c:816 -1
     (nil))

(insn 332 331 333 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 244)) src/gui.c:816 -1
     (nil))

(insn 333 332 334 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 162 [ posDepart.44 ])) src/gui.c:816 -1
     (nil))

(call_insn 334 333 335 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("inTab") [flags 0x3]  <function_decl 0x4081a800 inTab>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:816 -1
     (nil)
    (nil))

(insn 335 334 0 (set (reg:SI 163 [ D.5805 ])
        (reg:SI 0 ax)) src/gui.c:816 -1
     (nil))

;; if (D.5805_133 == 0)

(insn 336 335 337 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163 [ D.5805 ])
            (const_int 0 [0]))) src/gui.c:816 -1
     (nil))

(jump_insn 337 336 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:816 -1
     (nil))

;; Generating RTL for gimple basic block 39

;; posDepartSelected_134 = posDepartSelected_9 == 0;

(insn 339 338 340 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 posDepartSelected+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:818 -1
     (nil))

(insn 340 339 341 (set (reg:QI 245)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) src/gui.c:818 -1
     (nil))

(insn 341 340 342 (parallel [
            (set (reg:SI 246)
                (zero_extend:SI (reg:QI 245)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:818 -1
     (nil))

(insn 342 341 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posDepartSelected+0 S4 A32])
        (reg:SI 246)) src/gui.c:818 -1
     (nil))

;; Generating RTL for gimple basic block 40

;; 

(code_label 343 342 344 168 "" [0 uses])

(note 344 343 0 NOTE_INSN_BASIC_BLOCK)

;; if (posDepartSelected_10 == 0)

(insn 345 344 346 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 posDepartSelected+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:821 -1
     (nil))

(jump_insn 346 345 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:821 -1
     (nil))

;; Generating RTL for gimple basic block 41

;; D.5810_135 = event.button.y;

(insn 348 347 0 (set (reg:HI 164 [ D.5810 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -50 [0xffffffffffffffce])) [0 event.button.y+0 S2 A16])) src/gui.c:823 -1
     (nil))

;; D.5811_136 = (int) D.5810_135;

(insn 349 348 0 (set (reg:SI 165 [ D.5811 ])
        (zero_extend:SI (reg:HI 164 [ D.5810 ]))) src/gui.c:823 -1
     (nil))

;; D.5812_137 = event.button.x;

(insn 350 349 0 (set (reg:HI 166 [ D.5812 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 event.button.x+0 S2 A32])) src/gui.c:823 -1
     (nil))

;; D.5813_138 = (int) D.5812_137;

(insn 351 350 0 (set (reg:SI 167 [ D.5813 ])
        (zero_extend:SI (reg:HI 166 [ D.5812 ]))) src/gui.c:823 -1
     (nil))

;; D.5814_139 = CheckerWithScreenPosition (D.5813_138, D.5811_136, &posDepart);

(insn 352 351 353 (parallel [
            (set (reg:SI 247)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:823 -1
     (nil))

(insn 353 352 354 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 247)) src/gui.c:823 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -28 [0xffffffffffffffe4]))
        (nil)))

(insn 354 353 355 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 165 [ D.5811 ])) src/gui.c:823 -1
     (nil))

(insn 355 354 356 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 167 [ D.5813 ])) src/gui.c:823 -1
     (nil))

(call_insn 356 355 357 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("CheckerWithScreenPosition") [flags 0x3]  <function_decl 0x4081a600 CheckerWithScreenPosition>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:823 -1
     (nil)
    (nil))

(insn 357 356 0 (set (reg:SI 168 [ D.5814 ])
        (reg:SI 0 ax)) src/gui.c:823 -1
     (nil))

;; if (D.5814_139 != 0)

(insn 358 357 359 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 168 [ D.5814 ])
            (const_int 0 [0]))) src/gui.c:823 -1
     (nil))

(jump_insn 359 358 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:823 -1
     (nil))

;; Generating RTL for gimple basic block 42

;; posDepart.45_140 = posDepart;

(insn 361 360 0 (set (reg:SI 169 [ posDepart.45 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 posDepart+0 S4 A32])) src/gui.c:825 -1
     (nil))

;; D.5818_141 = inTab (posDepart.45_140, &tab);

(insn 362 361 363 (parallel [
            (set (reg:SI 248)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:825 -1
     (nil))

(insn 363 362 364 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 248)) src/gui.c:825 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -168 [0xffffffffffffff58]))
        (nil)))

(insn 364 363 365 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 169 [ posDepart.45 ])) src/gui.c:825 -1
     (nil))

(call_insn 365 364 366 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("inTab") [flags 0x3]  <function_decl 0x4081a800 inTab>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:825 -1
     (nil)
    (nil))

(insn 366 365 0 (set (reg:SI 170 [ D.5818 ])
        (reg:SI 0 ax)) src/gui.c:825 -1
     (nil))

;; if (D.5818_141 != 0)

(insn 367 366 368 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 170 [ D.5818 ])
            (const_int 0 [0]))) src/gui.c:825 -1
     (nil))

(jump_insn 368 367 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:825 -1
     (nil))

;; Generating RTL for gimple basic block 43

;; posDepart.46_142 = posDepart;

(insn 370 369 0 (set (reg:SI 171 [ posDepart.46 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 posDepart+0 S4 A32])) src/gui.c:827 -1
     (nil))

;; arriveesValides_144 = Display_Arrow_Possibilities (display_52(D), gameState_20(D), player_26(D), posDepart.46_142, game_143(D));

(insn 371 370 372 (set (reg/f:SI 249)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 game+0 S4 A32])) src/gui.c:827 -1
     (nil))

(insn 372 371 373 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg/f:SI 249)) src/gui.c:827 -1
     (nil))

(insn 373 372 374 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 171 [ posDepart.46 ])) src/gui.c:827 -1
     (nil))

(insn 374 373 375 (set (reg:SI 250)
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 player+0 S4 A32])) src/gui.c:827 -1
     (nil))

(insn 375 374 376 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 250)) src/gui.c:827 -1
     (nil))

(insn 376 375 377 (set (reg/f:SI 251)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:827 -1
     (nil))

(insn 377 376 378 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 251)) src/gui.c:827 -1
     (nil))

(insn 378 377 379 (set (reg/f:SI 252)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:827 -1
     (nil))

(insn 379 378 380 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 252)) src/gui.c:827 -1
     (nil))

(call_insn 380 379 381 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("Display_Arrow_Possibilities") [flags 0x3]  <function_decl 0x4081a480 Display_Arrow_Possibilities>) [0 S1 A8])
            (const_int 20 [0x14]))) src/gui.c:827 -1
     (nil)
    (nil))

(insn 381 380 382 (set (reg:SI 253)
        (reg:SI 0 ax)) src/gui.c:827 -1
     (nil))

(insn 382 381 0 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arriveesValides+0 S4 A32])
        (reg:SI 253)) src/gui.c:827 -1
     (nil))

;; posDepartSelected_145 = 1;

(insn 383 382 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posDepartSelected+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:828 -1
     (nil))

;; posDepart.47_146 = posDepart;

(insn 384 383 0 (set (reg:SI 172 [ posDepart.47 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 posDepart+0 S4 A32])) src/gui.c:829 -1
     (nil))

;; D.5823_147 = posDepart.47_146 + 1;

(insn 385 384 0 (parallel [
            (set (reg:SI 173 [ D.5823 ])
                (plus:SI (reg:SI 172 [ posDepart.47 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:829 -1
     (nil))

;; mouvement.src_point = D.5823_147;

(insn 386 385 0 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 mouvement.src_point+0 S4 A32])
        (reg:SI 173 [ D.5823 ])) src/gui.c:829 -1
     (nil))

;; Generating RTL for gimple basic block 44

;; 

(code_label 389 388 390 169 "" [0 uses])

(note 390 389 0 NOTE_INSN_BASIC_BLOCK)

;; D.5825_148 = event.button.y;

(insn 391 390 0 (set (reg:HI 174 [ D.5825 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -50 [0xffffffffffffffce])) [0 event.button.y+0 S2 A16])) src/gui.c:835 -1
     (nil))

;; D.5826_149 = (int) D.5825_148;

(insn 392 391 0 (set (reg:SI 175 [ D.5826 ])
        (zero_extend:SI (reg:HI 174 [ D.5825 ]))) src/gui.c:835 -1
     (nil))

;; D.5827_150 = event.button.x;

(insn 393 392 0 (set (reg:HI 176 [ D.5827 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 event.button.x+0 S2 A32])) src/gui.c:835 -1
     (nil))

;; D.5828_151 = (int) D.5827_150;

(insn 394 393 0 (set (reg:SI 177 [ D.5828 ])
        (zero_extend:SI (reg:HI 176 [ D.5827 ]))) src/gui.c:835 -1
     (nil))

;; D.5829_152 = CheckerWithScreenPosition (D.5828_151, D.5826_149, &posArrivee);

(insn 395 394 396 (parallel [
            (set (reg:SI 254)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:835 -1
     (nil))

(insn 396 395 397 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 254)) src/gui.c:835 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -24 [0xffffffffffffffe8]))
        (nil)))

(insn 397 396 398 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 175 [ D.5826 ])) src/gui.c:835 -1
     (nil))

(insn 398 397 399 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 177 [ D.5828 ])) src/gui.c:835 -1
     (nil))

(call_insn 399 398 400 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("CheckerWithScreenPosition") [flags 0x3]  <function_decl 0x4081a600 CheckerWithScreenPosition>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:835 -1
     (nil)
    (nil))

(insn 400 399 0 (set (reg:SI 178 [ D.5829 ])
        (reg:SI 0 ax)) src/gui.c:835 -1
     (nil))

;; if (D.5829_152 != 0)

(insn 401 400 402 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 178 [ D.5829 ])
            (const_int 0 [0]))) src/gui.c:835 -1
     (nil))

(jump_insn 402 401 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:835 -1
     (nil))

;; Generating RTL for gimple basic block 45

;; __builtin_puts (&"POS ARRIVEE"[0]);

(insn 404 403 405 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC27") [flags 0x2]  <var_decl 0x409cd0c0 *.LC27>)) src/gui.c:837 -1
     (nil))

(call_insn 405 404 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0x406b1e00 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:837 -1
     (nil)
    (nil))

;; posArrivee.48_153 = posArrivee;

(insn 406 405 0 (set (reg:SI 179 [ posArrivee.48 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 posArrivee+0 S4 A32])) src/gui.c:838 -1
     (nil))

;; D.5833_154 = inTab (posArrivee.48_153, arriveesValides_2);

(insn 407 406 408 (set (reg/f:SI 255)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arriveesValides+0 S4 A32])) src/gui.c:838 -1
     (nil))

(insn 408 407 409 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 255)) src/gui.c:838 -1
     (nil))

(insn 409 408 410 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 179 [ posArrivee.48 ])) src/gui.c:838 -1
     (nil))

(call_insn 410 409 411 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("inTab") [flags 0x3]  <function_decl 0x4081a800 inTab>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:838 -1
     (nil)
    (nil))

(insn 411 410 0 (set (reg:SI 180 [ D.5833 ])
        (reg:SI 0 ax)) src/gui.c:838 -1
     (nil))

;; if (D.5833_154 != 0)

(insn 412 411 413 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 180 [ D.5833 ])
            (const_int 0 [0]))) src/gui.c:838 -1
     (nil))

(jump_insn 413 412 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:838 -1
     (nil))

;; Generating RTL for gimple basic block 46

;; __builtin_puts (&"POS ARRIVEE VALIDE"[0]);

(insn 415 414 416 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC28") [flags 0x2]  <var_decl 0x409cd120 *.LC28>)) src/gui.c:840 -1
     (nil))

(call_insn 416 415 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0x406b1e00 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:840 -1
     (nil)
    (nil))

;; posArrivee.49_155 = posArrivee;

(insn 417 416 0 (set (reg:SI 181 [ posArrivee.49 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 posArrivee+0 S4 A32])) src/gui.c:841 -1
     (nil))

;; D.5837_156 = posArrivee.49_155 + 1;

(insn 418 417 0 (parallel [
            (set (reg:SI 182 [ D.5837 ])
                (plus:SI (reg:SI 181 [ posArrivee.49 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:841 -1
     (nil))

;; mouvement.dest_point = D.5837_156;

(insn 419 418 0 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 mouvement.dest_point+0 S4 A32])
        (reg:SI 182 [ D.5837 ])) src/gui.c:841 -1
     (nil))

;; free (arriveesValides_2);

(insn 420 419 421 (set (reg/f:SI 256)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arriveesValides+0 S4 A32])) src/gui.c:842 -1
     (nil))

(insn 421 420 422 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 256)) src/gui.c:842 -1
     (nil))

(call_insn 422 421 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:842 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; Checker_Move (display_52(D), gameState_20(D), &mouvement, game_143(D));

(insn 423 422 424 (set (reg/f:SI 257)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 game+0 S4 A32])) src/gui.c:843 -1
     (nil))

(insn 424 423 425 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 257)) src/gui.c:843 -1
     (nil))

(insn 425 424 426 (parallel [
            (set (reg:SI 258)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:843 -1
     (nil))

(insn 426 425 427 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 258)) src/gui.c:843 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -36 [0xffffffffffffffdc]))
        (nil)))

(insn 427 426 428 (set (reg/f:SI 259)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:843 -1
     (nil))

(insn 428 427 429 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 259)) src/gui.c:843 -1
     (nil))

(insn 429 428 430 (set (reg/f:SI 260)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:843 -1
     (nil))

(insn 430 429 431 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 260)) src/gui.c:843 -1
     (nil))

(call_insn 431 430 0 (call (mem:QI (symbol_ref:SI ("Checker_Move") [flags 0x3]  <function_decl 0x4081a280 Checker_Move>) [0 S1 A8])
        (const_int 16 [0x10])) src/gui.c:843 -1
     (nil)
    (nil))

;; D.5787_157 = 0;

(insn 432 431 0 (set (reg:SI 59 [ D.5787 ])
        (const_int 0 [0])) src/gui.c:844 -1
     (nil))

;; Generating RTL for gimple basic block 47

;; 

(code_label 435 434 436 170 "" [0 uses])

(note 436 435 0 NOTE_INSN_BASIC_BLOCK)

;; free (arriveesValides_2);

(insn 437 436 438 (set (reg/f:SI 261)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arriveesValides+0 S4 A32])) src/gui.c:849 -1
     (nil))

(insn 438 437 439 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 261)) src/gui.c:849 -1
     (nil))

(call_insn 439 438 0 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:849 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

;; Display_RefreshGameBoard (display_52(D), gameState_20(D), game_143(D));

(insn 440 439 441 (set (reg/f:SI 262)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 game+0 S4 A32])) src/gui.c:850 -1
     (nil))

(insn 441 440 442 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 262)) src/gui.c:850 -1
     (nil))

(insn 442 441 443 (set (reg/f:SI 263)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:850 -1
     (nil))

(insn 443 442 444 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 263)) src/gui.c:850 -1
     (nil))

(insn 444 443 445 (set (reg/f:SI 264)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:850 -1
     (nil))

(insn 445 444 446 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 264)) src/gui.c:850 -1
     (nil))

(call_insn 446 445 0 (call (mem:QI (symbol_ref:SI ("Display_RefreshGameBoard") [flags 0x3]  <function_decl 0x4081a780 Display_RefreshGameBoard>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:850 -1
     (nil)
    (nil))

;; D.5787_158 = Display_CheckersPossibilities (display_52(D), gameState_20(D), player_26(D), game_143(D));

(insn 447 446 448 (set (reg/f:SI 265)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 game+0 S4 A32])) src/gui.c:851 -1
     (nil))

(insn 448 447 449 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 265)) src/gui.c:851 -1
     (nil))

(insn 449 448 450 (set (reg:SI 266)
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 player+0 S4 A32])) src/gui.c:851 -1
     (nil))

(insn 450 449 451 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 266)) src/gui.c:851 -1
     (nil))

(insn 451 450 452 (set (reg/f:SI 267)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:851 -1
     (nil))

(insn 452 451 453 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 267)) src/gui.c:851 -1
     (nil))

(insn 453 452 454 (set (reg/f:SI 268)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:851 -1
     (nil))

(insn 454 453 455 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 268)) src/gui.c:851 -1
     (nil))

(call_insn 455 454 456 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("Display_CheckersPossibilities") [flags 0x3]  <function_decl 0x4081a580 Display_CheckersPossibilities>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:851 -1
     (nil)
    (nil))

(insn 456 455 0 (set (reg:SI 59 [ D.5787 ])
        (reg:SI 0 ax)) src/gui.c:851 -1
     (nil))

;; Generating RTL for gimple basic block 48

;; 

(code_label 459 458 460 167 "" [0 uses])

(note 460 459 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 49

;; <L62>:

(code_label 461 460 462 162 "" [0 uses])

(note 462 461 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 50

;; 

(code_label 466 465 467 153 "" [0 uses])

(note 467 466 0 NOTE_INSN_BASIC_BLOCK)

;; return;

(insn 468 467 469 (clobber (reg/i:SI 0 ax)) src/gui.c:859 -1
     (nil))

(insn 469 468 470 (clobber (reg:SI 183 [ <retval> ])) src/gui.c:859 -1
     (nil))

(jump_insn 470 469 471 (set (pc)
        (label_ref 0)) src/gui.c:859 -1
     (nil))

(barrier 471 470 0)

;; Generating RTL for gimple basic block 51

;; 

(code_label 472 471 473 166 "" [0 uses])

(note 473 472 0 NOTE_INSN_BASIC_BLOCK)

;; return D.5787_14;

(insn 474 473 475 (set (reg:SI 183 [ <retval> ])
        (reg:SI 59 [ D.5787 ])) src/gui.c:859 -1
     (nil))

(jump_insn 475 474 476 (set (pc)
        (label_ref 0)) src/gui.c:859 -1
     (nil))

(barrier 476 475 0)
Purged edges from bb 55


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:759 -1
     (nil))

(insn 6 5 7 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])
        (const_int 0 [0])) src/gui.c:762 -1
     (nil))

(insn 7 6 8 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posDepartSelected+0 S4 A32])
        (const_int 0 [0])) src/gui.c:763 -1
     (nil))

(insn 8 7 9 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:764 -1
     (nil))

(jump_insn 9 8 10 3 (set (pc)
        (label_ref 15)) src/gui.c:764 -1
     (nil)
 -> 15)
;; End of basic block 3 -> ( 5)

;; Succ edge  5

(barrier 10 9 17)

;; Start of basic block ( 5) -> 4
;; Pred edge  5
(code_label 17 10 11 4 152 "" [1 uses])

(note 11 17 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 4 (set (reg:SI 184)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) src/gui.c:764 -1
     (nil))

(insn 13 12 14 4 (set (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 184)
                        (const_int 4 [0x4]))
                    (reg/f:SI 54 virtual-stack-vars))
                (const_int -168 [0xffffffffffffff58])) [0 tab S4 A32])
        (const_int -1 [0xffffffffffffffff])) src/gui.c:764 -1
     (nil))

(insn 14 13 15 4 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:764 -1
     (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 15 14 16 5 151 "" [1 uses])

(note 16 15 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 18 16 19 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 27 [0x1b]))) src/gui.c:764 -1
     (nil))

(jump_insn 19 18 20 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) src/gui.c:764 -1
     (nil)
 -> 17)
;; End of basic block 5 -> ( 4 6)

;; Succ edge  4
;; Succ edge  6 (fallthru)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 20 19 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 6 (set (reg/f:SI 185)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:767 -1
     (nil))

(insn 22 21 23 6 (set (reg:SI 60 [ D.5661 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 185)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:767 -1
     (nil))

(insn 23 22 24 6 (set (reg/f:SI 186)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:767 -1
     (nil))

(insn 24 23 25 6 (set (reg:SI 61 [ D.5662 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 186)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:767 -1
     (nil))

(insn 25 24 26 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.5661 ])
            (reg:SI 61 [ D.5662 ]))) src/gui.c:767 -1
     (nil))

(jump_insn 26 25 27 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 466)
            (pc))) src/gui.c:767 -1
     (nil)
 -> 466)
;; End of basic block 6 -> ( 7 53)

;; Succ edge  7 (fallthru)
;; Succ edge  53

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(note 27 26 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 7 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:769 -1
     (nil))

(jump_insn 29 28 30 7 (set (pc)
        (label_ref 264)) src/gui.c:769 -1
     (nil)
 -> 264)
;; End of basic block 7 -> ( 29)

;; Succ edge  29

(barrier 30 29 266)

;; Start of basic block ( 29) -> 8
;; Pred edge  29
(code_label 266 30 31 8 161 "" [1 uses])

(note 31 266 32 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 8 (set (reg/f:SI 187)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:771 -1
     (nil))

(insn 33 32 34 8 (set (reg:SI 188)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:771 -1
     (nil))

(insn 34 33 35 8 (set (reg:SI 62 [ D.5665 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 188)
                        (const_int 8 [0x8]))
                    (reg/f:SI 187))
                (const_int 4 [0x4])) [0 gameState_20(D)->zones[i_1].nb_checkers+0 S4 A32])) src/gui.c:771 -1
     (nil))

(insn 35 34 36 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 62 [ D.5665 ])
            (const_int 0 [0]))) src/gui.c:771 -1
     (nil))

(jump_insn 36 35 37 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 261)
            (pc))) src/gui.c:771 -1
     (nil)
 -> 261)
;; End of basic block 8 -> ( 9 28)

;; Succ edge  9 (fallthru)
;; Succ edge  28

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 37 36 38 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 9 (set (reg/f:SI 189)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:771 -1
     (nil))

(insn 39 38 40 9 (set (reg:SI 190)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:771 -1
     (nil))

(insn 40 39 41 9 (set (reg:SI 63 [ D.5668 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 190)
                    (const_int 8 [0x8]))
                (reg/f:SI 189)) [0 gameState_20(D)->zones[i_1].player+0 S4 A32])) src/gui.c:771 -1
     (nil))

(insn 41 40 42 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 63 [ D.5668 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:771 -1
     (nil))

(jump_insn 42 41 43 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 261)
            (pc))) src/gui.c:771 -1
     (nil)
 -> 261)
;; End of basic block 9 -> ( 10 28)

;; Succ edge  10 (fallthru)
;; Succ edge  28

;; Start of basic block ( 9) -> 10
;; Pred edge  9 (fallthru)
(note 43 42 44 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 10 (set (reg/f:SI 191)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 45 44 46 10 (set (reg:SI 64 [ D.5673 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 191)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 46 45 47 10 (set (reg:SI 65 [ i.22 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 47 46 48 10 (parallel [
            (set (reg:SI 66 [ D.5675 ])
                (plus:SI (reg:SI 64 [ D.5673 ])
                    (reg:SI 65 [ i.22 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:773 -1
     (nil))

(insn 48 47 49 10 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 66 [ D.5675 ])
            (const_int 27 [0x1b]))) src/gui.c:773 -1
     (nil))

(jump_insn 49 48 50 10 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) src/gui.c:773 -1
     (nil)
 -> 109)
;; End of basic block 10 -> ( 11 16)

;; Succ edge  11 (fallthru)
;; Succ edge  16

;; Start of basic block ( 10) -> 11
;; Pred edge  10 (fallthru)
(note 50 49 51 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 11 (set (reg/f:SI 192)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 52 51 53 11 (set (reg:SI 67 [ D.5678 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 192)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 53 52 54 11 (set (reg:SI 68 [ i.23 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 54 53 55 11 (parallel [
            (set (reg:SI 69 [ D.5680 ])
                (plus:SI (reg:SI 67 [ D.5678 ])
                    (reg:SI 68 [ i.23 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:773 -1
     (nil))

(insn 55 54 56 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 69 [ D.5680 ])
            (const_int 26 [0x1a]))) src/gui.c:773 -1
     (nil))

(jump_insn 56 55 57 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) src/gui.c:773 -1
     (nil)
 -> 109)
;; End of basic block 11 -> ( 12 16)

;; Succ edge  12 (fallthru)
;; Succ edge  16

;; Start of basic block ( 11) -> 12
;; Pred edge  11 (fallthru)
(note 57 56 58 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 12 (set (reg/f:SI 193)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 59 58 60 12 (set (reg:SI 70 [ D.5683 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 193)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 60 59 61 12 (set (reg:SI 71 [ i.24 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 61 60 62 12 (parallel [
            (set (reg:SI 72 [ D.5685 ])
                (plus:SI (reg:SI 70 [ D.5683 ])
                    (reg:SI 71 [ i.24 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:773 -1
     (nil))

(insn 62 61 63 12 (set (reg/f:SI 194)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 63 62 64 12 (set (reg:SI 73 [ D.5686 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 72 [ D.5685 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 194))
                (const_int 4 [0x4])) [0 gameState_20(D)->zones[D.5685_35].nb_checkers+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 64 63 65 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 73 [ D.5686 ])
            (const_int 1 [0x1]))) src/gui.c:773 -1
     (nil))

(jump_insn 65 64 66 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) src/gui.c:773 -1
     (nil)
 -> 84)
;; End of basic block 12 -> ( 15 13)

;; Succ edge  15
;; Succ edge  13 (fallthru)

;; Start of basic block ( 12) -> 13
;; Pred edge  12 (fallthru)
(note 66 65 67 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 68 13 (set (reg/f:SI 195)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 68 67 69 13 (set (reg:SI 74 [ D.5688 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 195)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 69 68 70 13 (set (reg:SI 75 [ i.25 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 70 69 71 13 (parallel [
            (set (reg:SI 76 [ D.5690 ])
                (plus:SI (reg:SI 74 [ D.5688 ])
                    (reg:SI 75 [ i.25 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:773 -1
     (nil))

(insn 71 70 72 13 (set (reg/f:SI 196)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 72 71 73 13 (set (reg:SI 77 [ D.5691 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 76 [ D.5690 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 196))
                (const_int 4 [0x4])) [0 gameState_20(D)->zones[D.5690_39].nb_checkers+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 73 72 74 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 77 [ D.5691 ])
            (const_int 0 [0]))) src/gui.c:773 -1
     (nil))

(jump_insn 74 73 75 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) src/gui.c:773 -1
     (nil)
 -> 84)
;; End of basic block 13 -> ( 15 14)

;; Succ edge  15
;; Succ edge  14 (fallthru)

;; Start of basic block ( 13) -> 14
;; Pred edge  13 (fallthru)
(note 75 74 76 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 77 14 (set (reg/f:SI 197)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 77 76 78 14 (set (reg:SI 78 [ D.5693 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 197)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 78 77 79 14 (set (reg:SI 79 [ i.26 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 79 78 80 14 (parallel [
            (set (reg:SI 80 [ D.5695 ])
                (plus:SI (reg:SI 78 [ D.5693 ])
                    (reg:SI 79 [ i.26 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:773 -1
     (nil))

(insn 80 79 81 14 (set (reg/f:SI 198)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 81 80 82 14 (set (reg:SI 81 [ D.5696 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 80 [ D.5695 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 198)) [0 gameState_20(D)->zones[D.5695_43].player+0 S4 A32])) src/gui.c:773 -1
     (nil))

(insn 82 81 83 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81 [ D.5696 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:773 -1
     (nil))

(jump_insn 83 82 84 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) src/gui.c:773 -1
     (nil)
 -> 109)
;; End of basic block 14 -> ( 15 16)

;; Succ edge  15 (fallthru)
;; Succ edge  16

;; Start of basic block ( 12 13 14) -> 15
;; Pred edge  12
;; Pred edge  13
;; Pred edge  14 (fallthru)
(code_label 84 83 85 15 157 "" [2 uses])

(note 85 84 86 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 15 (set (reg:SI 199)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:775 -1
     (nil))

(insn 87 86 88 15 (parallel [
            (set (reg:SI 82 [ D.5697 ])
                (plus:SI (reg:SI 199)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:775 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 88 87 89 15 (set (reg/f:SI 200)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:775 -1
     (nil))

(insn 89 88 90 15 (set (reg:SI 83 [ D.5698 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 200)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:775 -1
     (nil))

(insn 90 89 91 15 (set (reg:SI 84 [ i.27 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:775 -1
     (nil))

(insn 91 90 92 15 (parallel [
            (set (reg:SI 85 [ D.5700 ])
                (plus:SI (reg:SI 83 [ D.5698 ])
                    (reg:SI 84 [ i.27 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:775 -1
     (nil))

(insn 92 91 93 15 (parallel [
            (set (reg:SI 86 [ D.5701 ])
                (plus:SI (reg:SI 85 [ D.5700 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:775 -1
     (nil))

(insn 93 92 94 15 (set (reg/f:SI 87 [ D.5702 ])
        (symbol_ref/f:SI ("*.LC24") [flags 0x2]  <var_decl 0x408fdf60 *.LC24>)) src/gui.c:775 -1
     (nil))

(insn 94 93 95 15 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 82 [ D.5697 ])) src/gui.c:775 -1
     (nil))

(insn 95 94 96 15 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 86 [ D.5701 ])) src/gui.c:775 -1
     (nil))

(insn 96 95 97 15 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 87 [ D.5702 ])) src/gui.c:775 -1
     (nil))

(call_insn 97 96 98 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x406b1b80 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:775 -1
     (nil)
    (nil))

(insn 98 97 99 15 (set (reg:SI 88 [ i.28 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:776 -1
     (nil))

(insn 99 98 100 15 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 88 [ i.28 ])) src/gui.c:776 -1
     (nil))

(insn 100 99 101 15 (set (reg/f:SI 201)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:776 -1
     (nil))

(insn 101 100 102 15 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 201)) src/gui.c:776 -1
     (nil))

(insn 102 101 103 15 (set (reg/f:SI 202)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:776 -1
     (nil))

(insn 103 102 104 15 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 202)) src/gui.c:776 -1
     (nil))

(call_insn 104 103 105 15 (call (mem:QI (symbol_ref:SI ("colorChecker") [flags 0x3]  <function_decl 0x4081a680 colorChecker>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:776 -1
     (nil)
    (nil))

(insn 105 104 106 15 (set (reg:SI 203)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])) src/gui.c:777 -1
     (nil))

(insn 106 105 107 15 (set (reg:SI 204)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:777 -1
     (nil))

(insn 107 106 108 15 (set (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 203)
                        (const_int 4 [0x4]))
                    (reg/f:SI 54 virtual-stack-vars))
                (const_int -168 [0xffffffffffffff58])) [0 tab S4 A32])
        (reg:SI 204)) src/gui.c:777 -1
     (nil))

(insn 108 107 109 15 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:778 -1
     (nil))
;; End of basic block 15 -> ( 16)

;; Succ edge  16 (fallthru)

;; Start of basic block ( 10 11 14 15) -> 16
;; Pred edge  10
;; Pred edge  11
;; Pred edge  14
;; Pred edge  15 (fallthru)
(code_label 109 108 110 16 156 "" [3 uses])

(note 110 109 111 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 16 (set (reg/f:SI 205)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 112 111 113 16 (set (reg:SI 89 [ D.5706 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 205)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 113 112 114 16 (set (reg:SI 90 [ i.29 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 114 113 115 16 (parallel [
            (set (reg:SI 91 [ D.5708 ])
                (plus:SI (reg:SI 89 [ D.5706 ])
                    (reg:SI 90 [ i.29 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:780 -1
     (nil))

(insn 115 114 116 16 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 91 [ D.5708 ])
            (const_int 27 [0x1b]))) src/gui.c:780 -1
     (nil))

(jump_insn 116 115 117 16 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 176)
            (pc))) src/gui.c:780 -1
     (nil)
 -> 176)
;; End of basic block 16 -> ( 17 22)

;; Succ edge  17 (fallthru)
;; Succ edge  22

;; Start of basic block ( 16) -> 17
;; Pred edge  16 (fallthru)
(note 117 116 118 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 119 17 (set (reg/f:SI 206)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 119 118 120 17 (set (reg:SI 92 [ D.5711 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 206)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 120 119 121 17 (set (reg:SI 93 [ i.30 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 121 120 122 17 (parallel [
            (set (reg:SI 94 [ D.5713 ])
                (plus:SI (reg:SI 92 [ D.5711 ])
                    (reg:SI 93 [ i.30 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:780 -1
     (nil))

(insn 122 121 123 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.5713 ])
            (const_int 26 [0x1a]))) src/gui.c:780 -1
     (nil))

(jump_insn 123 122 124 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 176)
            (pc))) src/gui.c:780 -1
     (nil)
 -> 176)
;; End of basic block 17 -> ( 18 22)

;; Succ edge  18 (fallthru)
;; Succ edge  22

;; Start of basic block ( 17) -> 18
;; Pred edge  17 (fallthru)
(note 124 123 125 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 126 18 (set (reg/f:SI 207)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 126 125 127 18 (set (reg:SI 95 [ D.5716 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 207)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 127 126 128 18 (set (reg:SI 96 [ i.31 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 128 127 129 18 (parallel [
            (set (reg:SI 97 [ D.5718 ])
                (plus:SI (reg:SI 95 [ D.5716 ])
                    (reg:SI 96 [ i.31 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:780 -1
     (nil))

(insn 129 128 130 18 (set (reg/f:SI 208)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 130 129 131 18 (set (reg:SI 98 [ D.5719 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 97 [ D.5718 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 208))
                (const_int 4 [0x4])) [0 gameState_20(D)->zones[D.5718_62].nb_checkers+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 131 130 132 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.5719 ])
            (const_int 0 [0]))) src/gui.c:780 -1
     (nil))

(jump_insn 132 131 133 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) src/gui.c:780 -1
     (nil)
 -> 151)
;; End of basic block 18 -> ( 21 19)

;; Succ edge  21
;; Succ edge  19 (fallthru)

;; Start of basic block ( 18) -> 19
;; Pred edge  18 (fallthru)
(note 133 132 134 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 135 19 (set (reg/f:SI 209)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 135 134 136 19 (set (reg:SI 99 [ D.5721 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 209)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 136 135 137 19 (set (reg:SI 100 [ i.32 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 137 136 138 19 (parallel [
            (set (reg:SI 101 [ D.5723 ])
                (plus:SI (reg:SI 99 [ D.5721 ])
                    (reg:SI 100 [ i.32 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:780 -1
     (nil))

(insn 138 137 139 19 (set (reg/f:SI 210)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 139 138 140 19 (set (reg:SI 102 [ D.5724 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 101 [ D.5723 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 210))
                (const_int 4 [0x4])) [0 gameState_20(D)->zones[D.5723_66].nb_checkers+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 140 139 141 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.5724 ])
            (const_int 1 [0x1]))) src/gui.c:780 -1
     (nil))

(jump_insn 141 140 142 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) src/gui.c:780 -1
     (nil)
 -> 151)
;; End of basic block 19 -> ( 21 20)

;; Succ edge  21
;; Succ edge  20 (fallthru)

;; Start of basic block ( 19) -> 20
;; Pred edge  19 (fallthru)
(note 142 141 143 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 144 20 (set (reg/f:SI 211)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 144 143 145 20 (set (reg:SI 103 [ D.5726 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 211)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 145 144 146 20 (set (reg:SI 104 [ i.33 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 146 145 147 20 (parallel [
            (set (reg:SI 105 [ D.5728 ])
                (plus:SI (reg:SI 103 [ D.5726 ])
                    (reg:SI 104 [ i.33 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:780 -1
     (nil))

(insn 147 146 148 20 (set (reg/f:SI 212)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 148 147 149 20 (set (reg:SI 106 [ D.5729 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 105 [ D.5728 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 212)) [0 gameState_20(D)->zones[D.5728_70].player+0 S4 A32])) src/gui.c:780 -1
     (nil))

(insn 149 148 150 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ D.5729 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:780 -1
     (nil))

(jump_insn 150 149 151 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 176)
            (pc))) src/gui.c:780 -1
     (nil)
 -> 176)
;; End of basic block 20 -> ( 21 22)

;; Succ edge  21 (fallthru)
;; Succ edge  22

;; Start of basic block ( 18 19 20) -> 21
;; Pred edge  18
;; Pred edge  19
;; Pred edge  20 (fallthru)
(code_label 151 150 152 21 159 "" [2 uses])

(note 152 151 153 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 154 21 (set (reg:SI 213)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:782 -1
     (nil))

(insn 154 153 155 21 (parallel [
            (set (reg:SI 107 [ D.5730 ])
                (plus:SI (reg:SI 213)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:782 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 155 154 156 21 (set (reg/f:SI 214)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:782 -1
     (nil))

(insn 156 155 157 21 (set (reg:SI 108 [ D.5731 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 214)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:782 -1
     (nil))

(insn 157 156 158 21 (set (reg:SI 109 [ i.34 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:782 -1
     (nil))

(insn 158 157 159 21 (parallel [
            (set (reg:SI 110 [ D.5733 ])
                (plus:SI (reg:SI 108 [ D.5731 ])
                    (reg:SI 109 [ i.34 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:782 -1
     (nil))

(insn 159 158 160 21 (parallel [
            (set (reg:SI 111 [ D.5734 ])
                (plus:SI (reg:SI 110 [ D.5733 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:782 -1
     (nil))

(insn 160 159 161 21 (set (reg/f:SI 112 [ D.5735 ])
        (symbol_ref/f:SI ("*.LC25") [flags 0x2]  <var_decl 0x409cd000 *.LC25>)) src/gui.c:782 -1
     (nil))

(insn 161 160 162 21 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 107 [ D.5730 ])) src/gui.c:782 -1
     (nil))

(insn 162 161 163 21 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 111 [ D.5734 ])) src/gui.c:782 -1
     (nil))

(insn 163 162 164 21 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 112 [ D.5735 ])) src/gui.c:782 -1
     (nil))

(call_insn 164 163 165 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x406b1b80 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:782 -1
     (nil)
    (nil))

(insn 165 164 166 21 (set (reg:SI 113 [ i.35 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:783 -1
     (nil))

(insn 166 165 167 21 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 113 [ i.35 ])) src/gui.c:783 -1
     (nil))

(insn 167 166 168 21 (set (reg/f:SI 215)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:783 -1
     (nil))

(insn 168 167 169 21 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 215)) src/gui.c:783 -1
     (nil))

(insn 169 168 170 21 (set (reg/f:SI 216)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:783 -1
     (nil))

(insn 170 169 171 21 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 216)) src/gui.c:783 -1
     (nil))

(call_insn 171 170 172 21 (call (mem:QI (symbol_ref:SI ("colorChecker") [flags 0x3]  <function_decl 0x4081a680 colorChecker>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:783 -1
     (nil)
    (nil))

(insn 172 171 173 21 (set (reg:SI 217)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])) src/gui.c:784 -1
     (nil))

(insn 173 172 174 21 (set (reg:SI 218)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:784 -1
     (nil))

(insn 174 173 175 21 (set (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 217)
                        (const_int 4 [0x4]))
                    (reg/f:SI 54 virtual-stack-vars))
                (const_int -168 [0xffffffffffffff58])) [0 tab S4 A32])
        (reg:SI 218)) src/gui.c:784 -1
     (nil))

(insn 175 174 176 21 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:785 -1
     (nil))
;; End of basic block 21 -> ( 22)

;; Succ edge  22 (fallthru)

;; Start of basic block ( 16 17 20 21) -> 22
;; Pred edge  16
;; Pred edge  17
;; Pred edge  20
;; Pred edge  21 (fallthru)
(code_label 176 175 177 22 158 "" [3 uses])

(note 177 176 178 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 178 177 179 22 (set (reg/f:SI 219)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 179 178 180 22 (set (reg:SI 114 [ D.5739 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 219)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 180 179 181 22 (set (reg:SI 115 [ i.36 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 181 180 182 22 (parallel [
            (set (reg:SI 116 [ D.5741 ])
                (plus:SI (reg:SI 114 [ D.5739 ])
                    (reg:SI 115 [ i.36 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

(insn 182 181 183 22 (set (reg/f:SI 220)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 183 182 184 22 (set (reg:SI 117 [ D.5742 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 220)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 184 183 185 22 (parallel [
            (set (reg:SI 118 [ D.5743 ])
                (plus:SI (reg:SI 116 [ D.5741 ])
                    (reg:SI 117 [ D.5742 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

(insn 185 184 186 22 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 118 [ D.5743 ])
            (const_int 27 [0x1b]))) src/gui.c:787 -1
     (nil))

(jump_insn 186 185 187 22 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 261)
            (pc))) src/gui.c:787 -1
     (nil)
 -> 261)
;; End of basic block 22 -> ( 23 28)

;; Succ edge  23 (fallthru)
;; Succ edge  28

;; Start of basic block ( 22) -> 23
;; Pred edge  22 (fallthru)
(note 187 186 188 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 189 23 (set (reg/f:SI 221)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 189 188 190 23 (set (reg:SI 119 [ D.5746 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 221)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 190 189 191 23 (set (reg:SI 120 [ i.37 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 191 190 192 23 (parallel [
            (set (reg:SI 121 [ D.5748 ])
                (plus:SI (reg:SI 119 [ D.5746 ])
                    (reg:SI 120 [ i.37 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

(insn 192 191 193 23 (set (reg/f:SI 222)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 193 192 194 23 (set (reg:SI 122 [ D.5749 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 222)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 194 193 195 23 (parallel [
            (set (reg:SI 123 [ D.5750 ])
                (plus:SI (reg:SI 121 [ D.5748 ])
                    (reg:SI 122 [ D.5749 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

(insn 195 194 196 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 123 [ D.5750 ])
            (const_int 26 [0x1a]))) src/gui.c:787 -1
     (nil))

(jump_insn 196 195 197 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 261)
            (pc))) src/gui.c:787 -1
     (nil)
 -> 261)
;; End of basic block 23 -> ( 24 28)

;; Succ edge  24 (fallthru)
;; Succ edge  28

;; Start of basic block ( 23) -> 24
;; Pred edge  23 (fallthru)
(note 197 196 198 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 198 197 199 24 (set (reg/f:SI 223)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 199 198 200 24 (set (reg:SI 124 [ D.5753 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 223)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 200 199 201 24 (set (reg:SI 125 [ i.38 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 201 200 202 24 (parallel [
            (set (reg:SI 126 [ D.5755 ])
                (plus:SI (reg:SI 124 [ D.5753 ])
                    (reg:SI 125 [ i.38 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

(insn 202 201 203 24 (set (reg/f:SI 224)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 203 202 204 24 (set (reg:SI 127 [ D.5756 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 224)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 204 203 205 24 (parallel [
            (set (reg:SI 128 [ D.5757 ])
                (plus:SI (reg:SI 126 [ D.5755 ])
                    (reg:SI 127 [ D.5756 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

(insn 205 204 206 24 (set (reg/f:SI 225)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 206 205 207 24 (set (reg:SI 129 [ D.5758 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 128 [ D.5757 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 225))
                (const_int 4 [0x4])) [0 gameState_20(D)->zones[D.5757_94].nb_checkers+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 207 206 208 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 129 [ D.5758 ])
            (const_int 1 [0x1]))) src/gui.c:787 -1
     (nil))

(jump_insn 208 207 209 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 233)
            (pc))) src/gui.c:787 -1
     (nil)
 -> 233)
;; End of basic block 24 -> ( 27 25)

;; Succ edge  27
;; Succ edge  25 (fallthru)

;; Start of basic block ( 24) -> 25
;; Pred edge  24 (fallthru)
(note 209 208 210 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 211 25 (set (reg/f:SI 226)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 211 210 212 25 (set (reg:SI 130 [ D.5760 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 226)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 212 211 213 25 (set (reg:SI 131 [ i.39 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 213 212 214 25 (parallel [
            (set (reg:SI 132 [ D.5762 ])
                (plus:SI (reg:SI 130 [ D.5760 ])
                    (reg:SI 131 [ i.39 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

(insn 214 213 215 25 (set (reg/f:SI 227)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 215 214 216 25 (set (reg:SI 133 [ D.5763 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 227)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 216 215 217 25 (parallel [
            (set (reg:SI 134 [ D.5764 ])
                (plus:SI (reg:SI 132 [ D.5762 ])
                    (reg:SI 133 [ D.5763 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

(insn 217 216 218 25 (set (reg/f:SI 228)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 218 217 219 25 (set (reg:SI 135 [ D.5765 ])
        (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 134 [ D.5764 ])
                        (const_int 8 [0x8]))
                    (reg/f:SI 228))
                (const_int 4 [0x4])) [0 gameState_20(D)->zones[D.5764_100].nb_checkers+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 219 218 220 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135 [ D.5765 ])
            (const_int 0 [0]))) src/gui.c:787 -1
     (nil))

(jump_insn 220 219 221 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 233)
            (pc))) src/gui.c:787 -1
     (nil)
 -> 233)
;; End of basic block 25 -> ( 27 26)

;; Succ edge  27
;; Succ edge  26 (fallthru)

;; Start of basic block ( 25) -> 26
;; Pred edge  25 (fallthru)
(note 221 220 222 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 222 221 223 26 (set (reg/f:SI 229)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 223 222 224 26 (set (reg:SI 136 [ D.5767 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 229)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 224 223 225 26 (set (reg:SI 137 [ i.40 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 225 224 226 26 (parallel [
            (set (reg:SI 138 [ D.5769 ])
                (plus:SI (reg:SI 136 [ D.5767 ])
                    (reg:SI 137 [ i.40 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

(insn 226 225 227 26 (set (reg/f:SI 230)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 227 226 228 26 (set (reg:SI 139 [ D.5770 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 230)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 228 227 229 26 (parallel [
            (set (reg:SI 140 [ D.5771 ])
                (plus:SI (reg:SI 138 [ D.5769 ])
                    (reg:SI 139 [ D.5770 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:787 -1
     (nil))

(insn 229 228 230 26 (set (reg/f:SI 231)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 230 229 231 26 (set (reg:SI 141 [ D.5772 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 140 [ D.5771 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 231)) [0 gameState_20(D)->zones[D.5771_106].player+0 S4 A32])) src/gui.c:787 -1
     (nil))

(insn 231 230 232 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 141 [ D.5772 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:787 -1
     (nil))

(jump_insn 232 231 233 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 261)
            (pc))) src/gui.c:787 -1
     (nil)
 -> 261)
;; End of basic block 26 -> ( 27 28)

;; Succ edge  27 (fallthru)
;; Succ edge  28

;; Start of basic block ( 24 25 26) -> 27
;; Pred edge  24
;; Pred edge  25
;; Pred edge  26 (fallthru)
(code_label 233 232 234 27 160 "" [2 uses])

(note 234 233 235 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 235 234 236 27 (set (reg:SI 232)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:789 -1
     (nil))

(insn 236 235 237 27 (parallel [
            (set (reg:SI 142 [ D.5773 ])
                (plus:SI (reg:SI 232)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:789 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 237 236 238 27 (set (reg/f:SI 233)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:789 -1
     (nil))

(insn 238 237 239 27 (set (reg:SI 143 [ D.5774 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 233)
                (const_int 224 [0xe0])) [0 gameState_20(D)->die1+0 S4 A32])) src/gui.c:789 -1
     (nil))

(insn 239 238 240 27 (set (reg:SI 144 [ i.41 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:789 -1
     (nil))

(insn 240 239 241 27 (parallel [
            (set (reg:SI 145 [ D.5776 ])
                (plus:SI (reg:SI 143 [ D.5774 ])
                    (reg:SI 144 [ i.41 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:789 -1
     (nil))

(insn 241 240 242 27 (set (reg/f:SI 234)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:789 -1
     (nil))

(insn 242 241 243 27 (set (reg:SI 146 [ D.5777 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 234)
                (const_int 228 [0xe4])) [0 gameState_20(D)->die2+0 S4 A32])) src/gui.c:789 -1
     (nil))

(insn 243 242 244 27 (parallel [
            (set (reg:SI 147 [ D.5778 ])
                (plus:SI (reg:SI 145 [ D.5776 ])
                    (reg:SI 146 [ D.5777 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:789 -1
     (nil))

(insn 244 243 245 27 (parallel [
            (set (reg:SI 148 [ D.5779 ])
                (plus:SI (reg:SI 147 [ D.5778 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:789 -1
     (nil))

(insn 245 244 246 27 (set (reg/f:SI 149 [ D.5780 ])
        (symbol_ref/f:SI ("*.LC26") [flags 0x2]  <var_decl 0x409cd060 *.LC26>)) src/gui.c:789 -1
     (nil))

(insn 246 245 247 27 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 142 [ D.5773 ])) src/gui.c:789 -1
     (nil))

(insn 247 246 248 27 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 148 [ D.5779 ])) src/gui.c:789 -1
     (nil))

(insn 248 247 249 27 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 149 [ D.5780 ])) src/gui.c:789 -1
     (nil))

(call_insn 249 248 250 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x406b1b80 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:789 -1
     (nil)
    (nil))

(insn 250 249 251 27 (set (reg:SI 150 [ i.42 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:790 -1
     (nil))

(insn 251 250 252 27 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 150 [ i.42 ])) src/gui.c:790 -1
     (nil))

(insn 252 251 253 27 (set (reg/f:SI 235)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:790 -1
     (nil))

(insn 253 252 254 27 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 235)) src/gui.c:790 -1
     (nil))

(insn 254 253 255 27 (set (reg/f:SI 236)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:790 -1
     (nil))

(insn 255 254 256 27 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 236)) src/gui.c:790 -1
     (nil))

(call_insn 256 255 257 27 (call (mem:QI (symbol_ref:SI ("colorChecker") [flags 0x3]  <function_decl 0x4081a680 colorChecker>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:790 -1
     (nil)
    (nil))

(insn 257 256 258 27 (set (reg:SI 237)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])) src/gui.c:791 -1
     (nil))

(insn 258 257 259 27 (set (reg:SI 238)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) src/gui.c:791 -1
     (nil))

(insn 259 258 260 27 (set (mem/s/j:SI (plus:SI (plus:SI (mult:SI (reg:SI 237)
                        (const_int 4 [0x4]))
                    (reg/f:SI 54 virtual-stack-vars))
                (const_int -168 [0xffffffffffffff58])) [0 tab S4 A32])
        (reg:SI 238)) src/gui.c:791 -1
     (nil))

(insn 260 259 261 27 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 cpt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:792 -1
     (nil))
;; End of basic block 27 -> ( 28)

;; Succ edge  28 (fallthru)

;; Start of basic block ( 8 9 22 23 26 27) -> 28
;; Pred edge  8
;; Pred edge  9
;; Pred edge  22
;; Pred edge  23
;; Pred edge  26
;; Pred edge  27 (fallthru)
(code_label 261 260 262 28 155 "" [5 uses])

(note 262 261 263 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 263 262 264 28 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:769 -1
     (nil))
;; End of basic block 28 -> ( 29)

;; Succ edge  29 (fallthru)

;; Start of basic block ( 7 28) -> 29
;; Pred edge  7
;; Pred edge  28 (fallthru)
(code_label 264 263 265 29 154 "" [1 uses])

(note 265 264 267 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 267 265 268 29 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 23 [0x17]))) src/gui.c:769 -1
     (nil))

(jump_insn 268 267 269 29 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 266)
            (pc))) src/gui.c:769 -1
     (nil)
 -> 266)
;; End of basic block 29 -> ( 8 30)

;; Succ edge  8
;; Succ edge  30 (fallthru)

;; Start of basic block ( 29) -> 30
;; Pred edge  29 (fallthru)
(note 269 268 270 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 270 269 271 30 (set (reg/f:SI 239)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:796 -1
     (nil))

(insn 271 270 272 30 (set (reg/f:SI 151 [ D.5782 ])
        (mem/s/f/j:SI (reg/f:SI 239) [0 display_52(D)->screen+0 S4 A32])) src/gui.c:796 -1
     (nil))

(insn 272 271 273 30 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 151 [ D.5782 ])) src/gui.c:796 -1
     (nil))

(call_insn 273 272 463 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_Flip") [flags 0x41]  <function_decl 0x4079fa00 SDL_Flip>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:796 -1
     (nil)
    (nil))
;; End of basic block 30 -> ( 31)

;; Succ edge  31 (fallthru)

;; Start of basic block ( 30 52) -> 31
;; Pred edge  30 (fallthru)
;; Pred edge  52
(code_label 463 273 274 31 171 "" [1 uses])

(note 274 463 275 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 275 274 276 31 (parallel [
            (set (reg:SI 240)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:799 -1
     (nil))

(insn 276 275 277 31 (set (mem/f/i:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 240)) src/gui.c:799 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -56 [0xffffffffffffffc8]))
        (nil)))

(call_insn 277 276 278 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_WaitEvent") [flags 0x41]  <function_decl 0x407d8f80 SDL_WaitEvent>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:799 -1
     (nil)
    (nil))

(insn 278 277 279 31 (set (reg:QI 152 [ D.5783 ])
        (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 event.type+0 S1 A32])) src/gui.c:804 -1
     (nil))

(insn 279 278 280 31 (parallel [
            (set (reg:SI 153 [ D.5784 ])
                (zero_extend:SI (reg:QI 152 [ D.5783 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:804 -1
     (nil))

(insn 280 279 281 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153 [ D.5784 ])
            (const_int 6 [0x6]))) src/gui.c:804 -1
     (nil))

(jump_insn 281 280 483 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 299)
            (pc))) src/gui.c:804 -1
     (nil)
 -> 299)
;; End of basic block 31 -> ( 37 32)

;; Succ edge  37
;; Succ edge  32 (fallthru)

;; Start of basic block ( 31) -> 32
;; Pred edge  31 (fallthru)
(note 483 281 282 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 282 483 283 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153 [ D.5784 ])
            (const_int 12 [0xc]))) src/gui.c:804 -1
     (nil))

(jump_insn 283 282 484 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 286)
            (pc))) src/gui.c:804 -1
     (nil)
 -> 286)
;; End of basic block 32 -> ( 34 33)

;; Succ edge  34
;; Succ edge  33 (fallthru)

;; Start of basic block ( 32) -> 33
;; Pred edge  32 (fallthru)
(note 484 283 284 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(jump_insn 284 484 285 33 (set (pc)
        (label_ref 461)) src/gui.c:804 -1
     (nil)
 -> 461)
;; End of basic block 33 -> ( 52)

;; Succ edge  52

(barrier 285 284 286)

;; Start of basic block ( 32) -> 34
;; Pred edge  32
(code_label 286 285 287 34 164 "" [1 uses])

(note 287 286 288 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 288 287 289 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 posDepartSelected+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:807 -1
     (nil))

(jump_insn 289 288 290 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 294)
            (pc))) src/gui.c:807 -1
     (nil)
 -> 294)
;; End of basic block 34 -> ( 35 36)

;; Succ edge  35 (fallthru)
;; Succ edge  36

;; Start of basic block ( 34) -> 35
;; Pred edge  34 (fallthru)
(note 290 289 291 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 291 290 292 35 (set (reg/f:SI 241)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arriveesValides+0 S4 A32])) src/gui.c:808 -1
     (nil))

(insn 292 291 293 35 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 241)) src/gui.c:808 -1
     (nil))

(call_insn 293 292 294 35 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:808 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
;; End of basic block 35 -> ( 36)

;; Succ edge  36 (fallthru)

;; Start of basic block ( 34 35) -> 36
;; Pred edge  34
;; Pred edge  35 (fallthru)
(code_label 294 293 295 36 165 "" [1 uses])

(note 295 294 296 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 296 295 297 36 (set (reg:SI 59 [ D.5787 ])
        (const_int 1 [0x1])) src/gui.c:809 -1
     (nil))

(jump_insn 297 296 298 36 (set (pc)
        (label_ref 472)) src/gui.c:809 -1
     (nil)
 -> 472)
;; End of basic block 36 -> ( 54)

;; Succ edge  54

(barrier 298 297 299)

;; Start of basic block ( 31) -> 37
;; Pred edge  31
(code_label 299 298 300 37 163 "" [1 uses])

(note 300 299 301 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 301 300 302 37 (set (reg:QI 154 [ D.5788 ])
        (mem/s/j/c:QI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -54 [0xffffffffffffffca])) [0 event.button.button+0 S1 A16])) src/gui.c:813 -1
     (nil))

(insn 302 301 303 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 154 [ D.5788 ])
            (const_int 1 [0x1]))) src/gui.c:813 -1
     (nil))

(jump_insn 303 302 304 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 459)
            (pc))) src/gui.c:813 -1
     (nil)
 -> 459)
;; End of basic block 37 -> ( 38 51)

;; Succ edge  38 (fallthru)
;; Succ edge  51

;; Start of basic block ( 37) -> 38
;; Pred edge  37 (fallthru)
(note 304 303 305 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 305 304 306 38 (set (reg:HI 155 [ D.5791 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -50 [0xffffffffffffffce])) [0 event.button.y+0 S2 A16])) src/gui.c:816 -1
     (nil))

(insn 306 305 307 38 (set (reg:SI 156 [ D.5792 ])
        (zero_extend:SI (reg:HI 155 [ D.5791 ]))) src/gui.c:816 -1
     (nil))

(insn 307 306 308 38 (set (reg:HI 157 [ D.5793 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 event.button.x+0 S2 A32])) src/gui.c:816 -1
     (nil))

(insn 308 307 309 38 (set (reg:SI 158 [ D.5794 ])
        (zero_extend:SI (reg:HI 157 [ D.5793 ]))) src/gui.c:816 -1
     (nil))

(insn 309 308 310 38 (parallel [
            (set (reg:SI 242)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:816 -1
     (nil))

(insn 310 309 311 38 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 242)) src/gui.c:816 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -28 [0xffffffffffffffe4]))
        (nil)))

(insn 311 310 312 38 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 156 [ D.5792 ])) src/gui.c:816 -1
     (nil))

(insn 312 311 313 38 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 158 [ D.5794 ])) src/gui.c:816 -1
     (nil))

(call_insn 313 312 314 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("CheckerWithScreenPosition") [flags 0x3]  <function_decl 0x4081a600 CheckerWithScreenPosition>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:816 -1
     (nil)
    (nil))

(insn 314 313 315 38 (set (reg:SI 159 [ D.5795 ])
        (reg:SI 0 ax)) src/gui.c:816 -1
     (nil))

(insn 315 314 316 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 159 [ D.5795 ])
            (const_int 0 [0]))) src/gui.c:816 -1
     (nil))

(jump_insn 316 315 317 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 343)
            (pc))) src/gui.c:816 -1
     (nil)
 -> 343)
;; End of basic block 38 -> ( 39 43)

;; Succ edge  39 (fallthru)
;; Succ edge  43

;; Start of basic block ( 38) -> 39
;; Pred edge  38 (fallthru)
(note 317 316 318 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 318 317 319 39 (set (reg:SI 160 [ posDepart.43 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 posDepart+0 S4 A32])) src/gui.c:816 -1
     (nil))

(insn 319 318 320 39 (parallel [
            (set (reg:SI 243)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:816 -1
     (nil))

(insn 320 319 321 39 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 243)) src/gui.c:816 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -168 [0xffffffffffffff58]))
        (nil)))

(insn 321 320 322 39 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 160 [ posDepart.43 ])) src/gui.c:816 -1
     (nil))

(call_insn 322 321 323 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("inTab") [flags 0x3]  <function_decl 0x4081a800 inTab>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:816 -1
     (nil)
    (nil))

(insn 323 322 324 39 (set (reg:SI 161 [ D.5799 ])
        (reg:SI 0 ax)) src/gui.c:816 -1
     (nil))

(insn 324 323 325 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.5799 ])
            (const_int 0 [0]))) src/gui.c:816 -1
     (nil))

(jump_insn 325 324 326 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 343)
            (pc))) src/gui.c:816 -1
     (nil)
 -> 343)
;; End of basic block 39 -> ( 40 43)

;; Succ edge  40 (fallthru)
;; Succ edge  43

;; Start of basic block ( 39) -> 40
;; Pred edge  39 (fallthru)
(note 326 325 327 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 327 326 328 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 posDepartSelected+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:816 -1
     (nil))

(jump_insn 328 327 329 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 343)
            (pc))) src/gui.c:816 -1
     (nil)
 -> 343)
;; End of basic block 40 -> ( 41 43)

;; Succ edge  41 (fallthru)
;; Succ edge  43

;; Start of basic block ( 40) -> 41
;; Pred edge  40 (fallthru)
(note 329 328 330 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 330 329 331 41 (set (reg:SI 162 [ posDepart.44 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 posDepart+0 S4 A32])) src/gui.c:816 -1
     (nil))

(insn 331 330 332 41 (set (reg/f:SI 244)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arriveesValides+0 S4 A32])) src/gui.c:816 -1
     (nil))

(insn 332 331 333 41 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 244)) src/gui.c:816 -1
     (nil))

(insn 333 332 334 41 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 162 [ posDepart.44 ])) src/gui.c:816 -1
     (nil))

(call_insn 334 333 335 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("inTab") [flags 0x3]  <function_decl 0x4081a800 inTab>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:816 -1
     (nil)
    (nil))

(insn 335 334 336 41 (set (reg:SI 163 [ D.5805 ])
        (reg:SI 0 ax)) src/gui.c:816 -1
     (nil))

(insn 336 335 337 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163 [ D.5805 ])
            (const_int 0 [0]))) src/gui.c:816 -1
     (nil))

(jump_insn 337 336 338 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 343)
            (pc))) src/gui.c:816 -1
     (nil)
 -> 343)
;; End of basic block 41 -> ( 42 43)

;; Succ edge  42 (fallthru)
;; Succ edge  43

;; Start of basic block ( 41) -> 42
;; Pred edge  41 (fallthru)
(note 338 337 339 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 339 338 340 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 posDepartSelected+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:818 -1
     (nil))

(insn 340 339 341 42 (set (reg:QI 245)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) src/gui.c:818 -1
     (nil))

(insn 341 340 342 42 (parallel [
            (set (reg:SI 246)
                (zero_extend:SI (reg:QI 245)))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:818 -1
     (nil))

(insn 342 341 343 42 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posDepartSelected+0 S4 A32])
        (reg:SI 246)) src/gui.c:818 -1
     (nil))
;; End of basic block 42 -> ( 43)

;; Succ edge  43 (fallthru)

;; Start of basic block ( 38 39 40 41 42) -> 43
;; Pred edge  38
;; Pred edge  39
;; Pred edge  40
;; Pred edge  41
;; Pred edge  42 (fallthru)
(code_label 343 342 344 43 168 "" [4 uses])

(note 344 343 345 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 345 344 346 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 posDepartSelected+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:821 -1
     (nil))

(jump_insn 346 345 347 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 389)
            (pc))) src/gui.c:821 -1
     (nil)
 -> 389)
;; End of basic block 43 -> ( 44 47)

;; Succ edge  44 (fallthru)
;; Succ edge  47

;; Start of basic block ( 43) -> 44
;; Pred edge  43 (fallthru)
(note 347 346 348 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 348 347 349 44 (set (reg:HI 164 [ D.5810 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -50 [0xffffffffffffffce])) [0 event.button.y+0 S2 A16])) src/gui.c:823 -1
     (nil))

(insn 349 348 350 44 (set (reg:SI 165 [ D.5811 ])
        (zero_extend:SI (reg:HI 164 [ D.5810 ]))) src/gui.c:823 -1
     (nil))

(insn 350 349 351 44 (set (reg:HI 166 [ D.5812 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 event.button.x+0 S2 A32])) src/gui.c:823 -1
     (nil))

(insn 351 350 352 44 (set (reg:SI 167 [ D.5813 ])
        (zero_extend:SI (reg:HI 166 [ D.5812 ]))) src/gui.c:823 -1
     (nil))

(insn 352 351 353 44 (parallel [
            (set (reg:SI 247)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:823 -1
     (nil))

(insn 353 352 354 44 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 247)) src/gui.c:823 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -28 [0xffffffffffffffe4]))
        (nil)))

(insn 354 353 355 44 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 165 [ D.5811 ])) src/gui.c:823 -1
     (nil))

(insn 355 354 356 44 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 167 [ D.5813 ])) src/gui.c:823 -1
     (nil))

(call_insn 356 355 357 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("CheckerWithScreenPosition") [flags 0x3]  <function_decl 0x4081a600 CheckerWithScreenPosition>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:823 -1
     (nil)
    (nil))

(insn 357 356 358 44 (set (reg:SI 168 [ D.5814 ])
        (reg:SI 0 ax)) src/gui.c:823 -1
     (nil))

(insn 358 357 359 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 168 [ D.5814 ])
            (const_int 0 [0]))) src/gui.c:823 -1
     (nil))

(jump_insn 359 358 360 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 459)
            (pc))) src/gui.c:823 -1
     (nil)
 -> 459)
;; End of basic block 44 -> ( 45 51)

;; Succ edge  45 (fallthru)
;; Succ edge  51

;; Start of basic block ( 44) -> 45
;; Pred edge  44 (fallthru)
(note 360 359 361 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 361 360 362 45 (set (reg:SI 169 [ posDepart.45 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 posDepart+0 S4 A32])) src/gui.c:825 -1
     (nil))

(insn 362 361 363 45 (parallel [
            (set (reg:SI 248)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:825 -1
     (nil))

(insn 363 362 364 45 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 248)) src/gui.c:825 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -168 [0xffffffffffffff58]))
        (nil)))

(insn 364 363 365 45 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 169 [ posDepart.45 ])) src/gui.c:825 -1
     (nil))

(call_insn 365 364 366 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("inTab") [flags 0x3]  <function_decl 0x4081a800 inTab>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:825 -1
     (nil)
    (nil))

(insn 366 365 367 45 (set (reg:SI 170 [ D.5818 ])
        (reg:SI 0 ax)) src/gui.c:825 -1
     (nil))

(insn 367 366 368 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 170 [ D.5818 ])
            (const_int 0 [0]))) src/gui.c:825 -1
     (nil))

(jump_insn 368 367 369 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 459)
            (pc))) src/gui.c:825 -1
     (nil)
 -> 459)
;; End of basic block 45 -> ( 46 51)

;; Succ edge  46 (fallthru)
;; Succ edge  51

;; Start of basic block ( 45) -> 46
;; Pred edge  45 (fallthru)
(note 369 368 370 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 370 369 371 46 (set (reg:SI 171 [ posDepart.46 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 posDepart+0 S4 A32])) src/gui.c:827 -1
     (nil))

(insn 371 370 372 46 (set (reg/f:SI 249)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 game+0 S4 A32])) src/gui.c:827 -1
     (nil))

(insn 372 371 373 46 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg/f:SI 249)) src/gui.c:827 -1
     (nil))

(insn 373 372 374 46 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 171 [ posDepart.46 ])) src/gui.c:827 -1
     (nil))

(insn 374 373 375 46 (set (reg:SI 250)
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 player+0 S4 A32])) src/gui.c:827 -1
     (nil))

(insn 375 374 376 46 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 250)) src/gui.c:827 -1
     (nil))

(insn 376 375 377 46 (set (reg/f:SI 251)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:827 -1
     (nil))

(insn 377 376 378 46 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 251)) src/gui.c:827 -1
     (nil))

(insn 378 377 379 46 (set (reg/f:SI 252)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:827 -1
     (nil))

(insn 379 378 380 46 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 252)) src/gui.c:827 -1
     (nil))

(call_insn 380 379 381 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("Display_Arrow_Possibilities") [flags 0x3]  <function_decl 0x4081a480 Display_Arrow_Possibilities>) [0 S1 A8])
            (const_int 20 [0x14]))) src/gui.c:827 -1
     (nil)
    (nil))

(insn 381 380 382 46 (set (reg:SI 253)
        (reg:SI 0 ax)) src/gui.c:827 -1
     (nil))

(insn 382 381 383 46 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arriveesValides+0 S4 A32])
        (reg:SI 253)) src/gui.c:827 -1
     (nil))

(insn 383 382 384 46 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posDepartSelected+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:828 -1
     (nil))

(insn 384 383 385 46 (set (reg:SI 172 [ posDepart.47 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 posDepart+0 S4 A32])) src/gui.c:829 -1
     (nil))

(insn 385 384 386 46 (parallel [
            (set (reg:SI 173 [ D.5823 ])
                (plus:SI (reg:SI 172 [ posDepart.47 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:829 -1
     (nil))

(insn 386 385 387 46 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 mouvement.src_point+0 S4 A32])
        (reg:SI 173 [ D.5823 ])) src/gui.c:829 -1
     (nil))

(jump_insn 387 386 388 46 (set (pc)
        (label_ref 459)) src/gui.c:829 -1
     (nil)
 -> 459)
;; End of basic block 46 -> ( 51)

;; Succ edge  51

(barrier 388 387 389)

;; Start of basic block ( 43) -> 47
;; Pred edge  43
(code_label 389 388 390 47 169 "" [1 uses])

(note 390 389 391 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 391 390 392 47 (set (reg:HI 174 [ D.5825 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -50 [0xffffffffffffffce])) [0 event.button.y+0 S2 A16])) src/gui.c:835 -1
     (nil))

(insn 392 391 393 47 (set (reg:SI 175 [ D.5826 ])
        (zero_extend:SI (reg:HI 174 [ D.5825 ]))) src/gui.c:835 -1
     (nil))

(insn 393 392 394 47 (set (reg:HI 176 [ D.5827 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 event.button.x+0 S2 A32])) src/gui.c:835 -1
     (nil))

(insn 394 393 395 47 (set (reg:SI 177 [ D.5828 ])
        (zero_extend:SI (reg:HI 176 [ D.5827 ]))) src/gui.c:835 -1
     (nil))

(insn 395 394 396 47 (parallel [
            (set (reg:SI 254)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:835 -1
     (nil))

(insn 396 395 397 47 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 254)) src/gui.c:835 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -24 [0xffffffffffffffe8]))
        (nil)))

(insn 397 396 398 47 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 175 [ D.5826 ])) src/gui.c:835 -1
     (nil))

(insn 398 397 399 47 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 177 [ D.5828 ])) src/gui.c:835 -1
     (nil))

(call_insn 399 398 400 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("CheckerWithScreenPosition") [flags 0x3]  <function_decl 0x4081a600 CheckerWithScreenPosition>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:835 -1
     (nil)
    (nil))

(insn 400 399 401 47 (set (reg:SI 178 [ D.5829 ])
        (reg:SI 0 ax)) src/gui.c:835 -1
     (nil))

(insn 401 400 402 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 178 [ D.5829 ])
            (const_int 0 [0]))) src/gui.c:835 -1
     (nil))

(jump_insn 402 401 403 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 435)
            (pc))) src/gui.c:835 -1
     (nil)
 -> 435)
;; End of basic block 47 -> ( 48 50)

;; Succ edge  48 (fallthru)
;; Succ edge  50

;; Start of basic block ( 47) -> 48
;; Pred edge  47 (fallthru)
(note 403 402 404 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 404 403 405 48 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC27") [flags 0x2]  <var_decl 0x409cd0c0 *.LC27>)) src/gui.c:837 -1
     (nil))

(call_insn 405 404 406 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0x406b1e00 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:837 -1
     (nil)
    (nil))

(insn 406 405 407 48 (set (reg:SI 179 [ posArrivee.48 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 posArrivee+0 S4 A32])) src/gui.c:838 -1
     (nil))

(insn 407 406 408 48 (set (reg/f:SI 255)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arriveesValides+0 S4 A32])) src/gui.c:838 -1
     (nil))

(insn 408 407 409 48 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 255)) src/gui.c:838 -1
     (nil))

(insn 409 408 410 48 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 179 [ posArrivee.48 ])) src/gui.c:838 -1
     (nil))

(call_insn 410 409 411 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("inTab") [flags 0x3]  <function_decl 0x4081a800 inTab>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:838 -1
     (nil)
    (nil))

(insn 411 410 412 48 (set (reg:SI 180 [ D.5833 ])
        (reg:SI 0 ax)) src/gui.c:838 -1
     (nil))

(insn 412 411 413 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 180 [ D.5833 ])
            (const_int 0 [0]))) src/gui.c:838 -1
     (nil))

(jump_insn 413 412 414 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 459)
            (pc))) src/gui.c:838 -1
     (nil)
 -> 459)
;; End of basic block 48 -> ( 49 51)

;; Succ edge  49 (fallthru)
;; Succ edge  51

;; Start of basic block ( 48) -> 49
;; Pred edge  48 (fallthru)
(note 414 413 415 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 415 414 416 49 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC28") [flags 0x2]  <var_decl 0x409cd120 *.LC28>)) src/gui.c:840 -1
     (nil))

(call_insn 416 415 417 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0x406b1e00 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:840 -1
     (nil)
    (nil))

(insn 417 416 418 49 (set (reg:SI 181 [ posArrivee.49 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 posArrivee+0 S4 A32])) src/gui.c:841 -1
     (nil))

(insn 418 417 419 49 (parallel [
            (set (reg:SI 182 [ D.5837 ])
                (plus:SI (reg:SI 181 [ posArrivee.49 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:841 -1
     (nil))

(insn 419 418 420 49 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 mouvement.dest_point+0 S4 A32])
        (reg:SI 182 [ D.5837 ])) src/gui.c:841 -1
     (nil))

(insn 420 419 421 49 (set (reg/f:SI 256)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arriveesValides+0 S4 A32])) src/gui.c:842 -1
     (nil))

(insn 421 420 422 49 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 256)) src/gui.c:842 -1
     (nil))

(call_insn 422 421 423 49 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:842 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 423 422 424 49 (set (reg/f:SI 257)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 game+0 S4 A32])) src/gui.c:843 -1
     (nil))

(insn 424 423 425 49 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 257)) src/gui.c:843 -1
     (nil))

(insn 425 424 426 49 (parallel [
            (set (reg:SI 258)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:843 -1
     (nil))

(insn 426 425 427 49 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 258)) src/gui.c:843 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -36 [0xffffffffffffffdc]))
        (nil)))

(insn 427 426 428 49 (set (reg/f:SI 259)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:843 -1
     (nil))

(insn 428 427 429 49 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 259)) src/gui.c:843 -1
     (nil))

(insn 429 428 430 49 (set (reg/f:SI 260)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:843 -1
     (nil))

(insn 430 429 431 49 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 260)) src/gui.c:843 -1
     (nil))

(call_insn 431 430 432 49 (call (mem:QI (symbol_ref:SI ("Checker_Move") [flags 0x3]  <function_decl 0x4081a280 Checker_Move>) [0 S1 A8])
        (const_int 16 [0x10])) src/gui.c:843 -1
     (nil)
    (nil))

(insn 432 431 433 49 (set (reg:SI 59 [ D.5787 ])
        (const_int 0 [0])) src/gui.c:844 -1
     (nil))

(jump_insn 433 432 434 49 (set (pc)
        (label_ref 472)) src/gui.c:844 -1
     (nil)
 -> 472)
;; End of basic block 49 -> ( 54)

;; Succ edge  54

(barrier 434 433 435)

;; Start of basic block ( 47) -> 50
;; Pred edge  47
(code_label 435 434 436 50 170 "" [1 uses])

(note 436 435 437 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 437 436 438 50 (set (reg/f:SI 261)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arriveesValides+0 S4 A32])) src/gui.c:849 -1
     (nil))

(insn 438 437 439 50 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 261)) src/gui.c:849 -1
     (nil))

(call_insn 439 438 440 50 (call (mem:QI (symbol_ref:SI ("free") [flags 0x41]  <function_decl 0x406bdf00 free>) [0 S1 A8])
        (const_int 4 [0x4])) src/gui.c:849 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 440 439 441 50 (set (reg/f:SI 262)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 game+0 S4 A32])) src/gui.c:850 -1
     (nil))

(insn 441 440 442 50 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 262)) src/gui.c:850 -1
     (nil))

(insn 442 441 443 50 (set (reg/f:SI 263)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:850 -1
     (nil))

(insn 443 442 444 50 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 263)) src/gui.c:850 -1
     (nil))

(insn 444 443 445 50 (set (reg/f:SI 264)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:850 -1
     (nil))

(insn 445 444 446 50 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 264)) src/gui.c:850 -1
     (nil))

(call_insn 446 445 447 50 (call (mem:QI (symbol_ref:SI ("Display_RefreshGameBoard") [flags 0x3]  <function_decl 0x4081a780 Display_RefreshGameBoard>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:850 -1
     (nil)
    (nil))

(insn 447 446 448 50 (set (reg/f:SI 265)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 game+0 S4 A32])) src/gui.c:851 -1
     (nil))

(insn 448 447 449 50 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 265)) src/gui.c:851 -1
     (nil))

(insn 449 448 450 50 (set (reg:SI 266)
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 8 [0x8])) [0 player+0 S4 A32])) src/gui.c:851 -1
     (nil))

(insn 450 449 451 50 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 266)) src/gui.c:851 -1
     (nil))

(insn 451 450 452 50 (set (reg/f:SI 267)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:851 -1
     (nil))

(insn 452 451 453 50 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 267)) src/gui.c:851 -1
     (nil))

(insn 453 452 454 50 (set (reg/f:SI 268)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:851 -1
     (nil))

(insn 454 453 455 50 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 268)) src/gui.c:851 -1
     (nil))

(call_insn 455 454 456 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("Display_CheckersPossibilities") [flags 0x3]  <function_decl 0x4081a580 Display_CheckersPossibilities>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:851 -1
     (nil)
    (nil))

(insn 456 455 457 50 (set (reg:SI 59 [ D.5787 ])
        (reg:SI 0 ax)) src/gui.c:851 -1
     (nil))

(jump_insn 457 456 458 50 (set (pc)
        (label_ref 472)) src/gui.c:851 -1
     (nil)
 -> 472)
;; End of basic block 50 -> ( 54)

;; Succ edge  54

(barrier 458 457 459)

;; Start of basic block ( 37 45 48 44 46) -> 51
;; Pred edge  37
;; Pred edge  45
;; Pred edge  48
;; Pred edge  44
;; Pred edge  46
(code_label 459 458 460 51 167 "" [5 uses])

(note 460 459 461 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 51 -> ( 52)

;; Succ edge  52 (fallthru)

;; Start of basic block ( 33 51) -> 52
;; Pred edge  33
;; Pred edge  51 (fallthru)
(code_label 461 460 462 52 162 "" [1 uses])

(note 462 461 464 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(jump_insn 464 462 465 52 (set (pc)
        (label_ref 463)) src/gui.c:857 -1
     (nil)
 -> 463)
;; End of basic block 52 -> ( 31)

;; Succ edge  31

(barrier 465 464 466)

;; Start of basic block ( 6) -> 53
;; Pred edge  6
(code_label 466 465 467 53 153 "" [1 uses])

(note 467 466 468 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 468 467 469 53 (clobber (reg/i:SI 0 ax)) src/gui.c:859 -1
     (nil))

(insn 469 468 470 53 (clobber (reg:SI 183 [ <retval> ])) src/gui.c:859 -1
     (nil))

(jump_insn 470 469 471 53 (set (pc)
        (label_ref 477)) src/gui.c:859 -1
     (nil)
 -> 477)
;; End of basic block 53 -> ( 56)

;; Succ edge  56

(barrier 471 470 472)

;; Start of basic block ( 36 49 50) -> 54
;; Pred edge  36
;; Pred edge  49
;; Pred edge  50
(code_label 472 471 473 54 166 "" [3 uses])

(note 473 472 474 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 474 473 475 54 (set (reg:SI 183 [ <retval> ])
        (reg:SI 59 [ D.5787 ])) src/gui.c:859 -1
     (nil))

(jump_insn 475 474 476 54 (set (pc)
        (label_ref 477)) src/gui.c:859 -1
     (nil)
 -> 477)
;; End of basic block 54 -> ( 56)

;; Succ edge  56

(barrier 476 475 482)

;; Start of basic block () -> 55
(note 482 476 479 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 479 482 480 55 (clobber (reg/i:SI 0 ax)) src/gui.c:859 -1
     (nil))

(insn 480 479 477 55 (clobber (reg:SI 183 [ <retval> ])) src/gui.c:859 -1
     (nil))
;; End of basic block 55 -> ( 56)

;; Succ edge  56 (fallthru)

;; Start of basic block ( 53 54 55) -> 56
;; Pred edge  53
;; Pred edge  54
;; Pred edge  55 (fallthru)
(code_label 477 480 485 56 150 "" [2 uses])

(note 485 477 478 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 478 485 481 56 (set (reg/i:SI 0 ax)
        (reg:SI 183 [ <retval> ])) src/gui.c:859 -1
     (nil))

(insn 481 478 0 56 (use (reg/i:SI 0 ax)) src/gui.c:859 -1
     (nil))
;; End of basic block 56 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Display_Arrow_Possibilities (Display_Arrow_Possibilities)

Display_Arrow_Possibilities (struct SDisplay * display, struct SGameState * gameState, EPlayer player, EPosition depart, struct SGame * game)
{
  struct SZone ArriveeAvecDE;
  int i;
  int nbpossibilite;
  unsigned int arrowWithDie2;
  unsigned int arrowWithDie1;
  struct SZone ArriveeAvecDE1ETDE2;
  struct SZone ArriveeAvecDE2;
  struct SZone ArriveeAvecDE1;
  int i;
  int sens;
  int cpt;
  int * arriveesPossibles;
  int * D.5659;
  struct SDL_Surface * D.5658;
  int D.5657;
  unsigned int D.5656;
  unsigned int D.5655;
  unsigned int i.21;
  unsigned int D.5653;
  unsigned int sens.20;
  unsigned int D.5651;
  int * D.5650;
  unsigned int D.5649;
  unsigned int cpt.19;
  unsigned int D.5647;
  unsigned int D.5646;
  unsigned int i.18;
  unsigned int D.5644;
  unsigned int sens.17;
  unsigned int D.5642;
  unsigned int D.5639;
  EPlayer D.5637;
  unsigned int D.5635;
  EPlayer D.5633;
  unsigned int D.5630;
  unsigned int D.5629;
  unsigned int i.16;
  unsigned int D.5627;
  unsigned int sens.15;
  unsigned int D.5625;
  int D.5623;
  unsigned int D.5622;
  unsigned int D.5621;
  unsigned int sens.14;
  unsigned int D.5619;
  unsigned int D.5618;
  unsigned int D.5617;
  int * D.5616;
  unsigned int D.5615;
  unsigned int cpt.13;
  unsigned int D.5613;
  unsigned int D.5612;
  unsigned int sens.12;
  unsigned int D.5610;
  unsigned int D.5609;
  unsigned int D.5608;
  unsigned int D.5606;
  EPlayer D.5604;
  unsigned int D.5602;
  EPlayer D.5600;
  int D.5596;
  unsigned int D.5595;
  unsigned int D.5594;
  unsigned int sens.11;
  unsigned int D.5592;
  int * D.5591;
  unsigned int D.5590;
  unsigned int cpt.10;
  unsigned int D.5588;
  unsigned int D.5587;
  unsigned int sens.9;
  unsigned int D.5585;
  unsigned int D.5584;
  EPlayer D.5582;
  unsigned int D.5580;
  EPlayer D.5578;
  int D.5575;
  unsigned int D.5574;
  unsigned int D.5573;
  unsigned int sens.8;
  unsigned int D.5571;
  int * D.5570;
  unsigned int D.5569;
  unsigned int cpt.7;
  unsigned int D.5567;
  unsigned int D.5566;
  unsigned int sens.6;
  unsigned int D.5564;
  unsigned int D.5563;
  EPlayer D.5561;
  unsigned int D.5559;
  EPlayer D.5557;
  unsigned int D.5554;
  unsigned int D.5553;
  unsigned int sens.5;
  unsigned int D.5551;
  unsigned int D.5550;
  unsigned int D.5549;
  unsigned int D.5548;
  unsigned int D.5547;
  unsigned int sens.4;
  unsigned int D.5545;
  unsigned int D.5544;
  unsigned int D.5543;
  unsigned int sens.3;
  unsigned int D.5541;
  unsigned int D.5538;
  unsigned int D.5537;
  const char * restrict D.5536;
  int * D.5533;
  unsigned int D.5532;
  unsigned int i.2;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  Display_RefreshGameBoard (display_12(D), gameState_13(D), game_14(D));
  colorChecker (display_12(D), gameState_13(D), depart_15(D));
  arriveesPossibles_16 = malloc (112);
  cpt_17 = 0;
  i_18 = 0;
  goto <bb 4>;
  # SUCC: 4 (fallthru)

  # BLOCK 3
  # PRED: 4 (true)
  i.2_19 = (unsigned int) i_5;
  D.5532_20 = i.2_19 * 4;
  D.5533_21 = arriveesPossibles_16 + D.5532_20;
  *D.5533_21 = -1;
  i_22 = i_5 + 1;
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (fallthru) 3 (fallthru)
  # i_5 = PHI <i_18(2), i_22(3)>
  if (i_5 <= 27)
    goto <bb 3>;
  else
    goto <bb 5>;
  # SUCC: 3 (true) 5 (false)

  # BLOCK 5
  # PRED: 4 (false)
  sens_23 = 1;
  if (player_24(D) == 1)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 (true) 7 (false)

  # BLOCK 6
  # PRED: 5 (true)
  sens_25 = -1;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 5 (false) 6 (fallthru)
  # sens_6 = PHI <sens_23(5), sens_25(6)>
  D.5536_26 = (const char * restrict) &"sens = %d\n"[0];
  printf (D.5536_26, sens_6);
  D.5537_27 = gameState_13(D)->die1;
  D.5538_28 = gameState_13(D)->die2;
  if (D.5537_27 != D.5538_28)
    goto <bb 8>;
  else
    goto <bb 25>;
  # SUCC: 8 (true) 25 (false)

  # BLOCK 8
  # PRED: 7 (true)
  D.5541_29 = gameState_13(D)->die1;
  sens.3_30 = (unsigned int) sens_6;
  D.5543_31 = D.5541_29 * sens.3_30;
  D.5544_32 = D.5543_31 + depart_15(D);
  ArriveeAvecDE1 = gameState_13(D)->zones[D.5544_32];
  D.5545_33 = gameState_13(D)->die2;
  sens.4_34 = (unsigned int) sens_6;
  D.5547_35 = D.5545_33 * sens.4_34;
  D.5548_36 = D.5547_35 + depart_15(D);
  ArriveeAvecDE2 = gameState_13(D)->zones[D.5548_36];
  D.5549_37 = gameState_13(D)->die1;
  D.5550_38 = gameState_13(D)->die2;
  D.5551_39 = D.5549_37 + D.5550_38;
  sens.5_40 = (unsigned int) sens_6;
  D.5553_41 = D.5551_39 * sens.5_40;
  D.5554_42 = D.5553_41 + depart_15(D);
  ArriveeAvecDE1ETDE2 = gameState_13(D)->zones[D.5554_42];
  arrowWithDie1_43 = 0;
  arrowWithDie2_44 = 0;
  D.5557_45 = ArriveeAvecDE1.player;
  if (D.5557_45 == player_24(D))
    goto <bb 12>;
  else
    goto <bb 9>;
  # SUCC: 12 (true) 9 (false)

  # BLOCK 9
  # PRED: 8 (false)
  D.5559_46 = ArriveeAvecDE1.nb_checkers;
  if (D.5559_46 == 0)
    goto <bb 12>;
  else
    goto <bb 10>;
  # SUCC: 12 (true) 10 (false)

  # BLOCK 10
  # PRED: 9 (false)
  D.5561_47 = ArriveeAvecDE1.player;
  if (D.5561_47 != player_24(D))
    goto <bb 11>;
  else
    goto <bb 13>;
  # SUCC: 11 (true) 13 (false)

  # BLOCK 11
  # PRED: 10 (true)
  D.5563_48 = ArriveeAvecDE1.nb_checkers;
  if (D.5563_48 == 1)
    goto <bb 12>;
  else
    goto <bb 13>;
  # SUCC: 12 (true) 13 (false)

  # BLOCK 12
  # PRED: 8 (true) 9 (true) 11 (true)
  D.5564_49 = gameState_13(D)->die1;
  sens.6_50 = (unsigned int) sens_6;
  D.5566_51 = D.5564_49 * sens.6_50;
  D.5567_52 = D.5566_51 + depart_15(D);
  Draw_Selected_Arrow (display_12(D), D.5567_52);
  arrowWithDie1_53 = 1;
  cpt.7_54 = (unsigned int) cpt_17;
  D.5569_55 = cpt.7_54 * 4;
  D.5570_56 = arriveesPossibles_16 + D.5569_55;
  D.5571_57 = gameState_13(D)->die1;
  sens.8_58 = (unsigned int) sens_6;
  D.5573_59 = D.5571_57 * sens.8_58;
  D.5574_60 = D.5573_59 + depart_15(D);
  D.5575_61 = (int) D.5574_60;
  *D.5570_56 = D.5575_61;
  cpt_62 = cpt_17 + 1;
  # SUCC: 13 (fallthru)

  # BLOCK 13
  # PRED: 10 (false) 11 (false) 12 (fallthru)
  # cpt_1 = PHI <cpt_17(10), cpt_17(11), cpt_62(12)>
  # arrowWithDie1_7 = PHI <arrowWithDie1_43(10), arrowWithDie1_43(11), arrowWithDie1_53(12)>
  D.5578_63 = ArriveeAvecDE2.player;
  if (D.5578_63 == player_24(D))
    goto <bb 17>;
  else
    goto <bb 14>;
  # SUCC: 17 (true) 14 (false)

  # BLOCK 14
  # PRED: 13 (false)
  D.5580_64 = ArriveeAvecDE2.nb_checkers;
  if (D.5580_64 == 0)
    goto <bb 17>;
  else
    goto <bb 15>;
  # SUCC: 17 (true) 15 (false)

  # BLOCK 15
  # PRED: 14 (false)
  D.5582_65 = ArriveeAvecDE2.player;
  if (D.5582_65 != player_24(D))
    goto <bb 16>;
  else
    goto <bb 18>;
  # SUCC: 16 (true) 18 (false)

  # BLOCK 16
  # PRED: 15 (true)
  D.5584_66 = ArriveeAvecDE2.nb_checkers;
  if (D.5584_66 == 1)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 (true) 18 (false)

  # BLOCK 17
  # PRED: 13 (true) 14 (true) 16 (true)
  D.5585_67 = gameState_13(D)->die2;
  sens.9_68 = (unsigned int) sens_6;
  D.5587_69 = D.5585_67 * sens.9_68;
  D.5588_70 = D.5587_69 + depart_15(D);
  Draw_Selected_Arrow (display_12(D), D.5588_70);
  __builtin_puts (&"POSSIBILITE AVEC DE2"[0]);
  arrowWithDie2_71 = 1;
  cpt.10_72 = (unsigned int) cpt_1;
  D.5590_73 = cpt.10_72 * 4;
  D.5591_74 = arriveesPossibles_16 + D.5590_73;
  D.5592_75 = gameState_13(D)->die2;
  sens.11_76 = (unsigned int) sens_6;
  D.5594_77 = D.5592_75 * sens.11_76;
  D.5595_78 = D.5594_77 + depart_15(D);
  D.5596_79 = (int) D.5595_78;
  *D.5591_74 = D.5596_79;
  cpt_80 = cpt_1 + 1;
  # SUCC: 18 (fallthru)

  # BLOCK 18
  # PRED: 15 (false) 16 (false) 17 (fallthru)
  # cpt_2 = PHI <cpt_1(15), cpt_1(16), cpt_80(17)>
  # arrowWithDie2_8 = PHI <arrowWithDie2_44(15), arrowWithDie2_44(16), arrowWithDie2_71(17)>
  D.5600_81 = ArriveeAvecDE1ETDE2.player;
  if (D.5600_81 == player_24(D))
    goto <bb 22>;
  else
    goto <bb 19>;
  # SUCC: 22 (true) 19 (false)

  # BLOCK 19
  # PRED: 18 (false)
  D.5602_82 = ArriveeAvecDE1ETDE2.nb_checkers;
  if (D.5602_82 == 0)
    goto <bb 22>;
  else
    goto <bb 20>;
  # SUCC: 22 (true) 20 (false)

  # BLOCK 20
  # PRED: 19 (false)
  D.5604_83 = ArriveeAvecDE1ETDE2.player;
  if (D.5604_83 != player_24(D))
    goto <bb 21>;
  else
    goto <bb 34>;
  # SUCC: 21 (true) 34 (false)

  # BLOCK 21
  # PRED: 20 (true)
  D.5606_84 = ArriveeAvecDE1ETDE2.nb_checkers;
  if (D.5606_84 == 1)
    goto <bb 22>;
  else
    goto <bb 34>;
  # SUCC: 22 (true) 34 (false)

  # BLOCK 22
  # PRED: 18 (true) 19 (true) 21 (true)
  if (arrowWithDie1_7 != 0)
    goto <bb 24>;
  else
    goto <bb 23>;
  # SUCC: 24 (true) 23 (false)

  # BLOCK 23
  # PRED: 22 (false)
  if (arrowWithDie2_8 != 0)
    goto <bb 24>;
  else
    goto <bb 34>;
  # SUCC: 24 (true) 34 (false)

  # BLOCK 24
  # PRED: 22 (true) 23 (true)
  D.5608_85 = gameState_13(D)->die1;
  D.5609_86 = gameState_13(D)->die2;
  D.5610_87 = D.5608_85 + D.5609_86;
  sens.12_88 = (unsigned int) sens_6;
  D.5612_89 = D.5610_87 * sens.12_88;
  D.5613_90 = D.5612_89 + depart_15(D);
  Draw_Selected_Arrow (display_12(D), D.5613_90);
  __builtin_puts (&"POSSIBILITE AVEC DE1 et DE2"[0]);
  cpt.13_91 = (unsigned int) cpt_2;
  D.5615_92 = cpt.13_91 * 4;
  D.5616_93 = arriveesPossibles_16 + D.5615_92;
  D.5617_94 = gameState_13(D)->die1;
  D.5618_95 = gameState_13(D)->die2;
  D.5619_96 = D.5617_94 + D.5618_95;
  sens.14_97 = (unsigned int) sens_6;
  D.5621_98 = D.5619_96 * sens.14_97;
  D.5622_99 = D.5621_98 + depart_15(D);
  D.5623_100 = (int) D.5622_99;
  *D.5616_93 = D.5623_100;
  cpt_101 = cpt_2 + 1;
  goto <bb 34>;
  # SUCC: 34 (fallthru)

  # BLOCK 25
  # PRED: 7 (false)
  nbpossibilite_102 = 1;
  i_103 = 1;
  goto <bb 33>;
  # SUCC: 33 (fallthru)

  # BLOCK 26
  # PRED: 33 (true)
  D.5625_104 = gameState_13(D)->die1;
  sens.15_105 = (unsigned int) sens_6;
  D.5627_106 = D.5625_104 * sens.15_105;
  i.16_107 = (unsigned int) i_11;
  D.5629_108 = D.5627_106 * i.16_107;
  D.5630_109 = D.5629_108 + depart_15(D);
  ArriveeAvecDE = gameState_13(D)->zones[D.5630_109];
  D.5633_110 = ArriveeAvecDE.player;
  if (D.5633_110 == player_24(D))
    goto <bb 30>;
  else
    goto <bb 27>;
  # SUCC: 30 (true) 27 (false)

  # BLOCK 27
  # PRED: 26 (false)
  D.5635_111 = ArriveeAvecDE.nb_checkers;
  if (D.5635_111 == 0)
    goto <bb 30>;
  else
    goto <bb 28>;
  # SUCC: 30 (true) 28 (false)

  # BLOCK 28
  # PRED: 27 (false)
  D.5637_112 = ArriveeAvecDE.player;
  if (D.5637_112 != player_24(D))
    goto <bb 30>;
  else
    goto <bb 29>;
  # SUCC: 30 (true) 29 (false)

  # BLOCK 29
  # PRED: 28 (false)
  D.5639_113 = ArriveeAvecDE.nb_checkers;
  if (D.5639_113 == 1)
    goto <bb 30>;
  else
    goto <bb 32>;
  # SUCC: 30 (true) 32 (false)

  # BLOCK 30
  # PRED: 26 (true) 27 (true) 28 (true) 29 (true)
  if (nbpossibilite_10 == i_11)
    goto <bb 31>;
  else
    goto <bb 32>;
  # SUCC: 31 (true) 32 (false)

  # BLOCK 31
  # PRED: 30 (true)
  D.5642_114 = gameState_13(D)->die1;
  sens.17_115 = (unsigned int) sens_6;
  D.5644_116 = D.5642_114 * sens.17_115;
  i.18_117 = (unsigned int) i_11;
  D.5646_118 = D.5644_116 * i.18_117;
  D.5647_119 = D.5646_118 + depart_15(D);
  Draw_Selected_Arrow (display_12(D), D.5647_119);
  __builtin_puts (&"POSSIBILITE AVEC DE"[0]);
  nbpossibilite_120 = nbpossibilite_10 + 1;
  cpt.19_121 = (unsigned int) cpt_4;
  D.5649_122 = cpt.19_121 * 4;
  D.5650_123 = arriveesPossibles_16 + D.5649_122;
  D.5651_124 = gameState_13(D)->die1;
  sens.20_125 = (unsigned int) sens_6;
  D.5653_126 = D.5651_124 * sens.20_125;
  i.21_127 = (unsigned int) i_11;
  D.5655_128 = D.5653_126 * i.21_127;
  D.5656_129 = D.5655_128 + depart_15(D);
  D.5657_130 = (int) D.5656_129;
  *D.5650_123 = D.5657_130;
  cpt_131 = cpt_4 + 1;
  # SUCC: 32 (fallthru)

  # BLOCK 32
  # PRED: 29 (false) 30 (false) 31 (fallthru)
  # cpt_3 = PHI <cpt_4(29), cpt_4(30), cpt_131(31)>
  # nbpossibilite_9 = PHI <nbpossibilite_10(29), nbpossibilite_10(30), nbpossibilite_120(31)>
  i_132 = i_11 + 1;
  # SUCC: 33 (fallthru)

  # BLOCK 33
  # PRED: 25 (fallthru) 32 (fallthru)
  # cpt_4 = PHI <cpt_17(25), cpt_3(32)>
  # nbpossibilite_10 = PHI <nbpossibilite_102(25), nbpossibilite_9(32)>
  # i_11 = PHI <i_103(25), i_132(32)>
  if (i_11 <= 4)
    goto <bb 26>;
  else
    goto <bb 34>;
  # SUCC: 26 (true) 34 (false)

  # BLOCK 34
  # PRED: 21 (false) 33 (false) 20 (false) 24 (fallthru) 23 (false)
  D.5658_133 = display_12(D)->screen;
  SDL_Flip (D.5658_133);
  D.5659_134 = arriveesPossibles_16;
  return D.5659_134;
  # SUCC: EXIT

}



Partition map 

Partition 1 (cpt_1 - 1 )
Partition 2 (cpt_2 - 2 )
Partition 3 (cpt_3 - 3 )
Partition 4 (cpt_4 - 4 )
Partition 5 (i_5 - 5 )
Partition 6 (sens_6 - 6 )
Partition 7 (arrowWithDie1_7 - 7 )
Partition 8 (arrowWithDie2_8 - 8 )
Partition 9 (nbpossibilite_9 - 9 )
Partition 10 (nbpossibilite_10 - 10 )
Partition 11 (i_11 - 11 )
Partition 12 (display_12(D) - 12 )
Partition 13 (gameState_13(D) - 13 )
Partition 14 (game_14(D) - 14 )
Partition 15 (depart_15(D) - 15 )
Partition 16 (arriveesPossibles_16 - 16 )
Partition 17 (cpt_17 - 17 )
Partition 18 (i_18 - 18 )
Partition 19 (i.2_19 - 19 )
Partition 20 (D.5532_20 - 20 )
Partition 21 (D.5533_21 - 21 )
Partition 22 (i_22 - 22 )
Partition 23 (sens_23 - 23 )
Partition 24 (player_24(D) - 24 )
Partition 25 (sens_25 - 25 )
Partition 26 (D.5536_26 - 26 )
Partition 27 (D.5537_27 - 27 )
Partition 28 (D.5538_28 - 28 )
Partition 29 (D.5541_29 - 29 )
Partition 30 (sens.3_30 - 30 )
Partition 31 (D.5543_31 - 31 )
Partition 32 (D.5544_32 - 32 )
Partition 33 (D.5545_33 - 33 )
Partition 34 (sens.4_34 - 34 )
Partition 35 (D.5547_35 - 35 )
Partition 36 (D.5548_36 - 36 )
Partition 37 (D.5549_37 - 37 )
Partition 38 (D.5550_38 - 38 )
Partition 39 (D.5551_39 - 39 )
Partition 40 (sens.5_40 - 40 )
Partition 41 (D.5553_41 - 41 )
Partition 42 (D.5554_42 - 42 )
Partition 43 (arrowWithDie1_43 - 43 )
Partition 44 (arrowWithDie2_44 - 44 )
Partition 45 (D.5557_45 - 45 )
Partition 46 (D.5559_46 - 46 )
Partition 47 (D.5561_47 - 47 )
Partition 48 (D.5563_48 - 48 )
Partition 49 (D.5564_49 - 49 )
Partition 50 (sens.6_50 - 50 )
Partition 51 (D.5566_51 - 51 )
Partition 52 (D.5567_52 - 52 )
Partition 53 (arrowWithDie1_53 - 53 )
Partition 54 (cpt.7_54 - 54 )
Partition 55 (D.5569_55 - 55 )
Partition 56 (D.5570_56 - 56 )
Partition 57 (D.5571_57 - 57 )
Partition 58 (sens.8_58 - 58 )
Partition 59 (D.5573_59 - 59 )
Partition 60 (D.5574_60 - 60 )
Partition 61 (D.5575_61 - 61 )
Partition 62 (cpt_62 - 62 )
Partition 63 (D.5578_63 - 63 )
Partition 64 (D.5580_64 - 64 )
Partition 65 (D.5582_65 - 65 )
Partition 66 (D.5584_66 - 66 )
Partition 67 (D.5585_67 - 67 )
Partition 68 (sens.9_68 - 68 )
Partition 69 (D.5587_69 - 69 )
Partition 70 (D.5588_70 - 70 )
Partition 71 (arrowWithDie2_71 - 71 )
Partition 72 (cpt.10_72 - 72 )
Partition 73 (D.5590_73 - 73 )
Partition 74 (D.5591_74 - 74 )
Partition 75 (D.5592_75 - 75 )
Partition 76 (sens.11_76 - 76 )
Partition 77 (D.5594_77 - 77 )
Partition 78 (D.5595_78 - 78 )
Partition 79 (D.5596_79 - 79 )
Partition 80 (cpt_80 - 80 )
Partition 81 (D.5600_81 - 81 )
Partition 82 (D.5602_82 - 82 )
Partition 83 (D.5604_83 - 83 )
Partition 84 (D.5606_84 - 84 )
Partition 85 (D.5608_85 - 85 )
Partition 86 (D.5609_86 - 86 )
Partition 87 (D.5610_87 - 87 )
Partition 88 (sens.12_88 - 88 )
Partition 89 (D.5612_89 - 89 )
Partition 90 (D.5613_90 - 90 )
Partition 91 (cpt.13_91 - 91 )
Partition 92 (D.5615_92 - 92 )
Partition 93 (D.5616_93 - 93 )
Partition 94 (D.5617_94 - 94 )
Partition 95 (D.5618_95 - 95 )
Partition 96 (D.5619_96 - 96 )
Partition 97 (sens.14_97 - 97 )
Partition 98 (D.5621_98 - 98 )
Partition 99 (D.5622_99 - 99 )
Partition 100 (D.5623_100 - 100 )
Partition 101 (cpt_101 - 101 )
Partition 102 (nbpossibilite_102 - 102 )
Partition 103 (i_103 - 103 )
Partition 104 (D.5625_104 - 104 )
Partition 105 (sens.15_105 - 105 )
Partition 106 (D.5627_106 - 106 )
Partition 107 (i.16_107 - 107 )
Partition 108 (D.5629_108 - 108 )
Partition 109 (D.5630_109 - 109 )
Partition 110 (D.5633_110 - 110 )
Partition 111 (D.5635_111 - 111 )
Partition 112 (D.5637_112 - 112 )
Partition 113 (D.5639_113 - 113 )
Partition 114 (D.5642_114 - 114 )
Partition 115 (sens.17_115 - 115 )
Partition 116 (D.5644_116 - 116 )
Partition 117 (i.18_117 - 117 )
Partition 118 (D.5646_118 - 118 )
Partition 119 (D.5647_119 - 119 )
Partition 120 (nbpossibilite_120 - 120 )
Partition 121 (cpt.19_121 - 121 )
Partition 122 (D.5649_122 - 122 )
Partition 123 (D.5650_123 - 123 )
Partition 124 (D.5651_124 - 124 )
Partition 125 (sens.20_125 - 125 )
Partition 126 (D.5653_126 - 126 )
Partition 127 (i.21_127 - 127 )
Partition 128 (D.5655_128 - 128 )
Partition 129 (D.5656_129 - 129 )
Partition 130 (D.5657_130 - 130 )
Partition 131 (cpt_131 - 131 )
Partition 132 (i_132 - 132 )
Partition 133 (D.5658_133 - 133 )
Partition 134 (D.5659_134 - 134 )


Partition map 

Partition 0 (cpt_1 - 1 )
Partition 1 (cpt_2 - 2 )
Partition 2 (cpt_3 - 3 )
Partition 3 (cpt_4 - 4 )
Partition 4 (i_5 - 5 )
Partition 5 (sens_6 - 6 )
Partition 6 (arrowWithDie1_7 - 7 )
Partition 7 (arrowWithDie2_8 - 8 )
Partition 8 (nbpossibilite_9 - 9 )
Partition 9 (nbpossibilite_10 - 10 )
Partition 10 (i_11 - 11 )
Partition 11 (display_12(D) - 12 )
Partition 12 (gameState_13(D) - 13 )
Partition 13 (game_14(D) - 14 )
Partition 14 (depart_15(D) - 15 )
Partition 15 (cpt_17 - 17 )
Partition 16 (i_18 - 18 )
Partition 17 (i_22 - 22 )
Partition 18 (sens_23 - 23 )
Partition 19 (player_24(D) - 24 )
Partition 20 (sens_25 - 25 )
Partition 21 (arrowWithDie1_43 - 43 )
Partition 22 (arrowWithDie2_44 - 44 )
Partition 23 (arrowWithDie1_53 - 53 )
Partition 24 (cpt_62 - 62 )
Partition 25 (arrowWithDie2_71 - 71 )
Partition 26 (cpt_80 - 80 )
Partition 27 (cpt_101 - 101 )
Partition 28 (nbpossibilite_102 - 102 )
Partition 29 (i_103 - 103 )
Partition 30 (nbpossibilite_120 - 120 )
Partition 31 (cpt_131 - 131 )
Partition 32 (i_132 - 132 )


Live on entry to BB2 : display_12(D)  gameState_13(D)  game_14(D)  depart_15(D)  player_24(D)  

Live on entry to BB3 : i_5  display_12(D)  gameState_13(D)  depart_15(D)  cpt_17  player_24(D)  

Live on entry to BB4 : display_12(D)  gameState_13(D)  depart_15(D)  cpt_17  player_24(D)  

Live on entry to BB5 : display_12(D)  gameState_13(D)  depart_15(D)  cpt_17  player_24(D)  

Live on entry to BB6 : display_12(D)  gameState_13(D)  depart_15(D)  cpt_17  player_24(D)  

Live on entry to BB7 : display_12(D)  gameState_13(D)  depart_15(D)  cpt_17  player_24(D)  

Live on entry to BB8 : sens_6  display_12(D)  gameState_13(D)  depart_15(D)  cpt_17  player_24(D)  

Live on entry to BB9 : sens_6  display_12(D)  gameState_13(D)  depart_15(D)  cpt_17  player_24(D)  arrowWithDie1_43  arrowWithDie2_44  

Live on entry to BB10 : sens_6  display_12(D)  gameState_13(D)  depart_15(D)  cpt_17  player_24(D)  arrowWithDie1_43  arrowWithDie2_44  

Live on entry to BB11 : sens_6  display_12(D)  gameState_13(D)  depart_15(D)  cpt_17  player_24(D)  arrowWithDie1_43  arrowWithDie2_44  

Live on entry to BB12 : sens_6  display_12(D)  gameState_13(D)  depart_15(D)  cpt_17  player_24(D)  arrowWithDie2_44  

Live on entry to BB13 : sens_6  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  arrowWithDie2_44  

Live on entry to BB14 : cpt_1  sens_6  arrowWithDie1_7  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  arrowWithDie2_44  

Live on entry to BB15 : cpt_1  sens_6  arrowWithDie1_7  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  arrowWithDie2_44  

Live on entry to BB16 : cpt_1  sens_6  arrowWithDie1_7  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  arrowWithDie2_44  

Live on entry to BB17 : cpt_1  sens_6  arrowWithDie1_7  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  

Live on entry to BB18 : sens_6  arrowWithDie1_7  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  

Live on entry to BB19 : cpt_2  sens_6  arrowWithDie1_7  arrowWithDie2_8  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  

Live on entry to BB20 : cpt_2  sens_6  arrowWithDie1_7  arrowWithDie2_8  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  

Live on entry to BB21 : cpt_2  sens_6  arrowWithDie1_7  arrowWithDie2_8  display_12(D)  gameState_13(D)  depart_15(D)  

Live on entry to BB22 : cpt_2  sens_6  arrowWithDie1_7  arrowWithDie2_8  display_12(D)  gameState_13(D)  depart_15(D)  

Live on entry to BB23 : cpt_2  sens_6  arrowWithDie2_8  display_12(D)  gameState_13(D)  depart_15(D)  

Live on entry to BB24 : cpt_2  sens_6  display_12(D)  gameState_13(D)  depart_15(D)  

Live on entry to BB25 : sens_6  display_12(D)  gameState_13(D)  depart_15(D)  cpt_17  player_24(D)  

Live on entry to BB26 : cpt_4  sens_6  nbpossibilite_10  i_11  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  

Live on entry to BB27 : cpt_4  sens_6  nbpossibilite_10  i_11  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  

Live on entry to BB28 : cpt_4  sens_6  nbpossibilite_10  i_11  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  

Live on entry to BB29 : cpt_4  sens_6  nbpossibilite_10  i_11  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  

Live on entry to BB30 : cpt_4  sens_6  nbpossibilite_10  i_11  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  

Live on entry to BB31 : cpt_4  sens_6  nbpossibilite_10  i_11  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  

Live on entry to BB32 : sens_6  i_11  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  

Live on entry to BB33 : sens_6  display_12(D)  gameState_13(D)  depart_15(D)  player_24(D)  

Live on entry to BB34 : display_12(D)  

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) cpt_1 <-> cpt_2
(2147483646) cpt_1 <-> cpt_3
(2147483646) cpt_1 <-> cpt_4
(2147483646) cpt_1 <-> cpt_17
(2147483646) cpt_1 <-> cpt_62
(2147483646) cpt_1 <-> cpt_80
(2147483646) cpt_1 <-> cpt_101
(2147483646) cpt_1 <-> cpt_131
(2147483646) i_5 <-> i_18
(2147483646) i_5 <-> i_22
(2147483646) sens_6 <-> sens_23
(2147483646) sens_6 <-> sens_25
(2147483646) arrowWithDie1_7 <-> arrowWithDie1_43
(2147483646) arrowWithDie1_7 <-> arrowWithDie1_53
(2147483646) arrowWithDie2_8 <-> arrowWithDie2_44
(2147483646) arrowWithDie2_8 <-> arrowWithDie2_71
(2147483646) nbpossibilite_9 <-> nbpossibilite_10
(2147483646) nbpossibilite_9 <-> nbpossibilite_102
(2147483646) nbpossibilite_9 <-> nbpossibilite_120
(2147483646) i_11 <-> i_103
(2147483646) i_11 <-> i_132
(4) cpt_3 <-> cpt_4
(1) cpt_4 <-> cpt_17

Partition map 

Partition 0 (cpt_1 - 1 )
Partition 1 (cpt_2 - 2 )
Partition 2 (cpt_3 - 3 )
Partition 3 (cpt_4 - 4 )
Partition 4 (i_5 - 5 )
Partition 5 (sens_6 - 6 )
Partition 6 (arrowWithDie1_7 - 7 )
Partition 7 (arrowWithDie2_8 - 8 )
Partition 8 (nbpossibilite_9 - 9 )
Partition 9 (nbpossibilite_10 - 10 )
Partition 10 (i_11 - 11 )
Partition 11 (display_12(D) - 12 )
Partition 12 (gameState_13(D) - 13 )
Partition 13 (game_14(D) - 14 )
Partition 14 (depart_15(D) - 15 )
Partition 15 (cpt_17 - 17 )
Partition 16 (i_18 - 18 )
Partition 17 (i_22 - 22 )
Partition 18 (sens_23 - 23 )
Partition 19 (player_24(D) - 24 )
Partition 20 (sens_25 - 25 )
Partition 21 (arrowWithDie1_43 - 43 )
Partition 22 (arrowWithDie2_44 - 44 )
Partition 23 (arrowWithDie1_53 - 53 )
Partition 24 (cpt_62 - 62 )
Partition 25 (arrowWithDie2_71 - 71 )
Partition 26 (cpt_80 - 80 )
Partition 27 (cpt_101 - 101 )
Partition 28 (nbpossibilite_102 - 102 )
Partition 29 (i_103 - 103 )
Partition 30 (nbpossibilite_120 - 120 )
Partition 31 (cpt_131 - 131 )
Partition 32 (i_132 - 132 )

Coalesce list: (1)cpt_1 & (2)cpt_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)cpt_1 & (3)cpt_3 [map: 0, 2] : Success -> 0
Coalesce list: (1)cpt_1 & (4)cpt_4 [map: 0, 3] : Success -> 0
Coalesce list: (1)cpt_1 & (17)cpt_17 [map: 0, 15] : Success -> 0
Coalesce list: (1)cpt_1 & (62)cpt_62 [map: 0, 24] : Success -> 0
Coalesce list: (1)cpt_1 & (80)cpt_80 [map: 0, 26] : Success -> 0
Coalesce list: (1)cpt_1 & (101)cpt_101 [map: 0, 27] : Success -> 0
Coalesce list: (1)cpt_1 & (131)cpt_131 [map: 0, 31] : Success -> 0
Coalesce list: (5)i_5 & (18)i_18 [map: 4, 16] : Success -> 4
Coalesce list: (5)i_5 & (22)i_22 [map: 4, 17] : Success -> 4
Coalesce list: (6)sens_6 & (23)sens_23 [map: 5, 18] : Success -> 5
Coalesce list: (6)sens_6 & (25)sens_25 [map: 5, 20] : Success -> 5
Coalesce list: (7)arrowWithDie1_7 & (43)arrowWithDie1_43 [map: 6, 21] : Success -> 6
Coalesce list: (7)arrowWithDie1_7 & (53)arrowWithDie1_53 [map: 6, 23] : Success -> 6
Coalesce list: (8)arrowWithDie2_8 & (44)arrowWithDie2_44 [map: 7, 22] : Success -> 7
Coalesce list: (8)arrowWithDie2_8 & (71)arrowWithDie2_71 [map: 7, 25] : Success -> 7
Coalesce list: (9)nbpossibilite_9 & (10)nbpossibilite_10 [map: 8, 9] : Success -> 8
Coalesce list: (9)nbpossibilite_9 & (102)nbpossibilite_102 [map: 8, 28] : Success -> 8
Coalesce list: (9)nbpossibilite_9 & (120)nbpossibilite_120 [map: 8, 30] : Success -> 8
Coalesce list: (11)i_11 & (103)i_103 [map: 10, 29] : Success -> 10
Coalesce list: (11)i_11 & (132)i_132 [map: 10, 32] : Success -> 10
Coalesce list: (3)cpt_1 & (4)cpt_1: Already Coalesced.
Coalesce list: (4)cpt_1 & (17)cpt_1: Already Coalesced.
Coalesce list: (11)i_11 & (132)i_11: Already Coalesced.
Coalesce list: (11)i_11 & (103)i_11: Already Coalesced.
Coalesce list: (10)nbpossibilite_9 & (9)nbpossibilite_9: Already Coalesced.
Coalesce list: (10)nbpossibilite_9 & (102)nbpossibilite_9: Already Coalesced.
Coalesce list: (4)cpt_1 & (3)cpt_1: Already Coalesced.
Coalesce list: (9)nbpossibilite_9 & (120)nbpossibilite_9: Already Coalesced.
Coalesce list: (3)cpt_1 & (131)cpt_1: Already Coalesced.
Coalesce list: (8)arrowWithDie2_8 & (71)arrowWithDie2_8: Already Coalesced.
Coalesce list: (2)cpt_1 & (80)cpt_1: Already Coalesced.
Coalesce list: (7)arrowWithDie1_7 & (53)arrowWithDie1_7: Already Coalesced.
Coalesce list: (1)cpt_1 & (62)cpt_1: Already Coalesced.
Coalesce list: (6)sens_6 & (25)sens_6: Already Coalesced.
Coalesce list: (5)i_5 & (22)i_5: Already Coalesced.
Coalesce list: (5)i_5 & (18)i_5: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (cpt_1 - 1 2 3 4 17 62 80 101 131 )
Partition 1 (i_5 - 5 18 22 )
Partition 2 (sens_6 - 6 23 25 )
Partition 3 (arrowWithDie1_7 - 7 43 53 )
Partition 4 (arrowWithDie2_8 - 8 44 71 )
Partition 5 (nbpossibilite_9 - 9 10 102 120 )
Partition 6 (i_11 - 11 103 132 )
Partition 7 (display_12(D) - 12 )
Partition 8 (gameState_13(D) - 13 )
Partition 9 (game_14(D) - 14 )
Partition 10 (depart_15(D) - 15 )
Partition 11 (arriveesPossibles_16 - 16 )
Partition 12 (i.2_19 - 19 )
Partition 13 (D.5532_20 - 20 )
Partition 14 (D.5533_21 - 21 )
Partition 15 (player_24(D) - 24 )
Partition 16 (D.5536_26 - 26 )
Partition 17 (D.5537_27 - 27 )
Partition 18 (D.5538_28 - 28 )
Partition 19 (D.5541_29 - 29 )
Partition 20 (sens.3_30 - 30 )
Partition 21 (D.5543_31 - 31 )
Partition 22 (D.5544_32 - 32 )
Partition 23 (D.5545_33 - 33 )
Partition 24 (sens.4_34 - 34 )
Partition 25 (D.5547_35 - 35 )
Partition 26 (D.5548_36 - 36 )
Partition 27 (D.5549_37 - 37 )
Partition 28 (D.5550_38 - 38 )
Partition 29 (D.5551_39 - 39 )
Partition 30 (sens.5_40 - 40 )
Partition 31 (D.5553_41 - 41 )
Partition 32 (D.5554_42 - 42 )
Partition 33 (D.5557_45 - 45 )
Partition 34 (D.5559_46 - 46 )
Partition 35 (D.5561_47 - 47 )
Partition 36 (D.5563_48 - 48 )
Partition 37 (D.5564_49 - 49 )
Partition 38 (sens.6_50 - 50 )
Partition 39 (D.5566_51 - 51 )
Partition 40 (D.5567_52 - 52 )
Partition 41 (cpt.7_54 - 54 )
Partition 42 (D.5569_55 - 55 )
Partition 43 (D.5570_56 - 56 )
Partition 44 (D.5571_57 - 57 )
Partition 45 (sens.8_58 - 58 )
Partition 46 (D.5573_59 - 59 )
Partition 47 (D.5574_60 - 60 )
Partition 48 (D.5575_61 - 61 )
Partition 49 (D.5578_63 - 63 )
Partition 50 (D.5580_64 - 64 )
Partition 51 (D.5582_65 - 65 )
Partition 52 (D.5584_66 - 66 )
Partition 53 (D.5585_67 - 67 )
Partition 54 (sens.9_68 - 68 )
Partition 55 (D.5587_69 - 69 )
Partition 56 (D.5588_70 - 70 )
Partition 57 (cpt.10_72 - 72 )
Partition 58 (D.5590_73 - 73 )
Partition 59 (D.5591_74 - 74 )
Partition 60 (D.5592_75 - 75 )
Partition 61 (sens.11_76 - 76 )
Partition 62 (D.5594_77 - 77 )
Partition 63 (D.5595_78 - 78 )
Partition 64 (D.5596_79 - 79 )
Partition 65 (D.5600_81 - 81 )
Partition 66 (D.5602_82 - 82 )
Partition 67 (D.5604_83 - 83 )
Partition 68 (D.5606_84 - 84 )
Partition 69 (D.5608_85 - 85 )
Partition 70 (D.5609_86 - 86 )
Partition 71 (D.5610_87 - 87 )
Partition 72 (sens.12_88 - 88 )
Partition 73 (D.5612_89 - 89 )
Partition 74 (D.5613_90 - 90 )
Partition 75 (cpt.13_91 - 91 )
Partition 76 (D.5615_92 - 92 )
Partition 77 (D.5616_93 - 93 )
Partition 78 (D.5617_94 - 94 )
Partition 79 (D.5618_95 - 95 )
Partition 80 (D.5619_96 - 96 )
Partition 81 (sens.14_97 - 97 )
Partition 82 (D.5621_98 - 98 )
Partition 83 (D.5622_99 - 99 )
Partition 84 (D.5623_100 - 100 )
Partition 85 (D.5625_104 - 104 )
Partition 86 (sens.15_105 - 105 )
Partition 87 (D.5627_106 - 106 )
Partition 88 (i.16_107 - 107 )
Partition 89 (D.5629_108 - 108 )
Partition 90 (D.5630_109 - 109 )
Partition 91 (D.5633_110 - 110 )
Partition 92 (D.5635_111 - 111 )
Partition 93 (D.5637_112 - 112 )
Partition 94 (D.5639_113 - 113 )
Partition 95 (D.5642_114 - 114 )
Partition 96 (sens.17_115 - 115 )
Partition 97 (D.5644_116 - 116 )
Partition 98 (i.18_117 - 117 )
Partition 99 (D.5646_118 - 118 )
Partition 100 (D.5647_119 - 119 )
Partition 101 (cpt.19_121 - 121 )
Partition 102 (D.5649_122 - 122 )
Partition 103 (D.5650_123 - 123 )
Partition 104 (D.5651_124 - 124 )
Partition 105 (sens.20_125 - 125 )
Partition 106 (D.5653_126 - 126 )
Partition 107 (i.21_127 - 127 )
Partition 108 (D.5655_128 - 128 )
Partition 109 (D.5656_129 - 129 )
Partition 110 (D.5657_130 - 130 )
Partition 111 (D.5658_133 - 133 )
Partition 112 (D.5659_134 - 134 )

Display_Arrow_Possibilities (struct SDisplay * display, struct SGameState * gameState, EPlayer player, EPosition depart, struct SGame * game)
{
  struct SZone ArriveeAvecDE;
  int i;
  int nbpossibilite;
  unsigned int arrowWithDie2;
  unsigned int arrowWithDie1;
  struct SZone ArriveeAvecDE1ETDE2;
  struct SZone ArriveeAvecDE2;
  struct SZone ArriveeAvecDE1;
  int i;
  int sens;
  int cpt;
  int * arriveesPossibles;
  int * D.5659;
  struct SDL_Surface * D.5658;
  int D.5657;
  unsigned int D.5656;
  unsigned int D.5655;
  unsigned int i.21;
  unsigned int D.5653;
  unsigned int sens.20;
  unsigned int D.5651;
  int * D.5650;
  unsigned int D.5649;
  unsigned int cpt.19;
  unsigned int D.5647;
  unsigned int D.5646;
  unsigned int i.18;
  unsigned int D.5644;
  unsigned int sens.17;
  unsigned int D.5642;
  unsigned int D.5639;
  EPlayer D.5637;
  unsigned int D.5635;
  EPlayer D.5633;
  unsigned int D.5630;
  unsigned int D.5629;
  unsigned int i.16;
  unsigned int D.5627;
  unsigned int sens.15;
  unsigned int D.5625;
  int D.5623;
  unsigned int D.5622;
  unsigned int D.5621;
  unsigned int sens.14;
  unsigned int D.5619;
  unsigned int D.5618;
  unsigned int D.5617;
  int * D.5616;
  unsigned int D.5615;
  unsigned int cpt.13;
  unsigned int D.5613;
  unsigned int D.5612;
  unsigned int sens.12;
  unsigned int D.5610;
  unsigned int D.5609;
  unsigned int D.5608;
  unsigned int D.5606;
  EPlayer D.5604;
  unsigned int D.5602;
  EPlayer D.5600;
  int D.5596;
  unsigned int D.5595;
  unsigned int D.5594;
  unsigned int sens.11;
  unsigned int D.5592;
  int * D.5591;
  unsigned int D.5590;
  unsigned int cpt.10;
  unsigned int D.5588;
  unsigned int D.5587;
  unsigned int sens.9;
  unsigned int D.5585;
  unsigned int D.5584;
  EPlayer D.5582;
  unsigned int D.5580;
  EPlayer D.5578;
  int D.5575;
  unsigned int D.5574;
  unsigned int D.5573;
  unsigned int sens.8;
  unsigned int D.5571;
  int * D.5570;
  unsigned int D.5569;
  unsigned int cpt.7;
  unsigned int D.5567;
  unsigned int D.5566;
  unsigned int sens.6;
  unsigned int D.5564;
  unsigned int D.5563;
  EPlayer D.5561;
  unsigned int D.5559;
  EPlayer D.5557;
  unsigned int D.5554;
  unsigned int D.5553;
  unsigned int sens.5;
  unsigned int D.5551;
  unsigned int D.5550;
  unsigned int D.5549;
  unsigned int D.5548;
  unsigned int D.5547;
  unsigned int sens.4;
  unsigned int D.5545;
  unsigned int D.5544;
  unsigned int D.5543;
  unsigned int sens.3;
  unsigned int D.5541;
  unsigned int D.5538;
  unsigned int D.5537;
  const char * restrict D.5536;
  int * D.5533;
  unsigned int D.5532;
  unsigned int i.2;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  Display_RefreshGameBoard (display_12(D), gameState_13(D), game_14(D));
  colorChecker (display_12(D), gameState_13(D), depart_15(D));
  arriveesPossibles_16 = malloc (112);
  cpt_17 = 0;
  i_18 = 0;
  goto <bb 4>;
  # SUCC: 4 (fallthru)

  # BLOCK 3
  # PRED: 4 (true)
  i.2_19 = (unsigned int) i_5;
  D.5532_20 = i.2_19 * 4;
  D.5533_21 = arriveesPossibles_16 + D.5532_20;
  *D.5533_21 = -1;
  i_22 = i_5 + 1;
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (fallthru) 3 (fallthru)
  # i_5 = PHI <i_18(2), i_22(3)>
  if (i_5 <= 27)
    goto <bb 3>;
  else
    goto <bb 5>;
  # SUCC: 3 (true) 5 (false)

  # BLOCK 5
  # PRED: 4 (false)
  sens_23 = 1;
  if (player_24(D) == 1)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 (true) 7 (false)

  # BLOCK 6
  # PRED: 5 (true)
  sens_25 = -1;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 5 (false) 6 (fallthru)
  # sens_6 = PHI <sens_23(5), sens_25(6)>
  D.5536_26 = (const char * restrict) &"sens = %d\n"[0];
  printf (D.5536_26, sens_6);
  D.5537_27 = gameState_13(D)->die1;
  D.5538_28 = gameState_13(D)->die2;
  if (D.5537_27 != D.5538_28)
    goto <bb 8>;
  else
    goto <bb 25>;
  # SUCC: 8 (true) 25 (false)

  # BLOCK 8
  # PRED: 7 (true)
  D.5541_29 = gameState_13(D)->die1;
  sens.3_30 = (unsigned int) sens_6;
  D.5543_31 = D.5541_29 * sens.3_30;
  D.5544_32 = D.5543_31 + depart_15(D);
  ArriveeAvecDE1 = gameState_13(D)->zones[D.5544_32];
  D.5545_33 = gameState_13(D)->die2;
  sens.4_34 = (unsigned int) sens_6;
  D.5547_35 = D.5545_33 * sens.4_34;
  D.5548_36 = D.5547_35 + depart_15(D);
  ArriveeAvecDE2 = gameState_13(D)->zones[D.5548_36];
  D.5549_37 = gameState_13(D)->die1;
  D.5550_38 = gameState_13(D)->die2;
  D.5551_39 = D.5549_37 + D.5550_38;
  sens.5_40 = (unsigned int) sens_6;
  D.5553_41 = D.5551_39 * sens.5_40;
  D.5554_42 = D.5553_41 + depart_15(D);
  ArriveeAvecDE1ETDE2 = gameState_13(D)->zones[D.5554_42];
  arrowWithDie1_43 = 0;
  arrowWithDie2_44 = 0;
  D.5557_45 = ArriveeAvecDE1.player;
  if (D.5557_45 == player_24(D))
    goto <bb 12>;
  else
    goto <bb 9>;
  # SUCC: 12 (true) 9 (false)

  # BLOCK 9
  # PRED: 8 (false)
  D.5559_46 = ArriveeAvecDE1.nb_checkers;
  if (D.5559_46 == 0)
    goto <bb 12>;
  else
    goto <bb 10>;
  # SUCC: 12 (true) 10 (false)

  # BLOCK 10
  # PRED: 9 (false)
  D.5561_47 = ArriveeAvecDE1.player;
  if (D.5561_47 != player_24(D))
    goto <bb 11>;
  else
    goto <bb 13>;
  # SUCC: 11 (true) 13 (false)

  # BLOCK 11
  # PRED: 10 (true)
  D.5563_48 = ArriveeAvecDE1.nb_checkers;
  if (D.5563_48 == 1)
    goto <bb 12>;
  else
    goto <bb 13>;
  # SUCC: 12 (true) 13 (false)

  # BLOCK 12
  # PRED: 8 (true) 9 (true) 11 (true)
  D.5564_49 = gameState_13(D)->die1;
  sens.6_50 = (unsigned int) sens_6;
  D.5566_51 = D.5564_49 * sens.6_50;
  D.5567_52 = D.5566_51 + depart_15(D);
  Draw_Selected_Arrow (display_12(D), D.5567_52);
  arrowWithDie1_53 = 1;
  cpt.7_54 = (unsigned int) cpt_17;
  D.5569_55 = cpt.7_54 * 4;
  D.5570_56 = arriveesPossibles_16 + D.5569_55;
  D.5571_57 = gameState_13(D)->die1;
  sens.8_58 = (unsigned int) sens_6;
  D.5573_59 = D.5571_57 * sens.8_58;
  D.5574_60 = D.5573_59 + depart_15(D);
  D.5575_61 = (int) D.5574_60;
  *D.5570_56 = D.5575_61;
  cpt_62 = cpt_17 + 1;
  # SUCC: 13 (fallthru)

  # BLOCK 13
  # PRED: 10 (false) 11 (false) 12 (fallthru)
  # cpt_1 = PHI <cpt_17(10), cpt_17(11), cpt_62(12)>
  # arrowWithDie1_7 = PHI <arrowWithDie1_43(10), arrowWithDie1_43(11), arrowWithDie1_53(12)>
  D.5578_63 = ArriveeAvecDE2.player;
  if (D.5578_63 == player_24(D))
    goto <bb 17>;
  else
    goto <bb 14>;
  # SUCC: 17 (true) 14 (false)

  # BLOCK 14
  # PRED: 13 (false)
  D.5580_64 = ArriveeAvecDE2.nb_checkers;
  if (D.5580_64 == 0)
    goto <bb 17>;
  else
    goto <bb 15>;
  # SUCC: 17 (true) 15 (false)

  # BLOCK 15
  # PRED: 14 (false)
  D.5582_65 = ArriveeAvecDE2.player;
  if (D.5582_65 != player_24(D))
    goto <bb 16>;
  else
    goto <bb 18>;
  # SUCC: 16 (true) 18 (false)

  # BLOCK 16
  # PRED: 15 (true)
  D.5584_66 = ArriveeAvecDE2.nb_checkers;
  if (D.5584_66 == 1)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 (true) 18 (false)

  # BLOCK 17
  # PRED: 13 (true) 14 (true) 16 (true)
  D.5585_67 = gameState_13(D)->die2;
  sens.9_68 = (unsigned int) sens_6;
  D.5587_69 = D.5585_67 * sens.9_68;
  D.5588_70 = D.5587_69 + depart_15(D);
  Draw_Selected_Arrow (display_12(D), D.5588_70);
  __builtin_puts (&"POSSIBILITE AVEC DE2"[0]);
  arrowWithDie2_71 = 1;
  cpt.10_72 = (unsigned int) cpt_1;
  D.5590_73 = cpt.10_72 * 4;
  D.5591_74 = arriveesPossibles_16 + D.5590_73;
  D.5592_75 = gameState_13(D)->die2;
  sens.11_76 = (unsigned int) sens_6;
  D.5594_77 = D.5592_75 * sens.11_76;
  D.5595_78 = D.5594_77 + depart_15(D);
  D.5596_79 = (int) D.5595_78;
  *D.5591_74 = D.5596_79;
  cpt_80 = cpt_1 + 1;
  # SUCC: 18 (fallthru)

  # BLOCK 18
  # PRED: 15 (false) 16 (false) 17 (fallthru)
  # cpt_2 = PHI <cpt_1(15), cpt_1(16), cpt_80(17)>
  # arrowWithDie2_8 = PHI <arrowWithDie2_44(15), arrowWithDie2_44(16), arrowWithDie2_71(17)>
  D.5600_81 = ArriveeAvecDE1ETDE2.player;
  if (D.5600_81 == player_24(D))
    goto <bb 22>;
  else
    goto <bb 19>;
  # SUCC: 22 (true) 19 (false)

  # BLOCK 19
  # PRED: 18 (false)
  D.5602_82 = ArriveeAvecDE1ETDE2.nb_checkers;
  if (D.5602_82 == 0)
    goto <bb 22>;
  else
    goto <bb 20>;
  # SUCC: 22 (true) 20 (false)

  # BLOCK 20
  # PRED: 19 (false)
  D.5604_83 = ArriveeAvecDE1ETDE2.player;
  if (D.5604_83 != player_24(D))
    goto <bb 21>;
  else
    goto <bb 34>;
  # SUCC: 21 (true) 34 (false)

  # BLOCK 21
  # PRED: 20 (true)
  D.5606_84 = ArriveeAvecDE1ETDE2.nb_checkers;
  if (D.5606_84 == 1)
    goto <bb 22>;
  else
    goto <bb 34>;
  # SUCC: 22 (true) 34 (false)

  # BLOCK 22
  # PRED: 18 (true) 19 (true) 21 (true)
  if (arrowWithDie1_7 != 0)
    goto <bb 24>;
  else
    goto <bb 23>;
  # SUCC: 24 (true) 23 (false)

  # BLOCK 23
  # PRED: 22 (false)
  if (arrowWithDie2_8 != 0)
    goto <bb 24>;
  else
    goto <bb 34>;
  # SUCC: 24 (true) 34 (false)

  # BLOCK 24
  # PRED: 22 (true) 23 (true)
  D.5608_85 = gameState_13(D)->die1;
  D.5609_86 = gameState_13(D)->die2;
  D.5610_87 = D.5608_85 + D.5609_86;
  sens.12_88 = (unsigned int) sens_6;
  D.5612_89 = D.5610_87 * sens.12_88;
  D.5613_90 = D.5612_89 + depart_15(D);
  Draw_Selected_Arrow (display_12(D), D.5613_90);
  __builtin_puts (&"POSSIBILITE AVEC DE1 et DE2"[0]);
  cpt.13_91 = (unsigned int) cpt_2;
  D.5615_92 = cpt.13_91 * 4;
  D.5616_93 = arriveesPossibles_16 + D.5615_92;
  D.5617_94 = gameState_13(D)->die1;
  D.5618_95 = gameState_13(D)->die2;
  D.5619_96 = D.5617_94 + D.5618_95;
  sens.14_97 = (unsigned int) sens_6;
  D.5621_98 = D.5619_96 * sens.14_97;
  D.5622_99 = D.5621_98 + depart_15(D);
  D.5623_100 = (int) D.5622_99;
  *D.5616_93 = D.5623_100;
  cpt_101 = cpt_2 + 1;
  goto <bb 34>;
  # SUCC: 34 (fallthru)

  # BLOCK 25
  # PRED: 7 (false)
  nbpossibilite_102 = 1;
  i_103 = 1;
  goto <bb 33>;
  # SUCC: 33 (fallthru)

  # BLOCK 26
  # PRED: 33 (true)
  D.5625_104 = gameState_13(D)->die1;
  sens.15_105 = (unsigned int) sens_6;
  D.5627_106 = D.5625_104 * sens.15_105;
  i.16_107 = (unsigned int) i_11;
  D.5629_108 = D.5627_106 * i.16_107;
  D.5630_109 = D.5629_108 + depart_15(D);
  ArriveeAvecDE = gameState_13(D)->zones[D.5630_109];
  D.5633_110 = ArriveeAvecDE.player;
  if (D.5633_110 == player_24(D))
    goto <bb 30>;
  else
    goto <bb 27>;
  # SUCC: 30 (true) 27 (false)

  # BLOCK 27
  # PRED: 26 (false)
  D.5635_111 = ArriveeAvecDE.nb_checkers;
  if (D.5635_111 == 0)
    goto <bb 30>;
  else
    goto <bb 28>;
  # SUCC: 30 (true) 28 (false)

  # BLOCK 28
  # PRED: 27 (false)
  D.5637_112 = ArriveeAvecDE.player;
  if (D.5637_112 != player_24(D))
    goto <bb 30>;
  else
    goto <bb 29>;
  # SUCC: 30 (true) 29 (false)

  # BLOCK 29
  # PRED: 28 (false)
  D.5639_113 = ArriveeAvecDE.nb_checkers;
  if (D.5639_113 == 1)
    goto <bb 30>;
  else
    goto <bb 32>;
  # SUCC: 30 (true) 32 (false)

  # BLOCK 30
  # PRED: 26 (true) 27 (true) 28 (true) 29 (true)
  if (nbpossibilite_10 == i_11)
    goto <bb 31>;
  else
    goto <bb 32>;
  # SUCC: 31 (true) 32 (false)

  # BLOCK 31
  # PRED: 30 (true)
  D.5642_114 = gameState_13(D)->die1;
  sens.17_115 = (unsigned int) sens_6;
  D.5644_116 = D.5642_114 * sens.17_115;
  i.18_117 = (unsigned int) i_11;
  D.5646_118 = D.5644_116 * i.18_117;
  D.5647_119 = D.5646_118 + depart_15(D);
  Draw_Selected_Arrow (display_12(D), D.5647_119);
  __builtin_puts (&"POSSIBILITE AVEC DE"[0]);
  nbpossibilite_120 = nbpossibilite_10 + 1;
  cpt.19_121 = (unsigned int) cpt_4;
  D.5649_122 = cpt.19_121 * 4;
  D.5650_123 = arriveesPossibles_16 + D.5649_122;
  D.5651_124 = gameState_13(D)->die1;
  sens.20_125 = (unsigned int) sens_6;
  D.5653_126 = D.5651_124 * sens.20_125;
  i.21_127 = (unsigned int) i_11;
  D.5655_128 = D.5653_126 * i.21_127;
  D.5656_129 = D.5655_128 + depart_15(D);
  D.5657_130 = (int) D.5656_129;
  *D.5650_123 = D.5657_130;
  cpt_131 = cpt_4 + 1;
  # SUCC: 32 (fallthru)

  # BLOCK 32
  # PRED: 29 (false) 30 (false) 31 (fallthru)
  # cpt_3 = PHI <cpt_4(29), cpt_4(30), cpt_131(31)>
  # nbpossibilite_9 = PHI <nbpossibilite_10(29), nbpossibilite_10(30), nbpossibilite_120(31)>
  i_132 = i_11 + 1;
  # SUCC: 33 (fallthru)

  # BLOCK 33
  # PRED: 25 (fallthru) 32 (fallthru)
  # cpt_4 = PHI <cpt_17(25), cpt_3(32)>
  # nbpossibilite_10 = PHI <nbpossibilite_102(25), nbpossibilite_9(32)>
  # i_11 = PHI <i_103(25), i_132(32)>
  if (i_11 <= 4)
    goto <bb 26>;
  else
    goto <bb 34>;
  # SUCC: 26 (true) 34 (false)

  # BLOCK 34
  # PRED: 21 (false) 33 (false) 20 (false) 24 (fallthru) 23 (false)
  D.5658_133 = display_12(D)->screen;
  SDL_Flip (D.5658_133);
  D.5659_134 = arriveesPossibles_16;
  return D.5659_134;
  # SUCC: EXIT

}


Partition 7: size 4 align 4
	arriveesPossibles_16, offset 0
Partition 6: size 4 align 4
	i_11, offset 0
Partition 5: size 4 align 4
	nbpossibilite_9, offset 0
Partition 4: size 4 align 4
	arrowWithDie2_8, offset 0
Partition 3: size 4 align 4
	arrowWithDie1_7, offset 0
Partition 2: size 4 align 4
	sens_6, offset 0
Partition 1: size 4 align 4
	i_5, offset 0
Partition 0: size 4 align 4
	cpt_1, offset 0
Partition 10: size 8 align 4
	ArriveeAvecDE1ETDE2, offset 0
	ArriveeAvecDE, offset 0
Partition 9: size 8 align 4
	ArriveeAvecDE2, offset 0
Partition 8: size 8 align 4
	ArriveeAvecDE1, offset 0

;; Generating RTL for gimple basic block 2

;; Display_RefreshGameBoard (display_12(D), gameState_13(D), game_14(D));

(insn 5 4 6 (set (reg/f:SI 160)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 16 [0x10])) [0 game+0 S4 A32])) src/gui.c:864 -1
     (nil))

(insn 6 5 7 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 160)) src/gui.c:864 -1
     (nil))

(insn 7 6 8 (set (reg/f:SI 161)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:864 -1
     (nil))

(insn 8 7 9 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 161)) src/gui.c:864 -1
     (nil))

(insn 9 8 10 (set (reg/f:SI 162)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:864 -1
     (nil))

(insn 10 9 11 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 162)) src/gui.c:864 -1
     (nil))

(call_insn 11 10 0 (call (mem:QI (symbol_ref:SI ("Display_RefreshGameBoard") [flags 0x3]  <function_decl 0x4081a780 Display_RefreshGameBoard>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:864 -1
     (nil)
    (nil))

;; colorChecker (display_12(D), gameState_13(D), depart_15(D));

(insn 12 11 13 (set (reg:SI 163)
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 depart+0 S4 A32])) src/gui.c:865 -1
     (nil))

(insn 13 12 14 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 163)) src/gui.c:865 -1
     (nil))

(insn 14 13 15 (set (reg/f:SI 164)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:865 -1
     (nil))

(insn 15 14 16 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 164)) src/gui.c:865 -1
     (nil))

(insn 16 15 17 (set (reg/f:SI 165)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:865 -1
     (nil))

(insn 17 16 18 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 165)) src/gui.c:865 -1
     (nil))

(call_insn 18 17 0 (call (mem:QI (symbol_ref:SI ("colorChecker") [flags 0x3]  <function_decl 0x4081a680 colorChecker>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:865 -1
     (nil)
    (nil))

;; arriveesPossibles_16 = malloc (112);

(insn 19 18 20 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 112 [0x70])) src/gui.c:867 -1
     (nil))

(call_insn 20 19 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:867 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 21 20 22 (set (reg/f:SI 166)
        (reg:SI 0 ax)) src/gui.c:867 -1
     (expr_list:REG_NOALIAS (reg/f:SI 166)
        (nil)))

(insn 22 21 0 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 arriveesPossibles+0 S4 A32])
        (reg/f:SI 166)) src/gui.c:867 -1
     (nil))

;; cpt_17 = 0;

(insn 23 22 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
        (const_int 0 [0])) src/gui.c:868 -1
     (nil))

;; i_18 = 0;

(insn 24 23 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:869 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; i.2_19 = (unsigned int) i_5;

(insn 28 27 0 (set (reg:SI 59 [ i.2 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) src/gui.c:869 -1
     (nil))

;; D.5532_20 = i.2_19 * 4;

(insn 29 28 0 (parallel [
            (set (reg:SI 60 [ D.5532 ])
                (ashift:SI (reg:SI 59 [ i.2 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:869 -1
     (nil))

;; D.5533_21 = arriveesPossibles_16 + D.5532_20;

(insn 30 29 0 (parallel [
            (set (reg/f:SI 61 [ D.5533 ])
                (plus:SI (reg:SI 60 [ D.5532 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 arriveesPossibles+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:869 -1
     (nil))

;; *D.5533_21 = -1;

(insn 31 30 0 (set (mem:SI (reg/f:SI 61 [ D.5533 ]) [0 *D.5533_21+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) src/gui.c:869 -1
     (nil))

;; i_22 = i_5 + 1;

(insn 32 31 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:869 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 33 32 34 174 "" [0 uses])

(note 34 33 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_5 <= 27)

(insn 36 34 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
            (const_int 27 [0x1b]))) src/gui.c:869 -1
     (nil))

(jump_insn 37 36 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) src/gui.c:869 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; sens_23 = 1;

(insn 39 38 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:870 -1
     (nil))

;; if (player_24(D) == 1)

(insn 40 39 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32])
            (const_int 1 [0x1]))) src/gui.c:871 -1
     (nil))

(jump_insn 41 40 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:871 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; sens_25 = -1;

(insn 43 42 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) src/gui.c:873 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 44 43 45 176 "" [0 uses])

(note 45 44 0 NOTE_INSN_BASIC_BLOCK)

;; D.5536_26 = (const char * restrict) &"sens = %d\n"[0];

(insn 46 45 0 (set (reg/f:SI 62 [ D.5536 ])
        (symbol_ref/f:SI ("*.LC29") [flags 0x2]  <var_decl 0x409cd1e0 *.LC29>)) src/gui.c:875 -1
     (nil))

;; printf (D.5536_26, sens_6);

(insn 47 46 48 (set (reg:SI 167)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:875 -1
     (nil))

(insn 48 47 49 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 167)) src/gui.c:875 -1
     (nil))

(insn 49 48 50 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 62 [ D.5536 ])) src/gui.c:875 -1
     (nil))

(call_insn 50 49 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x406b1b80 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:875 -1
     (nil)
    (nil))

;; D.5537_27 = gameState_13(D)->die1;

(insn 51 50 52 (set (reg/f:SI 168)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:876 -1
     (nil))

(insn 52 51 0 (set (reg:SI 63 [ D.5537 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 168)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:876 -1
     (nil))

;; D.5538_28 = gameState_13(D)->die2;

(insn 53 52 54 (set (reg/f:SI 169)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:876 -1
     (nil))

(insn 54 53 0 (set (reg:SI 64 [ D.5538 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 169)
                (const_int 228 [0xe4])) [0 gameState_13(D)->die2+0 S4 A32])) src/gui.c:876 -1
     (nil))

;; if (D.5537_27 != D.5538_28)

(insn 55 54 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 63 [ D.5537 ])
            (reg:SI 64 [ D.5538 ]))) src/gui.c:876 -1
     (nil))

(jump_insn 56 55 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:876 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; D.5541_29 = gameState_13(D)->die1;

(insn 58 57 59 (set (reg/f:SI 170)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:878 -1
     (nil))

(insn 59 58 0 (set (reg:SI 65 [ D.5541 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 170)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:878 -1
     (nil))

;; sens.3_30 = (unsigned int) sens_6;

(insn 60 59 0 (set (reg:SI 66 [ sens.3 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:878 -1
     (nil))

;; D.5543_31 = D.5541_29 * sens.3_30;

(insn 61 60 0 (parallel [
            (set (reg:SI 67 [ D.5543 ])
                (mult:SI (reg:SI 65 [ D.5541 ])
                    (reg:SI 66 [ sens.3 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:878 -1
     (nil))

;; D.5544_32 = D.5543_31 + depart_15(D);

(insn 62 61 0 (parallel [
            (set (reg:SI 68 [ D.5544 ])
                (plus:SI (reg:SI 67 [ D.5543 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:878 -1
     (nil))

;; ArriveeAvecDE1 = gameState_13(D)->zones[D.5544_32];

(insn 63 62 64 (set (reg/f:SI 171)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:878 -1
     (nil))

(insn 64 63 65 (set (reg:DI 172)
        (mem/s/j:DI (plus:SI (mult:SI (reg:SI 68 [ D.5544 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 171)) [0 gameState_13(D)->zones S8 A32])) src/gui.c:878 -1
     (nil))

(insn 65 64 0 (set (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 ArriveeAvecDE1+0 S8 A32])
        (reg:DI 172)) src/gui.c:878 -1
     (nil))

;; D.5545_33 = gameState_13(D)->die2;

(insn 66 65 67 (set (reg/f:SI 173)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:879 -1
     (nil))

(insn 67 66 0 (set (reg:SI 69 [ D.5545 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 173)
                (const_int 228 [0xe4])) [0 gameState_13(D)->die2+0 S4 A32])) src/gui.c:879 -1
     (nil))

;; sens.4_34 = (unsigned int) sens_6;

(insn 68 67 0 (set (reg:SI 70 [ sens.4 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:879 -1
     (nil))

;; D.5547_35 = D.5545_33 * sens.4_34;

(insn 69 68 0 (parallel [
            (set (reg:SI 71 [ D.5547 ])
                (mult:SI (reg:SI 69 [ D.5545 ])
                    (reg:SI 70 [ sens.4 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:879 -1
     (nil))

;; D.5548_36 = D.5547_35 + depart_15(D);

(insn 70 69 0 (parallel [
            (set (reg:SI 72 [ D.5548 ])
                (plus:SI (reg:SI 71 [ D.5547 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:879 -1
     (nil))

;; ArriveeAvecDE2 = gameState_13(D)->zones[D.5548_36];

(insn 71 70 72 (set (reg/f:SI 174)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:879 -1
     (nil))

(insn 72 71 73 (set (reg:DI 175)
        (mem/s/j:DI (plus:SI (mult:SI (reg:SI 72 [ D.5548 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 174)) [0 gameState_13(D)->zones S8 A32])) src/gui.c:879 -1
     (nil))

(insn 73 72 0 (set (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 ArriveeAvecDE2+0 S8 A32])
        (reg:DI 175)) src/gui.c:879 -1
     (nil))

;; D.5549_37 = gameState_13(D)->die1;

(insn 74 73 75 (set (reg/f:SI 176)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:880 -1
     (nil))

(insn 75 74 0 (set (reg:SI 73 [ D.5549 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 176)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:880 -1
     (nil))

;; D.5550_38 = gameState_13(D)->die2;

(insn 76 75 77 (set (reg/f:SI 177)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:880 -1
     (nil))

(insn 77 76 0 (set (reg:SI 74 [ D.5550 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 177)
                (const_int 228 [0xe4])) [0 gameState_13(D)->die2+0 S4 A32])) src/gui.c:880 -1
     (nil))

;; D.5551_39 = D.5549_37 + D.5550_38;

(insn 78 77 0 (parallel [
            (set (reg:SI 75 [ D.5551 ])
                (plus:SI (reg:SI 73 [ D.5549 ])
                    (reg:SI 74 [ D.5550 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:880 -1
     (nil))

;; sens.5_40 = (unsigned int) sens_6;

(insn 79 78 0 (set (reg:SI 76 [ sens.5 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:880 -1
     (nil))

;; D.5553_41 = D.5551_39 * sens.5_40;

(insn 80 79 0 (parallel [
            (set (reg:SI 77 [ D.5553 ])
                (mult:SI (reg:SI 75 [ D.5551 ])
                    (reg:SI 76 [ sens.5 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:880 -1
     (nil))

;; D.5554_42 = D.5553_41 + depart_15(D);

(insn 81 80 0 (parallel [
            (set (reg:SI 78 [ D.5554 ])
                (plus:SI (reg:SI 77 [ D.5553 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:880 -1
     (nil))

;; ArriveeAvecDE1ETDE2 = gameState_13(D)->zones[D.5554_42];

(insn 82 81 83 (set (reg/f:SI 178)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:880 -1
     (nil))

(insn 83 82 84 (set (reg:DI 179)
        (mem/s/j:DI (plus:SI (mult:SI (reg:SI 78 [ D.5554 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 178)) [0 gameState_13(D)->zones S8 A32])) src/gui.c:880 -1
     (nil))

(insn 84 83 0 (set (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 ArriveeAvecDE1ETDE2+0 S8 A32])
        (reg:DI 179)) src/gui.c:880 -1
     (nil))

;; arrowWithDie1_43 = 0;

(insn 85 84 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 arrowWithDie1+0 S4 A32])
        (const_int 0 [0])) src/gui.c:881 -1
     (nil))

;; arrowWithDie2_44 = 0;

(insn 86 85 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arrowWithDie2+0 S4 A32])
        (const_int 0 [0])) src/gui.c:882 -1
     (nil))

;; D.5557_45 = ArriveeAvecDE1.player;

(insn 87 86 0 (set (reg:SI 79 [ D.5557 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 ArriveeAvecDE1.player+0 S4 A32])) src/gui.c:884 -1
     (nil))

;; if (D.5557_45 == player_24(D))

(insn 88 87 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79 [ D.5557 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:884 -1
     (nil))

(jump_insn 89 88 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:884 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; D.5559_46 = ArriveeAvecDE1.nb_checkers;

(insn 91 90 0 (set (reg:SI 80 [ D.5559 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 ArriveeAvecDE1.nb_checkers+0 S4 A32])) src/gui.c:884 -1
     (nil))

;; if (D.5559_46 == 0)

(insn 92 91 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 80 [ D.5559 ])
            (const_int 0 [0]))) src/gui.c:884 -1
     (nil))

(jump_insn 93 92 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:884 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; D.5561_47 = ArriveeAvecDE1.player;

(insn 95 94 0 (set (reg:SI 81 [ D.5561 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 ArriveeAvecDE1.player+0 S4 A32])) src/gui.c:884 -1
     (nil))

;; if (D.5561_47 != player_24(D))

(insn 96 95 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81 [ D.5561 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:884 -1
     (nil))

(jump_insn 97 96 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:884 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; D.5563_48 = ArriveeAvecDE1.nb_checkers;

(insn 99 98 0 (set (reg:SI 82 [ D.5563 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 ArriveeAvecDE1.nb_checkers+0 S4 A32])) src/gui.c:884 -1
     (nil))

;; if (D.5563_48 == 1)

(insn 100 99 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ D.5563 ])
            (const_int 1 [0x1]))) src/gui.c:884 -1
     (nil))

(jump_insn 101 100 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:884 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 102 101 103 178 "" [0 uses])

(note 103 102 0 NOTE_INSN_BASIC_BLOCK)

;; D.5564_49 = gameState_13(D)->die1;

(insn 104 103 105 (set (reg/f:SI 180)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:887 -1
     (nil))

(insn 105 104 0 (set (reg:SI 83 [ D.5564 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 180)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:887 -1
     (nil))

;; sens.6_50 = (unsigned int) sens_6;

(insn 106 105 0 (set (reg:SI 84 [ sens.6 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:887 -1
     (nil))

;; D.5566_51 = D.5564_49 * sens.6_50;

(insn 107 106 0 (parallel [
            (set (reg:SI 85 [ D.5566 ])
                (mult:SI (reg:SI 83 [ D.5564 ])
                    (reg:SI 84 [ sens.6 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:887 -1
     (nil))

;; D.5567_52 = D.5566_51 + depart_15(D);

(insn 108 107 0 (parallel [
            (set (reg:SI 86 [ D.5567 ])
                (plus:SI (reg:SI 85 [ D.5566 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:887 -1
     (nil))

;; Draw_Selected_Arrow (display_12(D), D.5567_52);

(insn 109 108 110 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 86 [ D.5567 ])) src/gui.c:887 -1
     (nil))

(insn 110 109 111 (set (reg/f:SI 181)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:887 -1
     (nil))

(insn 111 110 112 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 181)) src/gui.c:887 -1
     (nil))

(call_insn 112 111 0 (call (mem:QI (symbol_ref:SI ("Draw_Selected_Arrow") [flags 0x3]  <function_decl 0x4081a500 Draw_Selected_Arrow>) [0 S1 A8])
        (const_int 8 [0x8])) src/gui.c:887 -1
     (nil)
    (nil))

;; arrowWithDie1_53 = 1;

(insn 113 112 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 arrowWithDie1+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:888 -1
     (nil))

;; cpt.7_54 = (unsigned int) cpt_17;

(insn 114 113 0 (set (reg:SI 87 [ cpt.7 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])) src/gui.c:889 -1
     (nil))

;; D.5569_55 = cpt.7_54 * 4;

(insn 115 114 0 (parallel [
            (set (reg:SI 88 [ D.5569 ])
                (ashift:SI (reg:SI 87 [ cpt.7 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:889 -1
     (nil))

;; D.5570_56 = arriveesPossibles_16 + D.5569_55;

(insn 116 115 0 (parallel [
            (set (reg/f:SI 89 [ D.5570 ])
                (plus:SI (reg:SI 88 [ D.5569 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 arriveesPossibles+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:889 -1
     (nil))

;; D.5571_57 = gameState_13(D)->die1;

(insn 117 116 118 (set (reg/f:SI 182)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:889 -1
     (nil))

(insn 118 117 0 (set (reg:SI 90 [ D.5571 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 182)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:889 -1
     (nil))

;; sens.8_58 = (unsigned int) sens_6;

(insn 119 118 0 (set (reg:SI 91 [ sens.8 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:889 -1
     (nil))

;; D.5573_59 = D.5571_57 * sens.8_58;

(insn 120 119 0 (parallel [
            (set (reg:SI 92 [ D.5573 ])
                (mult:SI (reg:SI 90 [ D.5571 ])
                    (reg:SI 91 [ sens.8 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:889 -1
     (nil))

;; D.5574_60 = D.5573_59 + depart_15(D);

(insn 121 120 0 (parallel [
            (set (reg:SI 93 [ D.5574 ])
                (plus:SI (reg:SI 92 [ D.5573 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:889 -1
     (nil))

;; D.5575_61 = (int) D.5574_60;

(insn 122 121 0 (set (reg:SI 94 [ D.5575 ])
        (reg:SI 93 [ D.5574 ])) src/gui.c:889 -1
     (nil))

;; *D.5570_56 = D.5575_61;

(insn 123 122 0 (set (mem:SI (reg/f:SI 89 [ D.5570 ]) [0 *D.5570_56+0 S4 A32])
        (reg:SI 94 [ D.5575 ])) src/gui.c:889 -1
     (nil))

;; cpt_62 = cpt_17 + 1;

(insn 124 123 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:890 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 125 124 126 179 "" [0 uses])

(note 126 125 0 NOTE_INSN_BASIC_BLOCK)

;; D.5578_63 = ArriveeAvecDE2.player;

(insn 127 126 0 (set (reg:SI 95 [ D.5578 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 ArriveeAvecDE2.player+0 S4 A32])) src/gui.c:892 -1
     (nil))

;; if (D.5578_63 == player_24(D))

(insn 128 127 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.5578 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:892 -1
     (nil))

(jump_insn 129 128 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:892 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; D.5580_64 = ArriveeAvecDE2.nb_checkers;

(insn 131 130 0 (set (reg:SI 96 [ D.5580 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 ArriveeAvecDE2.nb_checkers+0 S4 A32])) src/gui.c:892 -1
     (nil))

;; if (D.5580_64 == 0)

(insn 132 131 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.5580 ])
            (const_int 0 [0]))) src/gui.c:892 -1
     (nil))

(jump_insn 133 132 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:892 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; D.5582_65 = ArriveeAvecDE2.player;

(insn 135 134 0 (set (reg:SI 97 [ D.5582 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 ArriveeAvecDE2.player+0 S4 A32])) src/gui.c:892 -1
     (nil))

;; if (D.5582_65 != player_24(D))

(insn 136 135 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.5582 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:892 -1
     (nil))

(jump_insn 137 136 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:892 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; D.5584_66 = ArriveeAvecDE2.nb_checkers;

(insn 139 138 0 (set (reg:SI 98 [ D.5584 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 ArriveeAvecDE2.nb_checkers+0 S4 A32])) src/gui.c:892 -1
     (nil))

;; if (D.5584_66 == 1)

(insn 140 139 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.5584 ])
            (const_int 1 [0x1]))) src/gui.c:892 -1
     (nil))

(jump_insn 141 140 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:892 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; 

(code_label 142 141 143 180 "" [0 uses])

(note 143 142 0 NOTE_INSN_BASIC_BLOCK)

;; D.5585_67 = gameState_13(D)->die2;

(insn 144 143 145 (set (reg/f:SI 183)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:895 -1
     (nil))

(insn 145 144 0 (set (reg:SI 99 [ D.5585 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 183)
                (const_int 228 [0xe4])) [0 gameState_13(D)->die2+0 S4 A32])) src/gui.c:895 -1
     (nil))

;; sens.9_68 = (unsigned int) sens_6;

(insn 146 145 0 (set (reg:SI 100 [ sens.9 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:895 -1
     (nil))

;; D.5587_69 = D.5585_67 * sens.9_68;

(insn 147 146 0 (parallel [
            (set (reg:SI 101 [ D.5587 ])
                (mult:SI (reg:SI 99 [ D.5585 ])
                    (reg:SI 100 [ sens.9 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:895 -1
     (nil))

;; D.5588_70 = D.5587_69 + depart_15(D);

(insn 148 147 0 (parallel [
            (set (reg:SI 102 [ D.5588 ])
                (plus:SI (reg:SI 101 [ D.5587 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:895 -1
     (nil))

;; Draw_Selected_Arrow (display_12(D), D.5588_70);

(insn 149 148 150 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 102 [ D.5588 ])) src/gui.c:895 -1
     (nil))

(insn 150 149 151 (set (reg/f:SI 184)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:895 -1
     (nil))

(insn 151 150 152 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 184)) src/gui.c:895 -1
     (nil))

(call_insn 152 151 0 (call (mem:QI (symbol_ref:SI ("Draw_Selected_Arrow") [flags 0x3]  <function_decl 0x4081a500 Draw_Selected_Arrow>) [0 S1 A8])
        (const_int 8 [0x8])) src/gui.c:895 -1
     (nil)
    (nil))

;; __builtin_puts (&"POSSIBILITE AVEC DE2"[0]);

(insn 153 152 154 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC30") [flags 0x2]  <var_decl 0x409cd240 *.LC30>)) src/gui.c:896 -1
     (nil))

(call_insn 154 153 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0x406b1e00 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:896 -1
     (nil)
    (nil))

;; arrowWithDie2_71 = 1;

(insn 155 154 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arrowWithDie2+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:897 -1
     (nil))

;; cpt.10_72 = (unsigned int) cpt_1;

(insn 156 155 0 (set (reg:SI 103 [ cpt.10 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])) src/gui.c:898 -1
     (nil))

;; D.5590_73 = cpt.10_72 * 4;

(insn 157 156 0 (parallel [
            (set (reg:SI 104 [ D.5590 ])
                (ashift:SI (reg:SI 103 [ cpt.10 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:898 -1
     (nil))

;; D.5591_74 = arriveesPossibles_16 + D.5590_73;

(insn 158 157 0 (parallel [
            (set (reg/f:SI 105 [ D.5591 ])
                (plus:SI (reg:SI 104 [ D.5590 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 arriveesPossibles+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:898 -1
     (nil))

;; D.5592_75 = gameState_13(D)->die2;

(insn 159 158 160 (set (reg/f:SI 185)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:898 -1
     (nil))

(insn 160 159 0 (set (reg:SI 106 [ D.5592 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 185)
                (const_int 228 [0xe4])) [0 gameState_13(D)->die2+0 S4 A32])) src/gui.c:898 -1
     (nil))

;; sens.11_76 = (unsigned int) sens_6;

(insn 161 160 0 (set (reg:SI 107 [ sens.11 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:898 -1
     (nil))

;; D.5594_77 = D.5592_75 * sens.11_76;

(insn 162 161 0 (parallel [
            (set (reg:SI 108 [ D.5594 ])
                (mult:SI (reg:SI 106 [ D.5592 ])
                    (reg:SI 107 [ sens.11 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:898 -1
     (nil))

;; D.5595_78 = D.5594_77 + depart_15(D);

(insn 163 162 0 (parallel [
            (set (reg:SI 109 [ D.5595 ])
                (plus:SI (reg:SI 108 [ D.5594 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:898 -1
     (nil))

;; D.5596_79 = (int) D.5595_78;

(insn 164 163 0 (set (reg:SI 110 [ D.5596 ])
        (reg:SI 109 [ D.5595 ])) src/gui.c:898 -1
     (nil))

;; *D.5591_74 = D.5596_79;

(insn 165 164 0 (set (mem:SI (reg/f:SI 105 [ D.5591 ]) [0 *D.5591_74+0 S4 A32])
        (reg:SI 110 [ D.5596 ])) src/gui.c:898 -1
     (nil))

;; cpt_80 = cpt_1 + 1;

(insn 166 165 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:899 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 167 166 168 181 "" [0 uses])

(note 168 167 0 NOTE_INSN_BASIC_BLOCK)

;; D.5600_81 = ArriveeAvecDE1ETDE2.player;

(insn 169 168 0 (set (reg:SI 111 [ D.5600 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 ArriveeAvecDE1ETDE2.player+0 S4 A32])) src/gui.c:901 -1
     (nil))

;; if (D.5600_81 == player_24(D))

(insn 170 169 171 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.5600 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:901 -1
     (nil))

(jump_insn 171 170 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:901 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; D.5602_82 = ArriveeAvecDE1ETDE2.nb_checkers;

(insn 173 172 0 (set (reg:SI 112 [ D.5602 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 ArriveeAvecDE1ETDE2.nb_checkers+0 S4 A32])) src/gui.c:901 -1
     (nil))

;; if (D.5602_82 == 0)

(insn 174 173 175 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.5602 ])
            (const_int 0 [0]))) src/gui.c:901 -1
     (nil))

(jump_insn 175 174 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:901 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; D.5604_83 = ArriveeAvecDE1ETDE2.player;

(insn 177 176 0 (set (reg:SI 113 [ D.5604 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 ArriveeAvecDE1ETDE2.player+0 S4 A32])) src/gui.c:901 -1
     (nil))

;; if (D.5604_83 != player_24(D))

(insn 178 177 179 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.5604 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:901 -1
     (nil))

(jump_insn 179 178 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:901 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; D.5606_84 = ArriveeAvecDE1ETDE2.nb_checkers;

(insn 181 180 0 (set (reg:SI 114 [ D.5606 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 ArriveeAvecDE1ETDE2.nb_checkers+0 S4 A32])) src/gui.c:901 -1
     (nil))

;; if (D.5606_84 == 1)

(insn 182 181 183 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 114 [ D.5606 ])
            (const_int 1 [0x1]))) src/gui.c:901 -1
     (nil))

(jump_insn 183 182 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:901 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; 

(code_label 184 183 185 182 "" [0 uses])

(note 185 184 0 NOTE_INSN_BASIC_BLOCK)

;; if (arrowWithDie1_7 != 0)

(insn 186 185 187 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 arrowWithDie1+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:901 -1
     (nil))

(jump_insn 187 186 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:901 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; if (arrowWithDie2_8 != 0)

(insn 189 188 190 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 arrowWithDie2+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:901 -1
     (nil))

(jump_insn 190 189 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:901 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; 

(code_label 191 190 192 184 "" [0 uses])

(note 192 191 0 NOTE_INSN_BASIC_BLOCK)

;; D.5608_85 = gameState_13(D)->die1;

(insn 193 192 194 (set (reg/f:SI 186)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:904 -1
     (nil))

(insn 194 193 0 (set (reg:SI 115 [ D.5608 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 186)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:904 -1
     (nil))

;; D.5609_86 = gameState_13(D)->die2;

(insn 195 194 196 (set (reg/f:SI 187)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:904 -1
     (nil))

(insn 196 195 0 (set (reg:SI 116 [ D.5609 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 187)
                (const_int 228 [0xe4])) [0 gameState_13(D)->die2+0 S4 A32])) src/gui.c:904 -1
     (nil))

;; D.5610_87 = D.5608_85 + D.5609_86;

(insn 197 196 0 (parallel [
            (set (reg:SI 117 [ D.5610 ])
                (plus:SI (reg:SI 115 [ D.5608 ])
                    (reg:SI 116 [ D.5609 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:904 -1
     (nil))

;; sens.12_88 = (unsigned int) sens_6;

(insn 198 197 0 (set (reg:SI 118 [ sens.12 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:904 -1
     (nil))

;; D.5612_89 = D.5610_87 * sens.12_88;

(insn 199 198 0 (parallel [
            (set (reg:SI 119 [ D.5612 ])
                (mult:SI (reg:SI 117 [ D.5610 ])
                    (reg:SI 118 [ sens.12 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:904 -1
     (nil))

;; D.5613_90 = D.5612_89 + depart_15(D);

(insn 200 199 0 (parallel [
            (set (reg:SI 120 [ D.5613 ])
                (plus:SI (reg:SI 119 [ D.5612 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:904 -1
     (nil))

;; Draw_Selected_Arrow (display_12(D), D.5613_90);

(insn 201 200 202 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 120 [ D.5613 ])) src/gui.c:904 -1
     (nil))

(insn 202 201 203 (set (reg/f:SI 188)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:904 -1
     (nil))

(insn 203 202 204 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 188)) src/gui.c:904 -1
     (nil))

(call_insn 204 203 0 (call (mem:QI (symbol_ref:SI ("Draw_Selected_Arrow") [flags 0x3]  <function_decl 0x4081a500 Draw_Selected_Arrow>) [0 S1 A8])
        (const_int 8 [0x8])) src/gui.c:904 -1
     (nil)
    (nil))

;; __builtin_puts (&"POSSIBILITE AVEC DE1 et DE2"[0]);

(insn 205 204 206 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC31") [flags 0x2]  <var_decl 0x409cd2a0 *.LC31>)) src/gui.c:905 -1
     (nil))

(call_insn 206 205 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0x406b1e00 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:905 -1
     (nil)
    (nil))

;; cpt.13_91 = (unsigned int) cpt_2;

(insn 207 206 0 (set (reg:SI 121 [ cpt.13 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])) src/gui.c:906 -1
     (nil))

;; D.5615_92 = cpt.13_91 * 4;

(insn 208 207 0 (parallel [
            (set (reg:SI 122 [ D.5615 ])
                (ashift:SI (reg:SI 121 [ cpt.13 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:906 -1
     (nil))

;; D.5616_93 = arriveesPossibles_16 + D.5615_92;

(insn 209 208 0 (parallel [
            (set (reg/f:SI 123 [ D.5616 ])
                (plus:SI (reg:SI 122 [ D.5615 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 arriveesPossibles+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:906 -1
     (nil))

;; D.5617_94 = gameState_13(D)->die1;

(insn 210 209 211 (set (reg/f:SI 189)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:906 -1
     (nil))

(insn 211 210 0 (set (reg:SI 124 [ D.5617 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 189)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:906 -1
     (nil))

;; D.5618_95 = gameState_13(D)->die2;

(insn 212 211 213 (set (reg/f:SI 190)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:906 -1
     (nil))

(insn 213 212 0 (set (reg:SI 125 [ D.5618 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 190)
                (const_int 228 [0xe4])) [0 gameState_13(D)->die2+0 S4 A32])) src/gui.c:906 -1
     (nil))

;; D.5619_96 = D.5617_94 + D.5618_95;

(insn 214 213 0 (parallel [
            (set (reg:SI 126 [ D.5619 ])
                (plus:SI (reg:SI 124 [ D.5617 ])
                    (reg:SI 125 [ D.5618 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:906 -1
     (nil))

;; sens.14_97 = (unsigned int) sens_6;

(insn 215 214 0 (set (reg:SI 127 [ sens.14 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:906 -1
     (nil))

;; D.5621_98 = D.5619_96 * sens.14_97;

(insn 216 215 0 (parallel [
            (set (reg:SI 128 [ D.5621 ])
                (mult:SI (reg:SI 126 [ D.5619 ])
                    (reg:SI 127 [ sens.14 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:906 -1
     (nil))

;; D.5622_99 = D.5621_98 + depart_15(D);

(insn 217 216 0 (parallel [
            (set (reg:SI 129 [ D.5622 ])
                (plus:SI (reg:SI 128 [ D.5621 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:906 -1
     (nil))

;; D.5623_100 = (int) D.5622_99;

(insn 218 217 0 (set (reg:SI 130 [ D.5623 ])
        (reg:SI 129 [ D.5622 ])) src/gui.c:906 -1
     (nil))

;; *D.5616_93 = D.5623_100;

(insn 219 218 0 (set (mem:SI (reg/f:SI 123 [ D.5616 ]) [0 *D.5616_93+0 S4 A32])
        (reg:SI 130 [ D.5623 ])) src/gui.c:906 -1
     (nil))

;; cpt_101 = cpt_2 + 1;

(insn 220 219 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:907 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; 

(code_label 223 222 224 177 "" [0 uses])

(note 224 223 0 NOTE_INSN_BASIC_BLOCK)

;; nbpossibilite_102 = 1;

(insn 225 224 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 nbpossibilite+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:913 -1
     (nil))

;; i_103 = 1;

(insn 226 225 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:914 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; D.5625_104 = gameState_13(D)->die1;

(insn 230 229 231 (set (reg/f:SI 191)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:916 -1
     (nil))

(insn 231 230 0 (set (reg:SI 131 [ D.5625 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 191)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:916 -1
     (nil))

;; sens.15_105 = (unsigned int) sens_6;

(insn 232 231 0 (set (reg:SI 132 [ sens.15 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:916 -1
     (nil))

;; D.5627_106 = D.5625_104 * sens.15_105;

(insn 233 232 0 (parallel [
            (set (reg:SI 133 [ D.5627 ])
                (mult:SI (reg:SI 131 [ D.5625 ])
                    (reg:SI 132 [ sens.15 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:916 -1
     (nil))

;; i.16_107 = (unsigned int) i_11;

(insn 234 233 0 (set (reg:SI 134 [ i.16 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) src/gui.c:916 -1
     (nil))

;; D.5629_108 = D.5627_106 * i.16_107;

(insn 235 234 0 (parallel [
            (set (reg:SI 135 [ D.5629 ])
                (mult:SI (reg:SI 133 [ D.5627 ])
                    (reg:SI 134 [ i.16 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:916 -1
     (nil))

;; D.5630_109 = D.5629_108 + depart_15(D);

(insn 236 235 0 (parallel [
            (set (reg:SI 136 [ D.5630 ])
                (plus:SI (reg:SI 135 [ D.5629 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:916 -1
     (nil))

;; ArriveeAvecDE = gameState_13(D)->zones[D.5630_109];

(insn 237 236 238 (set (reg/f:SI 192)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:916 -1
     (nil))

(insn 238 237 239 (set (reg:DI 193)
        (mem/s/j:DI (plus:SI (mult:SI (reg:SI 136 [ D.5630 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 192)) [0 gameState_13(D)->zones S8 A32])) src/gui.c:916 -1
     (nil))

(insn 239 238 0 (set (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 ArriveeAvecDE+0 S8 A32])
        (reg:DI 193)) src/gui.c:916 -1
     (nil))

;; D.5633_110 = ArriveeAvecDE.player;

(insn 240 239 0 (set (reg:SI 137 [ D.5633 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 ArriveeAvecDE.player+0 S4 A32])) src/gui.c:917 -1
     (nil))

;; if (D.5633_110 == player_24(D))

(insn 241 240 242 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 137 [ D.5633 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:917 -1
     (nil))

(jump_insn 242 241 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:917 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; D.5635_111 = ArriveeAvecDE.nb_checkers;

(insn 244 243 0 (set (reg:SI 138 [ D.5635 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 ArriveeAvecDE.nb_checkers+0 S4 A32])) src/gui.c:917 -1
     (nil))

;; if (D.5635_111 == 0)

(insn 245 244 246 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138 [ D.5635 ])
            (const_int 0 [0]))) src/gui.c:917 -1
     (nil))

(jump_insn 246 245 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:917 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; D.5637_112 = ArriveeAvecDE.player;

(insn 248 247 0 (set (reg:SI 139 [ D.5637 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 ArriveeAvecDE.player+0 S4 A32])) src/gui.c:917 -1
     (nil))

;; if (D.5637_112 != player_24(D))

(insn 249 248 250 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 139 [ D.5637 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:917 -1
     (nil))

(jump_insn 250 249 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:917 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; D.5639_113 = ArriveeAvecDE.nb_checkers;

(insn 252 251 0 (set (reg:SI 140 [ D.5639 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 ArriveeAvecDE.nb_checkers+0 S4 A32])) src/gui.c:917 -1
     (nil))

;; if (D.5639_113 == 1)

(insn 253 252 254 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140 [ D.5639 ])
            (const_int 1 [0x1]))) src/gui.c:917 -1
     (nil))

(jump_insn 254 253 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:917 -1
     (nil))

;; Generating RTL for gimple basic block 30

;; 

(code_label 255 254 256 186 "" [0 uses])

(note 256 255 0 NOTE_INSN_BASIC_BLOCK)

;; if (nbpossibilite_10 == i_11)

(insn 257 256 258 (set (reg:SI 194)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 nbpossibilite+0 S4 A32])) src/gui.c:917 -1
     (nil))

(insn 258 257 259 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 194)
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32]))) src/gui.c:917 -1
     (nil))

(jump_insn 259 258 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:917 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; D.5642_114 = gameState_13(D)->die1;

(insn 261 260 262 (set (reg/f:SI 195)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:920 -1
     (nil))

(insn 262 261 0 (set (reg:SI 141 [ D.5642 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 195)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:920 -1
     (nil))

;; sens.17_115 = (unsigned int) sens_6;

(insn 263 262 0 (set (reg:SI 142 [ sens.17 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:920 -1
     (nil))

;; D.5644_116 = D.5642_114 * sens.17_115;

(insn 264 263 0 (parallel [
            (set (reg:SI 143 [ D.5644 ])
                (mult:SI (reg:SI 141 [ D.5642 ])
                    (reg:SI 142 [ sens.17 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:920 -1
     (nil))

;; i.18_117 = (unsigned int) i_11;

(insn 265 264 0 (set (reg:SI 144 [ i.18 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) src/gui.c:920 -1
     (nil))

;; D.5646_118 = D.5644_116 * i.18_117;

(insn 266 265 0 (parallel [
            (set (reg:SI 145 [ D.5646 ])
                (mult:SI (reg:SI 143 [ D.5644 ])
                    (reg:SI 144 [ i.18 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:920 -1
     (nil))

;; D.5647_119 = D.5646_118 + depart_15(D);

(insn 267 266 0 (parallel [
            (set (reg:SI 146 [ D.5647 ])
                (plus:SI (reg:SI 145 [ D.5646 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:920 -1
     (nil))

;; Draw_Selected_Arrow (display_12(D), D.5647_119);

(insn 268 267 269 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 146 [ D.5647 ])) src/gui.c:920 -1
     (nil))

(insn 269 268 270 (set (reg/f:SI 196)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:920 -1
     (nil))

(insn 270 269 271 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 196)) src/gui.c:920 -1
     (nil))

(call_insn 271 270 0 (call (mem:QI (symbol_ref:SI ("Draw_Selected_Arrow") [flags 0x3]  <function_decl 0x4081a500 Draw_Selected_Arrow>) [0 S1 A8])
        (const_int 8 [0x8])) src/gui.c:920 -1
     (nil)
    (nil))

;; __builtin_puts (&"POSSIBILITE AVEC DE"[0]);

(insn 272 271 273 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC32") [flags 0x2]  <var_decl 0x409cd300 *.LC32>)) src/gui.c:921 -1
     (nil))

(call_insn 273 272 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0x406b1e00 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:921 -1
     (nil)
    (nil))

;; nbpossibilite_120 = nbpossibilite_10 + 1;

(insn 274 273 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 nbpossibilite+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 nbpossibilite+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:922 -1
     (nil))

;; cpt.19_121 = (unsigned int) cpt_4;

(insn 275 274 0 (set (reg:SI 147 [ cpt.19 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])) src/gui.c:923 -1
     (nil))

;; D.5649_122 = cpt.19_121 * 4;

(insn 276 275 0 (parallel [
            (set (reg:SI 148 [ D.5649 ])
                (ashift:SI (reg:SI 147 [ cpt.19 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:923 -1
     (nil))

;; D.5650_123 = arriveesPossibles_16 + D.5649_122;

(insn 277 276 0 (parallel [
            (set (reg/f:SI 149 [ D.5650 ])
                (plus:SI (reg:SI 148 [ D.5649 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 arriveesPossibles+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:923 -1
     (nil))

;; D.5651_124 = gameState_13(D)->die1;

(insn 278 277 279 (set (reg/f:SI 197)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:923 -1
     (nil))

(insn 279 278 0 (set (reg:SI 150 [ D.5651 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 197)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:923 -1
     (nil))

;; sens.20_125 = (unsigned int) sens_6;

(insn 280 279 0 (set (reg:SI 151 [ sens.20 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:923 -1
     (nil))

;; D.5653_126 = D.5651_124 * sens.20_125;

(insn 281 280 0 (parallel [
            (set (reg:SI 152 [ D.5653 ])
                (mult:SI (reg:SI 150 [ D.5651 ])
                    (reg:SI 151 [ sens.20 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:923 -1
     (nil))

;; i.21_127 = (unsigned int) i_11;

(insn 282 281 0 (set (reg:SI 153 [ i.21 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) src/gui.c:923 -1
     (nil))

;; D.5655_128 = D.5653_126 * i.21_127;

(insn 283 282 0 (parallel [
            (set (reg:SI 154 [ D.5655 ])
                (mult:SI (reg:SI 152 [ D.5653 ])
                    (reg:SI 153 [ i.21 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:923 -1
     (nil))

;; D.5656_129 = D.5655_128 + depart_15(D);

(insn 284 283 0 (parallel [
            (set (reg:SI 155 [ D.5656 ])
                (plus:SI (reg:SI 154 [ D.5655 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:923 -1
     (nil))

;; D.5657_130 = (int) D.5656_129;

(insn 285 284 0 (set (reg:SI 156 [ D.5657 ])
        (reg:SI 155 [ D.5656 ])) src/gui.c:923 -1
     (nil))

;; *D.5650_123 = D.5657_130;

(insn 286 285 0 (set (mem:SI (reg/f:SI 149 [ D.5650 ]) [0 *D.5650_123+0 S4 A32])
        (reg:SI 156 [ D.5657 ])) src/gui.c:923 -1
     (nil))

;; cpt_131 = cpt_4 + 1;

(insn 287 286 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:924 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; 

(code_label 288 287 289 187 "" [0 uses])

(note 289 288 0 NOTE_INSN_BASIC_BLOCK)

;; i_132 = i_11 + 1;

(insn 290 289 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:914 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; 

(code_label 291 290 292 185 "" [0 uses])

(note 292 291 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_11 <= 4)

(insn 294 292 295 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
            (const_int 4 [0x4]))) src/gui.c:914 -1
     (nil))

(jump_insn 295 294 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 293)
            (pc))) src/gui.c:914 -1
     (nil))

;; Generating RTL for gimple basic block 34

;; 

(code_label 296 295 297 183 "" [0 uses])

(note 297 296 0 NOTE_INSN_BASIC_BLOCK)

;; D.5658_133 = display_12(D)->screen;

(insn 298 297 299 (set (reg/f:SI 198)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:929 -1
     (nil))

(insn 299 298 0 (set (reg/f:SI 157 [ D.5658 ])
        (mem/s/f/j:SI (reg/f:SI 198) [0 display_12(D)->screen+0 S4 A32])) src/gui.c:929 -1
     (nil))

;; SDL_Flip (D.5658_133);

(insn 300 299 301 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 157 [ D.5658 ])) src/gui.c:929 -1
     (nil))

(call_insn 301 300 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_Flip") [flags 0x41]  <function_decl 0x4079fa00 SDL_Flip>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:929 -1
     (nil)
    (nil))

;; D.5659_134 = arriveesPossibles_16;

(insn 302 301 0 (set (reg/f:SI 158 [ D.5659 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 arriveesPossibles+0 S4 A32])) src/gui.c:930 -1
     (nil))

;; return D.5659_134;

(insn 303 302 304 (set (reg:SI 159 [ <retval> ])
        (reg/f:SI 158 [ D.5659 ])) src/gui.c:930 -1
     (nil))

(jump_insn 304 303 305 (set (pc)
        (label_ref 0)) src/gui.c:930 -1
     (nil))

(barrier 305 304 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (reg/f:SI 160)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 16 [0x10])) [0 game+0 S4 A32])) src/gui.c:864 -1
     (nil))

(insn 6 5 7 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 160)) src/gui.c:864 -1
     (nil))

(insn 7 6 8 3 (set (reg/f:SI 161)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:864 -1
     (nil))

(insn 8 7 9 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 161)) src/gui.c:864 -1
     (nil))

(insn 9 8 10 3 (set (reg/f:SI 162)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:864 -1
     (nil))

(insn 10 9 11 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 162)) src/gui.c:864 -1
     (nil))

(call_insn 11 10 12 3 (call (mem:QI (symbol_ref:SI ("Display_RefreshGameBoard") [flags 0x3]  <function_decl 0x4081a780 Display_RefreshGameBoard>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:864 -1
     (nil)
    (nil))

(insn 12 11 13 3 (set (reg:SI 163)
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 12 [0xc])) [0 depart+0 S4 A32])) src/gui.c:865 -1
     (nil))

(insn 13 12 14 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 163)) src/gui.c:865 -1
     (nil))

(insn 14 13 15 3 (set (reg/f:SI 164)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:865 -1
     (nil))

(insn 15 14 16 3 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 164)) src/gui.c:865 -1
     (nil))

(insn 16 15 17 3 (set (reg/f:SI 165)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:865 -1
     (nil))

(insn 17 16 18 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 165)) src/gui.c:865 -1
     (nil))

(call_insn 18 17 19 3 (call (mem:QI (symbol_ref:SI ("colorChecker") [flags 0x3]  <function_decl 0x4081a680 colorChecker>) [0 S1 A8])
        (const_int 12 [0xc])) src/gui.c:865 -1
     (nil)
    (nil))

(insn 19 18 20 3 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (const_int 112 [0x70])) src/gui.c:867 -1
     (nil))

(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("malloc") [flags 0x41]  <function_decl 0x406c3400 malloc>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:867 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 21 20 22 3 (set (reg/f:SI 166)
        (reg:SI 0 ax)) src/gui.c:867 -1
     (expr_list:REG_NOALIAS (reg/f:SI 166)
        (nil)))

(insn 22 21 23 3 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 arriveesPossibles+0 S4 A32])
        (reg/f:SI 166)) src/gui.c:867 -1
     (nil))

(insn 23 22 24 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
        (const_int 0 [0])) src/gui.c:868 -1
     (nil))

(insn 24 23 25 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:869 -1
     (nil))

(jump_insn 25 24 26 3 (set (pc)
        (label_ref 33)) src/gui.c:869 -1
     (nil)
 -> 33)
;; End of basic block 3 -> ( 5)

;; Succ edge  5

(barrier 26 25 35)

;; Start of basic block ( 5) -> 4
;; Pred edge  5
(code_label 35 26 27 4 175 "" [1 uses])

(note 27 35 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 4 (set (reg:SI 59 [ i.2 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) src/gui.c:869 -1
     (nil))

(insn 29 28 30 4 (parallel [
            (set (reg:SI 60 [ D.5532 ])
                (ashift:SI (reg:SI 59 [ i.2 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:869 -1
     (nil))

(insn 30 29 31 4 (parallel [
            (set (reg/f:SI 61 [ D.5533 ])
                (plus:SI (reg:SI 60 [ D.5532 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 arriveesPossibles+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:869 -1
     (nil))

(insn 31 30 32 4 (set (mem:SI (reg/f:SI 61 [ D.5533 ]) [0 *D.5533_21+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) src/gui.c:869 -1
     (nil))

(insn 32 31 33 4 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:869 -1
     (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 33 32 34 5 174 "" [1 uses])

(note 34 33 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 36 34 37 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
            (const_int 27 [0x1b]))) src/gui.c:869 -1
     (nil))

(jump_insn 37 36 38 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) src/gui.c:869 -1
     (nil)
 -> 35)
;; End of basic block 5 -> ( 4 6)

;; Succ edge  4
;; Succ edge  6 (fallthru)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 6 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:870 -1
     (nil))

(insn 40 39 41 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32])
            (const_int 1 [0x1]))) src/gui.c:871 -1
     (nil))

(jump_insn 41 40 42 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) src/gui.c:871 -1
     (nil)
 -> 44)
;; End of basic block 6 -> ( 7 8)

;; Succ edge  7 (fallthru)
;; Succ edge  8

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 7 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) src/gui.c:873 -1
     (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 6 7) -> 8
;; Pred edge  6
;; Pred edge  7 (fallthru)
(code_label 44 43 45 8 176 "" [1 uses])

(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 8 (set (reg/f:SI 62 [ D.5536 ])
        (symbol_ref/f:SI ("*.LC29") [flags 0x2]  <var_decl 0x409cd1e0 *.LC29>)) src/gui.c:875 -1
     (nil))

(insn 47 46 48 8 (set (reg:SI 167)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:875 -1
     (nil))

(insn 48 47 49 8 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 167)) src/gui.c:875 -1
     (nil))

(insn 49 48 50 8 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 62 [ D.5536 ])) src/gui.c:875 -1
     (nil))

(call_insn 50 49 51 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x406b1b80 printf>) [0 S1 A8])
            (const_int 8 [0x8]))) src/gui.c:875 -1
     (nil)
    (nil))

(insn 51 50 52 8 (set (reg/f:SI 168)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:876 -1
     (nil))

(insn 52 51 53 8 (set (reg:SI 63 [ D.5537 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 168)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:876 -1
     (nil))

(insn 53 52 54 8 (set (reg/f:SI 169)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:876 -1
     (nil))

(insn 54 53 55 8 (set (reg:SI 64 [ D.5538 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 169)
                (const_int 228 [0xe4])) [0 gameState_13(D)->die2+0 S4 A32])) src/gui.c:876 -1
     (nil))

(insn 55 54 56 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 63 [ D.5537 ])
            (reg:SI 64 [ D.5538 ]))) src/gui.c:876 -1
     (nil))

(jump_insn 56 55 57 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) src/gui.c:876 -1
     (nil)
 -> 223)
;; End of basic block 8 -> ( 9 26)

;; Succ edge  9 (fallthru)
;; Succ edge  26

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 9 (set (reg/f:SI 170)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:878 -1
     (nil))

(insn 59 58 60 9 (set (reg:SI 65 [ D.5541 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 170)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:878 -1
     (nil))

(insn 60 59 61 9 (set (reg:SI 66 [ sens.3 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:878 -1
     (nil))

(insn 61 60 62 9 (parallel [
            (set (reg:SI 67 [ D.5543 ])
                (mult:SI (reg:SI 65 [ D.5541 ])
                    (reg:SI 66 [ sens.3 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:878 -1
     (nil))

(insn 62 61 63 9 (parallel [
            (set (reg:SI 68 [ D.5544 ])
                (plus:SI (reg:SI 67 [ D.5543 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:878 -1
     (nil))

(insn 63 62 64 9 (set (reg/f:SI 171)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:878 -1
     (nil))

(insn 64 63 65 9 (set (reg:DI 172)
        (mem/s/j:DI (plus:SI (mult:SI (reg:SI 68 [ D.5544 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 171)) [0 gameState_13(D)->zones S8 A32])) src/gui.c:878 -1
     (nil))

(insn 65 64 66 9 (set (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 ArriveeAvecDE1+0 S8 A32])
        (reg:DI 172)) src/gui.c:878 -1
     (nil))

(insn 66 65 67 9 (set (reg/f:SI 173)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:879 -1
     (nil))

(insn 67 66 68 9 (set (reg:SI 69 [ D.5545 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 173)
                (const_int 228 [0xe4])) [0 gameState_13(D)->die2+0 S4 A32])) src/gui.c:879 -1
     (nil))

(insn 68 67 69 9 (set (reg:SI 70 [ sens.4 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:879 -1
     (nil))

(insn 69 68 70 9 (parallel [
            (set (reg:SI 71 [ D.5547 ])
                (mult:SI (reg:SI 69 [ D.5545 ])
                    (reg:SI 70 [ sens.4 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:879 -1
     (nil))

(insn 70 69 71 9 (parallel [
            (set (reg:SI 72 [ D.5548 ])
                (plus:SI (reg:SI 71 [ D.5547 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:879 -1
     (nil))

(insn 71 70 72 9 (set (reg/f:SI 174)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:879 -1
     (nil))

(insn 72 71 73 9 (set (reg:DI 175)
        (mem/s/j:DI (plus:SI (mult:SI (reg:SI 72 [ D.5548 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 174)) [0 gameState_13(D)->zones S8 A32])) src/gui.c:879 -1
     (nil))

(insn 73 72 74 9 (set (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 ArriveeAvecDE2+0 S8 A32])
        (reg:DI 175)) src/gui.c:879 -1
     (nil))

(insn 74 73 75 9 (set (reg/f:SI 176)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:880 -1
     (nil))

(insn 75 74 76 9 (set (reg:SI 73 [ D.5549 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 176)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:880 -1
     (nil))

(insn 76 75 77 9 (set (reg/f:SI 177)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:880 -1
     (nil))

(insn 77 76 78 9 (set (reg:SI 74 [ D.5550 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 177)
                (const_int 228 [0xe4])) [0 gameState_13(D)->die2+0 S4 A32])) src/gui.c:880 -1
     (nil))

(insn 78 77 79 9 (parallel [
            (set (reg:SI 75 [ D.5551 ])
                (plus:SI (reg:SI 73 [ D.5549 ])
                    (reg:SI 74 [ D.5550 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:880 -1
     (nil))

(insn 79 78 80 9 (set (reg:SI 76 [ sens.5 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:880 -1
     (nil))

(insn 80 79 81 9 (parallel [
            (set (reg:SI 77 [ D.5553 ])
                (mult:SI (reg:SI 75 [ D.5551 ])
                    (reg:SI 76 [ sens.5 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:880 -1
     (nil))

(insn 81 80 82 9 (parallel [
            (set (reg:SI 78 [ D.5554 ])
                (plus:SI (reg:SI 77 [ D.5553 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:880 -1
     (nil))

(insn 82 81 83 9 (set (reg/f:SI 178)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:880 -1
     (nil))

(insn 83 82 84 9 (set (reg:DI 179)
        (mem/s/j:DI (plus:SI (mult:SI (reg:SI 78 [ D.5554 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 178)) [0 gameState_13(D)->zones S8 A32])) src/gui.c:880 -1
     (nil))

(insn 84 83 85 9 (set (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 ArriveeAvecDE1ETDE2+0 S8 A32])
        (reg:DI 179)) src/gui.c:880 -1
     (nil))

(insn 85 84 86 9 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 arrowWithDie1+0 S4 A32])
        (const_int 0 [0])) src/gui.c:881 -1
     (nil))

(insn 86 85 87 9 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arrowWithDie2+0 S4 A32])
        (const_int 0 [0])) src/gui.c:882 -1
     (nil))

(insn 87 86 88 9 (set (reg:SI 79 [ D.5557 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 ArriveeAvecDE1.player+0 S4 A32])) src/gui.c:884 -1
     (nil))

(insn 88 87 89 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79 [ D.5557 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:884 -1
     (nil))

(jump_insn 89 88 90 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) src/gui.c:884 -1
     (nil)
 -> 102)
;; End of basic block 9 -> ( 13 10)

;; Succ edge  13
;; Succ edge  10 (fallthru)

;; Start of basic block ( 9) -> 10
;; Pred edge  9 (fallthru)
(note 90 89 91 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 92 10 (set (reg:SI 80 [ D.5559 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 ArriveeAvecDE1.nb_checkers+0 S4 A32])) src/gui.c:884 -1
     (nil))

(insn 92 91 93 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 80 [ D.5559 ])
            (const_int 0 [0]))) src/gui.c:884 -1
     (nil))

(jump_insn 93 92 94 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) src/gui.c:884 -1
     (nil)
 -> 102)
;; End of basic block 10 -> ( 13 11)

;; Succ edge  13
;; Succ edge  11 (fallthru)

;; Start of basic block ( 10) -> 11
;; Pred edge  10 (fallthru)
(note 94 93 95 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 11 (set (reg:SI 81 [ D.5561 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 ArriveeAvecDE1.player+0 S4 A32])) src/gui.c:884 -1
     (nil))

(insn 96 95 97 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81 [ D.5561 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:884 -1
     (nil))

(jump_insn 97 96 98 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) src/gui.c:884 -1
     (nil)
 -> 125)
;; End of basic block 11 -> ( 12 14)

;; Succ edge  12 (fallthru)
;; Succ edge  14

;; Start of basic block ( 11) -> 12
;; Pred edge  11 (fallthru)
(note 98 97 99 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 100 12 (set (reg:SI 82 [ D.5563 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 ArriveeAvecDE1.nb_checkers+0 S4 A32])) src/gui.c:884 -1
     (nil))

(insn 100 99 101 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ D.5563 ])
            (const_int 1 [0x1]))) src/gui.c:884 -1
     (nil))

(jump_insn 101 100 102 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) src/gui.c:884 -1
     (nil)
 -> 125)
;; End of basic block 12 -> ( 13 14)

;; Succ edge  13 (fallthru)
;; Succ edge  14

;; Start of basic block ( 9 10 12) -> 13
;; Pred edge  9
;; Pred edge  10
;; Pred edge  12 (fallthru)
(code_label 102 101 103 13 178 "" [2 uses])

(note 103 102 104 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 105 13 (set (reg/f:SI 180)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:887 -1
     (nil))

(insn 105 104 106 13 (set (reg:SI 83 [ D.5564 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 180)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:887 -1
     (nil))

(insn 106 105 107 13 (set (reg:SI 84 [ sens.6 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:887 -1
     (nil))

(insn 107 106 108 13 (parallel [
            (set (reg:SI 85 [ D.5566 ])
                (mult:SI (reg:SI 83 [ D.5564 ])
                    (reg:SI 84 [ sens.6 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:887 -1
     (nil))

(insn 108 107 109 13 (parallel [
            (set (reg:SI 86 [ D.5567 ])
                (plus:SI (reg:SI 85 [ D.5566 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:887 -1
     (nil))

(insn 109 108 110 13 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 86 [ D.5567 ])) src/gui.c:887 -1
     (nil))

(insn 110 109 111 13 (set (reg/f:SI 181)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:887 -1
     (nil))

(insn 111 110 112 13 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 181)) src/gui.c:887 -1
     (nil))

(call_insn 112 111 113 13 (call (mem:QI (symbol_ref:SI ("Draw_Selected_Arrow") [flags 0x3]  <function_decl 0x4081a500 Draw_Selected_Arrow>) [0 S1 A8])
        (const_int 8 [0x8])) src/gui.c:887 -1
     (nil)
    (nil))

(insn 113 112 114 13 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 arrowWithDie1+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:888 -1
     (nil))

(insn 114 113 115 13 (set (reg:SI 87 [ cpt.7 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])) src/gui.c:889 -1
     (nil))

(insn 115 114 116 13 (parallel [
            (set (reg:SI 88 [ D.5569 ])
                (ashift:SI (reg:SI 87 [ cpt.7 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:889 -1
     (nil))

(insn 116 115 117 13 (parallel [
            (set (reg/f:SI 89 [ D.5570 ])
                (plus:SI (reg:SI 88 [ D.5569 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 arriveesPossibles+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:889 -1
     (nil))

(insn 117 116 118 13 (set (reg/f:SI 182)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:889 -1
     (nil))

(insn 118 117 119 13 (set (reg:SI 90 [ D.5571 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 182)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:889 -1
     (nil))

(insn 119 118 120 13 (set (reg:SI 91 [ sens.8 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:889 -1
     (nil))

(insn 120 119 121 13 (parallel [
            (set (reg:SI 92 [ D.5573 ])
                (mult:SI (reg:SI 90 [ D.5571 ])
                    (reg:SI 91 [ sens.8 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:889 -1
     (nil))

(insn 121 120 122 13 (parallel [
            (set (reg:SI 93 [ D.5574 ])
                (plus:SI (reg:SI 92 [ D.5573 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:889 -1
     (nil))

(insn 122 121 123 13 (set (reg:SI 94 [ D.5575 ])
        (reg:SI 93 [ D.5574 ])) src/gui.c:889 -1
     (nil))

(insn 123 122 124 13 (set (mem:SI (reg/f:SI 89 [ D.5570 ]) [0 *D.5570_56+0 S4 A32])
        (reg:SI 94 [ D.5575 ])) src/gui.c:889 -1
     (nil))

(insn 124 123 125 13 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:890 -1
     (nil))
;; End of basic block 13 -> ( 14)

;; Succ edge  14 (fallthru)

;; Start of basic block ( 11 12 13) -> 14
;; Pred edge  11
;; Pred edge  12
;; Pred edge  13 (fallthru)
(code_label 125 124 126 14 179 "" [2 uses])

(note 126 125 127 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 127 126 128 14 (set (reg:SI 95 [ D.5578 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 ArriveeAvecDE2.player+0 S4 A32])) src/gui.c:892 -1
     (nil))

(insn 128 127 129 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.5578 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:892 -1
     (nil))

(jump_insn 129 128 130 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) src/gui.c:892 -1
     (nil)
 -> 142)
;; End of basic block 14 -> ( 18 15)

;; Succ edge  18
;; Succ edge  15 (fallthru)

;; Start of basic block ( 14) -> 15
;; Pred edge  14 (fallthru)
(note 130 129 131 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 131 130 132 15 (set (reg:SI 96 [ D.5580 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 ArriveeAvecDE2.nb_checkers+0 S4 A32])) src/gui.c:892 -1
     (nil))

(insn 132 131 133 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.5580 ])
            (const_int 0 [0]))) src/gui.c:892 -1
     (nil))

(jump_insn 133 132 134 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) src/gui.c:892 -1
     (nil)
 -> 142)
;; End of basic block 15 -> ( 18 16)

;; Succ edge  18
;; Succ edge  16 (fallthru)

;; Start of basic block ( 15) -> 16
;; Pred edge  15 (fallthru)
(note 134 133 135 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 135 134 136 16 (set (reg:SI 97 [ D.5582 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 ArriveeAvecDE2.player+0 S4 A32])) src/gui.c:892 -1
     (nil))

(insn 136 135 137 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.5582 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:892 -1
     (nil))

(jump_insn 137 136 138 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) src/gui.c:892 -1
     (nil)
 -> 167)
;; End of basic block 16 -> ( 17 19)

;; Succ edge  17 (fallthru)
;; Succ edge  19

;; Start of basic block ( 16) -> 17
;; Pred edge  16 (fallthru)
(note 138 137 139 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 139 138 140 17 (set (reg:SI 98 [ D.5584 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 ArriveeAvecDE2.nb_checkers+0 S4 A32])) src/gui.c:892 -1
     (nil))

(insn 140 139 141 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.5584 ])
            (const_int 1 [0x1]))) src/gui.c:892 -1
     (nil))

(jump_insn 141 140 142 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) src/gui.c:892 -1
     (nil)
 -> 167)
;; End of basic block 17 -> ( 18 19)

;; Succ edge  18 (fallthru)
;; Succ edge  19

;; Start of basic block ( 14 15 17) -> 18
;; Pred edge  14
;; Pred edge  15
;; Pred edge  17 (fallthru)
(code_label 142 141 143 18 180 "" [2 uses])

(note 143 142 144 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 144 143 145 18 (set (reg/f:SI 183)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:895 -1
     (nil))

(insn 145 144 146 18 (set (reg:SI 99 [ D.5585 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 183)
                (const_int 228 [0xe4])) [0 gameState_13(D)->die2+0 S4 A32])) src/gui.c:895 -1
     (nil))

(insn 146 145 147 18 (set (reg:SI 100 [ sens.9 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:895 -1
     (nil))

(insn 147 146 148 18 (parallel [
            (set (reg:SI 101 [ D.5587 ])
                (mult:SI (reg:SI 99 [ D.5585 ])
                    (reg:SI 100 [ sens.9 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:895 -1
     (nil))

(insn 148 147 149 18 (parallel [
            (set (reg:SI 102 [ D.5588 ])
                (plus:SI (reg:SI 101 [ D.5587 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:895 -1
     (nil))

(insn 149 148 150 18 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 102 [ D.5588 ])) src/gui.c:895 -1
     (nil))

(insn 150 149 151 18 (set (reg/f:SI 184)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:895 -1
     (nil))

(insn 151 150 152 18 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 184)) src/gui.c:895 -1
     (nil))

(call_insn 152 151 153 18 (call (mem:QI (symbol_ref:SI ("Draw_Selected_Arrow") [flags 0x3]  <function_decl 0x4081a500 Draw_Selected_Arrow>) [0 S1 A8])
        (const_int 8 [0x8])) src/gui.c:895 -1
     (nil)
    (nil))

(insn 153 152 154 18 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC30") [flags 0x2]  <var_decl 0x409cd240 *.LC30>)) src/gui.c:896 -1
     (nil))

(call_insn 154 153 155 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0x406b1e00 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:896 -1
     (nil)
    (nil))

(insn 155 154 156 18 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 arrowWithDie2+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:897 -1
     (nil))

(insn 156 155 157 18 (set (reg:SI 103 [ cpt.10 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])) src/gui.c:898 -1
     (nil))

(insn 157 156 158 18 (parallel [
            (set (reg:SI 104 [ D.5590 ])
                (ashift:SI (reg:SI 103 [ cpt.10 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:898 -1
     (nil))

(insn 158 157 159 18 (parallel [
            (set (reg/f:SI 105 [ D.5591 ])
                (plus:SI (reg:SI 104 [ D.5590 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 arriveesPossibles+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:898 -1
     (nil))

(insn 159 158 160 18 (set (reg/f:SI 185)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:898 -1
     (nil))

(insn 160 159 161 18 (set (reg:SI 106 [ D.5592 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 185)
                (const_int 228 [0xe4])) [0 gameState_13(D)->die2+0 S4 A32])) src/gui.c:898 -1
     (nil))

(insn 161 160 162 18 (set (reg:SI 107 [ sens.11 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:898 -1
     (nil))

(insn 162 161 163 18 (parallel [
            (set (reg:SI 108 [ D.5594 ])
                (mult:SI (reg:SI 106 [ D.5592 ])
                    (reg:SI 107 [ sens.11 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:898 -1
     (nil))

(insn 163 162 164 18 (parallel [
            (set (reg:SI 109 [ D.5595 ])
                (plus:SI (reg:SI 108 [ D.5594 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:898 -1
     (nil))

(insn 164 163 165 18 (set (reg:SI 110 [ D.5596 ])
        (reg:SI 109 [ D.5595 ])) src/gui.c:898 -1
     (nil))

(insn 165 164 166 18 (set (mem:SI (reg/f:SI 105 [ D.5591 ]) [0 *D.5591_74+0 S4 A32])
        (reg:SI 110 [ D.5596 ])) src/gui.c:898 -1
     (nil))

(insn 166 165 167 18 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:899 -1
     (nil))
;; End of basic block 18 -> ( 19)

;; Succ edge  19 (fallthru)

;; Start of basic block ( 16 17 18) -> 19
;; Pred edge  16
;; Pred edge  17
;; Pred edge  18 (fallthru)
(code_label 167 166 168 19 181 "" [2 uses])

(note 168 167 169 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 169 168 170 19 (set (reg:SI 111 [ D.5600 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 ArriveeAvecDE1ETDE2.player+0 S4 A32])) src/gui.c:901 -1
     (nil))

(insn 170 169 171 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.5600 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:901 -1
     (nil))

(jump_insn 171 170 172 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) src/gui.c:901 -1
     (nil)
 -> 184)
;; End of basic block 19 -> ( 23 20)

;; Succ edge  23
;; Succ edge  20 (fallthru)

;; Start of basic block ( 19) -> 20
;; Pred edge  19 (fallthru)
(note 172 171 173 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 173 172 174 20 (set (reg:SI 112 [ D.5602 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 ArriveeAvecDE1ETDE2.nb_checkers+0 S4 A32])) src/gui.c:901 -1
     (nil))

(insn 174 173 175 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.5602 ])
            (const_int 0 [0]))) src/gui.c:901 -1
     (nil))

(jump_insn 175 174 176 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) src/gui.c:901 -1
     (nil)
 -> 184)
;; End of basic block 20 -> ( 23 21)

;; Succ edge  23
;; Succ edge  21 (fallthru)

;; Start of basic block ( 20) -> 21
;; Pred edge  20 (fallthru)
(note 176 175 177 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 177 176 178 21 (set (reg:SI 113 [ D.5604 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 ArriveeAvecDE1ETDE2.player+0 S4 A32])) src/gui.c:901 -1
     (nil))

(insn 178 177 179 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.5604 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:901 -1
     (nil))

(jump_insn 179 178 180 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 296)
            (pc))) src/gui.c:901 -1
     (nil)
 -> 296)
;; End of basic block 21 -> ( 22 35)

;; Succ edge  22 (fallthru)
;; Succ edge  35

;; Start of basic block ( 21) -> 22
;; Pred edge  21 (fallthru)
(note 180 179 181 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 181 180 182 22 (set (reg:SI 114 [ D.5606 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 ArriveeAvecDE1ETDE2.nb_checkers+0 S4 A32])) src/gui.c:901 -1
     (nil))

(insn 182 181 183 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 114 [ D.5606 ])
            (const_int 1 [0x1]))) src/gui.c:901 -1
     (nil))

(jump_insn 183 182 184 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 296)
            (pc))) src/gui.c:901 -1
     (nil)
 -> 296)
;; End of basic block 22 -> ( 23 35)

;; Succ edge  23 (fallthru)
;; Succ edge  35

;; Start of basic block ( 19 20 22) -> 23
;; Pred edge  19
;; Pred edge  20
;; Pred edge  22 (fallthru)
(code_label 184 183 185 23 182 "" [2 uses])

(note 185 184 186 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 186 185 187 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 arrowWithDie1+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:901 -1
     (nil))

(jump_insn 187 186 188 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 191)
            (pc))) src/gui.c:901 -1
     (nil)
 -> 191)
;; End of basic block 23 -> ( 25 24)

;; Succ edge  25
;; Succ edge  24 (fallthru)

;; Start of basic block ( 23) -> 24
;; Pred edge  23 (fallthru)
(note 188 187 189 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 189 188 190 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 arrowWithDie2+0 S4 A32])
            (const_int 0 [0]))) src/gui.c:901 -1
     (nil))

(jump_insn 190 189 191 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 296)
            (pc))) src/gui.c:901 -1
     (nil)
 -> 296)
;; End of basic block 24 -> ( 25 35)

;; Succ edge  25 (fallthru)
;; Succ edge  35

;; Start of basic block ( 23 24) -> 25
;; Pred edge  23
;; Pred edge  24 (fallthru)
(code_label 191 190 192 25 184 "" [1 uses])

(note 192 191 193 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 25 (set (reg/f:SI 186)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:904 -1
     (nil))

(insn 194 193 195 25 (set (reg:SI 115 [ D.5608 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 186)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:904 -1
     (nil))

(insn 195 194 196 25 (set (reg/f:SI 187)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:904 -1
     (nil))

(insn 196 195 197 25 (set (reg:SI 116 [ D.5609 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 187)
                (const_int 228 [0xe4])) [0 gameState_13(D)->die2+0 S4 A32])) src/gui.c:904 -1
     (nil))

(insn 197 196 198 25 (parallel [
            (set (reg:SI 117 [ D.5610 ])
                (plus:SI (reg:SI 115 [ D.5608 ])
                    (reg:SI 116 [ D.5609 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:904 -1
     (nil))

(insn 198 197 199 25 (set (reg:SI 118 [ sens.12 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:904 -1
     (nil))

(insn 199 198 200 25 (parallel [
            (set (reg:SI 119 [ D.5612 ])
                (mult:SI (reg:SI 117 [ D.5610 ])
                    (reg:SI 118 [ sens.12 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:904 -1
     (nil))

(insn 200 199 201 25 (parallel [
            (set (reg:SI 120 [ D.5613 ])
                (plus:SI (reg:SI 119 [ D.5612 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:904 -1
     (nil))

(insn 201 200 202 25 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 120 [ D.5613 ])) src/gui.c:904 -1
     (nil))

(insn 202 201 203 25 (set (reg/f:SI 188)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:904 -1
     (nil))

(insn 203 202 204 25 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 188)) src/gui.c:904 -1
     (nil))

(call_insn 204 203 205 25 (call (mem:QI (symbol_ref:SI ("Draw_Selected_Arrow") [flags 0x3]  <function_decl 0x4081a500 Draw_Selected_Arrow>) [0 S1 A8])
        (const_int 8 [0x8])) src/gui.c:904 -1
     (nil)
    (nil))

(insn 205 204 206 25 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC31") [flags 0x2]  <var_decl 0x409cd2a0 *.LC31>)) src/gui.c:905 -1
     (nil))

(call_insn 206 205 207 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0x406b1e00 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:905 -1
     (nil)
    (nil))

(insn 207 206 208 25 (set (reg:SI 121 [ cpt.13 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])) src/gui.c:906 -1
     (nil))

(insn 208 207 209 25 (parallel [
            (set (reg:SI 122 [ D.5615 ])
                (ashift:SI (reg:SI 121 [ cpt.13 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:906 -1
     (nil))

(insn 209 208 210 25 (parallel [
            (set (reg/f:SI 123 [ D.5616 ])
                (plus:SI (reg:SI 122 [ D.5615 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 arriveesPossibles+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:906 -1
     (nil))

(insn 210 209 211 25 (set (reg/f:SI 189)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:906 -1
     (nil))

(insn 211 210 212 25 (set (reg:SI 124 [ D.5617 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 189)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:906 -1
     (nil))

(insn 212 211 213 25 (set (reg/f:SI 190)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:906 -1
     (nil))

(insn 213 212 214 25 (set (reg:SI 125 [ D.5618 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 190)
                (const_int 228 [0xe4])) [0 gameState_13(D)->die2+0 S4 A32])) src/gui.c:906 -1
     (nil))

(insn 214 213 215 25 (parallel [
            (set (reg:SI 126 [ D.5619 ])
                (plus:SI (reg:SI 124 [ D.5617 ])
                    (reg:SI 125 [ D.5618 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:906 -1
     (nil))

(insn 215 214 216 25 (set (reg:SI 127 [ sens.14 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:906 -1
     (nil))

(insn 216 215 217 25 (parallel [
            (set (reg:SI 128 [ D.5621 ])
                (mult:SI (reg:SI 126 [ D.5619 ])
                    (reg:SI 127 [ sens.14 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:906 -1
     (nil))

(insn 217 216 218 25 (parallel [
            (set (reg:SI 129 [ D.5622 ])
                (plus:SI (reg:SI 128 [ D.5621 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:906 -1
     (nil))

(insn 218 217 219 25 (set (reg:SI 130 [ D.5623 ])
        (reg:SI 129 [ D.5622 ])) src/gui.c:906 -1
     (nil))

(insn 219 218 220 25 (set (mem:SI (reg/f:SI 123 [ D.5616 ]) [0 *D.5616_93+0 S4 A32])
        (reg:SI 130 [ D.5623 ])) src/gui.c:906 -1
     (nil))

(insn 220 219 221 25 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:907 -1
     (nil))

(jump_insn 221 220 222 25 (set (pc)
        (label_ref 296)) src/gui.c:907 -1
     (nil)
 -> 296)
;; End of basic block 25 -> ( 35)

;; Succ edge  35

(barrier 222 221 223)

;; Start of basic block ( 8) -> 26
;; Pred edge  8
(code_label 223 222 224 26 177 "" [1 uses])

(note 224 223 225 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 225 224 226 26 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 nbpossibilite+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:913 -1
     (nil))

(insn 226 225 227 26 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) src/gui.c:914 -1
     (nil))

(jump_insn 227 226 228 26 (set (pc)
        (label_ref 291)) src/gui.c:914 -1
     (nil)
 -> 291)
;; End of basic block 26 -> ( 34)

;; Succ edge  34

(barrier 228 227 293)

;; Start of basic block ( 34) -> 27
;; Pred edge  34
(code_label 293 228 229 27 188 "" [1 uses])

(note 229 293 230 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 230 229 231 27 (set (reg/f:SI 191)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:916 -1
     (nil))

(insn 231 230 232 27 (set (reg:SI 131 [ D.5625 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 191)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:916 -1
     (nil))

(insn 232 231 233 27 (set (reg:SI 132 [ sens.15 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:916 -1
     (nil))

(insn 233 232 234 27 (parallel [
            (set (reg:SI 133 [ D.5627 ])
                (mult:SI (reg:SI 131 [ D.5625 ])
                    (reg:SI 132 [ sens.15 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:916 -1
     (nil))

(insn 234 233 235 27 (set (reg:SI 134 [ i.16 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) src/gui.c:916 -1
     (nil))

(insn 235 234 236 27 (parallel [
            (set (reg:SI 135 [ D.5629 ])
                (mult:SI (reg:SI 133 [ D.5627 ])
                    (reg:SI 134 [ i.16 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:916 -1
     (nil))

(insn 236 235 237 27 (parallel [
            (set (reg:SI 136 [ D.5630 ])
                (plus:SI (reg:SI 135 [ D.5629 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:916 -1
     (nil))

(insn 237 236 238 27 (set (reg/f:SI 192)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:916 -1
     (nil))

(insn 238 237 239 27 (set (reg:DI 193)
        (mem/s/j:DI (plus:SI (mult:SI (reg:SI 136 [ D.5630 ])
                    (const_int 8 [0x8]))
                (reg/f:SI 192)) [0 gameState_13(D)->zones S8 A32])) src/gui.c:916 -1
     (nil))

(insn 239 238 240 27 (set (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 ArriveeAvecDE+0 S8 A32])
        (reg:DI 193)) src/gui.c:916 -1
     (nil))

(insn 240 239 241 27 (set (reg:SI 137 [ D.5633 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 ArriveeAvecDE.player+0 S4 A32])) src/gui.c:917 -1
     (nil))

(insn 241 240 242 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 137 [ D.5633 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:917 -1
     (nil))

(jump_insn 242 241 243 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) src/gui.c:917 -1
     (nil)
 -> 255)
;; End of basic block 27 -> ( 31 28)

;; Succ edge  31
;; Succ edge  28 (fallthru)

;; Start of basic block ( 27) -> 28
;; Pred edge  27 (fallthru)
(note 243 242 244 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 244 243 245 28 (set (reg:SI 138 [ D.5635 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 ArriveeAvecDE.nb_checkers+0 S4 A32])) src/gui.c:917 -1
     (nil))

(insn 245 244 246 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138 [ D.5635 ])
            (const_int 0 [0]))) src/gui.c:917 -1
     (nil))

(jump_insn 246 245 247 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) src/gui.c:917 -1
     (nil)
 -> 255)
;; End of basic block 28 -> ( 31 29)

;; Succ edge  31
;; Succ edge  29 (fallthru)

;; Start of basic block ( 28) -> 29
;; Pred edge  28 (fallthru)
(note 247 246 248 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 248 247 249 29 (set (reg:SI 139 [ D.5637 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 ArriveeAvecDE.player+0 S4 A32])) src/gui.c:917 -1
     (nil))

(insn 249 248 250 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 139 [ D.5637 ])
            (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 player+0 S4 A32]))) src/gui.c:917 -1
     (nil))

(jump_insn 250 249 251 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) src/gui.c:917 -1
     (nil)
 -> 255)
;; End of basic block 29 -> ( 31 30)

;; Succ edge  31
;; Succ edge  30 (fallthru)

;; Start of basic block ( 29) -> 30
;; Pred edge  29 (fallthru)
(note 251 250 252 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 252 251 253 30 (set (reg:SI 140 [ D.5639 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 ArriveeAvecDE.nb_checkers+0 S4 A32])) src/gui.c:917 -1
     (nil))

(insn 253 252 254 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140 [ D.5639 ])
            (const_int 1 [0x1]))) src/gui.c:917 -1
     (nil))

(jump_insn 254 253 255 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) src/gui.c:917 -1
     (nil)
 -> 288)
;; End of basic block 30 -> ( 31 33)

;; Succ edge  31 (fallthru)
;; Succ edge  33

;; Start of basic block ( 27 28 29 30) -> 31
;; Pred edge  27
;; Pred edge  28
;; Pred edge  29
;; Pred edge  30 (fallthru)
(code_label 255 254 256 31 186 "" [3 uses])

(note 256 255 257 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 257 256 258 31 (set (reg:SI 194)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 nbpossibilite+0 S4 A32])) src/gui.c:917 -1
     (nil))

(insn 258 257 259 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 194)
            (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32]))) src/gui.c:917 -1
     (nil))

(jump_insn 259 258 260 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) src/gui.c:917 -1
     (nil)
 -> 288)
;; End of basic block 31 -> ( 32 33)

;; Succ edge  32 (fallthru)
;; Succ edge  33

;; Start of basic block ( 31) -> 32
;; Pred edge  31 (fallthru)
(note 260 259 261 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 261 260 262 32 (set (reg/f:SI 195)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:920 -1
     (nil))

(insn 262 261 263 32 (set (reg:SI 141 [ D.5642 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 195)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:920 -1
     (nil))

(insn 263 262 264 32 (set (reg:SI 142 [ sens.17 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:920 -1
     (nil))

(insn 264 263 265 32 (parallel [
            (set (reg:SI 143 [ D.5644 ])
                (mult:SI (reg:SI 141 [ D.5642 ])
                    (reg:SI 142 [ sens.17 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:920 -1
     (nil))

(insn 265 264 266 32 (set (reg:SI 144 [ i.18 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) src/gui.c:920 -1
     (nil))

(insn 266 265 267 32 (parallel [
            (set (reg:SI 145 [ D.5646 ])
                (mult:SI (reg:SI 143 [ D.5644 ])
                    (reg:SI 144 [ i.18 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:920 -1
     (nil))

(insn 267 266 268 32 (parallel [
            (set (reg:SI 146 [ D.5647 ])
                (plus:SI (reg:SI 145 [ D.5646 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:920 -1
     (nil))

(insn 268 267 269 32 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 146 [ D.5647 ])) src/gui.c:920 -1
     (nil))

(insn 269 268 270 32 (set (reg/f:SI 196)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:920 -1
     (nil))

(insn 270 269 271 32 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 196)) src/gui.c:920 -1
     (nil))

(call_insn 271 270 272 32 (call (mem:QI (symbol_ref:SI ("Draw_Selected_Arrow") [flags 0x3]  <function_decl 0x4081a500 Draw_Selected_Arrow>) [0 S1 A8])
        (const_int 8 [0x8])) src/gui.c:920 -1
     (nil)
    (nil))

(insn 272 271 273 32 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC32") [flags 0x2]  <var_decl 0x409cd300 *.LC32>)) src/gui.c:921 -1
     (nil))

(call_insn 273 272 274 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 0x406b1e00 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:921 -1
     (nil)
    (nil))

(insn 274 273 275 32 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 nbpossibilite+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 nbpossibilite+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:922 -1
     (nil))

(insn 275 274 276 32 (set (reg:SI 147 [ cpt.19 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])) src/gui.c:923 -1
     (nil))

(insn 276 275 277 32 (parallel [
            (set (reg:SI 148 [ D.5649 ])
                (ashift:SI (reg:SI 147 [ cpt.19 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:923 -1
     (nil))

(insn 277 276 278 32 (parallel [
            (set (reg/f:SI 149 [ D.5650 ])
                (plus:SI (reg:SI 148 [ D.5649 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 arriveesPossibles+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:923 -1
     (nil))

(insn 278 277 279 32 (set (reg/f:SI 197)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gameState+0 S4 A32])) src/gui.c:923 -1
     (nil))

(insn 279 278 280 32 (set (reg:SI 150 [ D.5651 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 197)
                (const_int 224 [0xe0])) [0 gameState_13(D)->die1+0 S4 A32])) src/gui.c:923 -1
     (nil))

(insn 280 279 281 32 (set (reg:SI 151 [ sens.20 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sens+0 S4 A32])) src/gui.c:923 -1
     (nil))

(insn 281 280 282 32 (parallel [
            (set (reg:SI 152 [ D.5653 ])
                (mult:SI (reg:SI 150 [ D.5651 ])
                    (reg:SI 151 [ sens.20 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:923 -1
     (nil))

(insn 282 281 283 32 (set (reg:SI 153 [ i.21 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) src/gui.c:923 -1
     (nil))

(insn 283 282 284 32 (parallel [
            (set (reg:SI 154 [ D.5655 ])
                (mult:SI (reg:SI 152 [ D.5653 ])
                    (reg:SI 153 [ i.21 ])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:923 -1
     (nil))

(insn 284 283 285 32 (parallel [
            (set (reg:SI 155 [ D.5656 ])
                (plus:SI (reg:SI 154 [ D.5655 ])
                    (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 12 [0xc])) [0 depart+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:923 -1
     (nil))

(insn 285 284 286 32 (set (reg:SI 156 [ D.5657 ])
        (reg:SI 155 [ D.5656 ])) src/gui.c:923 -1
     (nil))

(insn 286 285 287 32 (set (mem:SI (reg/f:SI 149 [ D.5650 ]) [0 *D.5650_123+0 S4 A32])
        (reg:SI 156 [ D.5657 ])) src/gui.c:923 -1
     (nil))

(insn 287 286 288 32 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 cpt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:924 -1
     (nil))
;; End of basic block 32 -> ( 33)

;; Succ edge  33 (fallthru)

;; Start of basic block ( 30 31 32) -> 33
;; Pred edge  30
;; Pred edge  31
;; Pred edge  32 (fallthru)
(code_label 288 287 289 33 187 "" [2 uses])

(note 289 288 290 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 290 289 291 33 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:914 -1
     (nil))
;; End of basic block 33 -> ( 34)

;; Succ edge  34 (fallthru)

;; Start of basic block ( 26 33) -> 34
;; Pred edge  26
;; Pred edge  33 (fallthru)
(code_label 291 290 292 34 185 "" [1 uses])

(note 292 291 294 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 294 292 295 34 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
            (const_int 4 [0x4]))) src/gui.c:914 -1
     (nil))

(jump_insn 295 294 296 34 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 293)
            (pc))) src/gui.c:914 -1
     (nil)
 -> 293)
;; End of basic block 34 -> ( 27 35)

;; Succ edge  27
;; Succ edge  35 (fallthru)

;; Start of basic block ( 22 34 21 25 24) -> 35
;; Pred edge  22
;; Pred edge  34 (fallthru)
;; Pred edge  21
;; Pred edge  25
;; Pred edge  24
(code_label 296 295 297 35 183 "" [4 uses])

(note 297 296 298 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 298 297 299 35 (set (reg/f:SI 198)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:929 -1
     (nil))

(insn 299 298 300 35 (set (reg/f:SI 157 [ D.5658 ])
        (mem/s/f/j:SI (reg/f:SI 198) [0 display_12(D)->screen+0 S4 A32])) src/gui.c:929 -1
     (nil))

(insn 300 299 301 35 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 157 [ D.5658 ])) src/gui.c:929 -1
     (nil))

(call_insn 301 300 302 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_Flip") [flags 0x41]  <function_decl 0x4079fa00 SDL_Flip>) [0 S1 A8])
            (const_int 4 [0x4]))) src/gui.c:929 -1
     (nil)
    (nil))

(insn 302 301 303 35 (set (reg/f:SI 158 [ D.5659 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 arriveesPossibles+0 S4 A32])) src/gui.c:930 -1
     (nil))

(insn 303 302 304 35 (set (reg:SI 159 [ <retval> ])
        (reg/f:SI 158 [ D.5659 ])) src/gui.c:930 -1
     (nil))

(jump_insn 304 303 305 35 (set (pc)
        (label_ref 306)) src/gui.c:930 -1
     (nil)
 -> 306)
;; End of basic block 35 -> ( 37)

;; Succ edge  37

(barrier 305 304 311)

;; Start of basic block () -> 36
(note 311 305 308 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 308 311 309 36 (clobber (reg/i:SI 0 ax)) src/gui.c:931 -1
     (nil))

(insn 309 308 306 36 (clobber (reg:SI 159 [ <retval> ])) src/gui.c:931 -1
     (nil))
;; End of basic block 36 -> ( 37)

;; Succ edge  37 (fallthru)

;; Start of basic block ( 35 36) -> 37
;; Pred edge  35
;; Pred edge  36 (fallthru)
(code_label 306 309 312 37 173 "" [1 uses])

(note 312 306 307 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 307 312 310 37 (set (reg/i:SI 0 ax)
        (reg:SI 159 [ <retval> ])) src/gui.c:931 -1
     (nil))

(insn 310 307 0 37 (use (reg/i:SI 0 ax)) src/gui.c:931 -1
     (nil))
;; End of basic block 37 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function Draw_Selected_Arrow (Draw_Selected_Arrow)

Draw_Selected_Arrow (struct SDisplay * display, EPosition pos)
{
  struct SDL_Rect posArrow;
  struct SDL_Surface * D.5530;
  struct SDL_Surface * D.5529;
  Sint16 D.5528;
  short unsigned int D.5527;
  short unsigned int D.5526;
  Sint16 D.5525;
  Sint16 D.5524;
  short unsigned int D.5523;
  short unsigned int D.5522;
  Sint16 D.5521;
  struct SDL_Surface * D.5517;
  struct SDL_Surface * D.5516;
  Sint16 D.5515;
  short unsigned int D.5514;
  short unsigned int D.5513;
  Sint16 D.5512;
  struct SDL_Surface * D.5508;
  struct SDL_Surface * D.5507;
  struct SDL_Surface * D.5503;
  struct SDL_Surface * D.5502;
  Sint16 D.5501;
  short unsigned int D.5500;
  short unsigned int D.5499;
  Sint16 D.5498;
  const char * restrict D.5497;
  int D.5496;
  Sint16 D.5495;
  int D.5494;
  Sint16 D.5493;
  Sint16 D.5490;
  short unsigned int D.5489;
  short unsigned int D.5488;
  Sint16 D.5487;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  posArrow = display_1(D)->positions[pos_2(D)];
  D.5487_3 = posArrow.x;
  D.5488_4 = (short unsigned int) D.5487_3;
  D.5489_5 = D.5488_4 + 65535;
  D.5490_6 = (Sint16) D.5489_5;
  posArrow.x = D.5490_6;
  if (pos_2(D) <= 11)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.5493_7 = posArrow.y;
  D.5494_8 = (int) D.5493_7;
  D.5495_9 = posArrow.x;
  D.5496_10 = (int) D.5495_9;
  D.5497_11 = (const char * restrict) &"X:%d\tY:%d\n"[0];
  printf (D.5497_11, D.5496_10, D.5494_8);
  D.5498_12 = posArrow.y;
  D.5499_13 = (short unsigned int) D.5498_12;
  D.5500_14 = D.5499_13 + 65406;
  D.5501_15 = (Sint16) D.5500_14;
  posArrow.y = D.5501_15;
  D.5502_16 = display_1(D)->screen;
  D.5503_17 = display_1(D)->possibility1_12;
  SDL_UpperBlit (D.5503_17, 0B, D.5502_16, &posArrow);
  goto <bb 10>;
  # SUCC: 10 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  if (pos_2(D) <= 23)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 (true) 6 (false)

  # BLOCK 5
  # PRED: 4 (true)
  posArrow.y = 145;
  D.5507_18 = display_1(D)->screen;
  D.5508_19 = display_1(D)->possibility13_24;
  SDL_UpperBlit (D.5508_19, 0B, D.5507_18, &posArrow);
  goto <bb 10>;
  # SUCC: 10 (fallthru)

  # BLOCK 6
  # PRED: 4 (false)
  if (pos_2(D) == 24)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 (true) 8 (false)

  # BLOCK 7
  # PRED: 6 (true)
  D.5512_20 = posArrow.x;
  D.5513_21 = (short unsigned int) D.5512_20;
  D.5514_22 = D.5513_21 + 65534;
  D.5515_23 = (Sint16) D.5514_22;
  posArrow.x = D.5515_23;
  posArrow.y = 145;
  D.5516_24 = display_1(D)->screen;
  D.5517_25 = display_1(D)->possibility_out;
  SDL_UpperBlit (D.5517_25, 0B, D.5516_24, &posArrow);
  goto <bb 10>;
  # SUCC: 10 (fallthru)

  # BLOCK 8
  # PRED: 6 (false)
  if (pos_2(D) == 26)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 (true) 10 (false)

  # BLOCK 9
  # PRED: 8 (true)
  D.5521_26 = posArrow.x;
  D.5522_27 = (short unsigned int) D.5521_26;
  D.5523_28 = D.5522_27 + 65534;
  D.5524_29 = (Sint16) D.5523_28;
  posArrow.x = D.5524_29;
  D.5525_30 = posArrow.y;
  D.5526_31 = (short unsigned int) D.5525_30;
  D.5527_32 = D.5526_31 + 65406;
  D.5528_33 = (Sint16) D.5527_32;
  posArrow.y = D.5528_33;
  D.5529_34 = display_1(D)->screen;
  D.5530_35 = display_1(D)->possibility_out;
  SDL_UpperBlit (D.5530_35, 0B, D.5529_34, &posArrow);
  # SUCC: 10 (fallthru)

  # BLOCK 10
  # PRED: 3 (fallthru) 5 (fallthru) 7 (fallthru) 8 (false) 9 (fallthru)
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (display_1(D) - 1 )
Partition 2 (pos_2(D) - 2 )
Partition 3 (D.5487_3 - 3 )
Partition 4 (D.5488_4 - 4 )
Partition 5 (D.5489_5 - 5 )
Partition 6 (D.5490_6 - 6 )
Partition 7 (D.5493_7 - 7 )
Partition 8 (D.5494_8 - 8 )
Partition 9 (D.5495_9 - 9 )
Partition 10 (D.5496_10 - 10 )
Partition 11 (D.5497_11 - 11 )
Partition 12 (D.5498_12 - 12 )
Partition 13 (D.5499_13 - 13 )
Partition 14 (D.5500_14 - 14 )
Partition 15 (D.5501_15 - 15 )
Partition 16 (D.5502_16 - 16 )
Partition 17 (D.5503_17 - 17 )
Partition 18 (D.5507_18 - 18 )
Partition 19 (D.5508_19 - 19 )
Partition 20 (D.5512_20 - 20 )
Partition 21 (D.5513_21 - 21 )
Partition 22 (D.5514_22 - 22 )
Partition 23 (D.5515_23 - 23 )
Partition 24 (D.5516_24 - 24 )
Partition 25 (D.5517_25 - 25 )
Partition 26 (D.5521_26 - 26 )
Partition 27 (D.5522_27 - 27 )
Partition 28 (D.5523_28 - 28 )
Partition 29 (D.5524_29 - 29 )
Partition 30 (D.5525_30 - 30 )
Partition 31 (D.5526_31 - 31 )
Partition 32 (D.5527_32 - 32 )
Partition 33 (D.5528_33 - 33 )
Partition 34 (D.5529_34 - 34 )
Partition 35 (D.5530_35 - 35 )


Partition map 

Partition 0 (display_1(D) - 1 )
Partition 1 (pos_2(D) - 2 )


Live on entry to BB2 : display_1(D)  pos_2(D)  

Live on entry to BB3 : display_1(D)  

Live on entry to BB4 : display_1(D)  pos_2(D)  

Live on entry to BB5 : display_1(D)  

Live on entry to BB6 : display_1(D)  pos_2(D)  

Live on entry to BB7 : display_1(D)  

Live on entry to BB8 : display_1(D)  pos_2(D)  

Live on entry to BB9 : display_1(D)  

Live on entry to BB10 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (display_1(D) - 1 )
Partition 1 (pos_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (display_1(D) - 1 )
Partition 1 (pos_2(D) - 2 )
Partition 2 (D.5487_3 - 3 )
Partition 3 (D.5488_4 - 4 )
Partition 4 (D.5489_5 - 5 )
Partition 5 (D.5490_6 - 6 )
Partition 6 (D.5493_7 - 7 )
Partition 7 (D.5494_8 - 8 )
Partition 8 (D.5495_9 - 9 )
Partition 9 (D.5496_10 - 10 )
Partition 10 (D.5497_11 - 11 )
Partition 11 (D.5498_12 - 12 )
Partition 12 (D.5499_13 - 13 )
Partition 13 (D.5500_14 - 14 )
Partition 14 (D.5501_15 - 15 )
Partition 15 (D.5502_16 - 16 )
Partition 16 (D.5503_17 - 17 )
Partition 17 (D.5507_18 - 18 )
Partition 18 (D.5508_19 - 19 )
Partition 19 (D.5512_20 - 20 )
Partition 20 (D.5513_21 - 21 )
Partition 21 (D.5514_22 - 22 )
Partition 22 (D.5515_23 - 23 )
Partition 23 (D.5516_24 - 24 )
Partition 24 (D.5517_25 - 25 )
Partition 25 (D.5521_26 - 26 )
Partition 26 (D.5522_27 - 27 )
Partition 27 (D.5523_28 - 28 )
Partition 28 (D.5524_29 - 29 )
Partition 29 (D.5525_30 - 30 )
Partition 30 (D.5526_31 - 31 )
Partition 31 (D.5527_32 - 32 )
Partition 32 (D.5528_33 - 33 )
Partition 33 (D.5529_34 - 34 )
Partition 34 (D.5530_35 - 35 )

Draw_Selected_Arrow (struct SDisplay * display, EPosition pos)
{
  struct SDL_Rect posArrow;
  struct SDL_Surface * D.5530;
  struct SDL_Surface * D.5529;
  Sint16 D.5528;
  short unsigned int D.5527;
  short unsigned int D.5526;
  Sint16 D.5525;
  Sint16 D.5524;
  short unsigned int D.5523;
  short unsigned int D.5522;
  Sint16 D.5521;
  struct SDL_Surface * D.5517;
  struct SDL_Surface * D.5516;
  Sint16 D.5515;
  short unsigned int D.5514;
  short unsigned int D.5513;
  Sint16 D.5512;
  struct SDL_Surface * D.5508;
  struct SDL_Surface * D.5507;
  struct SDL_Surface * D.5503;
  struct SDL_Surface * D.5502;
  Sint16 D.5501;
  short unsigned int D.5500;
  short unsigned int D.5499;
  Sint16 D.5498;
  const char * restrict D.5497;
  int D.5496;
  Sint16 D.5495;
  int D.5494;
  Sint16 D.5493;
  Sint16 D.5490;
  short unsigned int D.5489;
  short unsigned int D.5488;
  Sint16 D.5487;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  posArrow = display_1(D)->positions[pos_2(D)];
  D.5487_3 = posArrow.x;
  D.5488_4 = (short unsigned int) D.5487_3;
  D.5489_5 = D.5488_4 + 65535;
  D.5490_6 = (Sint16) D.5489_5;
  posArrow.x = D.5490_6;
  if (pos_2(D) <= 11)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.5493_7 = posArrow.y;
  D.5494_8 = (int) D.5493_7;
  D.5495_9 = posArrow.x;
  D.5496_10 = (int) D.5495_9;
  D.5497_11 = (const char * restrict) &"X:%d\tY:%d\n"[0];
  printf (D.5497_11, D.5496_10, D.5494_8);
  D.5498_12 = posArrow.y;
  D.5499_13 = (short unsigned int) D.5498_12;
  D.5500_14 = D.5499_13 + 65406;
  D.5501_15 = (Sint16) D.5500_14;
  posArrow.y = D.5501_15;
  D.5502_16 = display_1(D)->screen;
  D.5503_17 = display_1(D)->possibility1_12;
  SDL_UpperBlit (D.5503_17, 0B, D.5502_16, &posArrow);
  goto <bb 10>;
  # SUCC: 10 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  if (pos_2(D) <= 23)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 (true) 6 (false)

  # BLOCK 5
  # PRED: 4 (true)
  posArrow.y = 145;
  D.5507_18 = display_1(D)->screen;
  D.5508_19 = display_1(D)->possibility13_24;
  SDL_UpperBlit (D.5508_19, 0B, D.5507_18, &posArrow);
  goto <bb 10>;
  # SUCC: 10 (fallthru)

  # BLOCK 6
  # PRED: 4 (false)
  if (pos_2(D) == 24)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 (true) 8 (false)

  # BLOCK 7
  # PRED: 6 (true)
  D.5512_20 = posArrow.x;
  D.5513_21 = (short unsigned int) D.5512_20;
  D.5514_22 = D.5513_21 + 65534;
  D.5515_23 = (Sint16) D.5514_22;
  posArrow.x = D.5515_23;
  posArrow.y = 145;
  D.5516_24 = display_1(D)->screen;
  D.5517_25 = display_1(D)->possibility_out;
  SDL_UpperBlit (D.5517_25, 0B, D.5516_24, &posArrow);
  goto <bb 10>;
  # SUCC: 10 (fallthru)

  # BLOCK 8
  # PRED: 6 (false)
  if (pos_2(D) == 26)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 (true) 10 (false)

  # BLOCK 9
  # PRED: 8 (true)
  D.5521_26 = posArrow.x;
  D.5522_27 = (short unsigned int) D.5521_26;
  D.5523_28 = D.5522_27 + 65534;
  D.5524_29 = (Sint16) D.5523_28;
  posArrow.x = D.5524_29;
  D.5525_30 = posArrow.y;
  D.5526_31 = (short unsigned int) D.5525_30;
  D.5527_32 = D.5526_31 + 65406;
  D.5528_33 = (Sint16) D.5527_32;
  posArrow.y = D.5528_33;
  D.5529_34 = display_1(D)->screen;
  D.5530_35 = display_1(D)->possibility_out;
  SDL_UpperBlit (D.5530_35, 0B, D.5529_34, &posArrow);
  # SUCC: 10 (fallthru)

  # BLOCK 10
  # PRED: 3 (fallthru) 5 (fallthru) 7 (fallthru) 8 (false) 9 (fallthru)
  return;
  # SUCC: EXIT

}


Partition 0: size 8 align 2
	posArrow, offset 0

;; Generating RTL for gimple basic block 2

;; posArrow = display_1(D)->positions[pos_2(D)];

(insn 5 4 6 (set (reg/f:SI 92)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:935 -1
     (nil))

(insn 6 5 7 (set (reg:SI 94)
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 pos+0 S4 A32])) src/gui.c:935 -1
     (nil))

(insn 7 6 8 (parallel [
            (set (reg:SI 93)
                (plus:SI (reg:SI 94)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:935 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 pos+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 8 7 9 (set (reg:DI 95)
        (mem/s/j:DI (plus:SI (plus:SI (mult:SI (reg:SI 93)
                        (const_int 8 [0x8]))
                    (reg/f:SI 92))
                (const_int 4 [0x4])) [0 display_1(D)->positions S8 A32])) src/gui.c:935 -1
     (nil))

(insn 9 8 0 (set (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow+0 S8 A32])
        (reg:DI 95)) src/gui.c:935 -1
     (nil))

;; D.5487_3 = posArrow.x;

(insn 10 9 0 (set (reg:HI 59 [ D.5487 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow.x+0 S2 A32])) src/gui.c:936 -1
     (nil))

;; D.5488_4 = (short unsigned int) D.5487_3;

(insn 11 10 0 (set (reg:HI 60 [ D.5488 ])
        (reg:HI 59 [ D.5487 ])) src/gui.c:936 -1
     (nil))

;; D.5489_5 = D.5488_4 + 65535;

(insn 12 11 0 (parallel [
            (set (reg:HI 61 [ D.5489 ])
                (plus:HI (reg:HI 60 [ D.5488 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:936 -1
     (nil))

;; D.5490_6 = (Sint16) D.5489_5;

(insn 13 12 0 (set (reg:HI 62 [ D.5490 ])
        (reg:HI 61 [ D.5489 ])) src/gui.c:936 -1
     (nil))

;; posArrow.x = D.5490_6;

(insn 14 13 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow.x+0 S2 A32])
        (reg:HI 62 [ D.5490 ])) src/gui.c:936 -1
     (nil))

;; if (pos_2(D) <= 11)

(insn 15 14 16 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 pos+0 S4 A32])
            (const_int 11 [0xb]))) src/gui.c:938 -1
     (nil))

(jump_insn 16 15 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:938 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; D.5493_7 = posArrow.y;

(insn 18 17 0 (set (reg:HI 63 [ D.5493 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posArrow.y+0 S2 A16])) src/gui.c:940 -1
     (nil))

;; D.5494_8 = (int) D.5493_7;

(insn 19 18 0 (set (reg:SI 64 [ D.5494 ])
        (sign_extend:SI (reg:HI 63 [ D.5493 ]))) src/gui.c:940 -1
     (nil))

;; D.5495_9 = posArrow.x;

(insn 20 19 0 (set (reg:HI 65 [ D.5495 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow.x+0 S2 A32])) src/gui.c:940 -1
     (nil))

;; D.5496_10 = (int) D.5495_9;

(insn 21 20 0 (set (reg:SI 66 [ D.5496 ])
        (sign_extend:SI (reg:HI 65 [ D.5495 ]))) src/gui.c:940 -1
     (nil))

;; D.5497_11 = (const char * restrict) &"X:%d\tY:%d\n"[0];

(insn 22 21 0 (set (reg/f:SI 67 [ D.5497 ])
        (symbol_ref/f:SI ("*.LC33") [flags 0x2]  <var_decl 0x409cd3c0 *.LC33>)) src/gui.c:940 -1
     (nil))

;; printf (D.5497_11, D.5496_10, D.5494_8);

(insn 23 22 24 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 64 [ D.5494 ])) src/gui.c:940 -1
     (nil))

(insn 24 23 25 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 66 [ D.5496 ])) src/gui.c:940 -1
     (nil))

(insn 25 24 26 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 67 [ D.5497 ])) src/gui.c:940 -1
     (nil))

(call_insn 26 25 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x406b1b80 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:940 -1
     (nil)
    (nil))

;; D.5498_12 = posArrow.y;

(insn 27 26 0 (set (reg:HI 68 [ D.5498 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posArrow.y+0 S2 A16])) src/gui.c:941 -1
     (nil))

;; D.5499_13 = (short unsigned int) D.5498_12;

(insn 28 27 0 (set (reg:HI 69 [ D.5499 ])
        (reg:HI 68 [ D.5498 ])) src/gui.c:941 -1
     (nil))

;; D.5500_14 = D.5499_13 + 65406;

(insn 29 28 0 (parallel [
            (set (reg:HI 70 [ D.5500 ])
                (plus:HI (reg:HI 69 [ D.5499 ])
                    (const_int -130 [0xffffffffffffff7e])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:941 -1
     (nil))

;; D.5501_15 = (Sint16) D.5500_14;

(insn 30 29 0 (set (reg:HI 71 [ D.5501 ])
        (reg:HI 70 [ D.5500 ])) src/gui.c:941 -1
     (nil))

;; posArrow.y = D.5501_15;

(insn 31 30 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posArrow.y+0 S2 A16])
        (reg:HI 71 [ D.5501 ])) src/gui.c:941 -1
     (nil))

;; D.5502_16 = display_1(D)->screen;

(insn 32 31 33 (set (reg/f:SI 96)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:942 -1
     (nil))

(insn 33 32 0 (set (reg/f:SI 72 [ D.5502 ])
        (mem/s/f/j:SI (reg/f:SI 96) [0 display_1(D)->screen+0 S4 A32])) src/gui.c:942 -1
     (nil))

;; D.5503_17 = display_1(D)->possibility1_12;

(insn 34 33 35 (set (reg/f:SI 97)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:942 -1
     (nil))

(insn 35 34 0 (set (reg/f:SI 73 [ D.5503 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 97)
                (const_int 104 [0x68])) [0 display_1(D)->possibility1_12+0 S4 A32])) src/gui.c:942 -1
     (nil))

;; SDL_UpperBlit (D.5503_17, 0B, D.5502_16, &posArrow);

(insn 36 35 37 (parallel [
            (set (reg:SI 98)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:942 -1
     (nil))

(insn 37 36 38 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 98)) src/gui.c:942 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 38 37 39 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 72 [ D.5502 ])) src/gui.c:942 -1
     (nil))

(insn 39 38 40 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:942 -1
     (nil))

(insn 40 39 41 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 73 [ D.5503 ])) src/gui.c:942 -1
     (nil))

(call_insn 41 40 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:942 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 44 43 45 190 "" [0 uses])

(note 45 44 0 NOTE_INSN_BASIC_BLOCK)

;; if (pos_2(D) <= 23)

(insn 46 45 47 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 pos+0 S4 A32])
            (const_int 23 [0x17]))) src/gui.c:944 -1
     (nil))

(jump_insn 47 46 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:944 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; posArrow.y = 145;

(insn 49 48 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posArrow.y+0 S2 A16])
        (const_int 145 [0x91])) src/gui.c:946 -1
     (nil))

;; D.5507_18 = display_1(D)->screen;

(insn 50 49 51 (set (reg/f:SI 99)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:947 -1
     (nil))

(insn 51 50 0 (set (reg/f:SI 74 [ D.5507 ])
        (mem/s/f/j:SI (reg/f:SI 99) [0 display_1(D)->screen+0 S4 A32])) src/gui.c:947 -1
     (nil))

;; D.5508_19 = display_1(D)->possibility13_24;

(insn 52 51 53 (set (reg/f:SI 100)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:947 -1
     (nil))

(insn 53 52 0 (set (reg/f:SI 75 [ D.5508 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 100)
                (const_int 108 [0x6c])) [0 display_1(D)->possibility13_24+0 S4 A32])) src/gui.c:947 -1
     (nil))

;; SDL_UpperBlit (D.5508_19, 0B, D.5507_18, &posArrow);

(insn 54 53 55 (parallel [
            (set (reg:SI 101)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:947 -1
     (nil))

(insn 55 54 56 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 101)) src/gui.c:947 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 56 55 57 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 74 [ D.5507 ])) src/gui.c:947 -1
     (nil))

(insn 57 56 58 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:947 -1
     (nil))

(insn 58 57 59 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 75 [ D.5508 ])) src/gui.c:947 -1
     (nil))

(call_insn 59 58 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:947 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 62 61 63 192 "" [0 uses])

(note 63 62 0 NOTE_INSN_BASIC_BLOCK)

;; if (pos_2(D) == 24)

(insn 64 63 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 pos+0 S4 A32])
            (const_int 24 [0x18]))) src/gui.c:949 -1
     (nil))

(jump_insn 65 64 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:949 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; D.5512_20 = posArrow.x;

(insn 67 66 0 (set (reg:HI 76 [ D.5512 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow.x+0 S2 A32])) src/gui.c:951 -1
     (nil))

;; D.5513_21 = (short unsigned int) D.5512_20;

(insn 68 67 0 (set (reg:HI 77 [ D.5513 ])
        (reg:HI 76 [ D.5512 ])) src/gui.c:951 -1
     (nil))

;; D.5514_22 = D.5513_21 + 65534;

(insn 69 68 0 (parallel [
            (set (reg:HI 78 [ D.5514 ])
                (plus:HI (reg:HI 77 [ D.5513 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:951 -1
     (nil))

;; D.5515_23 = (Sint16) D.5514_22;

(insn 70 69 0 (set (reg:HI 79 [ D.5515 ])
        (reg:HI 78 [ D.5514 ])) src/gui.c:951 -1
     (nil))

;; posArrow.x = D.5515_23;

(insn 71 70 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow.x+0 S2 A32])
        (reg:HI 79 [ D.5515 ])) src/gui.c:951 -1
     (nil))

;; posArrow.y = 145;

(insn 72 71 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posArrow.y+0 S2 A16])
        (const_int 145 [0x91])) src/gui.c:952 -1
     (nil))

;; D.5516_24 = display_1(D)->screen;

(insn 73 72 74 (set (reg/f:SI 102)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:953 -1
     (nil))

(insn 74 73 0 (set (reg/f:SI 80 [ D.5516 ])
        (mem/s/f/j:SI (reg/f:SI 102) [0 display_1(D)->screen+0 S4 A32])) src/gui.c:953 -1
     (nil))

;; D.5517_25 = display_1(D)->possibility_out;

(insn 75 74 76 (set (reg/f:SI 103)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:953 -1
     (nil))

(insn 76 75 0 (set (reg/f:SI 81 [ D.5517 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 103)
                (const_int 112 [0x70])) [0 display_1(D)->possibility_out+0 S4 A32])) src/gui.c:953 -1
     (nil))

;; SDL_UpperBlit (D.5517_25, 0B, D.5516_24, &posArrow);

(insn 77 76 78 (parallel [
            (set (reg:SI 104)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:953 -1
     (nil))

(insn 78 77 79 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 104)) src/gui.c:953 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 79 78 80 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 80 [ D.5516 ])) src/gui.c:953 -1
     (nil))

(insn 80 79 81 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:953 -1
     (nil))

(insn 81 80 82 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 81 [ D.5517 ])) src/gui.c:953 -1
     (nil))

(call_insn 82 81 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:953 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 85 84 86 193 "" [0 uses])

(note 86 85 0 NOTE_INSN_BASIC_BLOCK)

;; if (pos_2(D) == 26)

(insn 87 86 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 pos+0 S4 A32])
            (const_int 26 [0x1a]))) src/gui.c:955 -1
     (nil))

(jump_insn 88 87 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:955 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; D.5521_26 = posArrow.x;

(insn 90 89 0 (set (reg:HI 82 [ D.5521 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow.x+0 S2 A32])) src/gui.c:957 -1
     (nil))

;; D.5522_27 = (short unsigned int) D.5521_26;

(insn 91 90 0 (set (reg:HI 83 [ D.5522 ])
        (reg:HI 82 [ D.5521 ])) src/gui.c:957 -1
     (nil))

;; D.5523_28 = D.5522_27 + 65534;

(insn 92 91 0 (parallel [
            (set (reg:HI 84 [ D.5523 ])
                (plus:HI (reg:HI 83 [ D.5522 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:957 -1
     (nil))

;; D.5524_29 = (Sint16) D.5523_28;

(insn 93 92 0 (set (reg:HI 85 [ D.5524 ])
        (reg:HI 84 [ D.5523 ])) src/gui.c:957 -1
     (nil))

;; posArrow.x = D.5524_29;

(insn 94 93 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow.x+0 S2 A32])
        (reg:HI 85 [ D.5524 ])) src/gui.c:957 -1
     (nil))

;; D.5525_30 = posArrow.y;

(insn 95 94 0 (set (reg:HI 86 [ D.5525 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posArrow.y+0 S2 A16])) src/gui.c:958 -1
     (nil))

;; D.5526_31 = (short unsigned int) D.5525_30;

(insn 96 95 0 (set (reg:HI 87 [ D.5526 ])
        (reg:HI 86 [ D.5525 ])) src/gui.c:958 -1
     (nil))

;; D.5527_32 = D.5526_31 + 65406;

(insn 97 96 0 (parallel [
            (set (reg:HI 88 [ D.5527 ])
                (plus:HI (reg:HI 87 [ D.5526 ])
                    (const_int -130 [0xffffffffffffff7e])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:958 -1
     (nil))

;; D.5528_33 = (Sint16) D.5527_32;

(insn 98 97 0 (set (reg:HI 89 [ D.5528 ])
        (reg:HI 88 [ D.5527 ])) src/gui.c:958 -1
     (nil))

;; posArrow.y = D.5528_33;

(insn 99 98 0 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posArrow.y+0 S2 A16])
        (reg:HI 89 [ D.5528 ])) src/gui.c:958 -1
     (nil))

;; D.5529_34 = display_1(D)->screen;

(insn 100 99 101 (set (reg/f:SI 105)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:959 -1
     (nil))

(insn 101 100 0 (set (reg/f:SI 90 [ D.5529 ])
        (mem/s/f/j:SI (reg/f:SI 105) [0 display_1(D)->screen+0 S4 A32])) src/gui.c:959 -1
     (nil))

;; D.5530_35 = display_1(D)->possibility_out;

(insn 102 101 103 (set (reg/f:SI 106)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:959 -1
     (nil))

(insn 103 102 0 (set (reg/f:SI 91 [ D.5530 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 106)
                (const_int 112 [0x70])) [0 display_1(D)->possibility_out+0 S4 A32])) src/gui.c:959 -1
     (nil))

;; SDL_UpperBlit (D.5530_35, 0B, D.5529_34, &posArrow);

(insn 104 103 105 (parallel [
            (set (reg:SI 107)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:959 -1
     (nil))

(insn 105 104 106 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 107)) src/gui.c:959 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 106 105 107 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 90 [ D.5529 ])) src/gui.c:959 -1
     (nil))

(insn 107 106 108 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:959 -1
     (nil))

(insn 108 107 109 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 91 [ D.5530 ])) src/gui.c:959 -1
     (nil))

(call_insn 109 108 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:959 -1
     (nil)
    (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 110 109 111 191 "" [0 uses])

(note 111 110 0 NOTE_INSN_BASIC_BLOCK)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (reg/f:SI 92)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:935 -1
     (nil))

(insn 6 5 7 3 (set (reg:SI 94)
        (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                (const_int 4 [0x4])) [0 pos+0 S4 A32])) src/gui.c:935 -1
     (nil))

(insn 7 6 8 3 (parallel [
            (set (reg:SI 93)
                (plus:SI (reg:SI 94)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:935 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 pos+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

(insn 8 7 9 3 (set (reg:DI 95)
        (mem/s/j:DI (plus:SI (plus:SI (mult:SI (reg:SI 93)
                        (const_int 8 [0x8]))
                    (reg/f:SI 92))
                (const_int 4 [0x4])) [0 display_1(D)->positions S8 A32])) src/gui.c:935 -1
     (nil))

(insn 9 8 10 3 (set (mem/s/c:DI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow+0 S8 A32])
        (reg:DI 95)) src/gui.c:935 -1
     (nil))

(insn 10 9 11 3 (set (reg:HI 59 [ D.5487 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow.x+0 S2 A32])) src/gui.c:936 -1
     (nil))

(insn 11 10 12 3 (set (reg:HI 60 [ D.5488 ])
        (reg:HI 59 [ D.5487 ])) src/gui.c:936 -1
     (nil))

(insn 12 11 13 3 (parallel [
            (set (reg:HI 61 [ D.5489 ])
                (plus:HI (reg:HI 60 [ D.5488 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:936 -1
     (nil))

(insn 13 12 14 3 (set (reg:HI 62 [ D.5490 ])
        (reg:HI 61 [ D.5489 ])) src/gui.c:936 -1
     (nil))

(insn 14 13 15 3 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow.x+0 S2 A32])
        (reg:HI 62 [ D.5490 ])) src/gui.c:936 -1
     (nil))

(insn 15 14 16 3 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 pos+0 S4 A32])
            (const_int 11 [0xb]))) src/gui.c:938 -1
     (nil))

(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) src/gui.c:938 -1
     (nil)
 -> 44)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 (set (reg:HI 63 [ D.5493 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posArrow.y+0 S2 A16])) src/gui.c:940 -1
     (nil))

(insn 19 18 20 4 (set (reg:SI 64 [ D.5494 ])
        (sign_extend:SI (reg:HI 63 [ D.5493 ]))) src/gui.c:940 -1
     (nil))

(insn 20 19 21 4 (set (reg:HI 65 [ D.5495 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow.x+0 S2 A32])) src/gui.c:940 -1
     (nil))

(insn 21 20 22 4 (set (reg:SI 66 [ D.5496 ])
        (sign_extend:SI (reg:HI 65 [ D.5495 ]))) src/gui.c:940 -1
     (nil))

(insn 22 21 23 4 (set (reg/f:SI 67 [ D.5497 ])
        (symbol_ref/f:SI ("*.LC33") [flags 0x2]  <var_decl 0x409cd3c0 *.LC33>)) src/gui.c:940 -1
     (nil))

(insn 23 22 24 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 64 [ D.5494 ])) src/gui.c:940 -1
     (nil))

(insn 24 23 25 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 66 [ D.5496 ])) src/gui.c:940 -1
     (nil))

(insn 25 24 26 4 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 67 [ D.5497 ])) src/gui.c:940 -1
     (nil))

(call_insn 26 25 27 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x406b1b80 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) src/gui.c:940 -1
     (nil)
    (nil))

(insn 27 26 28 4 (set (reg:HI 68 [ D.5498 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posArrow.y+0 S2 A16])) src/gui.c:941 -1
     (nil))

(insn 28 27 29 4 (set (reg:HI 69 [ D.5499 ])
        (reg:HI 68 [ D.5498 ])) src/gui.c:941 -1
     (nil))

(insn 29 28 30 4 (parallel [
            (set (reg:HI 70 [ D.5500 ])
                (plus:HI (reg:HI 69 [ D.5499 ])
                    (const_int -130 [0xffffffffffffff7e])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:941 -1
     (nil))

(insn 30 29 31 4 (set (reg:HI 71 [ D.5501 ])
        (reg:HI 70 [ D.5500 ])) src/gui.c:941 -1
     (nil))

(insn 31 30 32 4 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posArrow.y+0 S2 A16])
        (reg:HI 71 [ D.5501 ])) src/gui.c:941 -1
     (nil))

(insn 32 31 33 4 (set (reg/f:SI 96)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:942 -1
     (nil))

(insn 33 32 34 4 (set (reg/f:SI 72 [ D.5502 ])
        (mem/s/f/j:SI (reg/f:SI 96) [0 display_1(D)->screen+0 S4 A32])) src/gui.c:942 -1
     (nil))

(insn 34 33 35 4 (set (reg/f:SI 97)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:942 -1
     (nil))

(insn 35 34 36 4 (set (reg/f:SI 73 [ D.5503 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 97)
                (const_int 104 [0x68])) [0 display_1(D)->possibility1_12+0 S4 A32])) src/gui.c:942 -1
     (nil))

(insn 36 35 37 4 (parallel [
            (set (reg:SI 98)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:942 -1
     (nil))

(insn 37 36 38 4 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 98)) src/gui.c:942 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 38 37 39 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 72 [ D.5502 ])) src/gui.c:942 -1
     (nil))

(insn 39 38 40 4 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:942 -1
     (nil))

(insn 40 39 41 4 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 73 [ D.5503 ])) src/gui.c:942 -1
     (nil))

(call_insn 41 40 42 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:942 -1
     (nil)
    (nil))

(jump_insn 42 41 43 4 (set (pc)
        (label_ref 110)) src/gui.c:942 -1
     (nil)
 -> 110)
;; End of basic block 4 -> ( 11)

;; Succ edge  11

(barrier 43 42 44)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 44 43 45 5 190 "" [1 uses])

(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 5 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 pos+0 S4 A32])
            (const_int 23 [0x17]))) src/gui.c:944 -1
     (nil))

(jump_insn 47 46 48 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) src/gui.c:944 -1
     (nil)
 -> 62)
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 (fallthru)
;; Succ edge  7

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 6 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posArrow.y+0 S2 A16])
        (const_int 145 [0x91])) src/gui.c:946 -1
     (nil))

(insn 50 49 51 6 (set (reg/f:SI 99)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:947 -1
     (nil))

(insn 51 50 52 6 (set (reg/f:SI 74 [ D.5507 ])
        (mem/s/f/j:SI (reg/f:SI 99) [0 display_1(D)->screen+0 S4 A32])) src/gui.c:947 -1
     (nil))

(insn 52 51 53 6 (set (reg/f:SI 100)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:947 -1
     (nil))

(insn 53 52 54 6 (set (reg/f:SI 75 [ D.5508 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 100)
                (const_int 108 [0x6c])) [0 display_1(D)->possibility13_24+0 S4 A32])) src/gui.c:947 -1
     (nil))

(insn 54 53 55 6 (parallel [
            (set (reg:SI 101)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:947 -1
     (nil))

(insn 55 54 56 6 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 101)) src/gui.c:947 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 56 55 57 6 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 74 [ D.5507 ])) src/gui.c:947 -1
     (nil))

(insn 57 56 58 6 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:947 -1
     (nil))

(insn 58 57 59 6 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 75 [ D.5508 ])) src/gui.c:947 -1
     (nil))

(call_insn 59 58 60 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:947 -1
     (nil)
    (nil))

(jump_insn 60 59 61 6 (set (pc)
        (label_ref 110)) src/gui.c:947 -1
     (nil)
 -> 110)
;; End of basic block 6 -> ( 11)

;; Succ edge  11

(barrier 61 60 62)

;; Start of basic block ( 5) -> 7
;; Pred edge  5
(code_label 62 61 63 7 192 "" [1 uses])

(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 pos+0 S4 A32])
            (const_int 24 [0x18]))) src/gui.c:949 -1
     (nil))

(jump_insn 65 64 66 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) src/gui.c:949 -1
     (nil)
 -> 85)
;; End of basic block 7 -> ( 8 9)

;; Succ edge  8 (fallthru)
;; Succ edge  9

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(note 66 65 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 68 8 (set (reg:HI 76 [ D.5512 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow.x+0 S2 A32])) src/gui.c:951 -1
     (nil))

(insn 68 67 69 8 (set (reg:HI 77 [ D.5513 ])
        (reg:HI 76 [ D.5512 ])) src/gui.c:951 -1
     (nil))

(insn 69 68 70 8 (parallel [
            (set (reg:HI 78 [ D.5514 ])
                (plus:HI (reg:HI 77 [ D.5513 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:951 -1
     (nil))

(insn 70 69 71 8 (set (reg:HI 79 [ D.5515 ])
        (reg:HI 78 [ D.5514 ])) src/gui.c:951 -1
     (nil))

(insn 71 70 72 8 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow.x+0 S2 A32])
        (reg:HI 79 [ D.5515 ])) src/gui.c:951 -1
     (nil))

(insn 72 71 73 8 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posArrow.y+0 S2 A16])
        (const_int 145 [0x91])) src/gui.c:952 -1
     (nil))

(insn 73 72 74 8 (set (reg/f:SI 102)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:953 -1
     (nil))

(insn 74 73 75 8 (set (reg/f:SI 80 [ D.5516 ])
        (mem/s/f/j:SI (reg/f:SI 102) [0 display_1(D)->screen+0 S4 A32])) src/gui.c:953 -1
     (nil))

(insn 75 74 76 8 (set (reg/f:SI 103)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:953 -1
     (nil))

(insn 76 75 77 8 (set (reg/f:SI 81 [ D.5517 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 103)
                (const_int 112 [0x70])) [0 display_1(D)->possibility_out+0 S4 A32])) src/gui.c:953 -1
     (nil))

(insn 77 76 78 8 (parallel [
            (set (reg:SI 104)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:953 -1
     (nil))

(insn 78 77 79 8 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 104)) src/gui.c:953 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 79 78 80 8 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 80 [ D.5516 ])) src/gui.c:953 -1
     (nil))

(insn 80 79 81 8 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:953 -1
     (nil))

(insn 81 80 82 8 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 81 [ D.5517 ])) src/gui.c:953 -1
     (nil))

(call_insn 82 81 83 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:953 -1
     (nil)
    (nil))

(jump_insn 83 82 84 8 (set (pc)
        (label_ref 110)) src/gui.c:953 -1
     (nil)
 -> 110)
;; End of basic block 8 -> ( 11)

;; Succ edge  11

(barrier 84 83 85)

;; Start of basic block ( 7) -> 9
;; Pred edge  7
(code_label 85 84 86 9 193 "" [1 uses])

(note 86 85 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 87 86 88 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 pos+0 S4 A32])
            (const_int 26 [0x1a]))) src/gui.c:955 -1
     (nil))

(jump_insn 88 87 89 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) src/gui.c:955 -1
     (nil)
 -> 110)
;; End of basic block 9 -> ( 10 11)

;; Succ edge  10 (fallthru)
;; Succ edge  11

;; Start of basic block ( 9) -> 10
;; Pred edge  9 (fallthru)
(note 89 88 90 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 90 89 91 10 (set (reg:HI 82 [ D.5521 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow.x+0 S2 A32])) src/gui.c:957 -1
     (nil))

(insn 91 90 92 10 (set (reg:HI 83 [ D.5522 ])
        (reg:HI 82 [ D.5521 ])) src/gui.c:957 -1
     (nil))

(insn 92 91 93 10 (parallel [
            (set (reg:HI 84 [ D.5523 ])
                (plus:HI (reg:HI 83 [ D.5522 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:957 -1
     (nil))

(insn 93 92 94 10 (set (reg:HI 85 [ D.5524 ])
        (reg:HI 84 [ D.5523 ])) src/gui.c:957 -1
     (nil))

(insn 94 93 95 10 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 posArrow.x+0 S2 A32])
        (reg:HI 85 [ D.5524 ])) src/gui.c:957 -1
     (nil))

(insn 95 94 96 10 (set (reg:HI 86 [ D.5525 ])
        (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posArrow.y+0 S2 A16])) src/gui.c:958 -1
     (nil))

(insn 96 95 97 10 (set (reg:HI 87 [ D.5526 ])
        (reg:HI 86 [ D.5525 ])) src/gui.c:958 -1
     (nil))

(insn 97 96 98 10 (parallel [
            (set (reg:HI 88 [ D.5527 ])
                (plus:HI (reg:HI 87 [ D.5526 ])
                    (const_int -130 [0xffffffffffffff7e])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:958 -1
     (nil))

(insn 98 97 99 10 (set (reg:HI 89 [ D.5528 ])
        (reg:HI 88 [ D.5527 ])) src/gui.c:958 -1
     (nil))

(insn 99 98 100 10 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [0 posArrow.y+0 S2 A16])
        (reg:HI 89 [ D.5528 ])) src/gui.c:958 -1
     (nil))

(insn 100 99 101 10 (set (reg/f:SI 105)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:959 -1
     (nil))

(insn 101 100 102 10 (set (reg/f:SI 90 [ D.5529 ])
        (mem/s/f/j:SI (reg/f:SI 105) [0 display_1(D)->screen+0 S4 A32])) src/gui.c:959 -1
     (nil))

(insn 102 101 103 10 (set (reg/f:SI 106)
        (mem/f/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 display+0 S4 A32])) src/gui.c:959 -1
     (nil))

(insn 103 102 104 10 (set (reg/f:SI 91 [ D.5530 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 106)
                (const_int 112 [0x70])) [0 display_1(D)->possibility_out+0 S4 A32])) src/gui.c:959 -1
     (nil))

(insn 104 103 105 10 (parallel [
            (set (reg:SI 107)
                (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:959 -1
     (nil))

(insn 105 104 106 10 (set (mem/f/i:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 107)) src/gui.c:959 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 54 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 106 105 107 10 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 90 [ D.5529 ])) src/gui.c:959 -1
     (nil))

(insn 107 106 108 10 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0])) src/gui.c:959 -1
     (nil))

(insn 108 107 109 10 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 91 [ D.5530 ])) src/gui.c:959 -1
     (nil))

(call_insn 109 108 110 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("SDL_UpperBlit") [flags 0x41]  <function_decl 0x407d1500 SDL_UpperBlit>) [0 S1 A8])
            (const_int 16 [0x10]))) src/gui.c:959 -1
     (nil)
    (nil))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 (fallthru)

;; Start of basic block ( 4 6 8 9 10) -> 11
;; Pred edge  4
;; Pred edge  6
;; Pred edge  8
;; Pred edge  9
;; Pred edge  10 (fallthru)
(code_label 110 109 111 11 191 "" [4 uses])

(note 111 110 112 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 11 -> ( 12)

;; Succ edge  12 (fallthru)

;; Start of basic block ( 11) -> 12
;; Pred edge  11 (fallthru)
(code_label 112 111 113 12 189 "" [0 uses])

(note 113 112 0 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 12 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function inTab (inTab)

inTab (EPosition p, int * tab)
{
  int i;
  int D.5485;
  int p.1;
  int D.5481;
  int * D.5480;
  unsigned int D.5479;
  unsigned int i.0;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  i_3 = 0;
  goto <bb 6>;
  # SUCC: 6 (fallthru)

  # BLOCK 3
  # PRED: 6 (true)
  i.0_4 = (unsigned int) i_1;
  D.5479_5 = i.0_4 * 4;
  D.5480_7 = tab_6(D) + D.5479_5;
  D.5481_8 = *D.5480_7;
  p.1_10 = (int) p_9(D);
  if (D.5481_8 == p.1_10)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.5485_11 = 1;
  goto <bb 8>;
  # SUCC: 8 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  i_12 = i_1 + 1;
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 2 (fallthru) 5 (fallthru)
  # i_1 = PHI <i_3(2), i_12(5)>
  if (i_1 <= 27)
    goto <bb 3>;
  else
    goto <bb 7>;
  # SUCC: 3 (true) 7 (false)

  # BLOCK 7
  # PRED: 6 (false)
  D.5485_13 = 0;
  # SUCC: 8 (fallthru)

  # BLOCK 8
  # PRED: 4 (fallthru) 7 (fallthru)
  # D.5485_2 = PHI <D.5485_11(4), D.5485_13(7)>
  return D.5485_2;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (D.5485_2 - 2 )
Partition 3 (i_3 - 3 )
Partition 4 (i.0_4 - 4 )
Partition 5 (D.5479_5 - 5 )
Partition 6 (tab_6(D) - 6 )
Partition 7 (D.5480_7 - 7 )
Partition 8 (D.5481_8 - 8 )
Partition 9 (p_9(D) - 9 )
Partition 10 (p.1_10 - 10 )
Partition 11 (D.5485_11 - 11 )
Partition 12 (i_12 - 12 )
Partition 13 (D.5485_13 - 13 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (D.5485_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (tab_6(D) - 6 )
Partition 4 (p_9(D) - 9 )
Partition 5 (D.5485_11 - 11 )
Partition 6 (i_12 - 12 )
Partition 7 (D.5485_13 - 13 )


Live on entry to BB2 : tab_6(D)  p_9(D)  

Live on entry to BB3 : i_1  tab_6(D)  p_9(D)  

Live on entry to BB4 : 

Live on entry to BB5 : i_1  tab_6(D)  p_9(D)  

Live on entry to BB6 : tab_6(D)  p_9(D)  

Live on entry to BB7 : 

Live on entry to BB8 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_12
(2147483646) i_1 <-> i_3

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (D.5485_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (tab_6(D) - 6 )
Partition 4 (p_9(D) - 9 )
Partition 5 (D.5485_11 - 11 )
Partition 6 (i_12 - 12 )
Partition 7 (D.5485_13 - 13 )

Coalesce list: (1)i_1 & (12)i_12 [map: 0, 6] : Success -> 0
Coalesce list: (1)i_1 & (3)i_3 [map: 0, 2] : Success -> 0
Coalesce list: (2)D.5485_2 & (13)D.5485_13 [map: 1, 7] : Success -> 1
Coalesce list: (2)D.5485_2 & (11)D.5485_11 [map: 1, 5] : Success -> 1
Coalesce list: (1)i_1 & (12)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (3)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 3 12 )
Partition 1 (D.5485_2 - 2 11 13 )
Partition 2 (i.0_4 - 4 )
Partition 3 (D.5479_5 - 5 )
Partition 4 (tab_6(D) - 6 )
Partition 5 (D.5480_7 - 7 )
Partition 6 (D.5481_8 - 8 )
Partition 7 (p_9(D) - 9 )
Partition 8 (p.1_10 - 10 )

inTab (EPosition p, int * tab)
{
  int i;
  int D.5485;
  int p.1;
  int D.5481;
  int * D.5480;
  unsigned int D.5479;
  unsigned int i.0;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  i_3 = 0;
  goto <bb 6>;
  # SUCC: 6 (fallthru)

  # BLOCK 3
  # PRED: 6 (true)
  i.0_4 = (unsigned int) i_1;
  D.5479_5 = i.0_4 * 4;
  D.5480_7 = tab_6(D) + D.5479_5;
  D.5481_8 = *D.5480_7;
  p.1_10 = (int) p_9(D);
  if (D.5481_8 == p.1_10)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.5485_11 = 1;
  goto <bb 8>;
  # SUCC: 8 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  i_12 = i_1 + 1;
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 2 (fallthru) 5 (fallthru)
  # i_1 = PHI <i_3(2), i_12(5)>
  if (i_1 <= 27)
    goto <bb 3>;
  else
    goto <bb 7>;
  # SUCC: 3 (true) 7 (false)

  # BLOCK 7
  # PRED: 6 (false)
  D.5485_13 = 0;
  # SUCC: 8 (fallthru)

  # BLOCK 8
  # PRED: 4 (fallthru) 7 (fallthru)
  # D.5485_2 = PHI <D.5485_11(4), D.5485_13(7)>
  return D.5485_2;
  # SUCC: EXIT

}


Partition 0: size 4 align 4
	i_1, offset 0

;; Generating RTL for gimple basic block 2

;; i_3 = 0;

(insn 5 4 0 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:965 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; i.0_4 = (unsigned int) i_1;

(insn 9 8 0 (set (reg:SI 60 [ i.0 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) src/gui.c:967 -1
     (nil))

;; D.5479_5 = i.0_4 * 4;

(insn 10 9 0 (parallel [
            (set (reg:SI 61 [ D.5479 ])
                (ashift:SI (reg:SI 60 [ i.0 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:967 -1
     (nil))

;; D.5480_7 = tab_6(D) + D.5479_5;

(insn 11 10 0 (parallel [
            (set (reg/f:SI 62 [ D.5480 ])
                (plus:SI (reg:SI 61 [ D.5479 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 4 [0x4])) [0 tab+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:967 -1
     (nil))

;; D.5481_8 = *D.5480_7;

(insn 12 11 0 (set (reg:SI 63 [ D.5481 ])
        (mem:SI (reg/f:SI 62 [ D.5480 ]) [0 *D.5480_7+0 S4 A32])) src/gui.c:967 -1
     (nil))

;; p.1_10 = (int) p_9(D);

(insn 13 12 0 (set (reg:SI 64 [ p.1 ])
        (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 p+0 S4 A32])) src/gui.c:967 -1
     (nil))

;; if (D.5481_8 == p.1_10)

(insn 14 13 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 63 [ D.5481 ])
            (reg:SI 64 [ p.1 ]))) src/gui.c:967 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/gui.c:967 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; D.5485_11 = 1;

(insn 17 16 0 (set (reg:SI 59 [ D.5485 ])
        (const_int 1 [0x1])) src/gui.c:968 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 20 19 21 196 "" [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; i_12 = i_1 + 1;

(insn 22 21 0 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:965 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 23 22 24 195 "" [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 <= 27)

(insn 26 24 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 27 [0x1b]))) src/gui.c:965 -1
     (nil))

(jump_insn 27 26 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) src/gui.c:965 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; D.5485_13 = 0;

(insn 29 28 0 (set (reg:SI 59 [ D.5485 ])
        (const_int 0 [0])) src/gui.c:970 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 30 29 31 197 "" [0 uses])

(note 31 30 0 NOTE_INSN_BASIC_BLOCK)

;; return D.5485_2;

(insn 32 31 33 (set (reg:SI 65 [ <retval> ])
        (reg:SI 59 [ D.5485 ])) src/gui.c:970 -1
     (nil))

(jump_insn 33 32 34 (set (pc)
        (label_ref 0)) src/gui.c:970 -1
     (nil))

(barrier 34 33 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/gui.c:965 -1
     (nil))

(jump_insn 6 5 7 3 (set (pc)
        (label_ref 23)) src/gui.c:965 -1
     (nil)
 -> 23)
;; End of basic block 3 -> ( 7)

;; Succ edge  7

(barrier 7 6 25)

;; Start of basic block ( 7) -> 4
;; Pred edge  7
(code_label 25 7 8 4 198 "" [1 uses])

(note 8 25 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 4 (set (reg:SI 60 [ i.0 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) src/gui.c:967 -1
     (nil))

(insn 10 9 11 4 (parallel [
            (set (reg:SI 61 [ D.5479 ])
                (ashift:SI (reg:SI 60 [ i.0 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:967 -1
     (nil))

(insn 11 10 12 4 (parallel [
            (set (reg/f:SI 62 [ D.5480 ])
                (plus:SI (reg:SI 61 [ D.5479 ])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 53 virtual-incoming-args)
                            (const_int 4 [0x4])) [0 tab+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:967 -1
     (nil))

(insn 12 11 13 4 (set (reg:SI 63 [ D.5481 ])
        (mem:SI (reg/f:SI 62 [ D.5480 ]) [0 *D.5480_7+0 S4 A32])) src/gui.c:967 -1
     (nil))

(insn 13 12 14 4 (set (reg:SI 64 [ p.1 ])
        (mem/c/i:SI (reg/f:SI 53 virtual-incoming-args) [0 p+0 S4 A32])) src/gui.c:967 -1
     (nil))

(insn 14 13 15 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 63 [ D.5481 ])
            (reg:SI 64 [ p.1 ]))) src/gui.c:967 -1
     (nil))

(jump_insn 15 14 16 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) src/gui.c:967 -1
     (nil)
 -> 20)
;; End of basic block 4 -> ( 5 6)

;; Succ edge  5 (fallthru)
;; Succ edge  6

;; Start of basic block ( 4) -> 5
;; Pred edge  4 (fallthru)
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 5 (set (reg:SI 59 [ D.5485 ])
        (const_int 1 [0x1])) src/gui.c:968 -1
     (nil))

(jump_insn 18 17 19 5 (set (pc)
        (label_ref 30)) src/gui.c:968 -1
     (nil)
 -> 30)
;; End of basic block 5 -> ( 9)

;; Succ edge  9

(barrier 19 18 20)

;; Start of basic block ( 4) -> 6
;; Pred edge  4
(code_label 20 19 21 6 196 "" [1 uses])

(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 6 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/gui.c:965 -1
     (nil))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 3 6) -> 7
;; Pred edge  3
;; Pred edge  6 (fallthru)
(code_label 23 22 24 7 195 "" [1 uses])

(note 24 23 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 26 24 27 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 27 [0x1b]))) src/gui.c:965 -1
     (nil))

(jump_insn 27 26 28 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) src/gui.c:965 -1
     (nil)
 -> 25)
;; End of basic block 7 -> ( 4 8)

;; Succ edge  4
;; Succ edge  8 (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(note 28 27 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 8 (set (reg:SI 59 [ D.5485 ])
        (const_int 0 [0])) src/gui.c:970 -1
     (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 (fallthru)

;; Start of basic block ( 5 8) -> 9
;; Pred edge  5
;; Pred edge  8 (fallthru)
(code_label 30 29 31 9 197 "" [1 uses])

(note 31 30 32 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 9 (set (reg:SI 65 [ <retval> ])
        (reg:SI 59 [ D.5485 ])) src/gui.c:970 -1
     (nil))

(jump_insn 33 32 34 9 (set (pc)
        (label_ref 35)) src/gui.c:970 -1
     (nil)
 -> 35)
;; End of basic block 9 -> ( 11)

;; Succ edge  11

(barrier 34 33 40)

;; Start of basic block () -> 10
(note 40 34 37 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 37 40 38 10 (clobber (reg/i:SI 0 ax)) src/gui.c:971 -1
     (nil))

(insn 38 37 35 10 (clobber (reg:SI 65 [ <retval> ])) src/gui.c:971 -1
     (nil))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 (fallthru)

;; Start of basic block ( 9 10) -> 11
;; Pred edge  9
;; Pred edge  10 (fallthru)
(code_label 35 38 41 11 194 "" [1 uses])

(note 41 35 36 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 36 41 39 11 (set (reg/i:SI 0 ax)
        (reg:SI 65 [ <retval> ])) src/gui.c:971 -1
     (nil))

(insn 39 36 0 11 (use (reg/i:SI 0 ax)) src/gui.c:971 -1
     (nil))
;; End of basic block 11 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

